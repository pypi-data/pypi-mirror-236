# coding: utf-8

"""
    AtroCore REST API documentation

    This is a REST API documentation for AtroCore data platform and its modules (AtroPIM, AtroDAM and others), which is based on [OpenAPI (Swagger) Specification](https://swagger.io/specification/). You can generate your client [here](https://openapi-generator.tech/docs/generators).<br><br><h3>Video tutorials:</h3><ul><li>[How to authorize?](https://youtu.be/GWfNRvCswXg)</li><li>[How to select specific fields?](https://youtu.be/i7o0aENuyuY)</li><li>[How to filter data records?](https://youtu.be/irgWkN4wlkM)</li></ul>

    The version of the OpenAPI document: 1.6.55
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json


from typing import Optional
from pydantic import BaseModel, Field, StrictBool, StrictStr

class Locale(BaseModel):
    """
    Locale
    """
    id: Optional[StrictStr] = None
    deleted: Optional[StrictBool] = None
    name: StrictStr = Field(...)
    description: Optional[StrictStr] = None
    language: StrictStr = Field(...)
    decimal_mark: StrictStr = Field(..., alias="decimalMark")
    time_format: StrictStr = Field(..., alias="timeFormat")
    thousand_separator: Optional[StrictStr] = Field(None, alias="thousandSeparator")
    week_start: StrictStr = Field(..., alias="weekStart")
    date_format: StrictStr = Field(..., alias="dateFormat")
    time_zone: StrictStr = Field(..., alias="timeZone")
    created_at: Optional[StrictStr] = Field(None, alias="createdAt")
    modified_at: Optional[StrictStr] = Field(None, alias="modifiedAt")
    created_by_id: Optional[StrictStr] = Field(None, alias="createdById")
    created_by_name: Optional[StrictStr] = Field(None, alias="createdByName")
    modified_by_id: Optional[StrictStr] = Field(None, alias="modifiedById")
    modified_by_name: Optional[StrictStr] = Field(None, alias="modifiedByName")
    __properties = ["id", "deleted", "name", "description", "language", "decimalMark", "timeFormat", "thousandSeparator", "weekStart", "dateFormat", "timeZone", "createdAt", "modifiedAt", "createdById", "createdByName", "modifiedById", "modifiedByName"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Locale:
        """Create an instance of Locale from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> Locale:
        """Create an instance of Locale from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return Locale.parse_obj(obj)

        _obj = Locale.parse_obj({
            "id": obj.get("id"),
            "deleted": obj.get("deleted"),
            "name": obj.get("name"),
            "description": obj.get("description"),
            "language": obj.get("language"),
            "decimal_mark": obj.get("decimalMark"),
            "time_format": obj.get("timeFormat"),
            "thousand_separator": obj.get("thousandSeparator"),
            "week_start": obj.get("weekStart"),
            "date_format": obj.get("dateFormat"),
            "time_zone": obj.get("timeZone"),
            "created_at": obj.get("createdAt"),
            "modified_at": obj.get("modifiedAt"),
            "created_by_id": obj.get("createdById"),
            "created_by_name": obj.get("createdByName"),
            "modified_by_id": obj.get("modifiedById"),
            "modified_by_name": obj.get("modifiedByName")
        })
        return _obj


