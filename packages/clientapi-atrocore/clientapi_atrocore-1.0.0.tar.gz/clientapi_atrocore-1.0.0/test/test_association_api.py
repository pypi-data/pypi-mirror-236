# coding: utf-8

"""
    AtroCore REST API documentation

    This is a REST API documentation for AtroCore data platform and its modules (AtroPIM, AtroDAM and others), which is based on [OpenAPI (Swagger) Specification](https://swagger.io/specification/). You can generate your client [here](https://openapi-generator.tech/docs/generators).<br><br><h3>Video tutorials:</h3><ul><li>[How to authorize?](https://youtu.be/GWfNRvCswXg)</li><li>[How to select specific fields?](https://youtu.be/i7o0aENuyuY)</li><li>[How to filter data records?](https://youtu.be/irgWkN4wlkM)</li></ul>

    The version of the OpenAPI document: 1.6.55
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from clientapi_atrocore.api.association_api import AssociationApi  # noqa: E501


class TestAssociationApi(unittest.TestCase):
    """AssociationApi unit test stubs"""

    def setUp(self) -> None:
        self.api = AssociationApi()  # noqa: E501

    def tearDown(self) -> None:
        pass

    def test_add_relation_for_association(self) -> None:
        """Test case for add_relation_for_association

        Add relation for Association  # noqa: E501
        """
        pass

    def test_create_association_item(self) -> None:
        """Test case for create_association_item

        Create a record of the Association  # noqa: E501
        """
        pass

    def test_delete_association_item(self) -> None:
        """Test case for delete_association_item

        Delete a record of the Association  # noqa: E501
        """
        pass

    def test_follow_association(self) -> None:
        """Test case for follow_association

        Follow the Association stream  # noqa: E501
        """
        pass

    def test_get_association_item(self) -> None:
        """Test case for get_association_item

        Returns a record of the Association  # noqa: E501
        """
        pass

    def test_get_linked_items_for_association_item(self) -> None:
        """Test case for get_linked_items_for_association_item

        Returns linked entities for the Association  # noqa: E501
        """
        pass

    def test_get_list_of_association_items(self) -> None:
        """Test case for get_list_of_association_items

        Returns a collection of Association records  # noqa: E501
        """
        pass

    def test_link_association(self) -> None:
        """Test case for link_association

        Link Association to Entities  # noqa: E501
        """
        pass

    def test_mass_delete_association(self) -> None:
        """Test case for mass_delete_association

        Mass delete of Association data  # noqa: E501
        """
        pass

    def test_mass_update_association(self) -> None:
        """Test case for mass_update_association

        Mass update of Association data  # noqa: E501
        """
        pass

    def test_remove_relation_for_association(self) -> None:
        """Test case for remove_relation_for_association

        Remove relation for Association  # noqa: E501
        """
        pass

    def test_unfollow_association(self) -> None:
        """Test case for unfollow_association

        Unfollow the Association stream  # noqa: E501
        """
        pass

    def test_unlink_association(self) -> None:
        """Test case for unlink_association

        Unlink Association from Entities  # noqa: E501
        """
        pass

    def test_update_association_item(self) -> None:
        """Test case for update_association_item

        Update a record of the Association  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
