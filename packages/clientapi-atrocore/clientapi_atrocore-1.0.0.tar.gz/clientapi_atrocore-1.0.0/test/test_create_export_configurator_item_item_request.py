# coding: utf-8

"""
    AtroCore REST API documentation

    This is a REST API documentation for AtroCore data platform and its modules (AtroPIM, AtroDAM and others), which is based on [OpenAPI (Swagger) Specification](https://swagger.io/specification/). You can generate your client [here](https://openapi-generator.tech/docs/generators).<br><br><h3>Video tutorials:</h3><ul><li>[How to authorize?](https://youtu.be/GWfNRvCswXg)</li><li>[How to select specific fields?](https://youtu.be/i7o0aENuyuY)</li><li>[How to filter data records?](https://youtu.be/irgWkN4wlkM)</li></ul>

    The version of the OpenAPI document: 1.6.55
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from clientapi_atrocore.models.create_export_configurator_item_item_request import CreateExportConfiguratorItemItemRequest  # noqa: E501

class TestCreateExportConfiguratorItemItemRequest(unittest.TestCase):
    """CreateExportConfiguratorItemItemRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateExportConfiguratorItemItemRequest:
        """Test CreateExportConfiguratorItemItemRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateExportConfiguratorItemItemRequest`
        """
        model = CreateExportConfiguratorItemItemRequest()  # noqa: E501
        if include_optional:
            return CreateExportConfiguratorItemItemRequest(
                attribute_value = '',
                zip = True,
                file_name_template = '',
                name = '',
                column = '',
                sort_order = 56,
                column_type = '',
                export_into_separate_columns = True,
                export_by = [
                    ''
                    ],
                filter_field = '',
                filter_field_value = [
                    ''
                    ],
                type = '',
                value_modifier = [
                    ''
                    ],
                attribute_name_value = '',
                is_attribute_multi_lang = True,
                language = '',
                entity = '',
                remove = '',
                scope = '',
                export_feed_id = '',
                mask = '',
                editable = True,
                offset_relation = 56,
                limit_relation = 56,
                sort_field_relation = '',
                sort_order_relation = '',
                fixed_value = '',
                attribute_id = '',
                channel_id = ''
            )
        else:
            return CreateExportConfiguratorItemItemRequest(
                column_type = '',
        )
        """

    def testCreateExportConfiguratorItemItemRequest(self):
        """Test CreateExportConfiguratorItemItemRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
