# coding: utf-8

"""
    AtroCore REST API documentation

    This is a REST API documentation for AtroCore data platform and its modules (AtroPIM, AtroDAM and others), which is based on [OpenAPI (Swagger) Specification](https://swagger.io/specification/). You can generate your client [here](https://openapi-generator.tech/docs/generators).<br><br><h3>Video tutorials:</h3><ul><li>[How to authorize?](https://youtu.be/GWfNRvCswXg)</li><li>[How to select specific fields?](https://youtu.be/i7o0aENuyuY)</li><li>[How to filter data records?](https://youtu.be/irgWkN4wlkM)</li></ul>

    The version of the OpenAPI document: 1.6.55
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from clientapi_atrocore.models.create_import_configurator_item_item_request import CreateImportConfiguratorItemItemRequest  # noqa: E501

class TestCreateImportConfiguratorItemItemRequest(unittest.TestCase):
    """CreateImportConfiguratorItemItemRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateImportConfiguratorItemItemRequest:
        """Test CreateImportConfiguratorItemItemRequest
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateImportConfiguratorItemItemRequest`
        """
        model = CreateImportConfiguratorItemItemRequest()  # noqa: E501
        if include_optional:
            return CreateImportConfiguratorItemItemRequest(
                name = '',
                entity_identifier = True,
                column = [
                    ''
                    ],
                import_by = [
                    ''
                    ],
                create_if_not_exist = True,
                replace_array = True,
                type = '',
                foreign_column = [
                    ''
                    ],
                foreign_import_by = [
                    ''
                    ],
                attribute_id = '',
                scope = '',
                channel_id = '',
                locale = '',
                default_container = '',
                default = '',
                default_from = '',
                default_to = '',
                default_currency = '',
                default_id = '',
                default_paths_data = None,
                default_ids = [
                    ''
                    ],
                entity = '',
                source_fields = [
                    ''
                    ],
                import_feed_id = '',
                sort_order = 56,
                attribute_value = ''
            )
        else:
            return CreateImportConfiguratorItemItemRequest(
        )
        """

    def testCreateImportConfiguratorItemItemRequest(self):
        """Test CreateImportConfiguratorItemItemRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
