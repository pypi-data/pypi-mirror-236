from enum import Enum

t1 = [0.01539538775070257, -0.09927370807812227, 0.33069511153108155, 0.4509761542648668, 0.4155919188474332,
      0.5265491176414481, 0.5476040969474414, 0.6896862597208311, 0.8111651115511127, 0.8677484744481628,
      0.7470699325949872, 1.0269388132651027, 0.9766888120677506, 0.9894202430750071, 0.9602996399743337,
      1.0365634887206645, 0.9214145785458129, 1.0712712456576168, 1.0262133909640936, 0.8192947338112503,
      0.8570103288192199, 0.9160871404986349, 0.7931769995739707, 0.8264789542725667, 0.6868482051983846,
      0.6291862094252899, 0.4562048862084591, 0.436133741640294, 0.3309021426809835, 0.3142120257575783,
      -0.006142145970082669, 0.039317810376221, 0.053522150845668526, -0.04584604387907451, -0.363069135968662,
      -0.4263086193701625, -0.42503322453943093, -0.5066584488132144, -0.6417968942597739, -0.773768197306309,
      -0.8228208720154425, -0.7266110794280947, -0.7575079832599205, -0.9309259408532258, -1.045137567182381,
      -0.9884777975283683, -1.0918139397032043, -0.9115603140963037, -0.9843143566033643, -0.9166971405703404,
      -1.0057719005518568, -0.8300808242703989, -0.8982381559177964, -0.9066544566146083, -0.7653036070141336,
      -0.670209171575796, -0.6468954211582452, -0.5324921863120587, -0.4477073120202897, -0.36028875582381054,
      -0.2208117526684064, -0.12009152953174576, -0.06897303889032519, -0.10387986889556819, -0.10823119779048096,
      0.36370631016721544, 0.4288607332932925, 0.5725370902998687, 0.5052136538827128, 0.5217305289978171,
      0.6700516359854728, 0.8232744013412066, 0.8027062908819574, 0.8665952885607645, 0.8756981025177009,
      .043526446415728, 0.8483906711675467, 0.9498823922485247, 0.9770482825471971, 0.8915565926137651,
      1.0853816581384597, 0.7884404786076912, 0.8610326624289848, 1.0564137259580437, 1.0253167613380239,
      0.7100744726681771, 0.6479990827058664, 0.6181276243850986, 0.501816944951964, 0.43694730173811225,
      0.45034904672668213, 0.2882477815750529, 0.13762275715019934, 0.18900872550472603, -0.10771203418670275,
      -0.059120053961771044, -0.17347063337163104, -0.4236257557930694, -0.260168663465008, -0.3519080420504243,
      -0.5056145621429305, -0.7866990648878317, -0.7888738271237596, -0.764147660283262, -0.8797765201763025,
      -0.7671834151217436, -0.8229243603925194, -1.0391669976053577, -1.2621405142209, -1.0127299262212162,
      -0.8431304936506284, -1.1326181406480582, -0.9908034241901814, -0.8646470938417922, -0.8905366955053227,
      -1.0050674223023426, -0.7959666025444078, -0.6943007618668691, -0.7626577650223556, -0.6125105327851403,
      -0.6668144475880691, -0.30955319279280513, -0.3693471379775771, -0.546301285816408, -0.21977929764134072,
      -0.1685728921716048, 0.03739015197300476, 0.11335063290427369, 0.28024706262009796, 0.20620697183993852,
      0.4228903021754428, 0.5180497819221297, 0.42497209414027237, 0.6341162171754787, 0.6470888210458061,
      0.8767951789174309, 0.9284305348137123, 0.9484335529390441, 1.0559510760962458, 0.8703931083802345,
      0.9277777803371088, 1.1608465682137732, 1.1734198901609876, 0.8957470866921533, 0.9765074700818883,
      1.0044919252323234, 1.0189528587493673, 0.8171432011588677, 0.5440284911092546, 0.744915971389257,
      0.7283812684598284, 0.6412190298251269, 0.3561405927584491, 0.41579980203615347, 0.39958846792974534,
      0.23078445323463487, 0.33900308033034576, 0.07142761419414294, -0.14745014920436436, -0.21162636180384564,
      -0.38776822045252424, -0.4832719200442058, -0.4360482153076669, -0.43110766783826115, -0.5464414055409093,
      -0.6706383482501092, -0.7880624178062676, -0.9535462068580741, -1.0362485847449667, -0.91701436695311,
      -1.1856842990939125, -0.8909440285540202, -0.9416677234339882, -1.0553896097704067, -1.0846718685736259,
      -1.334480703139076, -1.0783113744382322, -0.8724058364018901, -0.8780246616066913, -0.8044713103975212,
      -0.8135514812897106, -0.7629092325374173, -0.5828428089862916, -0.6759578986155395, -0.4411275763648743,
      -0.44840682334908244, -0.2966813868807617, -0.17732657234756896, -0.1282631357376218, -0.07506132820395062,
      0.13114021308968826, 0.3509040264111675, 0.23518430513925787, 0.4988617535704605, 0.5360480730316042,
      0.6385289692404689, 0.683461625178321, 0.8129866596137988, 0.8822757871767148, 0.9114477375239727]
t2 = [1.0766396002136425, 1.0443613080673522, 1.0661255160781198, 1.0745297317459563, 1.013137226178763,
      0.8098730259301672, 0.7621934800911356, 0.8885226489107021, 0.7255019602253946, 0.8080194203891314,
      0.49607317878550694, 0.5366135221659796, 0.3882710137691595, 0.3534572583610307, 0.1549681182558733,
      -0.025122577333443266, -0.09794962500884863, -0.06147930957263244, -0.3218460550848105, -0.21756009452473973,
      -0.4879220592716092, -0.5566720032543315, -0.7356031069176577, -0.6633788433627364, -0.8044057356411344,
      -0.7442351861264366, -0.7189547790609715, -0.8802305972274913, -1.0152686814656595, -0.8848765985338866,
      -0.9647988178494648, -1.0587864957263409, -1.231526167226674, -0.9827216207967251, -1.0340032815703948,
      -0.9356987201194338, -0.8807630933125747, -0.7984942894316764, -0.6963728041756494, -0.706904600123846,
      -0.6942817135791458, -0.644578714889599, -0.46468713627321745, -0.39748546526610856, -0.5085802497787978,
      -0.348314595728113, -0.16928273032708574, -0.05501042451206088, 0.12119575362725779, 0.16635286758237072,
      0.2035812636191937, 0.4379823629487497, 0.4778617687417096, 0.43773735253188467, 0.626101768773882,
      0.5375560668599771, 0.5964549032498504, 0.8389859320168441, 1.179577648861632, 1.0408726275472453,
      0.8922776581065018, 0.9722046347114119, 0.8868683018222272, 0.9568368832160061, 1.0529643973777674,
      0.9629085399962878, 0.9392156454707062, 0.9750842900747464, 0.8470806640479506, 0.8081910386485749,
      0.8178343777745218, 0.7887779691868237, 0.6303101889977806, 0.5756305200173659, 0.3919265094634666,
      0.4348743577023287, 0.16521410885562438, 0.145699243179185, 0.04744558112265991, -0.0868457577141811,
      -0.1548342972024953, -0.24450017718085157, -0.42714348933371893, -0.2601528586993882, -0.571154780858927,
      -0.5848883123489734, -0.6104668238271906, -0.7868062909135886, -0.9112351787713884, -0.9701374824980467,
      -0.9600074598846626, -1.0060085804019383, -0.6900673127856778, -0.9455432584615079, -1.1268966451399678,
      -1.0349282626477756, -0.9422390450033814, -0.8427973039156782, -0.8115777780882729, -1.014022124995419,
      -0.8454412137372317, -0.8019450485569144, -0.578442558273027, -0.6786490597275199, -0.4709731918189224,
      -0.5567728523420256, -0.3549584464485212, -0.33529146536343357, -0.18147156129970807, -0.03486700728842938,
      0.08572342354724727, 0.1176493050930168, 0.38162851122852043, 0.33695765298773955, 0.4567330224052631,
      0.6902090116492716, 0.5165465519974445, 0.6776722911639426, 0.6242511314432906, 0.8342645245997311,
      0.8553521007911228, 0.9420732795347501, 1.0054693124337828, 0.8292163422981007, 1.0195320109238002,
      1.1427284169177887, 1.043981758925029, 1.0584483209699358, 0.8926557292687378, 1.076111443710464,
      1.0608047709117647, 0.8668129817343309, 0.8657374414664833, 0.9364179588892545, 0.7328368192636932,
      0.7641428557356083, 0.42197464863905076, 0.3927008666082214, 0.243820858470147, 0.24378698066318857,
      -0.19669650206475678, 0.15074832326719395, -0.04607285915761269, -0.05876105534767713, -0.2831929356909253,
      -0.32120529334930936, -0.32082599812989365, -0.58763877076415, -0.47304931290910923, -0.7336900253890412,
      -0.802460273890339, -0.8414740609480936, -0.8032160618715747, -0.9847857975823923, -1.0920293089186688,
      -0.9976251997911648, -0.8965716087508289, -1.0007814051487758, -0.8951267105643641, -0.9538828759257256,
      -1.0960822328031505, -1.0197978916856278, -0.9763470817832923, -0.8546753053423034, -0.8257816349420666,
      -0.6352864560828063, -0.478827345900507, -0.37858059897101437, -0.29899865519392993, -0.41975020295646,
      -0.28435269837433125, -0.27474882385162547, -0.15804472944697995, 0.05041372900658409, 0.1787906267364093,
      0.2956749691193846, 0.3817720039782603, 0.429704516356094, 0.5275889969760548, 0.48558926773126143,
      0.6722474477606613, 0.8099549516870619, 0.723945106159953, 0.9038306019418598, 0.8997244933668681,
      1.0225987350639945, 0.9847141132526601, 1.058237982171383, 0.9873117206961023, 0.9312834995570689,
      0.9779998628173731, 0.986065561284355, 1.0738987062195662, 0.9027054559497424, 1.0073016621262505,
      0.8732465025036393, 0.7898175986008281, 0.5082720161824513, 0.6666946890661329, 0.6248340841923812]



class CrossMode(Enum):
    up=1
    down=2
    both=3

def get(l1, index):
    return l1[index]

def cross( line1, line2, mode=CrossMode, index=-1, keptStable=False):
    """
    This method calculates a cross between 2 lines.  (line1 X line2).

    mode = Mode can be up, down, both
    index = How far away from now should we search - default is "-1" than the cross is straight here
    keptStable = Checks if there was a cross and the data kept stable on that side
    """
    crossFound = None
    wasStable = False
    for i in range(index, 0, +1):

        d1 = get(line1, -1 + i)
        d2 = get(line2, -1 + i)
        d1_1 = get(line1, -2 + i)
        d2_2 = get(line2, -2 + i)

        if crossFound is None or keptStable is False:
            if mode == CrossMode.up or mode == CrossMode.both:
                if d1_1 < d2_2 and d1 > d2:
                    crossFound = i
                    direction = CrossMode.up
                    if keptStable is False:
                        return direction
                    continue
            if mode == CrossMode.down or mode == CrossMode.both:
                if d1_1 > d2_2 and d1 < d2:
                    crossFound = i
                    direction = CrossMode.down
                    if keptStable is False:
                        return direction
                    continue

        if crossFound is not None and keptStable is True:
            if direction == CrossMode.down:
                if d1 < d2:
                    wasStable = True
                else:
                    wasStable = False
                    crossFound = None
            if direction == CrossMode.up:
                if d1 > d2:
                    wasStable = True
                else:
                    wasStable = False
                    crossFound = None

    if crossFound is not None and wasStable:
        return direction

    return False

rets = []
for r in range(len(t1)-8):

    if r > 4:
        t_1 = t1[r:r+10]
        t_2 = t2[r:r+10]
        ret = cross(t_1, t_2, CrossMode.both, index=-7, keptStable=True)
        rets.append(ret)

print(rets)