from _typeshed import Incomplete
from conans import CHECKSUM_DEPLOY as CHECKSUM_DEPLOY, MATRIX_PARAMS as MATRIX_PARAMS, OAUTH_TOKEN as OAUTH_TOKEN, ONLY_V2 as ONLY_V2, REVISIONS as REVISIONS
from conans.client.rest.rest_client_v1 import RestV1Methods as RestV1Methods
from conans.client.rest.rest_client_v2 import RestV2Methods as RestV2Methods
from conans.errors import AuthenticationException as AuthenticationException, OnlyV2Available as OnlyV2Available
from conans.search.search import filter_packages as filter_packages
from conans.util.log import logger as logger

class RestApiClientFactory:
    _output: Incomplete
    _requester: Incomplete
    _config: Incomplete
    _artifacts_properties: Incomplete
    _cached_capabilities: Incomplete
    def __init__(self, output, requester, config, artifacts_properties: Incomplete | None = ...) -> None: ...
    def new(self, remote, token, refresh_token, custom_headers): ...

class RestApiClient:
    _token: Incomplete
    _refresh_token: Incomplete
    _remote_url: Incomplete
    _custom_headers: Incomplete
    _output: Incomplete
    _requester: Incomplete
    _verify_ssl: Incomplete
    _artifacts_properties: Incomplete
    _revisions_enabled: Incomplete
    _config: Incomplete
    _cached_capabilities: Incomplete
    def __init__(self, remote, token, refresh_token, custom_headers, output, requester, config, cached_capabilities, artifacts_properties: Incomplete | None = ...) -> None: ...
    def _capable(self, capability, user: Incomplete | None = ..., password: Incomplete | None = ...): ...
    def _get_api(self): ...
    def get_recipe_manifest(self, ref): ...
    def get_package_manifest(self, pref): ...
    def get_package_info(self, pref, headers): ...
    def get_recipe(self, ref, dest_folder): ...
    def get_recipe_snapshot(self, ref): ...
    def get_recipe_sources(self, ref, dest_folder): ...
    def get_package(self, pref, dest_folder): ...
    def get_package_snapshot(self, ref): ...
    def get_recipe_path(self, ref, path): ...
    def get_package_path(self, pref, path): ...
    def upload_recipe(self, ref, files_to_upload, deleted, retry, retry_wait): ...
    def upload_package(self, pref, files_to_upload, deleted, retry, retry_wait): ...
    def authenticate(self, user, password): ...
    def check_credentials(self): ...
    def search(self, pattern: Incomplete | None = ..., ignorecase: bool = ...): ...
    def search_packages(self, reference): ...
    def remove_recipe(self, ref): ...
    def remove_packages(self, ref, package_ids: Incomplete | None = ...): ...
    def server_capabilities(self): ...
    def get_recipe_revisions(self, ref): ...
    def get_package_revisions(self, pref): ...
    def get_latest_recipe_revision(self, ref): ...
    def get_latest_package_revision(self, pref, headers): ...
