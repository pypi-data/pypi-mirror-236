from _typeshed import Incomplete
from collections.abc import Generator
from conans.errors import ConanException as ConanException
from conans.util import encrypt as encrypt

REMOTES_USER_TABLE: str

class LocalDB:
    dbfile: Incomplete
    encryption_key: Incomplete
    def __init__(self, dbfile, encryption_key) -> None: ...
    def _encode(self, value): ...
    def _decode(self, value): ...
    def clean(self) -> None: ...
    @staticmethod
    def create(dbfile, encryption_key: Incomplete | None = ...): ...
    def _connect(self) -> Generator[Incomplete, None, None]: ...
    def get_login(self, remote_url): ...
    def get_username(self, remote_url): ...
    def store(self, user, token, refresh_token, remote_url) -> None: ...
