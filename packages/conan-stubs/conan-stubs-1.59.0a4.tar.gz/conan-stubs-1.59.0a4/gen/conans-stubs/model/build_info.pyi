from _typeshed import Incomplete
from collections import OrderedDict
from conans.errors import ConanException as ConanException
from conans.util.conan_v2_mode import conan_v2_error as conan_v2_error

DEFAULT_INCLUDE: str
DEFAULT_LIB: str
DEFAULT_BIN: str
DEFAULT_RES: str
DEFAULT_SHARE: str
DEFAULT_BUILD: str
DEFAULT_FRAMEWORK: str
COMPONENT_SCOPE: str

class DefaultOrderedDict(OrderedDict):
    factory: Incomplete
    def __init__(self, factory) -> None: ...
    def __getitem__(self, key): ...
    def __copy__(self): ...

class BuildModulesDict(dict):
    def __getitem__(self, key): ...
    def _append(self, item) -> None: ...
    def append(self, item) -> None: ...
    def extend(self, items) -> None: ...
    @classmethod
    def from_list(cls, build_modules): ...

def dict_to_abs_paths(the_dict, rootpath): ...
def merge_lists(seq1, seq2): ...
def merge_dicts(d1, d2): ...

class _CppInfo:
    _name: Incomplete
    _generator_properties: Incomplete
    names: Incomplete
    system_libs: Incomplete
    includedirs: Incomplete
    srcdirs: Incomplete
    libdirs: Incomplete
    resdirs: Incomplete
    bindirs: Incomplete
    builddirs: Incomplete
    frameworks: Incomplete
    frameworkdirs: Incomplete
    rootpaths: Incomplete
    libs: Incomplete
    defines: Incomplete
    cflags: Incomplete
    cxxflags: Incomplete
    sharedlinkflags: Incomplete
    exelinkflags: Incomplete
    objects: Incomplete
    build_modules: Incomplete
    filenames: Incomplete
    rootpath: str
    sysroot: str
    requires: Incomplete
    _build_modules_paths: Incomplete
    _build_modules: Incomplete
    _include_paths: Incomplete
    _lib_paths: Incomplete
    _bin_paths: Incomplete
    _build_paths: Incomplete
    _res_paths: Incomplete
    _src_paths: Incomplete
    _framework_paths: Incomplete
    version: Incomplete
    description: Incomplete
    filter_empty: bool
    def __init__(self) -> None: ...
    def _filter_paths(self, paths): ...
    @property
    def build_modules_paths(self): ...
    @property
    def include_paths(self): ...
    @property
    def lib_paths(self): ...
    @property
    def src_paths(self): ...
    @property
    def bin_paths(self): ...
    @property
    def build_paths(self): ...
    @property
    def res_paths(self): ...
    @property
    def framework_paths(self): ...
    @property
    def name(self): ...
    def get_name(self, generator, default_name: bool = ...): ...
    def get_filename(self, generator, default_name: bool = ...): ...
    def get_build_modules(self): ...
    def set_property(self, property_name, value) -> None: ...
    def get_property(self, property_name): ...
    def get_cppflags(self): ...
    def set_cppflags(self, value) -> None: ...
    cppflags: Incomplete

class Component(_CppInfo):
    rootpath: Incomplete
    requires: Incomplete
    version: Incomplete
    def __init__(self, rootpath, version, default_values) -> None: ...

class CppInfoDefaultValues:
    includedir: Incomplete
    libdir: Incomplete
    bindir: Incomplete
    resdir: Incomplete
    builddir: Incomplete
    frameworkdir: Incomplete
    def __init__(self, includedir: Incomplete | None = ..., libdir: Incomplete | None = ..., bindir: Incomplete | None = ..., resdir: Incomplete | None = ..., builddir: Incomplete | None = ..., frameworkdir: Incomplete | None = ...) -> None: ...

class CppInfo(_CppInfo):
    _ref_name: Incomplete
    _name: Incomplete
    rootpath: Incomplete
    _default_values: Incomplete
    components: Incomplete
    public_deps: Incomplete
    _configs: Incomplete
    def __init__(self, ref_name, root_folder, default_values: Incomplete | None = ...) -> None: ...
    def __str__(self): ...
    def get_name(self, generator, default_name: bool = ...): ...
    @property
    def configs(self): ...
    def __getattr__(self, config): ...
    def _raise_incorrect_components_definition(self, package_name, package_requires) -> None: ...

class _BaseDepsCppInfo(_CppInfo):
    def __init__(self) -> None: ...
    system_libs: Incomplete
    includedirs: Incomplete
    srcdirs: Incomplete
    libdirs: Incomplete
    bindirs: Incomplete
    resdirs: Incomplete
    builddirs: Incomplete
    frameworkdirs: Incomplete
    libs: Incomplete
    frameworks: Incomplete
    build_modules: Incomplete
    requires: Incomplete
    defines: Incomplete
    cxxflags: Incomplete
    cflags: Incomplete
    sharedlinkflags: Incomplete
    exelinkflags: Incomplete
    objects: Incomplete
    sysroot: Incomplete
    def update(self, dep_cpp_info): ...
    @property
    def build_modules_paths(self): ...
    @property
    def include_paths(self): ...
    @property
    def lib_paths(self): ...
    @property
    def src_paths(self): ...
    @property
    def bin_paths(self): ...
    @property
    def build_paths(self): ...
    @property
    def res_paths(self): ...
    @property
    def framework_paths(self): ...

class DepCppInfo:
    _cpp_info: Incomplete
    _libs: Incomplete
    _system_libs: Incomplete
    _frameworks: Incomplete
    _defines: Incomplete
    _cxxflags: Incomplete
    _cflags: Incomplete
    _sharedlinkflags: Incomplete
    _exelinkflags: Incomplete
    _objects: Incomplete
    _requires: Incomplete
    _include_paths: Incomplete
    _lib_paths: Incomplete
    _bin_paths: Incomplete
    _build_paths: Incomplete
    _res_paths: Incomplete
    _src_paths: Incomplete
    _framework_paths: Incomplete
    _build_modules_paths: Incomplete
    _sorted_components: Incomplete
    def __init__(self, cpp_info) -> None: ...
    def __str__(self): ...
    def __getattr__(self, item): ...
    def _aggregated_dict_values(self, item): ...
    def _aggregated_list_values(self, item): ...
    @staticmethod
    def _filter_component_requires(requires): ...
    def _check_component_requires(self) -> None: ...
    def _get_sorted_components(self): ...
    @property
    def build_modules_paths(self): ...
    @property
    def include_paths(self): ...
    @property
    def lib_paths(self): ...
    @property
    def src_paths(self): ...
    @property
    def bin_paths(self): ...
    @property
    def build_paths(self): ...
    @property
    def res_paths(self): ...
    @property
    def framework_paths(self): ...
    @property
    def libs(self): ...
    @property
    def system_libs(self): ...
    @property
    def frameworks(self): ...
    @property
    def defines(self): ...
    @property
    def cxxflags(self): ...
    @property
    def cflags(self): ...
    @property
    def sharedlinkflags(self): ...
    @property
    def exelinkflags(self): ...
    @property
    def objects(self): ...
    @property
    def requires(self): ...

class DepsCppInfo(_BaseDepsCppInfo):
    _dependencies: Incomplete
    _configs: Incomplete
    def __init__(self) -> None: ...
    def __getattr__(self, config): ...
    @property
    def configs(self): ...
    @property
    def dependencies(self): ...
    @property
    def deps(self): ...
    def __getitem__(self, item): ...
    def add(self, pkg_name, cpp_info) -> None: ...
