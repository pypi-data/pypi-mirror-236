from _typeshed import Incomplete
from conan.tools.build import build_jobs as build_jobs
from conan.tools.cmake.presets import load_cmake_presets as load_cmake_presets
from conan.tools.cmake.utils import is_multi_configuration as is_multi_configuration
from conan.tools.files import chdir as chdir, mkdir as mkdir
from conan.tools.microsoft.msbuild import msbuild_verbosity_cmd_line_arg as msbuild_verbosity_cmd_line_arg

def _validate_recipe(conanfile) -> None: ...
def _cmake_cmd_line_args(conanfile, generator): ...

class CMake:
    _conanfile: Incomplete
    _generator: Incomplete
    _toolchain_file: Incomplete
    _cache_variables: Incomplete
    _cmake_program: str
    def __init__(self, conanfile) -> None: ...
    def configure(self, variables: Incomplete | None = ..., build_script_folder: Incomplete | None = ..., cli_args: Incomplete | None = ...) -> None: ...
    def _build(self, build_type: Incomplete | None = ..., target: Incomplete | None = ..., cli_args: Incomplete | None = ..., build_tool_args: Incomplete | None = ..., env: str = ...) -> None: ...
    def build(self, build_type: Incomplete | None = ..., target: Incomplete | None = ..., cli_args: Incomplete | None = ..., build_tool_args: Incomplete | None = ...) -> None: ...
    def install(self, build_type: Incomplete | None = ..., component: Incomplete | None = ...) -> None: ...
    def test(self, build_type: Incomplete | None = ..., target: Incomplete | None = ..., cli_args: Incomplete | None = ..., build_tool_args: Incomplete | None = ..., env: str = ...) -> None: ...
