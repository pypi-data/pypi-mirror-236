from _typeshed import Incomplete
from conans.cli.command import ConanSubCommand as ConanSubCommand
from conans.cli.exit_codes import ERROR_GENERAL as ERROR_GENERAL, ERROR_INVALID_CONFIGURATION as ERROR_INVALID_CONFIGURATION, ERROR_MIGRATION as ERROR_MIGRATION, ERROR_SIGTERM as ERROR_SIGTERM, SUCCESS as SUCCESS, USER_CTRL_BREAK as USER_CTRL_BREAK, USER_CTRL_C as USER_CTRL_C
from conans.client.api.conan_api import Conan as Conan
from conans.errors import ConanException as ConanException, ConanInvalidConfiguration as ConanInvalidConfiguration, ConanMigrationError as ConanMigrationError
from conans.util.files import exception_message_safe as exception_message_safe
from conans.util.log import logger as logger

class Cli:
    _conan_api: Incomplete
    _out: Incomplete
    _groups: Incomplete
    _commands: Incomplete
    def __init__(self, conan_api) -> None: ...
    def _add_command(self, import_path, method_name) -> None: ...
    @property
    def conan_api(self): ...
    @property
    def commands(self): ...
    @property
    def groups(self): ...
    def _print_similar(self, command) -> None: ...
    def help_message(self) -> None: ...
    def run(self, *args): ...

def cli_out_write(data, fg: Incomplete | None = ..., bg: Incomplete | None = ...) -> None: ...
def main(args) -> None: ...
