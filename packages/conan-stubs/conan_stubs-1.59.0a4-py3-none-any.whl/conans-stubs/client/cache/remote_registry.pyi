from _typeshed import Incomplete
from conans.errors import ConanException as ConanException, NoRemoteAvailable as NoRemoteAvailable
from conans.model.ref import ConanFileReference as ConanFileReference, PackageReference as PackageReference
from conans.util.config_parser import get_bool_from_text_value as get_bool_from_text_value
from conans.util.files import load as load, save as save
from typing import NamedTuple

CONAN_CENTER_REMOTE_NAME: str

class Remote(NamedTuple):
    name: Incomplete
    url: Incomplete
    verify_ssl: Incomplete
    disabled: Incomplete

def load_registry_txt(contents): ...
def load_old_registry_json(contents): ...
def migrate_registry_file(cache, out) -> None: ...

class Remotes:
    _remotes: Incomplete
    selected: Incomplete
    def __init__(self) -> None: ...
    @classmethod
    def defaults(cls): ...
    def select(self, remote_name) -> None: ...
    def __bool__(self) -> bool: ...
    def __nonzero__(self): ...
    def clear(self) -> None: ...
    def items(self): ...
    def values(self): ...
    def all_values(self): ...
    def all_items(self): ...
    @staticmethod
    def loads(text): ...
    def dumps(self): ...
    def save(self, filename) -> None: ...
    def _get_by_url(self, url): ...
    def rename(self, remote_name, new_remote_name) -> None: ...
    def set_disabled_state(self, remote_name, state) -> None: ...
    def get_remote(self, remote_name): ...
    @property
    def default(self): ...
    def __contains__(self, remote_name) -> bool: ...
    def get(self, remote_name): ...
    def __getitem__(self, remote_name): ...
    def __delitem__(self, remote_name) -> None: ...
    def _upsert(self, remote_name, url, verify_ssl, insert): ...
    def add(self, remote_name, url, verify_ssl: bool = ..., insert: Incomplete | None = ..., force: Incomplete | None = ...): ...
    def update(self, remote_name, url, verify_ssl: bool = ..., insert: Incomplete | None = ...) -> None: ...
    def _add_update(self, remote_name, url, verify_ssl, insert: Incomplete | None = ...) -> None: ...

class RemoteRegistry:
    _cache: Incomplete
    _output: Incomplete
    _filename: Incomplete
    def __init__(self, cache, output) -> None: ...
    def _validate_url(self, url) -> None: ...
    def initialize_remotes(self) -> None: ...
    def reset_remotes(self) -> None: ...
    def load_remotes(self): ...
    def add(self, remote_name, url, verify_ssl: bool = ..., insert: Incomplete | None = ..., force: Incomplete | None = ...) -> None: ...
    def update(self, remote_name, url, verify_ssl: bool = ..., insert: Incomplete | None = ...) -> None: ...
    def clear(self) -> None: ...
    def remove(self, remote_name) -> None: ...
    def define(self, remotes) -> None: ...
    def rename(self, remote_name, new_remote_name) -> None: ...
    def set_disabled_state(self, remote_name, state) -> None: ...
    @property
    def refs_list(self): ...
    @property
    def prefs_list(self): ...
