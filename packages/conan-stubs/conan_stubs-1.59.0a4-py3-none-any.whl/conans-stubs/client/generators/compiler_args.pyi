from conans.client.build.compiler_flags import architecture_flag as architecture_flag, build_type_define as build_type_define, build_type_flags as build_type_flags, format_defines as format_defines, format_framework_paths as format_framework_paths, format_frameworks as format_frameworks, format_include_paths as format_include_paths, format_libraries as format_libraries, format_library_paths as format_library_paths, libcxx_define as libcxx_define, libcxx_flag as libcxx_flag, rpath_flags as rpath_flags, sysroot_flag as sysroot_flag, visual_linker_option_separator as visual_linker_option_separator, visual_runtime as visual_runtime
from conans.client.tools.oss import get_build_os_arch as get_build_os_arch
from conans.model import Generator as Generator
from conans.paths import BUILD_INFO_COMPILER_ARGS as BUILD_INFO_COMPILER_ARGS

class CompilerArgsGenerator(Generator):
    @property
    def filename(self): ...
    @property
    def compiler(self): ...
    @property
    def _settings(self): ...
    @property
    def content(self): ...
    def _libcxx_flags(self): ...
