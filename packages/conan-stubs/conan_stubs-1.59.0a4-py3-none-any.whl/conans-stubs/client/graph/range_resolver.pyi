from _typeshed import Incomplete
from conans.errors import ConanException as ConanException
from conans.model.ref import ConanFileReference as ConanFileReference
from conans.search.search import search_recipes as search_recipes

re_param: Incomplete
re_version: Incomplete

def _parse_versionexpr(versionexpr, result): ...
def satisfying(list_versions, versionexpr, result): ...

class RangeResolver:
    _cache: Incomplete
    _remote_manager: Incomplete
    _cached_remote_found: Incomplete
    _result: Incomplete
    def __init__(self, cache, remote_manager) -> None: ...
    @property
    def output(self): ...
    def clear_output(self) -> None: ...
    def resolve(self, require, base_conanref, update, remotes) -> None: ...
    def _resolve_local(self, search_ref, version_range): ...
    def _search_remotes(self, search_ref, remotes): ...
    def _resolve_remote(self, search_ref, version_range, remotes): ...
    def _resolve_version(self, version_range, refs_found): ...
