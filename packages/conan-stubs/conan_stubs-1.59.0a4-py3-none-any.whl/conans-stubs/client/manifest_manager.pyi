from _typeshed import Incomplete
from conans.client.cache.remote_registry import Remote as Remote
from conans.client.graph.graph import RECIPE_CONSUMER as RECIPE_CONSUMER, RECIPE_VIRTUAL as RECIPE_VIRTUAL
from conans.errors import ConanException as ConanException
from conans.model.manifest import FileTreeManifest as FileTreeManifest
from conans.model.ref import PackageReference as PackageReference
from conans.paths import EXPORT_FOLDER as EXPORT_FOLDER, PACKAGES_FOLDER as PACKAGES_FOLDER

class ManifestManager:
    _target_folder: Incomplete
    _user_io: Incomplete
    _cache: Incomplete
    _log: Incomplete
    def __init__(self, folder, user_io, cache) -> None: ...
    def check_graph(self, graph, verify, interactive) -> None: ...
    def _handle_recipe(self, node, verify, interactive) -> None: ...
    def _handle_package(self, node, verify, interactive) -> None: ...
    def _handle_folder(self, folder, ref, read_manifest, interactive, remote, verify) -> None: ...
    def _check_accept_install(self, interactive, ref, remote_name) -> None: ...
    @staticmethod
    def _check_not_corrupted(ref, read_manifest, expected_manifest) -> None: ...
    def _handle_manifest(self, ref, folder, read_manifest, interactive, remote_name, verify) -> None: ...
    def print_log(self) -> None: ...
