from _typeshed import Incomplete
from typing import NamedTuple

class _SearchRecipe(NamedTuple('SearchRecipe', [('ref', Incomplete)])):
    with_packages: bool
    def to_dict(self): ...

class _SearchPackage(NamedTuple('SearchPackage', [('package_id', Incomplete), ('options', Incomplete), ('settings', Incomplete), ('requires', Incomplete), ('outdated', Incomplete)])):
    def to_dict(self): ...

class SearchRecorder:
    error: bool
    keyword: str
    _info: Incomplete
    def __init__(self) -> None: ...
    def add_recipe(self, remote_name, ref, with_packages: bool = ...) -> None: ...
    def add_package(self, remote_name, ref, package_id, options, settings, requires, outdated) -> None: ...
    def get_info(self): ...
