from _typeshed import Incomplete
from collections.abc import Generator
from conans.model.ref import ConanFileReference as ConanFileReference
from conans.model.rest_routes import RestRoutes as RestRoutes
from conans.paths import ARTIFACTS_PROPERTIES_PUT_PREFIX as ARTIFACTS_PROPERTIES_PUT_PREFIX, CONANINFO as CONANINFO, CONAN_MANIFEST as CONAN_MANIFEST

def _format_ref(url, ref, matrix_params: str = ...): ...
def _format_pref(url, pref, matrix_params: str = ...): ...
def _remove_put_prefix(artifacts_properties) -> Generator[Incomplete, None, None]: ...

class ClientCommonRouter:
    base_url: Incomplete
    routes: Incomplete
    _matrix_params_str: Incomplete
    def __init__(self, base_url, artifacts_properties, matrix_params) -> None: ...
    def ping(self): ...
    def search(self, pattern, ignorecase): ...
    def search_packages(self, ref): ...
    def oauth_authenticate(self): ...
    def common_authenticate(self): ...
    def common_check_credentials(self): ...

class ClientV1Router(ClientCommonRouter):
    def __init__(self, base_url, artifact_properties, matrix_params) -> None: ...
    def add_matrix_params(self, urls): ...
    def search_packages(self, ref): ...
    def remove_recipe(self, ref): ...
    def remove_recipe_files(self, ref): ...
    def remove_packages(self, ref): ...
    def recipe_snapshot(self, ref): ...
    def package_snapshot(self, pref): ...
    def recipe_manifest(self, ref): ...
    def package_manifest(self, pref): ...
    def recipe_download_urls(self, ref): ...
    def package_download_urls(self, pref): ...
    def recipe_upload_urls(self, ref, add_matrix_params: bool = ...): ...
    def package_upload_urls(self, pref, add_matrix_params: bool = ...): ...
    def _for_recipe(self, ref): ...
    def _for_package(self, pref): ...

class ClientV2Router(ClientCommonRouter):
    def __init__(self, base_url, artifacts_properties, matrix_params) -> None: ...
    def recipe_file(self, ref, path, add_matrix_params: bool = ...): ...
    def package_file(self, pref, path, add_matrix_params: bool = ...): ...
    def remove_recipe(self, ref): ...
    def recipe_revisions(self, ref): ...
    def remove_package(self, pref): ...
    def remove_all_packages(self, ref): ...
    def recipe_manifest(self, ref): ...
    def package_manifest(self, pref): ...
    def package_info(self, pref): ...
    def recipe_snapshot(self, ref): ...
    def package_snapshot(self, pref): ...
    def package_revisions(self, pref): ...
    def package_latest(self, pref): ...
    def recipe_latest(self, ref): ...
    def _for_package_file(self, pref, path, matrix_params): ...
    def _for_package_files(self, pref): ...
    def _for_recipe_file(self, ref, path, matrix_params): ...
    def _for_recipe_files(self, ref): ...
    def _for_recipe(self, ref): ...
    def _for_packages(self, ref): ...
    def _for_package(self, pref): ...
    @staticmethod
    def _format_ref_path(url, ref, path, matrix_params): ...
    @staticmethod
    def _format_pref_path(url, pref, path, matrix_params): ...
