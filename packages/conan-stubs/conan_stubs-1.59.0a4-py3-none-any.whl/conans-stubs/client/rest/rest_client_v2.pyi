from _typeshed import Incomplete
from conans import DEFAULT_REVISION_V1 as DEFAULT_REVISION_V1
from conans.client.downloaders.download import run_downloader as run_downloader
from conans.client.remote_manager import check_compressed_files as check_compressed_files
from conans.client.rest.client_routes import ClientV2Router as ClientV2Router
from conans.client.rest.file_uploader import FileUploader as FileUploader
from conans.client.rest.rest_client_common import RestCommonMethods as RestCommonMethods, get_exception_from_error as get_exception_from_error
from conans.errors import AuthenticationException as AuthenticationException, ConanException as ConanException, ForbiddenException as ForbiddenException, NotFoundException as NotFoundException, PackageNotFoundException as PackageNotFoundException, RecipeNotFoundException as RecipeNotFoundException
from conans.model.info import ConanInfo as ConanInfo
from conans.model.manifest import FileTreeManifest as FileTreeManifest
from conans.model.ref import PackageReference as PackageReference
from conans.paths import EXPORT_SOURCES_TGZ_NAME as EXPORT_SOURCES_TGZ_NAME, EXPORT_TGZ_NAME as EXPORT_TGZ_NAME, PACKAGE_TGZ_NAME as PACKAGE_TGZ_NAME
from conans.util.files import decode_text as decode_text
from conans.util.log import logger as logger

class RestV2Methods(RestCommonMethods):
    _checksum_deploy: Incomplete
    def __init__(self, remote_url, token, custom_headers, output, requester, config, verify_ssl, artifacts_properties: Incomplete | None = ..., checksum_deploy: bool = ..., matrix_params: bool = ...) -> None: ...
    @property
    def router(self): ...
    def _get_file_list_json(self, url): ...
    def _get_remote_file_contents(self, url, use_cache, headers: Incomplete | None = ...): ...
    def _get_snapshot(self, url): ...
    def get_recipe_manifest(self, ref): ...
    def get_package_manifest(self, pref): ...
    def get_package_info(self, pref, headers): ...
    def get_recipe(self, ref, dest_folder): ...
    def get_recipe_sources(self, ref, dest_folder): ...
    def get_package(self, pref, dest_folder): ...
    def get_recipe_path(self, ref, path): ...
    def get_package_path(self, pref, path): ...
    @staticmethod
    def _is_dir(path, files): ...
    @staticmethod
    def _list_dir_contents(path, files): ...
    def _upload_recipe(self, ref, files_to_upload, retry, retry_wait) -> None: ...
    def _upload_package(self, pref, files_to_upload, retry, retry_wait) -> None: ...
    def _upload_files(self, files, urls, retry, retry_wait, display_name: Incomplete | None = ...) -> None: ...
    def _download_and_save_files(self, urls, dest_folder, files, use_cache) -> None: ...
    def _remove_conanfile_files(self, ref, files) -> None: ...
    def remove_packages(self, ref, package_ids) -> None: ...
    def remove_conanfile(self, ref) -> None: ...
    def get_recipe_revisions(self, ref): ...
    def get_package_revisions(self, pref): ...
    def get_latest_recipe_revision(self, ref): ...
    def get_latest_package_revision(self, pref, headers): ...
