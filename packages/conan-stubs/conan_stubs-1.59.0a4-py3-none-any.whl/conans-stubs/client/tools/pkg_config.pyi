from _typeshed import Incomplete
from conans.errors import ConanException as ConanException
from conans.util.runners import check_output_runner as check_output_runner

class PkgConfig:
    @staticmethod
    def _cmd_output(command): ...
    library: Incomplete
    pkg_config_executable: Incomplete
    static: Incomplete
    msvc_syntax: Incomplete
    define_variables: Incomplete
    print_errors: Incomplete
    _variables: Incomplete
    info: Incomplete
    def __init__(self, library, pkg_config_executable: Incomplete | None = ..., static: bool = ..., msvc_syntax: bool = ..., variables: Incomplete | None = ..., print_errors: bool = ...) -> None: ...
    def _parse_output(self, option): ...
    def _get_option(self, option): ...
    @property
    def cflags(self): ...
    @property
    def cflags_only_I(self): ...
    @property
    def cflags_only_other(self): ...
    @property
    def libs(self): ...
    @property
    def libs_only_L(self): ...
    @property
    def libs_only_l(self): ...
    @property
    def libs_only_other(self): ...
    @property
    def provides(self): ...
    @property
    def requires(self): ...
    @property
    def requires_private(self): ...
    @property
    def variables(self): ...
    @property
    def version(self): ...
