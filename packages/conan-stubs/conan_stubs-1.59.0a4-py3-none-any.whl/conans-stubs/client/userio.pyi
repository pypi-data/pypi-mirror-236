from _typeshed import Incomplete
from conans.client.output import ConanOutput as ConanOutput
from conans.errors import ConanException as ConanException

class UserIO:
    _ins: Incomplete
    out: Incomplete
    _interactive: bool
    def __init__(self, ins=..., out: Incomplete | None = ...) -> None: ...
    def disable_input(self) -> None: ...
    def _raise_if_non_interactive(self) -> None: ...
    def raw_input(self): ...
    def get_pass(self): ...
    def request_login(self, remote_name, username: Incomplete | None = ...): ...
    def get_username(self, remote_name): ...
    def get_password(self, remote_name): ...
    def request_string(self, msg, default_value: Incomplete | None = ...): ...
    def request_boolean(self, msg, default_option: Incomplete | None = ...): ...
    def _get_env_password(self, remote_name): ...
    def _get_env_username(self, remote_name): ...
