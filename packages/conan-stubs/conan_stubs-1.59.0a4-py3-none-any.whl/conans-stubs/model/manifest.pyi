from _typeshed import Incomplete
from conans.errors import ConanException as ConanException
from conans.paths import CONAN_MANIFEST as CONAN_MANIFEST, EXPORT_SOURCES_TGZ_NAME as EXPORT_SOURCES_TGZ_NAME, EXPORT_TGZ_NAME as EXPORT_TGZ_NAME, PACKAGE_TGZ_NAME as PACKAGE_TGZ_NAME
from conans.util.dates import timestamp_now as timestamp_now, timestamp_to_str as timestamp_to_str
from conans.util.env_reader import get_env as get_env
from conans.util.files import load as load, md5 as md5, md5sum as md5sum, save as save, walk as walk

def discarded_file(filename, keep_python): ...
def gather_files(folder): ...

class FileTreeManifest:
    time: Incomplete
    file_sums: Incomplete
    def __init__(self, the_time, file_sums) -> None: ...
    def files(self): ...
    @property
    def summary_hash(self): ...
    @property
    def time_str(self): ...
    @staticmethod
    def loads(text): ...
    @staticmethod
    def load(folder): ...
    def __repr__(self): ...
    def __str__(self): ...
    def save(self, folder, filename=...) -> None: ...
    @classmethod
    def create(cls, folder, exports_sources_folder: Incomplete | None = ...): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
    def difference(self, other): ...
