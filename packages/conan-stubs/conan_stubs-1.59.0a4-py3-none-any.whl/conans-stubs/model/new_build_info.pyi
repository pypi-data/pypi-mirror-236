from _typeshed import Incomplete
from conans.model.build_info import CppInfoDefaultValues as CppInfoDefaultValues, DefaultOrderedDict as DefaultOrderedDict

_DIRS_VAR_NAMES: Incomplete
_FIELD_VAR_NAMES: Incomplete
_ALL_NAMES: Incomplete

class _NewComponent:
    _generator_properties: Incomplete
    includedirs: Incomplete
    srcdirs: Incomplete
    libdirs: Incomplete
    resdirs: Incomplete
    bindirs: Incomplete
    builddirs: Incomplete
    frameworkdirs: Incomplete
    system_libs: Incomplete
    frameworks: Incomplete
    libs: Incomplete
    defines: Incomplete
    cflags: Incomplete
    cxxflags: Incomplete
    sharedlinkflags: Incomplete
    exelinkflags: Incomplete
    objects: Incomplete
    sysroot: Incomplete
    requires: Incomplete
    def __init__(self, with_defaults: bool = ...) -> None: ...
    @property
    def required_component_names(self): ...
    def set_property(self, property_name, value) -> None: ...
    def get_property(self, property_name): ...
    def get_init(self, attribute, default): ...
    @property
    def bindir(self): ...
    @property
    def libdir(self): ...
    @property
    def includedir(self): ...

class NewCppInfo:
    components: Incomplete
    _aggregated: Incomplete
    def __init__(self, with_defaults: bool = ...) -> None: ...
    def __getattr__(self, attr): ...
    def __setattr__(self, attr, value) -> None: ...
    @property
    def has_components(self): ...
    @property
    def component_names(self): ...
    sysroot: Incomplete
    def merge(self, other) -> None: ...
    def set_relative_base_folder(self, folder) -> None: ...
    def get_sorted_components(self): ...
    def aggregated_components(self): ...
    @property
    def required_components(self): ...
    _generator_properties: Incomplete
    def clear_none(self) -> None: ...
    def __str__(self): ...

def from_old_cppinfo(old): ...
def fill_old_cppinfo(origin, old_cpp) -> None: ...
