from _typeshed import Incomplete
from conans.client import tools as tools
from conans.errors import ConanException as ConanException
from conans.paths import conan_expand_user as conan_expand_user
from conans.server.conf.default_server_conf import default_server_conf as default_server_conf
from conans.server.store.disk_adapter import ServerDiskAdapter as ServerDiskAdapter
from conans.server.store.server_store import ServerStore as ServerStore
from conans.util.env_reader import get_env as get_env
from conans.util.files import mkdir as mkdir, save as save
from conans.util.log import logger as logger
from six.moves.configparser import ConfigParser

MIN_CLIENT_COMPATIBLE_VERSION: str

class ConanServerConfigParser(ConfigParser):
    optionxform: Incomplete
    conan_folder: Incomplete
    config_filename: Incomplete
    _loaded: bool
    env_config: Incomplete
    def __init__(self, base_folder, environment: Incomplete | None = ..., is_custom_path: bool = ...) -> None: ...
    def _get_file_conf(self, section, varname: Incomplete | None = ...): ...
    @property
    def ssl_enabled(self): ...
    @property
    def port(self): ...
    @property
    def public_port(self): ...
    @property
    def host_name(self): ...
    @property
    def public_url(self): ...
    @property
    def disk_storage_path(self): ...
    @property
    def read_permissions(self): ...
    @property
    def write_permissions(self): ...
    @property
    def custom_authenticator(self): ...
    @property
    def custom_authorizer(self): ...
    @property
    def users(self): ...
    @property
    def jwt_secret(self): ...
    @property
    def updown_secret(self): ...
    def _get_conf_server_string(self, keyname): ...
    @property
    def authorize_timeout(self): ...
    @property
    def jwt_expire_time(self): ...

def get_server_store(disk_storage_path, public_url, updown_auth_manager): ...
