from _typeshed import Incomplete
from conans.errors import NotFoundException as NotFoundException, PackageNotFoundException as PackageNotFoundException, RecipeNotFoundException as RecipeNotFoundException
from conans.server.service.common.common import CommonService as CommonService
from conans.server.service.mime import get_mime_type as get_mime_type
from conans.server.store.server_store import ServerStore as ServerStore
from conans.util.files import mkdir as mkdir

class ConanServiceV2(CommonService):
    _authorizer: Incomplete
    _server_store: Incomplete
    def __init__(self, authorizer, server_store) -> None: ...
    def get_recipe_file_list(self, ref, auth_user): ...
    def get_conanfile_file(self, reference, filename, auth_user): ...
    def upload_recipe_file(self, body, headers, reference, filename, auth_user) -> None: ...
    def get_recipe_revisions(self, ref, auth_user): ...
    def get_package_revisions(self, pref, auth_user): ...
    def get_latest_revision(self, ref, auth_user): ...
    def get_latest_package_revision(self, pref, auth_user): ...
    def get_package_file_list(self, pref, auth_user): ...
    def get_package_file(self, pref, filename, auth_user): ...
    def upload_package_file(self, body, headers, pref, filename, auth_user) -> None: ...
    @staticmethod
    def _upload_to_path(body, headers, path) -> None: ...
