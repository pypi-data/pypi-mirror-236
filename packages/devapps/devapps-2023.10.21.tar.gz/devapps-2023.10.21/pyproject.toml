[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.poetry]
name = "devapps"
version = "2023.10.21"
description = "Apps - End to End."
authors = ["Gunther Klessinger <g_kle_ss_ing_er@gmx.de>"]
license = "BSD"
readme = "README.md"
repository = "https://github.com/AXGKl/devapps"
homepage = "https://axgkl.github.io/devapps"
keywords = []

packages = [
  { include = "ax", from = "src" },
  { include = "devapp", from = "src" },
  { include = "mdvl", from = "src" },
  { include = "structlogging", from = "src" },
  { include = "theming", from = "src" },
  { include = "tree_builder", from = "src" },
]


[project.urls]
packagehome = "https://pypi.com/"
discusshome = "https://join.skype.com/"

[tool.pyright]
# thats where my dev version for dt is - should not interfere w/o that:
extraPaths = ["../docutools/src", "./src/devapp/plugins/"]
reportSelfClsParameterName = false

[tool.ruff]
line-length = 90
extend-select = ["Q"]
select = ["E", "F", "B"] # Enable flake8-bugbear (`B`) rules.
ignore = ["E501"]        # Never enforce `E501` (line length violations).
unfixable = ["B"]        # Avoid trying to fix flake8-bugbear (`B`) violations.
# [per-file-ignores] # Ignore `E402` (import violations) in all `__init__.py` files, and in `path/to/file.py`.
# "__init__.py" = ["E402"]
# "path/to/file.py" = ["E402"]

[tool.ruff.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"

[tool.ruff.format]
# Prefer single quotes over double quotes
quote-style = "single"


[tool.poetry.dependencies]
# gevent after monkeypatch and structlog clash with 3.6:
python = "^3.7"
#python = "~3.8"
# absl-py = "^0.10.0"
# decorator = "^4.4.2"
# jsondiff = "^1.2.0"
# psutil = "^5.7.2"
# bpytop = "^1.0.50"
# Pygments = "^2.7.1"
# httpx = "^0.17.1"
# PyJWT = "^1.7.1"
# structlog = "^20.1.0"
# ujson = "^4.0.1"
# gevent = "^20.9.0"
# humanize = "^3.0.1"
# inflection = "^0.5.1"
# lz4 = "^3.1.0"
# msgpack = "^1.0.0"
# Rx = "^3.1.1"
# snoop = "^0.2.5"
# tabulate = "^0.8.7"
# requests = "^2.24.0"
# pycond = "^2*"
# PyYAML = "^5.3.1"

toml = "*"
#python    = "*"
absl-py = "*"
jsondiff = "*"
rich = "*"
structlog = "*"
inflection = "*"
requests = "*"
pycond = "*"


[tool.poetry.dev-dependencies]
#docutools = { path = "../docutools/", develop = true }
docutools = "*"
#autoflake = "^1.4"
#axblack = "^20201010"
## one of last versions with site-packages/black.py - overridden by axblack:
#black = "18.6b4"
#duty = "^0.5.0"
#flakehell = "^0.6.0"
#flake8-black = "^0.2.1"
#flake8-builtins = "^1.5.3"
#flake8-tidy-imports = "^4.1.0"
#flake8-variables-names = "^0.0.3"
#flake8-pytest-style = "^1.3.0"
#git-changelog = "^0.4.0"
# for duty (an invoke clone) pulling async pypi data
#ipython = "^7.2"
# TODO: accept v5 once https://github.com/wemake-services/wemake-python-styleguide/issues/1584 is resolved
#isort = {version = "<5", extras = ["pyproject"]}
#jinja2-cli = "^0.7.0"
##markdown-include = "^0.6.0"
##mkdocs = "^1.1.2"
##mkdocs-material = "^6.1.0"
###mkdocs-pymdownx-material-extras = "^1.1.1"
##mkdocstrings = "^0.13.1"
##mypy = "^0.782"
##plantuml_markdown = "^3.4.2"
##pytest = "^6.0.1"
##pytest-cov = "^2.10.1"
##pytest-randomly = "^3.4.1"
##pytest-sugar = "^0.9.4"
#pytest-xdist = "^2.1.0"

[tool.poetry.scripts]
myapp = "devapp.tools.plugin:main"
ops = "devapp.tools.plugin:main"
app = "devapp.tools.plugin:main"
dev = "devapp.tools.plugin:main"
fui = "interactive.cli:main"

[tool.blue]
line-length = 90
exclude = "tests/fixtures"


[tool.isort]
line_length = 90
not_skip = "__init__.py"
multi_line_output = 3
force_single_line = false
balanced_wrapping = true
default_section = "THIRDPARTY"
known_first_party = "devapp"
include_trailing_comma = true

[tool.flakehell]
format = "colored"
max_line_length = 132
show_source = false
exclude = ["tests/fixtures"]
# create baseline first for legacy code:https://wemake-python-stylegui.de/en/latest/pages/usage/integrations/flakehell.html


[tool.flakehell.plugins]
"*" = [
  "+*",
  "-RST*",   # we write docstrings in markdown, not rst
  "-A001",   # redundant with W0622 (builtin override), which is more precise about line number
  "-D105",   # missing docstring in magic method
  "-D212",   # multi-line docstring summary should start at the first line
  "-E203",   # whitespace before ‘:’ (incompatible with Black)
  "-F821",   # redundant with E0602 (undefined variable)
  "-Q000",   # black already deals with quoting
  "-S101",   # use of assert
  "-W503",   # line break before binary operator (incompatible with Black)
  "-C0103",  # two-lowercase-letters variable DO conform to snake_case naming style
  "-C0116",  # redunant with D102 (missing docstring)
  "-C0301",  # line too long
  "-R0902",  # too many instance attributes
  "-R0903",  # too few public methods
  "-R0904",  # too many public methods
  "-R0912",  # too many branches
  "-R0913",  # too many methods
  "-R0914",  # too many local variables
  "-R0915",  # too many statements
  "-W0212",  # redundant with WPS437 (access to protected attribute)
  "-W0611",  # redundant with F401 (unused import)
  "-W1203",  # lazy formatting for logging calls
  "-WPS305", # f-strings
  "-WPS110", # common variable names (too annoying)
  "-WPS125", # redundant with W0622 (builtin override), which is more precise about line number
  "-WPS201", # too many imports
  "-WPS202", # too many module members
  "-WPS210", # too many local variables
  "-WPS211", # too many arguments
  "-WPS213", # too many expressions
  "-WPS214", # too many methods
  "-WPS220", # too deep nesting
  "-WPS223", # too many elif branches
  "-WPS226", # string over-use: can't disable it per file?
  "-WPS230", # too many public instance attributes
  "-WPS306", # too cumbersome, asks to write class A(object)
  "-WPS317", # multi-line paramaters (incompatible with Black)
  "-WPS322", # multi-line strings (incompatible with attributes docstrings)
  "-WPS326", # implicit string concatenation
  "-WPS336", # explicit string concatenation
  "-WPS402", # nosa overuse
  "-WPS412", # __init__ modules with logic
  "-WPS428", # statement with no effect (not compatible with attribute docstrings)
  "-WPS433", # redundant with C0415 (not top-level import)
  "-WPS529", # implicit dict.get usage (generally false-positive)
]