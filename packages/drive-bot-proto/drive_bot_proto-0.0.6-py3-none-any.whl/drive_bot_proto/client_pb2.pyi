"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _Language:
    ValueType = typing.NewType("ValueType", builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _LanguageEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_Language.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    LANG_RU: _Language.ValueType  # 0
    LANG_EN: _Language.ValueType  # 1
    LANG_KA: _Language.ValueType  # 2
    LANG_UK: _Language.ValueType  # 3
    LANG_AZ: _Language.ValueType  # 4
    LANG_HY: _Language.ValueType  # 5
    LANG_TR: _Language.ValueType  # 6

class Language(_Language, metaclass=_LanguageEnumTypeWrapper): ...

LANG_RU: Language.ValueType  # 0
LANG_EN: Language.ValueType  # 1
LANG_KA: Language.ValueType  # 2
LANG_UK: Language.ValueType  # 3
LANG_AZ: Language.ValueType  # 4
LANG_HY: Language.ValueType  # 5
LANG_TR: Language.ValueType  # 6
global___Language = Language

@typing_extensions.final
class Ticket(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    EXTERNAL_ID_FIELD_NUMBER: builtins.int
    QUESTION_FIELD_NUMBER: builtins.int
    IMAGE_ID_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    CATEGORIES_FIELD_NUMBER: builtins.int
    TOPIC_ID_FIELD_NUMBER: builtins.int
    id: builtins.int
    external_id: builtins.int
    question: builtins.str
    image_id: builtins.int
    description: builtins.str
    @property
    def categories(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    topic_id: builtins.int
    def __init__(
        self,
        *,
        id: builtins.int = ...,
        external_id: builtins.int = ...,
        question: builtins.str = ...,
        image_id: builtins.int | None = ...,
        description: builtins.str | None = ...,
        categories: collections.abc.Iterable[builtins.int] | None = ...,
        topic_id: builtins.int = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_description", b"_description", "_image_id", b"_image_id", "description", b"description", "image_id", b"image_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_description", b"_description", "_image_id", b"_image_id", "categories", b"categories", "description", b"description", "external_id", b"external_id", "id", b"id", "image_id", b"image_id", "question", b"question", "topic_id", b"topic_id"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description", b"_description"]) -> typing_extensions.Literal["description"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_image_id", b"_image_id"]) -> typing_extensions.Literal["image_id"] | None: ...

global___Ticket = Ticket

@typing_extensions.final
class Answer(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    TICKET_ID_FIELD_NUMBER: builtins.int
    ANSWER_FIELD_NUMBER: builtins.int
    IS_VALID_FIELD_NUMBER: builtins.int
    id: builtins.int
    ticket_id: builtins.int
    answer: builtins.str
    is_valid: builtins.bool
    def __init__(
        self,
        *,
        id: builtins.int = ...,
        ticket_id: builtins.int = ...,
        answer: builtins.str = ...,
        is_valid: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["answer", b"answer", "id", b"id", "is_valid", b"is_valid", "ticket_id", b"ticket_id"]) -> None: ...

global___Answer = Answer

@typing_extensions.final
class Category(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    DESCRIPTION_FIELD_NUMBER: builtins.int
    id: builtins.int
    name: builtins.str
    description: builtins.str
    def __init__(
        self,
        *,
        id: builtins.int = ...,
        name: builtins.str = ...,
        description: builtins.str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_description", b"_description", "description", b"description"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_description", b"_description", "description", b"description", "id", b"id", "name", b"name"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_description", b"_description"]) -> typing_extensions.Literal["description"] | None: ...

global___Category = Category

@typing_extensions.final
class Topic(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    NAME_FIELD_NUMBER: builtins.int
    id: builtins.int
    name: builtins.str
    def __init__(
        self,
        *,
        id: builtins.int = ...,
        name: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id", "name", b"name"]) -> None: ...

global___Topic = Topic

@typing_extensions.final
class Image(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    IMAGE_BYTES_FIELD_NUMBER: builtins.int
    MIME_TYPE_FIELD_NUMBER: builtins.int
    image_bytes: builtins.bytes
    mime_type: builtins.str
    def __init__(
        self,
        *,
        image_bytes: builtins.bytes = ...,
        mime_type: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["image_bytes", b"image_bytes", "mime_type", b"mime_type"]) -> None: ...

global___Image = Image

@typing_extensions.final
class GetTicketsResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TICKETS_FIELD_NUMBER: builtins.int
    COUNT_FIELD_NUMBER: builtins.int
    @property
    def tickets(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Ticket]: ...
    count: builtins.int
    def __init__(
        self,
        *,
        tickets: collections.abc.Iterable[global___Ticket] | None = ...,
        count: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["count", b"count", "tickets", b"tickets"]) -> None: ...

global___GetTicketsResponse = GetTicketsResponse

@typing_extensions.final
class BaseRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LIMIT_FIELD_NUMBER: builtins.int
    OFFSET_FIELD_NUMBER: builtins.int
    LANG_FIELD_NUMBER: builtins.int
    limit: builtins.int
    offset: builtins.int
    lang: global___Language.ValueType
    def __init__(
        self,
        *,
        limit: builtins.int | None = ...,
        offset: builtins.int | None = ...,
        lang: global___Language.ValueType | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_lang", b"_lang", "_limit", b"_limit", "_offset", b"_offset", "lang", b"lang", "limit", b"limit", "offset", b"offset"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_lang", b"_lang", "_limit", b"_limit", "_offset", b"_offset", "lang", b"lang", "limit", b"limit", "offset", b"offset"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_lang", b"_lang"]) -> typing_extensions.Literal["lang"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_limit", b"_limit"]) -> typing_extensions.Literal["limit"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_offset", b"_offset"]) -> typing_extensions.Literal["offset"] | None: ...

global___BaseRequest = BaseRequest

@typing_extensions.final
class GetTicketsRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LIMIT_FIELD_NUMBER: builtins.int
    OFFSET_FIELD_NUMBER: builtins.int
    LANG_FIELD_NUMBER: builtins.int
    EXTERNAL_ID_FIELD_NUMBER: builtins.int
    CATEGORIES_IDS_FIELD_NUMBER: builtins.int
    TOPIC_IDS_FIELD_NUMBER: builtins.int
    limit: builtins.int
    offset: builtins.int
    lang: global___Language.ValueType
    external_id: builtins.int
    @property
    def categories_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    @property
    def topic_ids(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.int]: ...
    def __init__(
        self,
        *,
        limit: builtins.int | None = ...,
        offset: builtins.int | None = ...,
        lang: global___Language.ValueType | None = ...,
        external_id: builtins.int | None = ...,
        categories_ids: collections.abc.Iterable[builtins.int] | None = ...,
        topic_ids: collections.abc.Iterable[builtins.int] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_external_id", b"_external_id", "_lang", b"_lang", "_limit", b"_limit", "_offset", b"_offset", "external_id", b"external_id", "lang", b"lang", "limit", b"limit", "offset", b"offset"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_external_id", b"_external_id", "_lang", b"_lang", "_limit", b"_limit", "_offset", b"_offset", "categories_ids", b"categories_ids", "external_id", b"external_id", "lang", b"lang", "limit", b"limit", "offset", b"offset", "topic_ids", b"topic_ids"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_external_id", b"_external_id"]) -> typing_extensions.Literal["external_id"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_lang", b"_lang"]) -> typing_extensions.Literal["lang"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_limit", b"_limit"]) -> typing_extensions.Literal["limit"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_offset", b"_offset"]) -> typing_extensions.Literal["offset"] | None: ...

global___GetTicketsRequest = GetTicketsRequest

@typing_extensions.final
class GetAnswersRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    LIMIT_FIELD_NUMBER: builtins.int
    OFFSET_FIELD_NUMBER: builtins.int
    LANG_FIELD_NUMBER: builtins.int
    TICKET_ID_FIELD_NUMBER: builtins.int
    IS_VALID_FIELD_NUMBER: builtins.int
    limit: builtins.int
    offset: builtins.int
    lang: global___Language.ValueType
    ticket_id: builtins.int
    is_valid: builtins.bool
    def __init__(
        self,
        *,
        limit: builtins.int | None = ...,
        offset: builtins.int | None = ...,
        lang: global___Language.ValueType | None = ...,
        ticket_id: builtins.int | None = ...,
        is_valid: builtins.bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["_is_valid", b"_is_valid", "_lang", b"_lang", "_limit", b"_limit", "_offset", b"_offset", "_ticket_id", b"_ticket_id", "is_valid", b"is_valid", "lang", b"lang", "limit", b"limit", "offset", b"offset", "ticket_id", b"ticket_id"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["_is_valid", b"_is_valid", "_lang", b"_lang", "_limit", b"_limit", "_offset", b"_offset", "_ticket_id", b"_ticket_id", "is_valid", b"is_valid", "lang", b"lang", "limit", b"limit", "offset", b"offset", "ticket_id", b"ticket_id"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_is_valid", b"_is_valid"]) -> typing_extensions.Literal["is_valid"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_lang", b"_lang"]) -> typing_extensions.Literal["lang"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_limit", b"_limit"]) -> typing_extensions.Literal["limit"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_offset", b"_offset"]) -> typing_extensions.Literal["offset"] | None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal["_ticket_id", b"_ticket_id"]) -> typing_extensions.Literal["ticket_id"] | None: ...

global___GetAnswersRequest = GetAnswersRequest

@typing_extensions.final
class GetAnswersResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ANSWERS_FIELD_NUMBER: builtins.int
    COUNT_FIELD_NUMBER: builtins.int
    @property
    def answers(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Answer]: ...
    count: builtins.int
    def __init__(
        self,
        *,
        answers: collections.abc.Iterable[global___Answer] | None = ...,
        count: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["answers", b"answers", "count", b"count"]) -> None: ...

global___GetAnswersResponse = GetAnswersResponse

@typing_extensions.final
class GetCategoriesResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CATEGORIES_FIELD_NUMBER: builtins.int
    COUNT_FIELD_NUMBER: builtins.int
    @property
    def categories(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Category]: ...
    count: builtins.int
    def __init__(
        self,
        *,
        categories: collections.abc.Iterable[global___Category] | None = ...,
        count: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["categories", b"categories", "count", b"count"]) -> None: ...

global___GetCategoriesResponse = GetCategoriesResponse

@typing_extensions.final
class GetTopicResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TOPICS_FIELD_NUMBER: builtins.int
    COUNT_FIELD_NUMBER: builtins.int
    @property
    def topics(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___Topic]: ...
    count: builtins.int
    def __init__(
        self,
        *,
        topics: collections.abc.Iterable[global___Topic] | None = ...,
        count: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["count", b"count", "topics", b"topics"]) -> None: ...

global___GetTopicResponse = GetTopicResponse

@typing_extensions.final
class GetEntityByIdRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    id: builtins.int
    def __init__(
        self,
        *,
        id: builtins.int = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal["id", b"id"]) -> None: ...

global___GetEntityByIdRequest = GetEntityByIdRequest

@typing_extensions.final
class GetImageByIdResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    IMAGE_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    @property
    def image(self) -> global___Image: ...
    error: builtins.str
    def __init__(
        self,
        *,
        image: global___Image | None = ...,
        error: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["error", b"error", "image", b"image", "message", b"message"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["error", b"error", "image", b"image", "message", b"message"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["message", b"message"]) -> typing_extensions.Literal["image", "error"] | None: ...

global___GetImageByIdResponse = GetImageByIdResponse

@typing_extensions.final
class GetTicketByIdResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TICKET_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    @property
    def ticket(self) -> global___Ticket: ...
    error: builtins.str
    def __init__(
        self,
        *,
        ticket: global___Ticket | None = ...,
        error: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["error", b"error", "message", b"message", "ticket", b"ticket"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["error", b"error", "message", b"message", "ticket", b"ticket"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["message", b"message"]) -> typing_extensions.Literal["ticket", "error"] | None: ...

global___GetTicketByIdResponse = GetTicketByIdResponse

@typing_extensions.final
class GetAnswerByIdResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ANSWER_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    @property
    def answer(self) -> global___Answer: ...
    error: builtins.str
    def __init__(
        self,
        *,
        answer: global___Answer | None = ...,
        error: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["answer", b"answer", "error", b"error", "message", b"message"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["answer", b"answer", "error", b"error", "message", b"message"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["message", b"message"]) -> typing_extensions.Literal["answer", "error"] | None: ...

global___GetAnswerByIdResponse = GetAnswerByIdResponse

@typing_extensions.final
class GetCategoryByIdResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    CATEGORY_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    @property
    def category(self) -> global___Category: ...
    error: builtins.str
    def __init__(
        self,
        *,
        category: global___Category | None = ...,
        error: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["category", b"category", "error", b"error", "message", b"message"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["category", b"category", "error", b"error", "message", b"message"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["message", b"message"]) -> typing_extensions.Literal["category", "error"] | None: ...

global___GetCategoryByIdResponse = GetCategoryByIdResponse

@typing_extensions.final
class GetTopicByIdResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    TOPIC_FIELD_NUMBER: builtins.int
    ERROR_FIELD_NUMBER: builtins.int
    @property
    def topic(self) -> global___Topic: ...
    error: builtins.str
    def __init__(
        self,
        *,
        topic: global___Topic | None = ...,
        error: builtins.str = ...,
    ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal["error", b"error", "message", b"message", "topic", b"topic"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal["error", b"error", "message", b"message", "topic", b"topic"]) -> None: ...
    def WhichOneof(self, oneof_group: typing_extensions.Literal["message", b"message"]) -> typing_extensions.Literal["topic", "error"] | None: ...

global___GetTopicByIdResponse = GetTopicByIdResponse
