# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import client_pb2 as client__pb2


class DriveBotServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetTickets = channel.unary_unary(
                '/drive_bot.v1.DriveBotService/GetTickets',
                request_serializer=client__pb2.GetTicketsRequest.SerializeToString,
                response_deserializer=client__pb2.GetTicketsResponse.FromString,
                )
        self.GetAnswers = channel.unary_unary(
                '/drive_bot.v1.DriveBotService/GetAnswers',
                request_serializer=client__pb2.GetAnswersRequest.SerializeToString,
                response_deserializer=client__pb2.GetAnswersResponse.FromString,
                )
        self.GetCategories = channel.unary_unary(
                '/drive_bot.v1.DriveBotService/GetCategories',
                request_serializer=client__pb2.BaseRequest.SerializeToString,
                response_deserializer=client__pb2.GetCategoriesResponse.FromString,
                )
        self.GetTopics = channel.unary_unary(
                '/drive_bot.v1.DriveBotService/GetTopics',
                request_serializer=client__pb2.BaseRequest.SerializeToString,
                response_deserializer=client__pb2.GetTopicResponse.FromString,
                )
        self.GetImageById = channel.unary_unary(
                '/drive_bot.v1.DriveBotService/GetImageById',
                request_serializer=client__pb2.GetEntityByIdRequest.SerializeToString,
                response_deserializer=client__pb2.GetImageByIdResponse.FromString,
                )
        self.GetTicketById = channel.unary_unary(
                '/drive_bot.v1.DriveBotService/GetTicketById',
                request_serializer=client__pb2.GetEntityByIdRequest.SerializeToString,
                response_deserializer=client__pb2.GetTicketByIdResponse.FromString,
                )
        self.GetAnswerById = channel.unary_unary(
                '/drive_bot.v1.DriveBotService/GetAnswerById',
                request_serializer=client__pb2.GetEntityByIdRequest.SerializeToString,
                response_deserializer=client__pb2.GetAnswerByIdResponse.FromString,
                )
        self.GetCategoryById = channel.unary_unary(
                '/drive_bot.v1.DriveBotService/GetCategoryById',
                request_serializer=client__pb2.GetEntityByIdRequest.SerializeToString,
                response_deserializer=client__pb2.GetCategoryByIdResponse.FromString,
                )
        self.GetTopicById = channel.unary_unary(
                '/drive_bot.v1.DriveBotService/GetTopicById',
                request_serializer=client__pb2.GetEntityByIdRequest.SerializeToString,
                response_deserializer=client__pb2.GetTopicByIdResponse.FromString,
                )


class DriveBotServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetTickets(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAnswers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCategories(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTopics(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetImageById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTicketById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAnswerById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCategoryById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTopicById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DriveBotServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetTickets': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTickets,
                    request_deserializer=client__pb2.GetTicketsRequest.FromString,
                    response_serializer=client__pb2.GetTicketsResponse.SerializeToString,
            ),
            'GetAnswers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAnswers,
                    request_deserializer=client__pb2.GetAnswersRequest.FromString,
                    response_serializer=client__pb2.GetAnswersResponse.SerializeToString,
            ),
            'GetCategories': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCategories,
                    request_deserializer=client__pb2.BaseRequest.FromString,
                    response_serializer=client__pb2.GetCategoriesResponse.SerializeToString,
            ),
            'GetTopics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTopics,
                    request_deserializer=client__pb2.BaseRequest.FromString,
                    response_serializer=client__pb2.GetTopicResponse.SerializeToString,
            ),
            'GetImageById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetImageById,
                    request_deserializer=client__pb2.GetEntityByIdRequest.FromString,
                    response_serializer=client__pb2.GetImageByIdResponse.SerializeToString,
            ),
            'GetTicketById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTicketById,
                    request_deserializer=client__pb2.GetEntityByIdRequest.FromString,
                    response_serializer=client__pb2.GetTicketByIdResponse.SerializeToString,
            ),
            'GetAnswerById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAnswerById,
                    request_deserializer=client__pb2.GetEntityByIdRequest.FromString,
                    response_serializer=client__pb2.GetAnswerByIdResponse.SerializeToString,
            ),
            'GetCategoryById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCategoryById,
                    request_deserializer=client__pb2.GetEntityByIdRequest.FromString,
                    response_serializer=client__pb2.GetCategoryByIdResponse.SerializeToString,
            ),
            'GetTopicById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTopicById,
                    request_deserializer=client__pb2.GetEntityByIdRequest.FromString,
                    response_serializer=client__pb2.GetTopicByIdResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'drive_bot.v1.DriveBotService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DriveBotService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetTickets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/drive_bot.v1.DriveBotService/GetTickets',
            client__pb2.GetTicketsRequest.SerializeToString,
            client__pb2.GetTicketsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAnswers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/drive_bot.v1.DriveBotService/GetAnswers',
            client__pb2.GetAnswersRequest.SerializeToString,
            client__pb2.GetAnswersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCategories(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/drive_bot.v1.DriveBotService/GetCategories',
            client__pb2.BaseRequest.SerializeToString,
            client__pb2.GetCategoriesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTopics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/drive_bot.v1.DriveBotService/GetTopics',
            client__pb2.BaseRequest.SerializeToString,
            client__pb2.GetTopicResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetImageById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/drive_bot.v1.DriveBotService/GetImageById',
            client__pb2.GetEntityByIdRequest.SerializeToString,
            client__pb2.GetImageByIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTicketById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/drive_bot.v1.DriveBotService/GetTicketById',
            client__pb2.GetEntityByIdRequest.SerializeToString,
            client__pb2.GetTicketByIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAnswerById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/drive_bot.v1.DriveBotService/GetAnswerById',
            client__pb2.GetEntityByIdRequest.SerializeToString,
            client__pb2.GetAnswerByIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetCategoryById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/drive_bot.v1.DriveBotService/GetCategoryById',
            client__pb2.GetEntityByIdRequest.SerializeToString,
            client__pb2.GetCategoryByIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTopicById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/drive_bot.v1.DriveBotService/GetTopicById',
            client__pb2.GetEntityByIdRequest.SerializeToString,
            client__pb2.GetTopicByIdResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
