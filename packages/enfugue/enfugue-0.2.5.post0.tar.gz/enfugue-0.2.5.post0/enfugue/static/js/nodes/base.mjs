import{isEmpty,camelCase,merge,sleep}from"../base/helpers.mjs";import{View}from"../view/base.mjs";import{FormView}from"../forms/base.mjs";import{InputView,ListInputView}from"../forms/input.mjs";import{ElementBuilder}from"../base/builder.mjs";import{Point,Drawable}from"../graphics/geometry.mjs";const E=new ElementBuilder({nodeContainer:"enfugue-node-container",nodeContents:"enfugue-node-contents",nodeHeader:"enfugue-node-header",nodeName:"enfugue-node-name",nodeButton:"enfugue-node-button",nodeOptionsContents:"enfugue-node-options-contents",nodeOptionsInputsOutputs:"enfugue-node-options-inputs-outputs",nodeOptions:"enfugue-node-options",nodeInputs:"enfugue-node-inputs",inputModes:"enfugue-node-input-modes",nodeOutputs:"enfugue-node-outputs",nodeInput:"enfugue-node-input",nodeInputGroup:"enfugue-node-input-group",nodeOutput:"enfugue-node-output",nodeOutputGroup:"enfugue-node-output-group"});class NodeCursorMode{static NONE=0;static MOVE=1;static RESIZE_N=2;static RESIZE_NE=3;static RESIZE_E=4;static RESIZE_SE=5;static RESIZE_S=6;static RESIZE_SW=7;static RESIZE_W=8;static RESIZE_NW=9}class NodeView extends View{static tagName="enfugue-node";static edgeHandlerTolerance=10;static canClose=!0;static canResizeX=!0;static canResizeY=!0;static canMove=!0;static canRename=!0;static canCopy=!0;static canFlipHeader=!1;static minWidth=150;static minHeight=100;static headerHeight=30;static snapSize=10;static padding=10;static defaultCursor="default";static fixedHeight=!1;static hideHeader=!1;static nodeButtons={};static copyText="Copy";static closeText="Close";static headerBottomText="Flip Header to Bottom";static headerTopText="Flip Header to Top";static headerBottomIcon="fa-solid fa-arrow-turn-down";static headerTopIcon="fa-solid fa-arrow-turn-up";static canMerge=!1;constructor(t,e,s,o,i,n,r){super(t.config),this.editor=t,this.name=isEmpty(e)?this.constructor.name:e,this.content=s,this.left=isEmpty(o)?0:o,this.top=isEmpty(i)?0:i,this.left-=this.constructor.padding,this.top-=this.constructor.padding,this.width=isEmpty(n)?this.constructor.minWidth:n,this.width+=2*this.constructor.padding,this.height=isEmpty(r)?this.constructor.minHeight:r,this.height+=2*this.constructor.padding,this.setDimension(this.left,this.top,this.width,this.height,!0,!1),this.removed=!1,this.fixed=!1,this.canMerge=this.constructor.canMerge,this.closeCallbacks=[],this.resizeCallbacks=[]}async getContent(){let t=this.content;return t instanceof View?await t.getNode():t}async setContent(t){return this.content=t,void 0!==this.node&&this.node.find(E.getCustomTag("nodeContents")).content(await this.getContent()),this}onClose(t){this.closeCallbacks.push(t)}async closed(){for(let t of this.closeCallbacks)await t()}onResize(t){this.resizeCallbacks.push(t)}async resized(){this.content instanceof View&&this.content.resize();for(let t of this.resizeCallbacks)await t()}get drawable(){return new Drawable([new Point(this.visibleLeft,this.visibleTop),new Point(this.visibleLeft+this.visibleWidth,this.visibleTop),new Point(this.visibleLeft+this.visibleWidth,this.visibleTop+this.visibleHeight),new Point(this.visibleLeft,this.visibleTop+this.visibleHeight)])}get x(){return this.left+this.constructor.padding}get y(){return this.top+this.constructor.padding}get w(){return this.width-2*this.constructor.padding}get h(){return this.height-2*this.constructor.padding}getState(){return{name:this.getName(),classname:this.constructor.name,x:this.x,y:this.y,w:this.w,h:this.h}}async setState(t){return this.name=t.name,this.setDimension(t.x-this.constructor.padding,t.y-this.constructor.padding,t.w+2*this.constructor.padding,t.h+2*this.constructor.padding,!0,!1),void 0!==this.node&&this.node.find(E.getCustomTag("nodeName")).content(this.name),this}setName(t){this.name=t,void 0!==this.node&&this.node.find(E.getCustomTag("nodeName")).content(t)}getName(){return void 0===this.node?this.name:this.node.find(E.getCustomTag("nodeName")).getText()}remove(){this.removed=!0,this.editor.removeNode(this),this.closed()}focus(){this.editor.focusNode(this)}static getNearestSnap(t,e,s){return isEmpty(e)&&(e=-this.padding),isEmpty(s)&&(s=1/0),Math.min(Math.max(Math.round(t/this.snapSize)*this.snapSize,e),s)}getLeftSnap(t){return this.constructor.getNearestSnap(t,-this.constructor.padding,this.editor.width+this.constructor.padding-this.width)}getTopSnap(t){return this.constructor.getNearestSnap(t,-this.constructor.padding,this.editor.height+this.constructor.padding-this.height)}getWidthSnap(t,e){return this.constructor.getNearestSnap(t,this.constructor.minWidth+2*this.constructor.padding,this.editor.width+this.constructor.padding-e)}getHeightSnap(t,e){return this.constructor.getNearestSnap(t,this.constructor.minHeight+2*this.constructor.padding,this.editor.height+this.constructor.padding-e)}resetDimension(){return this.setDimension(this.left,this.top,this.width,this.height,!0)}setDimension(t,e,s,o,i,n=!0){if(t=this.constructor.getNearestSnap(t),e=this.constructor.getNearestSnap(e),s=this.getWidthSnap(s,t),e+(o=this.getHeightSnap(o,e))>this.editor.height+this.constructor.padding){(e+=this.editor.height-e-o-this.constructor.padding)<0&&(o+=e,e=0)}if(t+s>this.editor.width+this.constructor.padding){(t+=this.editor.width-t-s-this.constructor.padding)<0&&(s+=t,t=0)}return void 0!==this.node&&this.node.css({left:`${t}px`,top:`${e}px`,width:`${s}px`,height:`${o}px`}),i&&(this.left=t,this.top=e,this.width=s,this.height=o),this.visibleLeft=t,this.visibleTop=e,this.visibleWidth=s,this.visibleHeight=o,n&&(i?this.editor.nodePlaced(this):this.editor.nodeMoved(this)),[t,e,s,o]}flipHeader(){!0===this.flipped?(this.flipped=!1,this.removeClass("flipped"),this.buttons.flip.tooltip=this.constructor.headerBottomText,this.buttons.flip.icon=this.constructor.headerBottomIcon):(this.flipped=!0,this.addClass("flipped"),this.buttons.flip.tooltip=this.constructor.headerTopText,this.buttons.flip.icon=this.constructor.headerTopIcon),this.rebuildHeaderButtons()}buildHeaderButtons(t,e){for(let s in e){let o=e[s];if(!0===o.disabled)continue;let i=E.nodeButton().class(`node-button-${camelCase(s)}`).content(E.i().class(o.icon)).on("click",(t=>{o.callback.call(o.context||this,t)}));o.tooltip&&i.data("tooltip",o.tooltip),t.append(i)}}getButtons(){return isEmpty(this.buttons)?this.constructor.buttons:this.buttons}rebuildHeaderButtons(){if(void 0!==this.node){let t=this.node.find(E.getCustomTag("nodeHeader"));for(let e of t.children())if(e.tagName==E.getCustomTag("nodeButton"))try{t.remove(e)}catch(t){}this.buildHeaderButtons(t,this.buttons)}}async build(){let t,e,s=await super.build(),o=E.nodeContainer(),i=NodeCursorMode.NONE,n=NodeCursorMode.NONE,r=E.nodeName().content(this.name),d=E.nodeHeader().content(r).css({height:`${this.constructor.headerHeight}px`,"line-height":`${this.constructor.headerHeight}px`});this.constructor.canRename&&(r.editable(),d.on("dblclick",(t=>{t.preventDefault(),t.stopPropagation(),r.focus()}))),this.constructor.hideHeader&&(s.addClass("hide-header"),d.css("height",0));let c={};for(let t in this.constructor.nodeButtons)c[t]={...this.constructor.nodeButtons[t]},c[t].context=this;this.constructor.canCopy&&(c.copy={icon:"fa-solid fa-copy",tooltip:this.constructor.copyText,shortcut:"p",context:this,callback:()=>{this.editor.copyNode(this)}}),this.constructor.canFlipHeader&&(c.flip={shortcut:"b",icon:this.constructor.headerBottomIcon,tooltip:this.constructor.headerBottomText,context:this,callback:()=>{this.flipHeader()}}),this.constructor.canClose&&(c.close={shortcut:"v",icon:"fa-solid fa-window-close",tooltip:this.constructor.closeText,context:this,callback:()=>{this.closed(),this.editor.removeNode(this)}}),this.buildHeaderButtons(d,c),this.buttons=c;let h=(s,o)=>{s.preventDefault(),s.stopPropagation();let n=!1,r=this.left,d=this.top,c=this.width,h=this.height,[a,u]=[0,0];switch(isEmpty(t)||isEmpty(e)||([a,u]=[s.clientX-t,s.clientY-e],a*=1/this.editor.zoom,u*=1/this.editor.zoom),i){case NodeCursorMode.MOVE:r+=a,d+=u,n=!0;break;case NodeCursorMode.RESIZE_N:d+=u,h-=u,n=!0;break;case NodeCursorMode.RESIZE_NE:d+=u,h-=u,c+=a,n=!0;break;case NodeCursorMode.RESIZE_E:c+=a,n=!0;break;case NodeCursorMode.RESIZE_SE:c+=a,h+=u,n=!0;break;case NodeCursorMode.RESIZE_S:h+=u,n=!0;break;case NodeCursorMode.RESIZE_SW:h+=u,r+=a,c-=a,n=!0;break;case NodeCursorMode.RESIZE_W:r+=a,c-=a,n=!0;break;case NodeCursorMode.RESIZE_NW:d+=u,h-=u,r+=a,c-=a,n=!0}n&&(this.setDimension(r,d,c,h,o),this.editor.decorations.recalculate(),this.editor.decorations.draw(),this.resized())};o.append(d),s.append(o).css({left:`${this.left}px`,top:`${this.top}px`,width:`${this.width}px`,height:`${this.height}px`,padding:`${this.constructor.padding}px`}).on("mouseenter",(t=>{this.fixed||this.constructor.hideHeader&&d.css("height",`${this.constructor.headerHeight}px`)})).on("mouseleave",(t=>{this.fixed||this.constructor.hideHeader&&d.css("height","0")})).on("mousemove",(t=>{if(!this.fixed&&i==NodeCursorMode.NONE){let e=t.target;for(;e!==s.element&&(e=e.parentElement,!isEmpty(e)););if(e!==s.element)return;let o=s.element.getBoundingClientRect(),i=this.constructor.edgeHandlerTolerance*this.editor.zoom,r=this.constructor.headerHeight*this.editor.zoom,d=t.clientY>=o.y&&t.clientY<o.y+i,c=t.clientX>=o.x&&t.clientX<o.x+i,h=t.clientX>=o.x+o.width-i,a=t.clientY>=o.y+o.height-i,u=!0===this.flipped?!a&&t.clientY>=o.y+o.height-r-i:!d&&t.clientY>=o.y&&t.clientY<o.y+i+r;switch(n=d&&c&&this.constructor.canResizeX&&this.constructor.canResizeY?NodeCursorMode.RESIZE_NW:d&&h&&this.constructor.canResizeX&&this.constructor.canResizeY?NodeCursorMode.RESIZE_NE:d&&this.constructor.canResizeY?NodeCursorMode.RESIZE_N:a&&c&&this.constructor.canResizeX&&this.constructor.canResizeY?NodeCursorMode.RESIZE_SW:a&&h&&this.constructor.canResizeX&&this.constructor.canResizeY?NodeCursorMode.RESIZE_SE:a&&this.constructor.canResizeY?NodeCursorMode.RESIZE_S:c&&this.constructor.canResizeX?NodeCursorMode.RESIZE_W:h&&this.constructor.canResizeX?NodeCursorMode.RESIZE_E:u&&this.constructor.canMove&&!c&&!h?NodeCursorMode.MOVE:NodeCursorMode.NONE,n){case NodeCursorMode.MOVE:s.css("cursor","grab");break;case NodeCursorMode.RESIZE_NE:case NodeCursorMode.RESIZE_SW:s.css("cursor","nesw-resize");break;case NodeCursorMode.RESIZE_N:case NodeCursorMode.RESIZE_S:s.css("cursor","ns-resize");break;case NodeCursorMode.RESIZE_E:case NodeCursorMode.RESIZE_W:s.css("cursor","ew-resize");break;case NodeCursorMode.RESIZE_NW:case NodeCursorMode.RESIZE_SE:s.css("cursor","nwse-resize");break;default:s.css("cursor",this.constructor.defaultCursor)}}})).on("mousedown",(o=>{if(!this.fixed&&1===o.which&&n!==NodeCursorMode.NONE&&i===NodeCursorMode.NONE)switch(o.preventDefault(),o.stopPropagation(),this.editor.focusNode(this),n){case NodeCursorMode.MOVE:case NodeCursorMode.RESIZE_NE:case NodeCursorMode.RESIZE_SW:case NodeCursorMode.RESIZE_N:case NodeCursorMode.RESIZE_S:case NodeCursorMode.RESIZE_E:case NodeCursorMode.RESIZE_W:case NodeCursorMode.RESIZE_NW:case NodeCursorMode.RESIZE_SE:switch([t,e]=[o.clientX,o.clientY],i=n,i){case NodeCursorMode.MOVE:this.editor.node.css("cursor","grab");break;case NodeCursorMode.RESIZE_NE:case NodeCursorMode.RESIZE_SW:this.editor.node.css("cursor","nesw-resize");break;case NodeCursorMode.RESIZE_N:case NodeCursorMode.RESIZE_S:this.editor.node.css("cursor","ns-resize");break;case NodeCursorMode.RESIZE_E:case NodeCursorMode.RESIZE_W:this.editor.node.css("cursor","ew-resize");break;case NodeCursorMode.RESIZE_NW:case NodeCursorMode.RESIZE_SE:this.editor.node.css("cursor","nwse-resize");break;default:this.editor.node.css("cursor",this.constructor.defaultCursor)}let r=o=>{h(o,!0),i=NodeCursorMode.NONE,[t,e]=[null,null],this.editor.node.off("mouseup,mouseleave,mousemove").css("cursor",this.constructor.defaultCursor),s.off("mouseup"),this.editor.constructor.disableCursor&&this.editor.node.css("pointer-events","none")};this.editor.node.on("mousemove",(t=>{t.preventDefault(),t.stopPropagation(),h(t,!1)})).on("mouseup,mouseleave",(t=>{t.preventDefault(),t.stopPropagation(),r(t)})),s.on("mouseup",(t=>{r(t)})),this.editor.constructor.disableCursor&&this.editor.node.css("pointer-events","all")}}));let a=await this.getContent(),u=E.nodeContents();return isEmpty(a)||(a instanceof View&&(a=await a.getNode()),u.content(a)),u.on("mousedown",(t=>{this.fixed||this.editor.focusNode(this)})),this.constructor.fixedHeight||(this.constructor.hideHeader||this.constructor.fixedHeader?u.css("height","100%"):u.css("height",`calc(100% - ${this.constructor.headerHeight}px)`)),o.append(u),s}canMergeWith(t){return(this instanceof t.constructor||t instanceof CompoundNodeView&&t.canMergeWith(this))&&t.canMerge&&this.canMerge&&!t.removed&&!this.removed}mergeWith(t){if(!this.canMergeWith(t))throw this.canMerge||console.warn("This node is tagged as unmergeable.",this),t.canMerge||console.warn("The target node is tagged as unmergeable.",t),"Nodes cannot be merged.";if(t instanceof CompoundNodeView)return this.fixed=!0,this.canMerge=!1,t.mergeWith(this);return this.fixed=!0,t.fixed=!0,this.canMerge=!1,t.canMerge=!1,new(this.constructor.compoundNodeClass||CompoundNodeView)(this.editor,"Merged Node",new CompoundNodeContentView(this.config,[this,t]),this.left,this.top,this.width,this.height)}}class OptionsNodeView extends NodeView{static nodeOptions=null;static optionsHeight=0;constructor(t,e,s,o,i,n,r){super(t,e,s,o,i,n,r),this.options=this.constructor.nodeOptions}async setState(t){if(await super.setState(t),"function"==typeof this.options&&(this.options=new this.options(this.config)),!isEmpty(t.options))if(isEmpty(this.options))console.warn("Options passed, but no options present on node.");else if(this.options instanceof InputView){let e="object"!=typeof t.options||isEmpty(t.options.default)?t.options:t.options.default;await this.options.setValue(e)}else this.options instanceof FormView?(await this.options.setValues(t.options),this.options.submit()):this.options=t.options;return this}async getContent(){let t=E.nodeOptionsContents(),e=E.nodeOptions().css("height",`${this.constructor.optionsHeight}px`);return isEmpty(this.options)||("function"==typeof this.options?(this.options=new this.options(this.config),e.append(await this.options.getNode())):this.options instanceof View?e.append(await this.options.getNode()):e.append(this.options)),t.append(e,await super.getContent()),t}getState(){let t=super.getState();return t.options=isEmpty(this.options)?null:this.options instanceof InputView?this.options.getValue():this.options instanceof FormView?this.options.values:this.options,t}}class CompoundNodeContentView extends View{static tagName="enfugue-node-compound-contents";constructor(t,e){super(t),this.children=e,this.activeIndex=0,this.chooser=new ListInputView(t,"activeNode",{options:this.options,value:"node-0"}),this.chooser.onChange((()=>{this.setActiveIndex(parseInt(this.chooser.value.split("-")[1]),!1)}))}async setActiveIndex(t,e=!0){this.activeIndex=t,e&&this.chooser.setValue(`node-${t}`,!1),void 0!==this.node&&this.node.content(await this.chooser.getNode(),await this.selectedNode.getNode())}get selectedNode(){return this.children[this.activeIndex]}get options(){return this.children.reduce(((t,e,s)=>(t[`node-${s}`]=`${s+1}. ${e.name}`,t)),{})}addNode(t){this.children.push(t),this.chooser.setOptions(this.options)}removeNode(t){let e=this.children.indexOf(t);-1!==e&&(this.children=this.children.slice(0,e).concat(this.children.slice(e+1))),this.chooser.setOptions(this.options),this.activeIndex>=this.children.length?this.setActiveIndex(this.children.length-1):this.activeIndex==e&&this.setActiveIndex(this.activeIndex)}setDimension(t,e,s){for(let o of this.children)o.setDimension(-o.constructor.padding,-o.constructor.padding,t,e,s,!1),o.resized()}async build(){let t=await super.build();return t.content(await this.chooser.getNode(),await this.selectedNode.getNode()),t}}class CompoundNodeView extends NodeView{static canCopy=!1;static canMerge=!0;constructor(t,e,s,o,i,n,r){if(super(t,e,s,o,i,n,r),!isEmpty(s)){for(let t of s.children)t.rebuildHeaderButtons=()=>this.rebuildHeaderButtons();this.content.chooser.onChange((()=>{this.rebuildHeaderButtons()}))}}canMergeWith(t){return this.content.children[0]instanceof t.constructor}mergeWith(t){return t.rebuildHeaderButtons=()=>this.rebuildHeaderButtons(),this.content.addNode(t),t.setDimension(-t.constructor.padding,-t.constructor.padding,this.width,this.height,!0,!1),this}async rebuildMergedNode(t,e){void 0===e&&(e=this.constructor.snapSize);let s=t.getState();s.x=this.left+e,s.y=this.top+e,s.w=this.width,s.h=this.height;let o=new t.constructor(this.editor);return await o.setState(s),this.editor.addNode(o),o}async unmergeNode(){let t=this.content.selectedNode;this.content.removeNode(t),this.rebuildMergedNode(t),this.content.children.length<=1&&(t=this.content.children[0],this.rebuildMergedNode(t,0),this.editor.removeNode(this))}setDimension(t,e,s,o,i,n){super.setDimension(t,e,s,o,i,!1),isEmpty(this.content)||this.content.setDimension(this.visibleWidth,this.visibleHeight,i,n)}get selectedButtons(){let t=isEmpty(this.content)||isEmpty(this.content.selectedNode)?{}:this.content.selectedNode.getButtons();return isEmpty(t)?t={}:(delete t.copy,delete t.flip,delete t.close),t}getButtons(){return merge(this.selectedButtons,{unmerge:{icon:"fa-solid fa-up-right-from-square",tooltip:"Unmerge Image",shorcut:"g",context:this,disabled:!1,callback:()=>{this.unmergeNode()}}},super.getButtons())}buildHeaderButtons(t,e){return super.buildHeaderButtons(t,merge(this.selectedButtons,{unmerge:{icon:"fa-solid fa-up-right-from-square",tooltip:"Unmerge Image",shorcut:"g",context:this,disabled:!1,callback:()=>{this.unmergeNode()}}},e))}getState(){let t=super.getState();return t.children=this.content.children.map((t=>{let e=t.getState.apply(t,Array.from(arguments));return delete e.x,delete e.y,delete e.w,delete e.h,e})),t.active=this.content.activeIndex,t}async setState(t){await super.setState(t);let e=[];if(!isEmpty(t.children))for(let s of t.children){let o=new(this.editor.getNodeClass(s.classname))(this.editor);s.x=0,s.y=0,s.w=t.w,s.h=t.h,await o.setState(s),o.rebuildHeaderButtons=()=>this.rebuildHeaderButtons(),e.push(o)}await this.setContent(new CompoundNodeContentView(this.editor.config,e)),this.content.chooser.onChange((()=>{setTimeout((()=>this.rebuildHeaderButtons()),150)})),void 0!==t.active&&this.content.setActiveIndex(t.active),setTimeout((()=>this.rebuildHeaderButtons()),250)}}export{NodeView,CompoundNodeView,OptionsNodeView};
