# This file was auto-generated by Fern from our API Definition.

from ...core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from ...environment import MergeEnvironment
from .resources.account_details.client import AccountDetailsClient, AsyncAccountDetailsClient
from .resources.account_token.client import AccountTokenClient, AsyncAccountTokenClient
from .resources.accounts.client import AccountsClient, AsyncAccountsClient
from .resources.addresses.client import AddressesClient, AsyncAddressesClient
from .resources.async_passthrough.client import AsyncAsyncPassthroughClient
from .resources.async_passthrough.client import (
    AsyncPassthroughClient as resources_accounting_resources_async_passthrough_client_AsyncPassthroughClient,
)
from .resources.attachments.client import AsyncAttachmentsClient, AttachmentsClient
from .resources.available_actions.client import AsyncAvailableActionsClient, AvailableActionsClient
from .resources.balance_sheets.client import AsyncBalanceSheetsClient, BalanceSheetsClient
from .resources.cash_flow_statements.client import AsyncCashFlowStatementsClient, CashFlowStatementsClient
from .resources.company_info.client import AsyncCompanyInfoClient, CompanyInfoClient
from .resources.contacts.client import AsyncContactsClient, ContactsClient
from .resources.credit_notes.client import AsyncCreditNotesClient, CreditNotesClient
from .resources.delete_account.client import AsyncDeleteAccountClient, DeleteAccountClient
from .resources.expenses.client import AsyncExpensesClient, ExpensesClient
from .resources.force_resync.client import AsyncForceResyncClient, ForceResyncClient
from .resources.generate_key.client import AsyncGenerateKeyClient, GenerateKeyClient
from .resources.income_statements.client import AsyncIncomeStatementsClient, IncomeStatementsClient
from .resources.invoices.client import AsyncInvoicesClient, InvoicesClient
from .resources.issues.client import AsyncIssuesClient, IssuesClient
from .resources.items.client import AsyncItemsClient, ItemsClient
from .resources.journal_entries.client import AsyncJournalEntriesClient, JournalEntriesClient
from .resources.link_token.client import AsyncLinkTokenClient, LinkTokenClient
from .resources.linked_accounts.client import AsyncLinkedAccountsClient, LinkedAccountsClient
from .resources.passthrough.client import (
    AsyncPassthroughClient as resources_accounting_resources_passthrough_client_AsyncPassthroughClient,
)
from .resources.passthrough.client import PassthroughClient
from .resources.payments.client import AsyncPaymentsClient, PaymentsClient
from .resources.phone_numbers.client import AsyncPhoneNumbersClient, PhoneNumbersClient
from .resources.purchase_orders.client import AsyncPurchaseOrdersClient, PurchaseOrdersClient
from .resources.regenerate_key.client import AsyncRegenerateKeyClient, RegenerateKeyClient
from .resources.selective_sync.client import AsyncSelectiveSyncClient, SelectiveSyncClient
from .resources.sync_status.client import AsyncSyncStatusClient, SyncStatusClient
from .resources.tax_rates.client import AsyncTaxRatesClient, TaxRatesClient
from .resources.tracking_categories.client import AsyncTrackingCategoriesClient, TrackingCategoriesClient
from .resources.transactions.client import AsyncTransactionsClient, TransactionsClient
from .resources.vendor_credits.client import AsyncVendorCreditsClient, VendorCreditsClient
from .resources.webhook_receivers.client import AsyncWebhookReceiversClient, WebhookReceiversClient


class AccountingClient:
    def __init__(
        self, *, environment: MergeEnvironment = MergeEnvironment.PRODUCTION, client_wrapper: SyncClientWrapper
    ):
        self._environment = environment
        self._client_wrapper = client_wrapper
        self.account_details = AccountDetailsClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.account_token = AccountTokenClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.accounts = AccountsClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.addresses = AddressesClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.async_passthrough = resources_accounting_resources_async_passthrough_client_AsyncPassthroughClient(
            environment=self._environment, client_wrapper=self._client_wrapper
        )
        self.attachments = AttachmentsClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.available_actions = AvailableActionsClient(
            environment=self._environment, client_wrapper=self._client_wrapper
        )
        self.balance_sheets = BalanceSheetsClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.cash_flow_statements = CashFlowStatementsClient(
            environment=self._environment, client_wrapper=self._client_wrapper
        )
        self.company_info = CompanyInfoClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.contacts = ContactsClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.credit_notes = CreditNotesClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.delete_account = DeleteAccountClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.expenses = ExpensesClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.generate_key = GenerateKeyClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.income_statements = IncomeStatementsClient(
            environment=self._environment, client_wrapper=self._client_wrapper
        )
        self.invoices = InvoicesClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.issues = IssuesClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.items = ItemsClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.journal_entries = JournalEntriesClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.link_token = LinkTokenClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.linked_accounts = LinkedAccountsClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.passthrough = PassthroughClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.payments = PaymentsClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.phone_numbers = PhoneNumbersClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.purchase_orders = PurchaseOrdersClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.regenerate_key = RegenerateKeyClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.selective_sync = SelectiveSyncClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.sync_status = SyncStatusClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.force_resync = ForceResyncClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.tax_rates = TaxRatesClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.tracking_categories = TrackingCategoriesClient(
            environment=self._environment, client_wrapper=self._client_wrapper
        )
        self.transactions = TransactionsClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.vendor_credits = VendorCreditsClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.webhook_receivers = WebhookReceiversClient(
            environment=self._environment, client_wrapper=self._client_wrapper
        )


class AsyncAccountingClient:
    def __init__(
        self, *, environment: MergeEnvironment = MergeEnvironment.PRODUCTION, client_wrapper: AsyncClientWrapper
    ):
        self._environment = environment
        self._client_wrapper = client_wrapper
        self.account_details = AsyncAccountDetailsClient(
            environment=self._environment, client_wrapper=self._client_wrapper
        )
        self.account_token = AsyncAccountTokenClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.accounts = AsyncAccountsClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.addresses = AsyncAddressesClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.async_passthrough = AsyncAsyncPassthroughClient(
            environment=self._environment, client_wrapper=self._client_wrapper
        )
        self.attachments = AsyncAttachmentsClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.available_actions = AsyncAvailableActionsClient(
            environment=self._environment, client_wrapper=self._client_wrapper
        )
        self.balance_sheets = AsyncBalanceSheetsClient(
            environment=self._environment, client_wrapper=self._client_wrapper
        )
        self.cash_flow_statements = AsyncCashFlowStatementsClient(
            environment=self._environment, client_wrapper=self._client_wrapper
        )
        self.company_info = AsyncCompanyInfoClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.contacts = AsyncContactsClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.credit_notes = AsyncCreditNotesClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.delete_account = AsyncDeleteAccountClient(
            environment=self._environment, client_wrapper=self._client_wrapper
        )
        self.expenses = AsyncExpensesClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.generate_key = AsyncGenerateKeyClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.income_statements = AsyncIncomeStatementsClient(
            environment=self._environment, client_wrapper=self._client_wrapper
        )
        self.invoices = AsyncInvoicesClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.issues = AsyncIssuesClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.items = AsyncItemsClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.journal_entries = AsyncJournalEntriesClient(
            environment=self._environment, client_wrapper=self._client_wrapper
        )
        self.link_token = AsyncLinkTokenClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.linked_accounts = AsyncLinkedAccountsClient(
            environment=self._environment, client_wrapper=self._client_wrapper
        )
        self.passthrough = resources_accounting_resources_passthrough_client_AsyncPassthroughClient(
            environment=self._environment, client_wrapper=self._client_wrapper
        )
        self.payments = AsyncPaymentsClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.phone_numbers = AsyncPhoneNumbersClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.purchase_orders = AsyncPurchaseOrdersClient(
            environment=self._environment, client_wrapper=self._client_wrapper
        )
        self.regenerate_key = AsyncRegenerateKeyClient(
            environment=self._environment, client_wrapper=self._client_wrapper
        )
        self.selective_sync = AsyncSelectiveSyncClient(
            environment=self._environment, client_wrapper=self._client_wrapper
        )
        self.sync_status = AsyncSyncStatusClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.force_resync = AsyncForceResyncClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.tax_rates = AsyncTaxRatesClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.tracking_categories = AsyncTrackingCategoriesClient(
            environment=self._environment, client_wrapper=self._client_wrapper
        )
        self.transactions = AsyncTransactionsClient(environment=self._environment, client_wrapper=self._client_wrapper)
        self.vendor_credits = AsyncVendorCreditsClient(
            environment=self._environment, client_wrapper=self._client_wrapper
        )
        self.webhook_receivers = AsyncWebhookReceiversClient(
            environment=self._environment, client_wrapper=self._client_wrapper
        )
