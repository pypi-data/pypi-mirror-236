# serializer version: 1
# name: test_achat_completion
  'Hello! I am a helpful assistant here to assist with any questions or tasks you may have. How can I assist you today?'
# ---
# name: test_afunction_completion
  OpenAIObject({
    'arguments': '''
      {
        "date": "2022-10-15",
        "destination": "London"
      }
    ''',
    'name': 'book_a_flight',
  })
# ---
# name: test_astructural_completion
  Email(subject='Hello!', body="Dear [Recipient's Name],\n\nI hope this email finds you well. I just wanted to reach out and say hello. It has been a while since we last caught up and I wanted to see how you have been doing.\n\nIs there a good time for us to connect and catch up? I would love to hear about all the exciting things happening in your life.\n\nLooking forward to hearing from you!\n\nBest regards,\n[Your Name]")
# ---
# name: test_chat_completion
  'Hello! I am a helpful assistant here to assist you with any questions or tasks you may have. How may I help you today?'
# ---
# name: test_chat_completion_incomplete
  'gpt_fn.exceptions.CompletionIncompleteError: Incomplete response. Max tokens: 1, Finish reason: length'
# ---
# name: test_chat_completion_incomplete.1
  dict({
    'request': dict({
      'frequency_penalty': 0.0,
      'max_tokens': 1,
      'messages': list([
        dict({
          'content': 'You are a helpful assistant.',
          'role': 'system',
        }),
        dict({
          'content': 'Hello, who are you?',
          'role': 'user',
        }),
      ]),
      'model': 'gpt-3.5-turbo',
      'presence_penalty': 0.0,
      'stop': None,
      'temperature': 1.0,
      'top_p': 1.0,
      'user': '',
    }),
    'response': OpenAIObject({
      'choices': list([
        OpenAIObject({
          'finish_reason': 'length',
          'index': 0,
          'message': OpenAIObject({
            'content': 'Hello',
            'role': 'assistant',
          }),
        }),
      ]),
      'created': 1690734201,
      'id': 'chatcmpl-7i3UPS1ZGAuO30Rqrcp4oI1Tuomtv',
      'model': 'gpt-3.5-turbo-0613',
      'object': 'chat.completion',
      'usage': OpenAIObject({
        'completion_tokens': 1,
        'prompt_tokens': 23,
        'total_tokens': 24,
      }),
    }),
  })
# ---
# name: test_function_completion
  OpenAIObject({
    'arguments': '''
      {
        "date": "2022-12-01",
        "destination": "London"
      }
    ''',
    'name': 'book_a_flight',
  })
# ---
# name: test_function_completion_without_enough_tokens
  'gpt_fn.exceptions.CompletionIncompleteError: Incomplete response. Max tokens: 10, Finish reason: length Message:Sure! I can help you with that.'
# ---
# name: test_function_completion_without_enough_tokens.1
  dict({
    'request': dict({
      'frequency_penalty': 0.0,
      'function_call': 'auto',
      'functions': list([
        dict({
          'description': '',
          'name': 'book_a_flight',
          'parameters': dict({
            'definitions': dict({
            }),
            'properties': dict({
              'date': dict({
                'title': 'Date',
                'type': 'string',
              }),
              'destination': dict({
                'title': 'Destination',
                'type': 'string',
              }),
              'origin': dict({
                'default': 'London',
                'title': 'Origin',
                'type': 'string',
              }),
            }),
            'required': list([
              'date',
              'destination',
            ]),
            'type': 'object',
          }),
        }),
      ]),
      'max_tokens': 10,
      'messages': list([
        dict({
          'content': 'You are a helpful assistant.',
          'role': 'system',
        }),
        dict({
          'content': 'I want to book a restaurant in London.',
          'role': 'user',
        }),
      ]),
      'model': 'gpt-3.5-turbo-0613',
      'presence_penalty': 0.0,
      'stop': None,
      'temperature': 1.0,
      'top_p': 1.0,
      'user': '',
    }),
    'response': OpenAIObject({
      'choices': list([
        OpenAIObject({
          'finish_reason': 'length',
          'index': 0,
          'message': OpenAIObject({
            'content': 'Sure! I can help you with that.',
            'role': 'assistant',
          }),
        }),
      ]),
      'created': 1690734183,
      'id': 'chatcmpl-7i3U7yQ6aeK7gnqCLIlVqkIk2EzvT',
      'model': 'gpt-3.5-turbo-0613',
      'object': 'chat.completion',
      'usage': OpenAIObject({
        'completion_tokens': 10,
        'prompt_tokens': 67,
        'total_tokens': 77,
      }),
    }),
  })
# ---
# name: test_function_completion_without_neccess_function
  '''
  gpt_fn.exceptions.CompletionIncompleteError: Incomplete response. Max tokens: None, Finish reason: stop Message:Sure, I can help you with that. Can you please provide me with the following details:
  
  1. Date and time of the reservation
  2. Number of people
  3. Cuisine preference, if any
  4. Any specific location in London
  '''
# ---
# name: test_function_completion_without_neccess_function.1
  dict({
    'request': dict({
      'frequency_penalty': 0.0,
      'function_call': 'auto',
      'functions': list([
        dict({
          'description': '',
          'name': 'book_a_flight',
          'parameters': dict({
            'definitions': dict({
            }),
            'properties': dict({
              'date': dict({
                'title': 'Date',
                'type': 'string',
              }),
              'destination': dict({
                'title': 'Destination',
                'type': 'string',
              }),
              'origin': dict({
                'default': 'London',
                'title': 'Origin',
                'type': 'string',
              }),
            }),
            'required': list([
              'date',
              'destination',
            ]),
            'type': 'object',
          }),
        }),
      ]),
      'messages': list([
        dict({
          'content': 'You are a helpful assistant.',
          'role': 'system',
        }),
        dict({
          'content': 'I want to book a restaurant in London.',
          'role': 'user',
        }),
      ]),
      'model': 'gpt-3.5-turbo-0613',
      'presence_penalty': 0.0,
      'stop': None,
      'temperature': 1.0,
      'top_p': 1.0,
      'user': '',
    }),
    'response': OpenAIObject({
      'choices': list([
        OpenAIObject({
          'finish_reason': 'stop',
          'index': 0,
          'message': OpenAIObject({
            'content': '''
              Sure, I can help you with that. Can you please provide me with the following details:
              
              1. Date and time of the reservation
              2. Number of people
              3. Cuisine preference, if any
              4. Any specific location in London
            ''',
            'role': 'assistant',
          }),
        }),
      ]),
      'created': 1690734184,
      'id': 'chatcmpl-7i3U8orqNSisKKo91B3RnbT4xbue4',
      'model': 'gpt-3.5-turbo-0613',
      'object': 'chat.completion',
      'usage': OpenAIObject({
        'completion_tokens': 50,
        'prompt_tokens': 67,
        'total_tokens': 117,
      }),
    }),
  })
# ---
# name: test_structural_completion
  Email(subject='Sample Email', body="Dear [Recipient's Name],\n\nI hope this email finds you well. I wanted to reach out to discuss [Subject of Discussion].\n\n[Additional details and information].\n\nPlease let me know if you have any questions or need further clarification. I look forward to hearing from you soon.\n\nBest regards,\n[Your Name]")
# ---
# name: test_structural_completion_without_enough_tokens
  'gpt_fn.exceptions.CompletionIncompleteError: Incomplete response. Max tokens: 10, Finish reason: length Message:None'
# ---
# name: test_structural_completion_without_enough_tokens.1
  dict({
    'request': dict({
      'frequency_penalty': 0.0,
      'function_call': dict({
        'name': 'structural_response',
      }),
      'functions': list([
        dict({
          'description': 'Response to user in a structural way.',
          'name': 'structural_response',
          'parameters': dict({
            'properties': dict({
              'body': dict({
                'description': 'the body of email',
                'title': 'Body',
                'type': 'string',
              }),
              'subject': dict({
                'description': 'the subject of email',
                'title': 'Subject',
                'type': 'string',
              }),
            }),
            'required': list([
              'subject',
              'body',
            ]),
            'title': 'Email',
            'type': 'object',
          }),
        }),
      ]),
      'max_tokens': 10,
      'messages': list([
        dict({
          'content': 'You are a helpful assistant.',
          'role': 'system',
        }),
        dict({
          'content': 'Give me a sample email.',
          'role': 'user',
        }),
      ]),
      'model': 'gpt-3.5-turbo-0613',
      'presence_penalty': 0.0,
      'temperature': 1.0,
      'top_p': 1.0,
      'user': '',
    }),
    'response': OpenAIObject({
      'choices': list([
        OpenAIObject({
          'finish_reason': 'length',
          'index': 0,
          'message': OpenAIObject({
            'content': None,
            'function_call': OpenAIObject({
              'arguments': '''
                {
                  "subject": "Invitation to attend
              ''',
              'name': 'structural_response',
            }),
            'role': 'assistant',
          }),
        }),
      ]),
      'created': 1690734196,
      'id': 'chatcmpl-7i3UKvREvsnQqPtjETLD4eXfCl4M4',
      'model': 'gpt-3.5-turbo-0613',
      'object': 'chat.completion',
      'usage': OpenAIObject({
        'completion_tokens': 10,
        'prompt_tokens': 82,
        'total_tokens': 92,
      }),
    }),
  })
# ---
