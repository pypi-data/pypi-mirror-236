Metadata-Version: 2.1
Name: image-sorting-tool
Version: 0.2.0
Summary: Graphical tool to sort images into a folder structure based on the date the images were taken
Home-page: https://github.com/ThorpeJosh/image-sorting-tool
Author: Joshua Thorpe
Author-email: josh@thorpe.engineering
License: MIT
Keywords: image,sort,gui,executable
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Operating System :: Microsoft :: Windows
Classifier: Operating System :: POSIX :: Linux
Classifier: Operating System :: MacOS
Requires-Python: >=3.8, <=3.12
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: Pillow~=9.0
Requires-Dist: python-dateutil~=2.8
Provides-Extra: dev
Requires-Dist: pytest==7.2.*; extra == "dev"
Requires-Dist: pylint==2.16.*; extra == "dev"
Requires-Dist: black==23.1.*; extra == "dev"

# Image Sorting Tool
[![Build Status](https://jenkins.thorpe.work/buildStatus/icon?job=image-sorting-tool%2Fmaster&subject=build%20status)](https://jenkins.thorpe.work/blue/organizations/jenkins/image-sorting-tool/activity)
[![PyPI version](https://img.shields.io/pypi/v/image-sorting-tool.svg)](https://pypi.org/project/image-sorting-tool/)
[![PyPI license](https://img.shields.io/pypi/l/image-sorting-tool.svg)](https://pypi.org/project/image-sorting-tool/)  
![Screenshot](https://github.com/ThorpeJosh/ImageSortingTool/blob/master/assets/ImageSortingTool.PNG?raw=true)
This is a simple graphical tool to sort media into a structured folder. It is designed primarily for JPG images taken with a camera/phone but will also work with MP4, PNG and GIF media files. It works by finding all files in a chosen source directory (including sub-directories) and then based on the chosen sorting options, copies them into a structured destination.

The date-taken for JPG files is extracted from the EXIF data and for all other file formats the filename is used to extract the date-taken. The files destination name will be in format 'yyyymmdd-HHMMSS'. For example '20201225-234532.jpg'
The default output structure is year and month folders. For example:

/<br>
├── 2019/<br>
&ensp;&ensp;&ensp;&ensp;├── 07/<br>
&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;├── 20190712-141507.jpg<br>
&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;└── 20190719-224521.jpg<br>
&ensp;&ensp;&ensp;&ensp;└── 10/<br>
&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;├── 20191011-180520.jpg<br>
&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;└── 20191029-204731.jpg<br>
└── 2020/<br>
&ensp;&ensp;&ensp;&ensp;├── 01/<br>
&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;└── 20200114-135312.jpg<br>
&ensp;&ensp;&ensp;&ensp;└── 03/<br>
&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;&ensp;└── 20200301-110330.jpg<br>

Files that cannot have the date-taken extracted (missing EXIF or bad filenames) will be copied to a 'failed_to_sort' folder in the root directory of the above structure without any renaming. These files are commonly ones downloaded from the internet or shared through social media.

If your source folder has other files such as binaries, documents, audio recordings, or music, you can choose if you want to ignore them or copy them to an 'other_files' folder with the 'Copy all other files' option.

This tool is multi-threaded to increase performance on high speed storage such as SSDs.

No data in the source directory is altered. It only reads from the source, and then copy operations are performed during the sorting process.

## Installation
The tool can be run on Linux, MacOS and Windows provided the following requirements are met
### Requirements
* [Python 3.6](https://www.python.org/downloads/) or above
* python3-tk (Comes with Python 3, but may need installing separately in linux)

To check what version of python is installed, open a console and run:
```bash
python --version
```
If the python version is suitable then run the following to install the image-sorting-tool
```bash
pip install image-sorting-tool
```

## Usage
Run the following to launch
```bash
image-sorting-tool
```
## Upgrading
Run the following to upgrade
```bash
pip install --upgrade image-sorting-tool
```

## Uninstalling
Run the following to remove the tool from your machine
```bash
pip uninstall image-sorting-tool
```

## Development
To contribute, clone this repo and then install the dev dependencies with
```bash
pip install -e .[dev]
```
Rerun the above `pip install -e` command after making code changes then launch with `image-sorting-tool -vv` for debug logs.

### Automated checks
Linting and unit tests should be checked before committing by running the following:
```bash
# Code formatting
black  image-sorting-tool

# Linting
pylint image_sorting_tool

# Unit test on current environment python version
pytest
```
