# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKMeshPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMeshBasePython
else:
    import _itkMeshBasePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkMeshBasePython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkMeshBasePython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkPointSetPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkArrayPython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
class itkCellInterfaceADCTI2FFULULULPF2VCULPF2(object):
    r"""Proxy of C++ itkCellInterfaceADCTI2FFULULULPF2VCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceADCTI2FFULULULPF2VCULPF2

# Register itkCellInterfaceADCTI2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_swigregister(itkCellInterfaceADCTI2FFULULULPF2VCULPF2)

class itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer
        __init__(self, p) -> itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceADCTI2FFULULULPF2VCULPF2 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_swigregister(itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer)

class itkCellInterfaceADCTI3FFULULULPF3VCULPF3(object):
    r"""Proxy of C++ itkCellInterfaceADCTI3FFULULULPF3VCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceADCTI3FFULULULPF3VCULPF3

# Register itkCellInterfaceADCTI3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_swigregister(itkCellInterfaceADCTI3FFULULULPF3VCULPF3)

class itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer
        __init__(self, p) -> itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceADCTI3FFULULULPF3VCULPF3 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_swigregister(itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer)

class itkCellInterfaceADCTI4FFULULULPF4VCULPF4(object):
    r"""Proxy of C++ itkCellInterfaceADCTI4FFULULULPF4VCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceADCTI4FFULULULPF4VCULPF4

# Register itkCellInterfaceADCTI4FFULULULPF4VCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_swigregister(itkCellInterfaceADCTI4FFULULULPF4VCULPF4)

class itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer
        __init__(self, p) -> itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceADCTI4FFULULULPF4VCULPF4 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_swigregister(itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer)

class itkCellInterfaceDCTI2FFULULULPF2MCULPF2(object):
    r"""Proxy of C++ itkCellInterfaceDCTI2FFULULULPF2MCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI2FFULULULPF2MCULPF2

# Register itkCellInterfaceDCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_swigregister(itkCellInterfaceDCTI2FFULULULPF2MCULPF2)

class itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer
        __init__(self, p) -> itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceDCTI2FFULULULPF2MCULPF2 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_swigregister(itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer)

class itkCellInterfaceDCTI2FFULULULPF2VCULPF2(object):
    r"""Proxy of C++ itkCellInterfaceDCTI2FFULULULPF2VCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI2FFULULULPF2VCULPF2

# Register itkCellInterfaceDCTI2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_swigregister(itkCellInterfaceDCTI2FFULULULPF2VCULPF2)

class itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer
        __init__(self, p) -> itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceDCTI2FFULULULPF2VCULPF2 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_swigregister(itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer)

class itkCellInterfaceDCTI3FFULULULPF3MCULPF3(object):
    r"""Proxy of C++ itkCellInterfaceDCTI3FFULULULPF3MCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI3FFULULULPF3MCULPF3

# Register itkCellInterfaceDCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_swigregister(itkCellInterfaceDCTI3FFULULULPF3MCULPF3)

class itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer
        __init__(self, p) -> itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceDCTI3FFULULULPF3MCULPF3 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_swigregister(itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer)

class itkCellInterfaceDCTI3FFULULULPF3VCULPF3(object):
    r"""Proxy of C++ itkCellInterfaceDCTI3FFULULULPF3VCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI3FFULULULPF3VCULPF3

# Register itkCellInterfaceDCTI3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_swigregister(itkCellInterfaceDCTI3FFULULULPF3VCULPF3)

class itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer
        __init__(self, p) -> itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceDCTI3FFULULULPF3VCULPF3 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_swigregister(itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer)

class itkCellInterfaceDCTI4FFULULULPF4MCULPF4(object):
    r"""Proxy of C++ itkCellInterfaceDCTI4FFULULULPF4MCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI4FFULULULPF4MCULPF4

# Register itkCellInterfaceDCTI4FFULULULPF4MCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_swigregister(itkCellInterfaceDCTI4FFULULULPF4MCULPF4)

class itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer
        __init__(self, p) -> itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceDCTI4FFULULULPF4MCULPF4 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_swigregister(itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer)

class itkCellInterfaceDCTI4FFULULULPF4VCULPF4(object):
    r"""Proxy of C++ itkCellInterfaceDCTI4FFULULULPF4VCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI4FFULULULPF4VCULPF4

# Register itkCellInterfaceDCTI4FFULULULPF4VCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_swigregister(itkCellInterfaceDCTI4FFULULULPF4VCULPF4)

class itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer
        __init__(self, p) -> itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceDCTI4FFULULULPF4VCULPF4 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_swigregister(itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer)

class itkCellInterfaceFCTI2FFULULULPF2MCULPF2(object):
    r"""Proxy of C++ itkCellInterfaceFCTI2FFULULULPF2MCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI2FFULULULPF2MCULPF2

# Register itkCellInterfaceFCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_swigregister(itkCellInterfaceFCTI2FFULULULPF2MCULPF2)

class itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer
        __init__(self, p) -> itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceFCTI2FFULULULPF2MCULPF2 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_swigregister(itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer)

class itkCellInterfaceFCTI2FFULULULPF2VCULPF2(object):
    r"""Proxy of C++ itkCellInterfaceFCTI2FFULULULPF2VCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI2FFULULULPF2VCULPF2

# Register itkCellInterfaceFCTI2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_swigregister(itkCellInterfaceFCTI2FFULULULPF2VCULPF2)

class itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer
        __init__(self, p) -> itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceFCTI2FFULULULPF2VCULPF2 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_swigregister(itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer)

class itkCellInterfaceFCTI3FFULULULPF3MCULPF3(object):
    r"""Proxy of C++ itkCellInterfaceFCTI3FFULULULPF3MCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI3FFULULULPF3MCULPF3

# Register itkCellInterfaceFCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_swigregister(itkCellInterfaceFCTI3FFULULULPF3MCULPF3)

class itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer
        __init__(self, p) -> itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceFCTI3FFULULULPF3MCULPF3 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_swigregister(itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer)

class itkCellInterfaceFCTI3FFULULULPF3VCULPF3(object):
    r"""Proxy of C++ itkCellInterfaceFCTI3FFULULULPF3VCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI3FFULULULPF3VCULPF3

# Register itkCellInterfaceFCTI3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_swigregister(itkCellInterfaceFCTI3FFULULULPF3VCULPF3)

class itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer
        __init__(self, p) -> itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceFCTI3FFULULULPF3VCULPF3 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_swigregister(itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer)

class itkCellInterfaceFCTI4FFULULULPF4MCULPF4(object):
    r"""Proxy of C++ itkCellInterfaceFCTI4FFULULULPF4MCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI4FFULULULPF4MCULPF4

# Register itkCellInterfaceFCTI4FFULULULPF4MCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_swigregister(itkCellInterfaceFCTI4FFULULULPF4MCULPF4)

class itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer
        __init__(self, p) -> itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceFCTI4FFULULULPF4MCULPF4 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_swigregister(itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer)

class itkCellInterfaceFCTI4FFULULULPF4VCULPF4(object):
    r"""Proxy of C++ itkCellInterfaceFCTI4FFULULULPF4VCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI4FFULULULPF4VCULPF4

# Register itkCellInterfaceFCTI4FFULULULPF4VCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_swigregister(itkCellInterfaceFCTI4FFULULULPF4VCULPF4)

class itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer
        __init__(self, p) -> itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceFCTI4FFULULULPF4VCULPF4 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_swigregister(itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer)

class itkCellInterfaceSSCTI2FFULULULPF2MCULPF2(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI2FFULULULPF2MCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI2FFULULULPF2MCULPF2

# Register itkCellInterfaceSSCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_swigregister(itkCellInterfaceSSCTI2FFULULULPF2MCULPF2)

class itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer
        __init__(self, p) -> itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceSSCTI2FFULULULPF2MCULPF2 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_swigregister(itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer)

class itkCellInterfaceSSCTI2FFULULULPF2VCULPF2(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI2FFULULULPF2VCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI2FFULULULPF2VCULPF2

# Register itkCellInterfaceSSCTI2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_swigregister(itkCellInterfaceSSCTI2FFULULULPF2VCULPF2)

class itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer
        __init__(self, p) -> itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceSSCTI2FFULULULPF2VCULPF2 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_swigregister(itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer)

class itkCellInterfaceSSCTI3FFULULULPF3MCULPF3(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI3FFULULULPF3MCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI3FFULULULPF3MCULPF3

# Register itkCellInterfaceSSCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_swigregister(itkCellInterfaceSSCTI3FFULULULPF3MCULPF3)

class itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer
        __init__(self, p) -> itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceSSCTI3FFULULULPF3MCULPF3 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_swigregister(itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer)

class itkCellInterfaceSSCTI3FFULULULPF3VCULPF3(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI3FFULULULPF3VCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI3FFULULULPF3VCULPF3

# Register itkCellInterfaceSSCTI3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_swigregister(itkCellInterfaceSSCTI3FFULULULPF3VCULPF3)

class itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer
        __init__(self, p) -> itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceSSCTI3FFULULULPF3VCULPF3 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_swigregister(itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer)

class itkCellInterfaceSSCTI4FFULULULPF4MCULPF4(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI4FFULULULPF4MCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI4FFULULULPF4MCULPF4

# Register itkCellInterfaceSSCTI4FFULULULPF4MCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_swigregister(itkCellInterfaceSSCTI4FFULULULPF4MCULPF4)

class itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer
        __init__(self, p) -> itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceSSCTI4FFULULULPF4MCULPF4 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_swigregister(itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer)

class itkCellInterfaceSSCTI4FFULULULPF4VCULPF4(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI4FFULULULPF4VCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI4FFULULULPF4VCULPF4

# Register itkCellInterfaceSSCTI4FFULULULPF4VCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_swigregister(itkCellInterfaceSSCTI4FFULULULPF4VCULPF4)

class itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer
        __init__(self, p) -> itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceSSCTI4FFULULULPF4VCULPF4 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_swigregister(itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer)

class itkCellInterfaceUCCTI2FFULULULPF2MCULPF2(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI2FFULULULPF2MCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI2FFULULULPF2MCULPF2

# Register itkCellInterfaceUCCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_swigregister(itkCellInterfaceUCCTI2FFULULULPF2MCULPF2)

class itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer
        __init__(self, p) -> itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUCCTI2FFULULULPF2MCULPF2 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_swigregister(itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer)

class itkCellInterfaceUCCTI2FFULULULPF2VCULPF2(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI2FFULULULPF2VCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI2FFULULULPF2VCULPF2

# Register itkCellInterfaceUCCTI2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_swigregister(itkCellInterfaceUCCTI2FFULULULPF2VCULPF2)

class itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer
        __init__(self, p) -> itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUCCTI2FFULULULPF2VCULPF2 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_swigregister(itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer)

class itkCellInterfaceUCCTI3FFULULULPF3MCULPF3(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI3FFULULULPF3MCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI3FFULULULPF3MCULPF3

# Register itkCellInterfaceUCCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_swigregister(itkCellInterfaceUCCTI3FFULULULPF3MCULPF3)

class itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer
        __init__(self, p) -> itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUCCTI3FFULULULPF3MCULPF3 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_swigregister(itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer)

class itkCellInterfaceUCCTI3FFULULULPF3VCULPF3(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI3FFULULULPF3VCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI3FFULULULPF3VCULPF3

# Register itkCellInterfaceUCCTI3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_swigregister(itkCellInterfaceUCCTI3FFULULULPF3VCULPF3)

class itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer
        __init__(self, p) -> itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUCCTI3FFULULULPF3VCULPF3 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_swigregister(itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer)

class itkCellInterfaceUCCTI4FFULULULPF4MCULPF4(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI4FFULULULPF4MCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI4FFULULULPF4MCULPF4

# Register itkCellInterfaceUCCTI4FFULULULPF4MCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_swigregister(itkCellInterfaceUCCTI4FFULULULPF4MCULPF4)

class itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer
        __init__(self, p) -> itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUCCTI4FFULULULPF4MCULPF4 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_swigregister(itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer)

class itkCellInterfaceUCCTI4FFULULULPF4VCULPF4(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI4FFULULULPF4VCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI4FFULULULPF4VCULPF4

# Register itkCellInterfaceUCCTI4FFULULULPF4VCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_swigregister(itkCellInterfaceUCCTI4FFULULULPF4VCULPF4)

class itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer
        __init__(self, p) -> itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUCCTI4FFULULULPF4VCULPF4 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_swigregister(itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer)

class itkCellInterfaceUSCTI2FFULULULPF2MCULPF2(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI2FFULULULPF2MCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI2FFULULULPF2MCULPF2

# Register itkCellInterfaceUSCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_swigregister(itkCellInterfaceUSCTI2FFULULULPF2MCULPF2)

class itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer
        __init__(self, p) -> itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUSCTI2FFULULULPF2MCULPF2 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_swigregister(itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer)

class itkCellInterfaceUSCTI2FFULULULPF2VCULPF2(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI2FFULULULPF2VCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI2FFULULULPF2VCULPF2

# Register itkCellInterfaceUSCTI2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_swigregister(itkCellInterfaceUSCTI2FFULULULPF2VCULPF2)

class itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer
        __init__(self, p) -> itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUSCTI2FFULULULPF2VCULPF2 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_swigregister(itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer)

class itkCellInterfaceUSCTI3FFULULULPF3MCULPF3(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI3FFULULULPF3MCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI3FFULULULPF3MCULPF3

# Register itkCellInterfaceUSCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_swigregister(itkCellInterfaceUSCTI3FFULULULPF3MCULPF3)

class itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer
        __init__(self, p) -> itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUSCTI3FFULULULPF3MCULPF3 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_swigregister(itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer)

class itkCellInterfaceUSCTI3FFULULULPF3VCULPF3(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI3FFULULULPF3VCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI3FFULULULPF3VCULPF3

# Register itkCellInterfaceUSCTI3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_swigregister(itkCellInterfaceUSCTI3FFULULULPF3VCULPF3)

class itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer
        __init__(self, p) -> itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUSCTI3FFULULULPF3VCULPF3 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_swigregister(itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer)

class itkCellInterfaceUSCTI4FFULULULPF4MCULPF4(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI4FFULULULPF4MCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI4FFULULULPF4MCULPF4

# Register itkCellInterfaceUSCTI4FFULULULPF4MCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_swigregister(itkCellInterfaceUSCTI4FFULULULPF4MCULPF4)

class itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer
        __init__(self, p) -> itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUSCTI4FFULULULPF4MCULPF4 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_swigregister(itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer)

class itkCellInterfaceUSCTI4FFULULULPF4VCULPF4(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI4FFULULULPF4VCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_GetNameOfClass)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI4FFULULULPF4VCULPF4

# Register itkCellInterfaceUSCTI4FFULULULPF4VCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_swigregister(itkCellInterfaceUSCTI4FFULULULPF4VCULPF4)

class itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer
        __init__(self, p) -> itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUSCTI4FFULULULPF4VCULPF4 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer
    __deref__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer___deref__)
    Reset = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_Reset)
    TakeOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_TakeOwnership)
    TakeNoOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_TakeNoOwnership)
    IsOwner = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_IsOwner)
    ReleaseOwnership = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_ReleaseOwnership)
    GetPointer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_GetPointer)
    __eq__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer___eq__)
    __ne__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer___ne__)
    __lt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer___lt__)
    __gt__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer___gt__)
    __le__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer___le__)
    __ge__ = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer___ge__)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_Accept)
    GetType = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_GetType)
    MakeCopy = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_MakeCopy)
    GetDimension = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_GetDimension)
    GetInterpolationOrder = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_GetInterpolationOrder)
    GetNumberOfPoints = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_GetNumberOfPoints)
    GetNumberOfBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_GetNumberOfBoundaryFeatures)
    GetBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_GetBoundaryFeature)
    GetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_GetPointIds)
    SetPointIds = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_SetPointIds)
    SetPointId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_SetPointId)
    PointIdsBegin = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_PointIdsBegin)
    PointIdsEnd = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_PointIdsEnd)
    GetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_GetPointIdsContainer)
    SetPointIdsContainer = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_SetPointIdsContainer)
    GetClosestBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_GetClosestBoundary)
    EvaluatePosition = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_EvaluatePosition)
    EvaluateShapeFunctions = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_EvaluateShapeFunctions)
    IntersectWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_IntersectWithLine)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_GetBoundingBox)
    GetBoundingBoxDiagonalLength2 = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_GetBoundingBoxDiagonalLength2)
    IntersectBoundingBoxWithLine = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_IntersectBoundingBoxWithLine)
    IsExplicitBoundary = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_IsExplicitBoundary)
    AddUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_AddUsingCell)
    RemoveUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_RemoveUsingCell)
    IsUsingCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_IsUsingCell)
    GetNumberOfUsingCells = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_GetNumberOfUsingCells)
    GetNameOfClass = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_GetNameOfClass)

# Register itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_swigregister(itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer)

class itkCellInterfaceVisitorDCTI2FFULULULPF2MCULPF2(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorDCTI2FFULULULPF2MCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    VisitFromCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorDCTI2FFULULULPF2MCULPF2_VisitFromCell)
    GetCellTopologyId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorDCTI2FFULULULPF2MCULPF2_GetCellTopologyId)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorDCTI2FFULULULPF2MCULPF2
    cast = _swig_new_static_method(_itkMeshBasePython.itkCellInterfaceVisitorDCTI2FFULULULPF2MCULPF2_cast)

# Register itkCellInterfaceVisitorDCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorDCTI2FFULULULPF2MCULPF2_swigregister(itkCellInterfaceVisitorDCTI2FFULULULPF2MCULPF2)
itkCellInterfaceVisitorDCTI2FFULULULPF2MCULPF2_cast = _itkMeshBasePython.itkCellInterfaceVisitorDCTI2FFULULULPF2MCULPF2_cast

class itkCellInterfaceVisitorDCTI3FFULULULPF3MCULPF3(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorDCTI3FFULULULPF3MCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    VisitFromCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorDCTI3FFULULULPF3MCULPF3_VisitFromCell)
    GetCellTopologyId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorDCTI3FFULULULPF3MCULPF3_GetCellTopologyId)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorDCTI3FFULULULPF3MCULPF3
    cast = _swig_new_static_method(_itkMeshBasePython.itkCellInterfaceVisitorDCTI3FFULULULPF3MCULPF3_cast)

# Register itkCellInterfaceVisitorDCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorDCTI3FFULULULPF3MCULPF3_swigregister(itkCellInterfaceVisitorDCTI3FFULULULPF3MCULPF3)
itkCellInterfaceVisitorDCTI3FFULULULPF3MCULPF3_cast = _itkMeshBasePython.itkCellInterfaceVisitorDCTI3FFULULULPF3MCULPF3_cast

class itkCellInterfaceVisitorDCTI4FFULULULPF4MCULPF4(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorDCTI4FFULULULPF4MCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    VisitFromCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorDCTI4FFULULULPF4MCULPF4_VisitFromCell)
    GetCellTopologyId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorDCTI4FFULULULPF4MCULPF4_GetCellTopologyId)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorDCTI4FFULULULPF4MCULPF4
    cast = _swig_new_static_method(_itkMeshBasePython.itkCellInterfaceVisitorDCTI4FFULULULPF4MCULPF4_cast)

# Register itkCellInterfaceVisitorDCTI4FFULULULPF4MCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorDCTI4FFULULULPF4MCULPF4_swigregister(itkCellInterfaceVisitorDCTI4FFULULULPF4MCULPF4)
itkCellInterfaceVisitorDCTI4FFULULULPF4MCULPF4_cast = _itkMeshBasePython.itkCellInterfaceVisitorDCTI4FFULULULPF4MCULPF4_cast

class itkCellInterfaceVisitorFCTI2FFULULULPF2MCULPF2(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorFCTI2FFULULULPF2MCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    VisitFromCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorFCTI2FFULULULPF2MCULPF2_VisitFromCell)
    GetCellTopologyId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorFCTI2FFULULULPF2MCULPF2_GetCellTopologyId)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorFCTI2FFULULULPF2MCULPF2
    cast = _swig_new_static_method(_itkMeshBasePython.itkCellInterfaceVisitorFCTI2FFULULULPF2MCULPF2_cast)

# Register itkCellInterfaceVisitorFCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorFCTI2FFULULULPF2MCULPF2_swigregister(itkCellInterfaceVisitorFCTI2FFULULULPF2MCULPF2)
itkCellInterfaceVisitorFCTI2FFULULULPF2MCULPF2_cast = _itkMeshBasePython.itkCellInterfaceVisitorFCTI2FFULULULPF2MCULPF2_cast

class itkCellInterfaceVisitorFCTI3FFULULULPF3MCULPF3(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorFCTI3FFULULULPF3MCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    VisitFromCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorFCTI3FFULULULPF3MCULPF3_VisitFromCell)
    GetCellTopologyId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorFCTI3FFULULULPF3MCULPF3_GetCellTopologyId)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorFCTI3FFULULULPF3MCULPF3
    cast = _swig_new_static_method(_itkMeshBasePython.itkCellInterfaceVisitorFCTI3FFULULULPF3MCULPF3_cast)

# Register itkCellInterfaceVisitorFCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorFCTI3FFULULULPF3MCULPF3_swigregister(itkCellInterfaceVisitorFCTI3FFULULULPF3MCULPF3)
itkCellInterfaceVisitorFCTI3FFULULULPF3MCULPF3_cast = _itkMeshBasePython.itkCellInterfaceVisitorFCTI3FFULULULPF3MCULPF3_cast

class itkCellInterfaceVisitorFCTI4FFULULULPF4MCULPF4(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorFCTI4FFULULULPF4MCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    VisitFromCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorFCTI4FFULULULPF4MCULPF4_VisitFromCell)
    GetCellTopologyId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorFCTI4FFULULULPF4MCULPF4_GetCellTopologyId)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorFCTI4FFULULULPF4MCULPF4
    cast = _swig_new_static_method(_itkMeshBasePython.itkCellInterfaceVisitorFCTI4FFULULULPF4MCULPF4_cast)

# Register itkCellInterfaceVisitorFCTI4FFULULULPF4MCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorFCTI4FFULULULPF4MCULPF4_swigregister(itkCellInterfaceVisitorFCTI4FFULULULPF4MCULPF4)
itkCellInterfaceVisitorFCTI4FFULULULPF4MCULPF4_cast = _itkMeshBasePython.itkCellInterfaceVisitorFCTI4FFULULULPF4MCULPF4_cast

class itkCellInterfaceVisitorSSCTI2FFULULULPF2MCULPF2(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorSSCTI2FFULULULPF2MCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    VisitFromCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorSSCTI2FFULULULPF2MCULPF2_VisitFromCell)
    GetCellTopologyId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorSSCTI2FFULULULPF2MCULPF2_GetCellTopologyId)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorSSCTI2FFULULULPF2MCULPF2
    cast = _swig_new_static_method(_itkMeshBasePython.itkCellInterfaceVisitorSSCTI2FFULULULPF2MCULPF2_cast)

# Register itkCellInterfaceVisitorSSCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorSSCTI2FFULULULPF2MCULPF2_swigregister(itkCellInterfaceVisitorSSCTI2FFULULULPF2MCULPF2)
itkCellInterfaceVisitorSSCTI2FFULULULPF2MCULPF2_cast = _itkMeshBasePython.itkCellInterfaceVisitorSSCTI2FFULULULPF2MCULPF2_cast

class itkCellInterfaceVisitorSSCTI3FFULULULPF3MCULPF3(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorSSCTI3FFULULULPF3MCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    VisitFromCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorSSCTI3FFULULULPF3MCULPF3_VisitFromCell)
    GetCellTopologyId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorSSCTI3FFULULULPF3MCULPF3_GetCellTopologyId)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorSSCTI3FFULULULPF3MCULPF3
    cast = _swig_new_static_method(_itkMeshBasePython.itkCellInterfaceVisitorSSCTI3FFULULULPF3MCULPF3_cast)

# Register itkCellInterfaceVisitorSSCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorSSCTI3FFULULULPF3MCULPF3_swigregister(itkCellInterfaceVisitorSSCTI3FFULULULPF3MCULPF3)
itkCellInterfaceVisitorSSCTI3FFULULULPF3MCULPF3_cast = _itkMeshBasePython.itkCellInterfaceVisitorSSCTI3FFULULULPF3MCULPF3_cast

class itkCellInterfaceVisitorSSCTI4FFULULULPF4MCULPF4(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorSSCTI4FFULULULPF4MCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    VisitFromCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorSSCTI4FFULULULPF4MCULPF4_VisitFromCell)
    GetCellTopologyId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorSSCTI4FFULULULPF4MCULPF4_GetCellTopologyId)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorSSCTI4FFULULULPF4MCULPF4
    cast = _swig_new_static_method(_itkMeshBasePython.itkCellInterfaceVisitorSSCTI4FFULULULPF4MCULPF4_cast)

# Register itkCellInterfaceVisitorSSCTI4FFULULULPF4MCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorSSCTI4FFULULULPF4MCULPF4_swigregister(itkCellInterfaceVisitorSSCTI4FFULULULPF4MCULPF4)
itkCellInterfaceVisitorSSCTI4FFULULULPF4MCULPF4_cast = _itkMeshBasePython.itkCellInterfaceVisitorSSCTI4FFULULULPF4MCULPF4_cast

class itkCellInterfaceVisitorUCCTI2FFULULULPF2MCULPF2(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorUCCTI2FFULULULPF2MCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    VisitFromCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorUCCTI2FFULULULPF2MCULPF2_VisitFromCell)
    GetCellTopologyId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorUCCTI2FFULULULPF2MCULPF2_GetCellTopologyId)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorUCCTI2FFULULULPF2MCULPF2
    cast = _swig_new_static_method(_itkMeshBasePython.itkCellInterfaceVisitorUCCTI2FFULULULPF2MCULPF2_cast)

# Register itkCellInterfaceVisitorUCCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorUCCTI2FFULULULPF2MCULPF2_swigregister(itkCellInterfaceVisitorUCCTI2FFULULULPF2MCULPF2)
itkCellInterfaceVisitorUCCTI2FFULULULPF2MCULPF2_cast = _itkMeshBasePython.itkCellInterfaceVisitorUCCTI2FFULULULPF2MCULPF2_cast

class itkCellInterfaceVisitorUCCTI3FFULULULPF3MCULPF3(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorUCCTI3FFULULULPF3MCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    VisitFromCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorUCCTI3FFULULULPF3MCULPF3_VisitFromCell)
    GetCellTopologyId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorUCCTI3FFULULULPF3MCULPF3_GetCellTopologyId)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorUCCTI3FFULULULPF3MCULPF3
    cast = _swig_new_static_method(_itkMeshBasePython.itkCellInterfaceVisitorUCCTI3FFULULULPF3MCULPF3_cast)

# Register itkCellInterfaceVisitorUCCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorUCCTI3FFULULULPF3MCULPF3_swigregister(itkCellInterfaceVisitorUCCTI3FFULULULPF3MCULPF3)
itkCellInterfaceVisitorUCCTI3FFULULULPF3MCULPF3_cast = _itkMeshBasePython.itkCellInterfaceVisitorUCCTI3FFULULULPF3MCULPF3_cast

class itkCellInterfaceVisitorUCCTI4FFULULULPF4MCULPF4(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorUCCTI4FFULULULPF4MCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    VisitFromCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorUCCTI4FFULULULPF4MCULPF4_VisitFromCell)
    GetCellTopologyId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorUCCTI4FFULULULPF4MCULPF4_GetCellTopologyId)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorUCCTI4FFULULULPF4MCULPF4
    cast = _swig_new_static_method(_itkMeshBasePython.itkCellInterfaceVisitorUCCTI4FFULULULPF4MCULPF4_cast)

# Register itkCellInterfaceVisitorUCCTI4FFULULULPF4MCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorUCCTI4FFULULULPF4MCULPF4_swigregister(itkCellInterfaceVisitorUCCTI4FFULULULPF4MCULPF4)
itkCellInterfaceVisitorUCCTI4FFULULULPF4MCULPF4_cast = _itkMeshBasePython.itkCellInterfaceVisitorUCCTI4FFULULULPF4MCULPF4_cast

class itkCellInterfaceVisitorUSCTI2FFULULULPF2MCULPF2(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorUSCTI2FFULULULPF2MCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    VisitFromCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorUSCTI2FFULULULPF2MCULPF2_VisitFromCell)
    GetCellTopologyId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorUSCTI2FFULULULPF2MCULPF2_GetCellTopologyId)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorUSCTI2FFULULULPF2MCULPF2
    cast = _swig_new_static_method(_itkMeshBasePython.itkCellInterfaceVisitorUSCTI2FFULULULPF2MCULPF2_cast)

# Register itkCellInterfaceVisitorUSCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorUSCTI2FFULULULPF2MCULPF2_swigregister(itkCellInterfaceVisitorUSCTI2FFULULULPF2MCULPF2)
itkCellInterfaceVisitorUSCTI2FFULULULPF2MCULPF2_cast = _itkMeshBasePython.itkCellInterfaceVisitorUSCTI2FFULULULPF2MCULPF2_cast

class itkCellInterfaceVisitorUSCTI3FFULULULPF3MCULPF3(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorUSCTI3FFULULULPF3MCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    VisitFromCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorUSCTI3FFULULULPF3MCULPF3_VisitFromCell)
    GetCellTopologyId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorUSCTI3FFULULULPF3MCULPF3_GetCellTopologyId)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorUSCTI3FFULULULPF3MCULPF3
    cast = _swig_new_static_method(_itkMeshBasePython.itkCellInterfaceVisitorUSCTI3FFULULULPF3MCULPF3_cast)

# Register itkCellInterfaceVisitorUSCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorUSCTI3FFULULULPF3MCULPF3_swigregister(itkCellInterfaceVisitorUSCTI3FFULULULPF3MCULPF3)
itkCellInterfaceVisitorUSCTI3FFULULULPF3MCULPF3_cast = _itkMeshBasePython.itkCellInterfaceVisitorUSCTI3FFULULULPF3MCULPF3_cast

class itkCellInterfaceVisitorUSCTI4FFULULULPF4MCULPF4(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorUSCTI4FFULULULPF4MCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    VisitFromCell = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorUSCTI4FFULULULPF4MCULPF4_VisitFromCell)
    GetCellTopologyId = _swig_new_instance_method(_itkMeshBasePython.itkCellInterfaceVisitorUSCTI4FFULULULPF4MCULPF4_GetCellTopologyId)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorUSCTI4FFULULULPF4MCULPF4
    cast = _swig_new_static_method(_itkMeshBasePython.itkCellInterfaceVisitorUSCTI4FFULULULPF4MCULPF4_cast)

# Register itkCellInterfaceVisitorUSCTI4FFULULULPF4MCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorUSCTI4FFULULULPF4MCULPF4_swigregister(itkCellInterfaceVisitorUSCTI4FFULULULPF4MCULPF4)
itkCellInterfaceVisitorUSCTI4FFULULULPF4MCULPF4_cast = _itkMeshBasePython.itkCellInterfaceVisitorUSCTI4FFULULULPF4MCULPF4_cast

class itkCellTraitsInfo2FFULULULPF2MCULPF2(object):
    r"""Proxy of C++ itkCellTraitsInfo2FFULULULPF2MCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellTraitsInfo2FFULULULPF2MCULPF2
        __init__(self, arg0) -> itkCellTraitsInfo2FFULULULPF2MCULPF2

        Parameters
        ----------
        arg0: itkCellTraitsInfo2FFULULULPF2MCULPF2 const &

        """
        _itkMeshBasePython.itkCellTraitsInfo2FFULULULPF2MCULPF2_swiginit(self, _itkMeshBasePython.new_itkCellTraitsInfo2FFULULULPF2MCULPF2(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellTraitsInfo2FFULULULPF2MCULPF2

# Register itkCellTraitsInfo2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellTraitsInfo2FFULULULPF2MCULPF2_swigregister(itkCellTraitsInfo2FFULULULPF2MCULPF2)

class itkCellTraitsInfo2FFULULULPF2VCULPF2(object):
    r"""Proxy of C++ itkCellTraitsInfo2FFULULULPF2VCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellTraitsInfo2FFULULULPF2VCULPF2
        __init__(self, arg0) -> itkCellTraitsInfo2FFULULULPF2VCULPF2

        Parameters
        ----------
        arg0: itkCellTraitsInfo2FFULULULPF2VCULPF2 const &

        """
        _itkMeshBasePython.itkCellTraitsInfo2FFULULULPF2VCULPF2_swiginit(self, _itkMeshBasePython.new_itkCellTraitsInfo2FFULULULPF2VCULPF2(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellTraitsInfo2FFULULULPF2VCULPF2

# Register itkCellTraitsInfo2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellTraitsInfo2FFULULULPF2VCULPF2_swigregister(itkCellTraitsInfo2FFULULULPF2VCULPF2)

class itkCellTraitsInfo3FFULULULPF3MCULPF3(object):
    r"""Proxy of C++ itkCellTraitsInfo3FFULULULPF3MCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellTraitsInfo3FFULULULPF3MCULPF3
        __init__(self, arg0) -> itkCellTraitsInfo3FFULULULPF3MCULPF3

        Parameters
        ----------
        arg0: itkCellTraitsInfo3FFULULULPF3MCULPF3 const &

        """
        _itkMeshBasePython.itkCellTraitsInfo3FFULULULPF3MCULPF3_swiginit(self, _itkMeshBasePython.new_itkCellTraitsInfo3FFULULULPF3MCULPF3(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellTraitsInfo3FFULULULPF3MCULPF3

# Register itkCellTraitsInfo3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellTraitsInfo3FFULULULPF3MCULPF3_swigregister(itkCellTraitsInfo3FFULULULPF3MCULPF3)

class itkCellTraitsInfo3FFULULULPF3VCULPF3(object):
    r"""Proxy of C++ itkCellTraitsInfo3FFULULULPF3VCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellTraitsInfo3FFULULULPF3VCULPF3
        __init__(self, arg0) -> itkCellTraitsInfo3FFULULULPF3VCULPF3

        Parameters
        ----------
        arg0: itkCellTraitsInfo3FFULULULPF3VCULPF3 const &

        """
        _itkMeshBasePython.itkCellTraitsInfo3FFULULULPF3VCULPF3_swiginit(self, _itkMeshBasePython.new_itkCellTraitsInfo3FFULULULPF3VCULPF3(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellTraitsInfo3FFULULULPF3VCULPF3

# Register itkCellTraitsInfo3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellTraitsInfo3FFULULULPF3VCULPF3_swigregister(itkCellTraitsInfo3FFULULULPF3VCULPF3)

class itkCellTraitsInfo4FFULULULPF4MCULPF4(object):
    r"""Proxy of C++ itkCellTraitsInfo4FFULULULPF4MCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellTraitsInfo4FFULULULPF4MCULPF4
        __init__(self, arg0) -> itkCellTraitsInfo4FFULULULPF4MCULPF4

        Parameters
        ----------
        arg0: itkCellTraitsInfo4FFULULULPF4MCULPF4 const &

        """
        _itkMeshBasePython.itkCellTraitsInfo4FFULULULPF4MCULPF4_swiginit(self, _itkMeshBasePython.new_itkCellTraitsInfo4FFULULULPF4MCULPF4(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellTraitsInfo4FFULULULPF4MCULPF4

# Register itkCellTraitsInfo4FFULULULPF4MCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellTraitsInfo4FFULULULPF4MCULPF4_swigregister(itkCellTraitsInfo4FFULULULPF4MCULPF4)

class itkCellTraitsInfo4FFULULULPF4VCULPF4(object):
    r"""Proxy of C++ itkCellTraitsInfo4FFULULULPF4VCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellTraitsInfo4FFULULULPF4VCULPF4
        __init__(self, arg0) -> itkCellTraitsInfo4FFULULULPF4VCULPF4

        Parameters
        ----------
        arg0: itkCellTraitsInfo4FFULULULPF4VCULPF4 const &

        """
        _itkMeshBasePython.itkCellTraitsInfo4FFULULULPF4VCULPF4_swiginit(self, _itkMeshBasePython.new_itkCellTraitsInfo4FFULULULPF4VCULPF4(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellTraitsInfo4FFULULULPF4VCULPF4

# Register itkCellTraitsInfo4FFULULULPF4VCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellTraitsInfo4FFULULULPF4VCULPF4_swigregister(itkCellTraitsInfo4FFULULULPF4VCULPF4)


def itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_New():
    return itkMapContainerULCIDCTI2FFULULULPF2MCULPF2.New()

class itkMapContainerULCIDCTI2FFULULULPF2MCULPF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULCIDCTI2FFULULULPF2MCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULCIDCTI2FFULULULPF2MCULPF2
        __init__(self, comp) -> itkMapContainerULCIDCTI2FFULULULPF2MCULPF2

        Parameters
        ----------
        comp: std::less< unsigned long > const &

        """
        _itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCIDCTI2FFULULULPF2MCULPF2(*args))
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCIDCTI2FFULULULPF2MCULPF2
    cast = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_cast)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIDCTI2FFULULULPF2MCULPF2

        Create a new object of the class itkMapContainerULCIDCTI2FFULULULPF2MCULPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCIDCTI2FFULULULPF2MCULPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCIDCTI2FFULULULPF2MCULPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCIDCTI2FFULULULPF2MCULPF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCIDCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_swigregister(itkMapContainerULCIDCTI2FFULULULPF2MCULPF2)
itkMapContainerULCIDCTI2FFULULULPF2MCULPF2___New_orig__ = _itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2___New_orig__
itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_cast = _itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_cast


def itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_New():
    return itkMapContainerULCIDCTI3FFULULULPF3MCULPF3.New()

class itkMapContainerULCIDCTI3FFULULULPF3MCULPF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULCIDCTI3FFULULULPF3MCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULCIDCTI3FFULULULPF3MCULPF3
        __init__(self, comp) -> itkMapContainerULCIDCTI3FFULULULPF3MCULPF3

        Parameters
        ----------
        comp: std::less< unsigned long > const &

        """
        _itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCIDCTI3FFULULULPF3MCULPF3(*args))
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCIDCTI3FFULULULPF3MCULPF3
    cast = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_cast)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIDCTI3FFULULULPF3MCULPF3

        Create a new object of the class itkMapContainerULCIDCTI3FFULULULPF3MCULPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCIDCTI3FFULULULPF3MCULPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCIDCTI3FFULULULPF3MCULPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCIDCTI3FFULULULPF3MCULPF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCIDCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_swigregister(itkMapContainerULCIDCTI3FFULULULPF3MCULPF3)
itkMapContainerULCIDCTI3FFULULULPF3MCULPF3___New_orig__ = _itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3___New_orig__
itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_cast = _itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_cast


def itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_New():
    return itkMapContainerULCIDCTI4FFULULULPF4MCULPF4.New()

class itkMapContainerULCIDCTI4FFULULULPF4MCULPF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULCIDCTI4FFULULULPF4MCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULCIDCTI4FFULULULPF4MCULPF4
        __init__(self, comp) -> itkMapContainerULCIDCTI4FFULULULPF4MCULPF4

        Parameters
        ----------
        comp: std::less< unsigned long > const &

        """
        _itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCIDCTI4FFULULULPF4MCULPF4(*args))
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCIDCTI4FFULULULPF4MCULPF4
    cast = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_cast)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIDCTI4FFULULULPF4MCULPF4

        Create a new object of the class itkMapContainerULCIDCTI4FFULULULPF4MCULPF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCIDCTI4FFULULULPF4MCULPF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCIDCTI4FFULULULPF4MCULPF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCIDCTI4FFULULULPF4MCULPF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCIDCTI4FFULULULPF4MCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_swigregister(itkMapContainerULCIDCTI4FFULULULPF4MCULPF4)
itkMapContainerULCIDCTI4FFULULULPF4MCULPF4___New_orig__ = _itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4___New_orig__
itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_cast = _itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_cast


def itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_New():
    return itkMapContainerULCIFCTI2FFULULULPF2MCULPF2.New()

class itkMapContainerULCIFCTI2FFULULULPF2MCULPF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULCIFCTI2FFULULULPF2MCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULCIFCTI2FFULULULPF2MCULPF2
        __init__(self, comp) -> itkMapContainerULCIFCTI2FFULULULPF2MCULPF2

        Parameters
        ----------
        comp: std::less< unsigned long > const &

        """
        _itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCIFCTI2FFULULULPF2MCULPF2(*args))
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCIFCTI2FFULULULPF2MCULPF2
    cast = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_cast)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIFCTI2FFULULULPF2MCULPF2

        Create a new object of the class itkMapContainerULCIFCTI2FFULULULPF2MCULPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCIFCTI2FFULULULPF2MCULPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCIFCTI2FFULULULPF2MCULPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCIFCTI2FFULULULPF2MCULPF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCIFCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_swigregister(itkMapContainerULCIFCTI2FFULULULPF2MCULPF2)
itkMapContainerULCIFCTI2FFULULULPF2MCULPF2___New_orig__ = _itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2___New_orig__
itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_cast = _itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_cast


def itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_New():
    return itkMapContainerULCIFCTI3FFULULULPF3MCULPF3.New()

class itkMapContainerULCIFCTI3FFULULULPF3MCULPF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULCIFCTI3FFULULULPF3MCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULCIFCTI3FFULULULPF3MCULPF3
        __init__(self, comp) -> itkMapContainerULCIFCTI3FFULULULPF3MCULPF3

        Parameters
        ----------
        comp: std::less< unsigned long > const &

        """
        _itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCIFCTI3FFULULULPF3MCULPF3(*args))
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCIFCTI3FFULULULPF3MCULPF3
    cast = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_cast)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIFCTI3FFULULULPF3MCULPF3

        Create a new object of the class itkMapContainerULCIFCTI3FFULULULPF3MCULPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCIFCTI3FFULULULPF3MCULPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCIFCTI3FFULULULPF3MCULPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCIFCTI3FFULULULPF3MCULPF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCIFCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_swigregister(itkMapContainerULCIFCTI3FFULULULPF3MCULPF3)
itkMapContainerULCIFCTI3FFULULULPF3MCULPF3___New_orig__ = _itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3___New_orig__
itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_cast = _itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_cast


def itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_New():
    return itkMapContainerULCIFCTI4FFULULULPF4MCULPF4.New()

class itkMapContainerULCIFCTI4FFULULULPF4MCULPF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULCIFCTI4FFULULULPF4MCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULCIFCTI4FFULULULPF4MCULPF4
        __init__(self, comp) -> itkMapContainerULCIFCTI4FFULULULPF4MCULPF4

        Parameters
        ----------
        comp: std::less< unsigned long > const &

        """
        _itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCIFCTI4FFULULULPF4MCULPF4(*args))
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCIFCTI4FFULULULPF4MCULPF4
    cast = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_cast)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIFCTI4FFULULULPF4MCULPF4

        Create a new object of the class itkMapContainerULCIFCTI4FFULULULPF4MCULPF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCIFCTI4FFULULULPF4MCULPF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCIFCTI4FFULULULPF4MCULPF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCIFCTI4FFULULULPF4MCULPF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCIFCTI4FFULULULPF4MCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_swigregister(itkMapContainerULCIFCTI4FFULULULPF4MCULPF4)
itkMapContainerULCIFCTI4FFULULULPF4MCULPF4___New_orig__ = _itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4___New_orig__
itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_cast = _itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_cast


def itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_New():
    return itkMapContainerULCISSCTI2FFULULULPF2MCULPF2.New()

class itkMapContainerULCISSCTI2FFULULULPF2MCULPF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULCISSCTI2FFULULULPF2MCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULCISSCTI2FFULULULPF2MCULPF2
        __init__(self, comp) -> itkMapContainerULCISSCTI2FFULULULPF2MCULPF2

        Parameters
        ----------
        comp: std::less< unsigned long > const &

        """
        _itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCISSCTI2FFULULULPF2MCULPF2(*args))
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCISSCTI2FFULULULPF2MCULPF2
    cast = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_cast)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCISSCTI2FFULULULPF2MCULPF2

        Create a new object of the class itkMapContainerULCISSCTI2FFULULULPF2MCULPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCISSCTI2FFULULULPF2MCULPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCISSCTI2FFULULULPF2MCULPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCISSCTI2FFULULULPF2MCULPF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCISSCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_swigregister(itkMapContainerULCISSCTI2FFULULULPF2MCULPF2)
itkMapContainerULCISSCTI2FFULULULPF2MCULPF2___New_orig__ = _itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2___New_orig__
itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_cast = _itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_cast


def itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_New():
    return itkMapContainerULCISSCTI3FFULULULPF3MCULPF3.New()

class itkMapContainerULCISSCTI3FFULULULPF3MCULPF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULCISSCTI3FFULULULPF3MCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULCISSCTI3FFULULULPF3MCULPF3
        __init__(self, comp) -> itkMapContainerULCISSCTI3FFULULULPF3MCULPF3

        Parameters
        ----------
        comp: std::less< unsigned long > const &

        """
        _itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCISSCTI3FFULULULPF3MCULPF3(*args))
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCISSCTI3FFULULULPF3MCULPF3
    cast = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_cast)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCISSCTI3FFULULULPF3MCULPF3

        Create a new object of the class itkMapContainerULCISSCTI3FFULULULPF3MCULPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCISSCTI3FFULULULPF3MCULPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCISSCTI3FFULULULPF3MCULPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCISSCTI3FFULULULPF3MCULPF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCISSCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_swigregister(itkMapContainerULCISSCTI3FFULULULPF3MCULPF3)
itkMapContainerULCISSCTI3FFULULULPF3MCULPF3___New_orig__ = _itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3___New_orig__
itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_cast = _itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_cast


def itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_New():
    return itkMapContainerULCISSCTI4FFULULULPF4MCULPF4.New()

class itkMapContainerULCISSCTI4FFULULULPF4MCULPF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULCISSCTI4FFULULULPF4MCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULCISSCTI4FFULULULPF4MCULPF4
        __init__(self, comp) -> itkMapContainerULCISSCTI4FFULULULPF4MCULPF4

        Parameters
        ----------
        comp: std::less< unsigned long > const &

        """
        _itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCISSCTI4FFULULULPF4MCULPF4(*args))
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCISSCTI4FFULULULPF4MCULPF4
    cast = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_cast)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCISSCTI4FFULULULPF4MCULPF4

        Create a new object of the class itkMapContainerULCISSCTI4FFULULULPF4MCULPF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCISSCTI4FFULULULPF4MCULPF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCISSCTI4FFULULULPF4MCULPF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCISSCTI4FFULULULPF4MCULPF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCISSCTI4FFULULULPF4MCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_swigregister(itkMapContainerULCISSCTI4FFULULULPF4MCULPF4)
itkMapContainerULCISSCTI4FFULULULPF4MCULPF4___New_orig__ = _itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4___New_orig__
itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_cast = _itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_cast


def itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_New():
    return itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2.New()

class itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2
        __init__(self, comp) -> itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2

        Parameters
        ----------
        comp: std::less< unsigned long > const &

        """
        _itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2(*args))
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2
    cast = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_cast)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2

        Create a new object of the class itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_swigregister(itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2)
itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2___New_orig__ = _itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2___New_orig__
itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_cast = _itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_cast


def itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_New():
    return itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3.New()

class itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3
        __init__(self, comp) -> itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3

        Parameters
        ----------
        comp: std::less< unsigned long > const &

        """
        _itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3(*args))
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3
    cast = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_cast)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3

        Create a new object of the class itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_swigregister(itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3)
itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3___New_orig__ = _itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3___New_orig__
itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_cast = _itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_cast


def itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_New():
    return itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4.New()

class itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4
        __init__(self, comp) -> itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4

        Parameters
        ----------
        comp: std::less< unsigned long > const &

        """
        _itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4(*args))
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4
    cast = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_cast)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4

        Create a new object of the class itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_swigregister(itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4)
itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4___New_orig__ = _itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4___New_orig__
itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_cast = _itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_cast


def itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_New():
    return itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2.New()

class itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2
        __init__(self, comp) -> itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2

        Parameters
        ----------
        comp: std::less< unsigned long > const &

        """
        _itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2(*args))
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2
    cast = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_cast)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2

        Create a new object of the class itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_swigregister(itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2)
itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2___New_orig__ = _itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2___New_orig__
itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_cast = _itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_cast


def itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_New():
    return itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3.New()

class itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3
        __init__(self, comp) -> itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3

        Parameters
        ----------
        comp: std::less< unsigned long > const &

        """
        _itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3(*args))
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3
    cast = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_cast)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3

        Create a new object of the class itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_swigregister(itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3)
itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3___New_orig__ = _itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3___New_orig__
itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_cast = _itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_cast


def itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_New():
    return itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4.New()

class itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4
        __init__(self, comp) -> itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4

        Parameters
        ----------
        comp: std::less< unsigned long > const &

        """
        _itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4(*args))
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4
    cast = _swig_new_static_method(_itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_cast)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4

        Create a new object of the class itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_swigregister(itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4)
itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4___New_orig__ = _itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4___New_orig__
itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_cast = _itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_cast


def itkMeshAD2_New():
    return itkMeshAD2.New()

class itkMeshAD2(itk.itkPointSetPython.itkPointSetAD2):
    r"""Proxy of C++ itkMeshAD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMeshAD2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD2_Clone)
    GetNumberOfCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD2_GetNumberOfCells)
    PassStructure = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD2_PassStructure)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD2_GetBoundingBox)
    SetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD2_SetCellLinks)
    GetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD2_GetCellLinks)
    SetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD2_SetCells)
    SetCellsArray = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD2_SetCellsArray)
    GetCellsArray = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD2_GetCellsArray)
    GetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD2_GetCells)
    DeleteUnusedCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD2_DeleteUnusedCellData)
    SetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD2_SetCell)
    GetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD2_GetCell)
    SetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD2_SetCellData)
    GetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD2_GetCellData)
    SetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD2_SetBoundaryAssignment)
    GetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD2_GetBoundaryAssignment)
    RemoveBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD2_RemoveBoundaryAssignment)
    GetNumberOfCellBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD2_GetNumberOfCellBoundaryFeatures)
    GetCellBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD2_GetCellBoundaryFeature)
    GetCellBoundaryFeatureNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD2_GetCellBoundaryFeatureNeighbors)
    GetCellNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD2_GetCellNeighbors)
    GetAssignedCellBoundaryIfOneExists = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD2_GetAssignedCellBoundaryIfOneExists)
    BuildCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD2_BuildCellLinks)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD2_Accept)
    SetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD2_SetCellsAllocationMethod)
    GetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD2_GetCellsAllocationMethod)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshAD2
    cast = _swig_new_static_method(_itkMeshBasePython.itkMeshAD2_cast)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshAD2

        Create a new object of the class itkMeshAD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshAD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshAD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshAD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshAD2 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshAD2_swigregister(itkMeshAD2)
itkMeshAD2___New_orig__ = _itkMeshBasePython.itkMeshAD2___New_orig__
itkMeshAD2_cast = _itkMeshBasePython.itkMeshAD2_cast


def itkMeshAD3_New():
    return itkMeshAD3.New()

class itkMeshAD3(itk.itkPointSetPython.itkPointSetAD3):
    r"""Proxy of C++ itkMeshAD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMeshAD3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD3_Clone)
    GetNumberOfCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD3_GetNumberOfCells)
    PassStructure = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD3_PassStructure)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD3_GetBoundingBox)
    SetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD3_SetCellLinks)
    GetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD3_GetCellLinks)
    SetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD3_SetCells)
    SetCellsArray = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD3_SetCellsArray)
    GetCellsArray = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD3_GetCellsArray)
    GetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD3_GetCells)
    DeleteUnusedCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD3_DeleteUnusedCellData)
    SetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD3_SetCell)
    GetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD3_GetCell)
    SetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD3_SetCellData)
    GetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD3_GetCellData)
    SetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD3_SetBoundaryAssignment)
    GetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD3_GetBoundaryAssignment)
    RemoveBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD3_RemoveBoundaryAssignment)
    GetNumberOfCellBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD3_GetNumberOfCellBoundaryFeatures)
    GetCellBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD3_GetCellBoundaryFeature)
    GetCellBoundaryFeatureNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD3_GetCellBoundaryFeatureNeighbors)
    GetCellNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD3_GetCellNeighbors)
    GetAssignedCellBoundaryIfOneExists = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD3_GetAssignedCellBoundaryIfOneExists)
    BuildCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD3_BuildCellLinks)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD3_Accept)
    SetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD3_SetCellsAllocationMethod)
    GetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD3_GetCellsAllocationMethod)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshAD3
    cast = _swig_new_static_method(_itkMeshBasePython.itkMeshAD3_cast)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshAD3

        Create a new object of the class itkMeshAD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshAD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshAD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshAD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshAD3 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshAD3_swigregister(itkMeshAD3)
itkMeshAD3___New_orig__ = _itkMeshBasePython.itkMeshAD3___New_orig__
itkMeshAD3_cast = _itkMeshBasePython.itkMeshAD3_cast


def itkMeshAD4_New():
    return itkMeshAD4.New()

class itkMeshAD4(itk.itkPointSetPython.itkPointSetAD4):
    r"""Proxy of C++ itkMeshAD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMeshAD4___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD4_Clone)
    GetNumberOfCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD4_GetNumberOfCells)
    PassStructure = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD4_PassStructure)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD4_GetBoundingBox)
    SetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD4_SetCellLinks)
    GetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD4_GetCellLinks)
    SetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD4_SetCells)
    SetCellsArray = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD4_SetCellsArray)
    GetCellsArray = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD4_GetCellsArray)
    GetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD4_GetCells)
    DeleteUnusedCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD4_DeleteUnusedCellData)
    SetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD4_SetCell)
    GetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD4_GetCell)
    SetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD4_SetCellData)
    GetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD4_GetCellData)
    SetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD4_SetBoundaryAssignment)
    GetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD4_GetBoundaryAssignment)
    RemoveBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD4_RemoveBoundaryAssignment)
    GetNumberOfCellBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD4_GetNumberOfCellBoundaryFeatures)
    GetCellBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD4_GetCellBoundaryFeature)
    GetCellBoundaryFeatureNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD4_GetCellBoundaryFeatureNeighbors)
    GetCellNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD4_GetCellNeighbors)
    GetAssignedCellBoundaryIfOneExists = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD4_GetAssignedCellBoundaryIfOneExists)
    BuildCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD4_BuildCellLinks)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD4_Accept)
    SetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD4_SetCellsAllocationMethod)
    GetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshAD4_GetCellsAllocationMethod)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshAD4
    cast = _swig_new_static_method(_itkMeshBasePython.itkMeshAD4_cast)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshAD4

        Create a new object of the class itkMeshAD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshAD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshAD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshAD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshAD4 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshAD4_swigregister(itkMeshAD4)
itkMeshAD4___New_orig__ = _itkMeshBasePython.itkMeshAD4___New_orig__
itkMeshAD4_cast = _itkMeshBasePython.itkMeshAD4_cast


def itkMeshD2_New():
    return itkMeshD2.New()

class itkMeshD2(itk.itkPointSetPython.itkPointSetD2):
    r"""Proxy of C++ itkMeshD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMeshD2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_Clone)
    GetNumberOfCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_GetNumberOfCells)
    PassStructure = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_PassStructure)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_GetBoundingBox)
    SetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_SetCellLinks)
    GetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_GetCellLinks)
    SetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_SetCells)
    SetCellsArray = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_SetCellsArray)
    GetCellsArray = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_GetCellsArray)
    GetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_GetCells)
    DeleteUnusedCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_DeleteUnusedCellData)
    SetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_SetCell)
    GetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_GetCell)
    SetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_SetCellData)
    GetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_GetCellData)
    SetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_SetBoundaryAssignment)
    GetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_GetBoundaryAssignment)
    RemoveBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_RemoveBoundaryAssignment)
    GetNumberOfCellBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_GetNumberOfCellBoundaryFeatures)
    GetCellBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_GetCellBoundaryFeature)
    GetCellBoundaryFeatureNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_GetCellBoundaryFeatureNeighbors)
    GetCellNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_GetCellNeighbors)
    GetAssignedCellBoundaryIfOneExists = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_GetAssignedCellBoundaryIfOneExists)
    BuildCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_BuildCellLinks)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_Accept)
    SetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_SetCellsAllocationMethod)
    GetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshD2_GetCellsAllocationMethod)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshD2
    cast = _swig_new_static_method(_itkMeshBasePython.itkMeshD2_cast)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshD2

        Create a new object of the class itkMeshD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshD2 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshD2_swigregister(itkMeshD2)
itkMeshD2___New_orig__ = _itkMeshBasePython.itkMeshD2___New_orig__
itkMeshD2_cast = _itkMeshBasePython.itkMeshD2_cast


def itkMeshD3_New():
    return itkMeshD3.New()

class itkMeshD3(itk.itkPointSetPython.itkPointSetD3):
    r"""Proxy of C++ itkMeshD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMeshD3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_Clone)
    GetNumberOfCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_GetNumberOfCells)
    PassStructure = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_PassStructure)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_GetBoundingBox)
    SetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_SetCellLinks)
    GetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_GetCellLinks)
    SetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_SetCells)
    SetCellsArray = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_SetCellsArray)
    GetCellsArray = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_GetCellsArray)
    GetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_GetCells)
    DeleteUnusedCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_DeleteUnusedCellData)
    SetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_SetCell)
    GetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_GetCell)
    SetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_SetCellData)
    GetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_GetCellData)
    SetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_SetBoundaryAssignment)
    GetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_GetBoundaryAssignment)
    RemoveBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_RemoveBoundaryAssignment)
    GetNumberOfCellBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_GetNumberOfCellBoundaryFeatures)
    GetCellBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_GetCellBoundaryFeature)
    GetCellBoundaryFeatureNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_GetCellBoundaryFeatureNeighbors)
    GetCellNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_GetCellNeighbors)
    GetAssignedCellBoundaryIfOneExists = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_GetAssignedCellBoundaryIfOneExists)
    BuildCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_BuildCellLinks)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_Accept)
    SetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_SetCellsAllocationMethod)
    GetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshD3_GetCellsAllocationMethod)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshD3
    cast = _swig_new_static_method(_itkMeshBasePython.itkMeshD3_cast)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshD3

        Create a new object of the class itkMeshD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshD3 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshD3_swigregister(itkMeshD3)
itkMeshD3___New_orig__ = _itkMeshBasePython.itkMeshD3___New_orig__
itkMeshD3_cast = _itkMeshBasePython.itkMeshD3_cast


def itkMeshD4_New():
    return itkMeshD4.New()

class itkMeshD4(itk.itkPointSetPython.itkPointSetD4):
    r"""Proxy of C++ itkMeshD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMeshD4___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMeshD4_Clone)
    GetNumberOfCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshD4_GetNumberOfCells)
    PassStructure = _swig_new_instance_method(_itkMeshBasePython.itkMeshD4_PassStructure)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkMeshD4_GetBoundingBox)
    SetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshD4_SetCellLinks)
    GetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshD4_GetCellLinks)
    SetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshD4_SetCells)
    SetCellsArray = _swig_new_instance_method(_itkMeshBasePython.itkMeshD4_SetCellsArray)
    GetCellsArray = _swig_new_instance_method(_itkMeshBasePython.itkMeshD4_GetCellsArray)
    GetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshD4_GetCells)
    DeleteUnusedCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshD4_DeleteUnusedCellData)
    SetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshD4_SetCell)
    GetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshD4_GetCell)
    SetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshD4_SetCellData)
    GetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshD4_GetCellData)
    SetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshD4_SetBoundaryAssignment)
    GetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshD4_GetBoundaryAssignment)
    RemoveBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshD4_RemoveBoundaryAssignment)
    GetNumberOfCellBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkMeshD4_GetNumberOfCellBoundaryFeatures)
    GetCellBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkMeshD4_GetCellBoundaryFeature)
    GetCellBoundaryFeatureNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshD4_GetCellBoundaryFeatureNeighbors)
    GetCellNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshD4_GetCellNeighbors)
    GetAssignedCellBoundaryIfOneExists = _swig_new_instance_method(_itkMeshBasePython.itkMeshD4_GetAssignedCellBoundaryIfOneExists)
    BuildCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshD4_BuildCellLinks)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkMeshD4_Accept)
    SetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshD4_SetCellsAllocationMethod)
    GetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshD4_GetCellsAllocationMethod)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshD4
    cast = _swig_new_static_method(_itkMeshBasePython.itkMeshD4_cast)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshD4

        Create a new object of the class itkMeshD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshD4 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshD4_swigregister(itkMeshD4)
itkMeshD4___New_orig__ = _itkMeshBasePython.itkMeshD4___New_orig__
itkMeshD4_cast = _itkMeshBasePython.itkMeshD4_cast


def itkMeshF2_New():
    return itkMeshF2.New()

class itkMeshF2(itk.itkPointSetPython.itkPointSetF2):
    r"""Proxy of C++ itkMeshF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMeshF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_Clone)
    GetNumberOfCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_GetNumberOfCells)
    PassStructure = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_PassStructure)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_GetBoundingBox)
    SetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_SetCellLinks)
    GetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_GetCellLinks)
    SetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_SetCells)
    SetCellsArray = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_SetCellsArray)
    GetCellsArray = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_GetCellsArray)
    GetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_GetCells)
    DeleteUnusedCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_DeleteUnusedCellData)
    SetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_SetCell)
    GetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_GetCell)
    SetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_SetCellData)
    GetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_GetCellData)
    SetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_SetBoundaryAssignment)
    GetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_GetBoundaryAssignment)
    RemoveBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_RemoveBoundaryAssignment)
    GetNumberOfCellBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_GetNumberOfCellBoundaryFeatures)
    GetCellBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_GetCellBoundaryFeature)
    GetCellBoundaryFeatureNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_GetCellBoundaryFeatureNeighbors)
    GetCellNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_GetCellNeighbors)
    GetAssignedCellBoundaryIfOneExists = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_GetAssignedCellBoundaryIfOneExists)
    BuildCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_BuildCellLinks)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_Accept)
    SetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_SetCellsAllocationMethod)
    GetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshF2_GetCellsAllocationMethod)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshF2
    cast = _swig_new_static_method(_itkMeshBasePython.itkMeshF2_cast)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshF2

        Create a new object of the class itkMeshF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshF2 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshF2_swigregister(itkMeshF2)
itkMeshF2___New_orig__ = _itkMeshBasePython.itkMeshF2___New_orig__
itkMeshF2_cast = _itkMeshBasePython.itkMeshF2_cast


def itkMeshF3_New():
    return itkMeshF3.New()

class itkMeshF3(itk.itkPointSetPython.itkPointSetF3):
    r"""Proxy of C++ itkMeshF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMeshF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_Clone)
    GetNumberOfCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_GetNumberOfCells)
    PassStructure = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_PassStructure)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_GetBoundingBox)
    SetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_SetCellLinks)
    GetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_GetCellLinks)
    SetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_SetCells)
    SetCellsArray = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_SetCellsArray)
    GetCellsArray = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_GetCellsArray)
    GetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_GetCells)
    DeleteUnusedCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_DeleteUnusedCellData)
    SetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_SetCell)
    GetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_GetCell)
    SetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_SetCellData)
    GetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_GetCellData)
    SetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_SetBoundaryAssignment)
    GetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_GetBoundaryAssignment)
    RemoveBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_RemoveBoundaryAssignment)
    GetNumberOfCellBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_GetNumberOfCellBoundaryFeatures)
    GetCellBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_GetCellBoundaryFeature)
    GetCellBoundaryFeatureNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_GetCellBoundaryFeatureNeighbors)
    GetCellNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_GetCellNeighbors)
    GetAssignedCellBoundaryIfOneExists = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_GetAssignedCellBoundaryIfOneExists)
    BuildCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_BuildCellLinks)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_Accept)
    SetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_SetCellsAllocationMethod)
    GetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshF3_GetCellsAllocationMethod)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshF3
    cast = _swig_new_static_method(_itkMeshBasePython.itkMeshF3_cast)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshF3

        Create a new object of the class itkMeshF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshF3 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshF3_swigregister(itkMeshF3)
itkMeshF3___New_orig__ = _itkMeshBasePython.itkMeshF3___New_orig__
itkMeshF3_cast = _itkMeshBasePython.itkMeshF3_cast


def itkMeshF4_New():
    return itkMeshF4.New()

class itkMeshF4(itk.itkPointSetPython.itkPointSetF4):
    r"""Proxy of C++ itkMeshF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMeshF4___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMeshF4_Clone)
    GetNumberOfCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshF4_GetNumberOfCells)
    PassStructure = _swig_new_instance_method(_itkMeshBasePython.itkMeshF4_PassStructure)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkMeshF4_GetBoundingBox)
    SetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshF4_SetCellLinks)
    GetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshF4_GetCellLinks)
    SetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshF4_SetCells)
    SetCellsArray = _swig_new_instance_method(_itkMeshBasePython.itkMeshF4_SetCellsArray)
    GetCellsArray = _swig_new_instance_method(_itkMeshBasePython.itkMeshF4_GetCellsArray)
    GetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshF4_GetCells)
    DeleteUnusedCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshF4_DeleteUnusedCellData)
    SetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshF4_SetCell)
    GetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshF4_GetCell)
    SetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshF4_SetCellData)
    GetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshF4_GetCellData)
    SetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshF4_SetBoundaryAssignment)
    GetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshF4_GetBoundaryAssignment)
    RemoveBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshF4_RemoveBoundaryAssignment)
    GetNumberOfCellBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkMeshF4_GetNumberOfCellBoundaryFeatures)
    GetCellBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkMeshF4_GetCellBoundaryFeature)
    GetCellBoundaryFeatureNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshF4_GetCellBoundaryFeatureNeighbors)
    GetCellNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshF4_GetCellNeighbors)
    GetAssignedCellBoundaryIfOneExists = _swig_new_instance_method(_itkMeshBasePython.itkMeshF4_GetAssignedCellBoundaryIfOneExists)
    BuildCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshF4_BuildCellLinks)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkMeshF4_Accept)
    SetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshF4_SetCellsAllocationMethod)
    GetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshF4_GetCellsAllocationMethod)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshF4
    cast = _swig_new_static_method(_itkMeshBasePython.itkMeshF4_cast)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshF4

        Create a new object of the class itkMeshF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshF4 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshF4_swigregister(itkMeshF4)
itkMeshF4___New_orig__ = _itkMeshBasePython.itkMeshF4___New_orig__
itkMeshF4_cast = _itkMeshBasePython.itkMeshF4_cast


def itkMeshSS2_New():
    return itkMeshSS2.New()

class itkMeshSS2(itk.itkPointSetPython.itkPointSetSS2):
    r"""Proxy of C++ itkMeshSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMeshSS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_Clone)
    GetNumberOfCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_GetNumberOfCells)
    PassStructure = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_PassStructure)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_GetBoundingBox)
    SetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_SetCellLinks)
    GetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_GetCellLinks)
    SetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_SetCells)
    SetCellsArray = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_SetCellsArray)
    GetCellsArray = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_GetCellsArray)
    GetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_GetCells)
    DeleteUnusedCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_DeleteUnusedCellData)
    SetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_SetCell)
    GetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_GetCell)
    SetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_SetCellData)
    GetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_GetCellData)
    SetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_SetBoundaryAssignment)
    GetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_GetBoundaryAssignment)
    RemoveBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_RemoveBoundaryAssignment)
    GetNumberOfCellBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_GetNumberOfCellBoundaryFeatures)
    GetCellBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_GetCellBoundaryFeature)
    GetCellBoundaryFeatureNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_GetCellBoundaryFeatureNeighbors)
    GetCellNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_GetCellNeighbors)
    GetAssignedCellBoundaryIfOneExists = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_GetAssignedCellBoundaryIfOneExists)
    BuildCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_BuildCellLinks)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_Accept)
    SetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_SetCellsAllocationMethod)
    GetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS2_GetCellsAllocationMethod)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshSS2
    cast = _swig_new_static_method(_itkMeshBasePython.itkMeshSS2_cast)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshSS2

        Create a new object of the class itkMeshSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshSS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshSS2 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshSS2_swigregister(itkMeshSS2)
itkMeshSS2___New_orig__ = _itkMeshBasePython.itkMeshSS2___New_orig__
itkMeshSS2_cast = _itkMeshBasePython.itkMeshSS2_cast


def itkMeshSS3_New():
    return itkMeshSS3.New()

class itkMeshSS3(itk.itkPointSetPython.itkPointSetSS3):
    r"""Proxy of C++ itkMeshSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMeshSS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_Clone)
    GetNumberOfCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_GetNumberOfCells)
    PassStructure = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_PassStructure)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_GetBoundingBox)
    SetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_SetCellLinks)
    GetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_GetCellLinks)
    SetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_SetCells)
    SetCellsArray = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_SetCellsArray)
    GetCellsArray = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_GetCellsArray)
    GetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_GetCells)
    DeleteUnusedCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_DeleteUnusedCellData)
    SetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_SetCell)
    GetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_GetCell)
    SetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_SetCellData)
    GetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_GetCellData)
    SetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_SetBoundaryAssignment)
    GetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_GetBoundaryAssignment)
    RemoveBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_RemoveBoundaryAssignment)
    GetNumberOfCellBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_GetNumberOfCellBoundaryFeatures)
    GetCellBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_GetCellBoundaryFeature)
    GetCellBoundaryFeatureNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_GetCellBoundaryFeatureNeighbors)
    GetCellNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_GetCellNeighbors)
    GetAssignedCellBoundaryIfOneExists = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_GetAssignedCellBoundaryIfOneExists)
    BuildCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_BuildCellLinks)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_Accept)
    SetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_SetCellsAllocationMethod)
    GetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS3_GetCellsAllocationMethod)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshSS3
    cast = _swig_new_static_method(_itkMeshBasePython.itkMeshSS3_cast)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshSS3

        Create a new object of the class itkMeshSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshSS3 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshSS3_swigregister(itkMeshSS3)
itkMeshSS3___New_orig__ = _itkMeshBasePython.itkMeshSS3___New_orig__
itkMeshSS3_cast = _itkMeshBasePython.itkMeshSS3_cast


def itkMeshSS4_New():
    return itkMeshSS4.New()

class itkMeshSS4(itk.itkPointSetPython.itkPointSetSS4):
    r"""Proxy of C++ itkMeshSS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMeshSS4___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS4_Clone)
    GetNumberOfCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS4_GetNumberOfCells)
    PassStructure = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS4_PassStructure)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS4_GetBoundingBox)
    SetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS4_SetCellLinks)
    GetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS4_GetCellLinks)
    SetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS4_SetCells)
    SetCellsArray = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS4_SetCellsArray)
    GetCellsArray = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS4_GetCellsArray)
    GetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS4_GetCells)
    DeleteUnusedCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS4_DeleteUnusedCellData)
    SetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS4_SetCell)
    GetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS4_GetCell)
    SetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS4_SetCellData)
    GetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS4_GetCellData)
    SetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS4_SetBoundaryAssignment)
    GetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS4_GetBoundaryAssignment)
    RemoveBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS4_RemoveBoundaryAssignment)
    GetNumberOfCellBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS4_GetNumberOfCellBoundaryFeatures)
    GetCellBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS4_GetCellBoundaryFeature)
    GetCellBoundaryFeatureNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS4_GetCellBoundaryFeatureNeighbors)
    GetCellNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS4_GetCellNeighbors)
    GetAssignedCellBoundaryIfOneExists = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS4_GetAssignedCellBoundaryIfOneExists)
    BuildCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS4_BuildCellLinks)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS4_Accept)
    SetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS4_SetCellsAllocationMethod)
    GetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshSS4_GetCellsAllocationMethod)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshSS4
    cast = _swig_new_static_method(_itkMeshBasePython.itkMeshSS4_cast)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshSS4

        Create a new object of the class itkMeshSS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshSS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshSS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshSS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshSS4 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshSS4_swigregister(itkMeshSS4)
itkMeshSS4___New_orig__ = _itkMeshBasePython.itkMeshSS4___New_orig__
itkMeshSS4_cast = _itkMeshBasePython.itkMeshSS4_cast


def itkMeshUC2_New():
    return itkMeshUC2.New()

class itkMeshUC2(itk.itkPointSetPython.itkPointSetUC2):
    r"""Proxy of C++ itkMeshUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMeshUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_Clone)
    GetNumberOfCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_GetNumberOfCells)
    PassStructure = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_PassStructure)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_GetBoundingBox)
    SetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_SetCellLinks)
    GetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_GetCellLinks)
    SetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_SetCells)
    SetCellsArray = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_SetCellsArray)
    GetCellsArray = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_GetCellsArray)
    GetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_GetCells)
    DeleteUnusedCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_DeleteUnusedCellData)
    SetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_SetCell)
    GetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_GetCell)
    SetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_SetCellData)
    GetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_GetCellData)
    SetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_SetBoundaryAssignment)
    GetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_GetBoundaryAssignment)
    RemoveBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_RemoveBoundaryAssignment)
    GetNumberOfCellBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_GetNumberOfCellBoundaryFeatures)
    GetCellBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_GetCellBoundaryFeature)
    GetCellBoundaryFeatureNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_GetCellBoundaryFeatureNeighbors)
    GetCellNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_GetCellNeighbors)
    GetAssignedCellBoundaryIfOneExists = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_GetAssignedCellBoundaryIfOneExists)
    BuildCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_BuildCellLinks)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_Accept)
    SetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_SetCellsAllocationMethod)
    GetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC2_GetCellsAllocationMethod)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshUC2
    cast = _swig_new_static_method(_itkMeshBasePython.itkMeshUC2_cast)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshUC2

        Create a new object of the class itkMeshUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshUC2 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshUC2_swigregister(itkMeshUC2)
itkMeshUC2___New_orig__ = _itkMeshBasePython.itkMeshUC2___New_orig__
itkMeshUC2_cast = _itkMeshBasePython.itkMeshUC2_cast


def itkMeshUC3_New():
    return itkMeshUC3.New()

class itkMeshUC3(itk.itkPointSetPython.itkPointSetUC3):
    r"""Proxy of C++ itkMeshUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMeshUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_Clone)
    GetNumberOfCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_GetNumberOfCells)
    PassStructure = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_PassStructure)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_GetBoundingBox)
    SetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_SetCellLinks)
    GetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_GetCellLinks)
    SetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_SetCells)
    SetCellsArray = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_SetCellsArray)
    GetCellsArray = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_GetCellsArray)
    GetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_GetCells)
    DeleteUnusedCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_DeleteUnusedCellData)
    SetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_SetCell)
    GetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_GetCell)
    SetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_SetCellData)
    GetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_GetCellData)
    SetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_SetBoundaryAssignment)
    GetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_GetBoundaryAssignment)
    RemoveBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_RemoveBoundaryAssignment)
    GetNumberOfCellBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_GetNumberOfCellBoundaryFeatures)
    GetCellBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_GetCellBoundaryFeature)
    GetCellBoundaryFeatureNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_GetCellBoundaryFeatureNeighbors)
    GetCellNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_GetCellNeighbors)
    GetAssignedCellBoundaryIfOneExists = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_GetAssignedCellBoundaryIfOneExists)
    BuildCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_BuildCellLinks)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_Accept)
    SetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_SetCellsAllocationMethod)
    GetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC3_GetCellsAllocationMethod)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshUC3
    cast = _swig_new_static_method(_itkMeshBasePython.itkMeshUC3_cast)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshUC3

        Create a new object of the class itkMeshUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshUC3 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshUC3_swigregister(itkMeshUC3)
itkMeshUC3___New_orig__ = _itkMeshBasePython.itkMeshUC3___New_orig__
itkMeshUC3_cast = _itkMeshBasePython.itkMeshUC3_cast


def itkMeshUC4_New():
    return itkMeshUC4.New()

class itkMeshUC4(itk.itkPointSetPython.itkPointSetUC4):
    r"""Proxy of C++ itkMeshUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMeshUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC4_Clone)
    GetNumberOfCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC4_GetNumberOfCells)
    PassStructure = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC4_PassStructure)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC4_GetBoundingBox)
    SetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC4_SetCellLinks)
    GetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC4_GetCellLinks)
    SetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC4_SetCells)
    SetCellsArray = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC4_SetCellsArray)
    GetCellsArray = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC4_GetCellsArray)
    GetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC4_GetCells)
    DeleteUnusedCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC4_DeleteUnusedCellData)
    SetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC4_SetCell)
    GetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC4_GetCell)
    SetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC4_SetCellData)
    GetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC4_GetCellData)
    SetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC4_SetBoundaryAssignment)
    GetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC4_GetBoundaryAssignment)
    RemoveBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC4_RemoveBoundaryAssignment)
    GetNumberOfCellBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC4_GetNumberOfCellBoundaryFeatures)
    GetCellBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC4_GetCellBoundaryFeature)
    GetCellBoundaryFeatureNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC4_GetCellBoundaryFeatureNeighbors)
    GetCellNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC4_GetCellNeighbors)
    GetAssignedCellBoundaryIfOneExists = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC4_GetAssignedCellBoundaryIfOneExists)
    BuildCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC4_BuildCellLinks)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC4_Accept)
    SetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC4_SetCellsAllocationMethod)
    GetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshUC4_GetCellsAllocationMethod)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshUC4
    cast = _swig_new_static_method(_itkMeshBasePython.itkMeshUC4_cast)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshUC4

        Create a new object of the class itkMeshUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshUC4 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshUC4_swigregister(itkMeshUC4)
itkMeshUC4___New_orig__ = _itkMeshBasePython.itkMeshUC4___New_orig__
itkMeshUC4_cast = _itkMeshBasePython.itkMeshUC4_cast


def itkMeshUS2_New():
    return itkMeshUS2.New()

class itkMeshUS2(itk.itkPointSetPython.itkPointSetUS2):
    r"""Proxy of C++ itkMeshUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMeshUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_Clone)
    GetNumberOfCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_GetNumberOfCells)
    PassStructure = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_PassStructure)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_GetBoundingBox)
    SetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_SetCellLinks)
    GetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_GetCellLinks)
    SetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_SetCells)
    SetCellsArray = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_SetCellsArray)
    GetCellsArray = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_GetCellsArray)
    GetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_GetCells)
    DeleteUnusedCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_DeleteUnusedCellData)
    SetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_SetCell)
    GetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_GetCell)
    SetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_SetCellData)
    GetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_GetCellData)
    SetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_SetBoundaryAssignment)
    GetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_GetBoundaryAssignment)
    RemoveBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_RemoveBoundaryAssignment)
    GetNumberOfCellBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_GetNumberOfCellBoundaryFeatures)
    GetCellBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_GetCellBoundaryFeature)
    GetCellBoundaryFeatureNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_GetCellBoundaryFeatureNeighbors)
    GetCellNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_GetCellNeighbors)
    GetAssignedCellBoundaryIfOneExists = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_GetAssignedCellBoundaryIfOneExists)
    BuildCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_BuildCellLinks)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_Accept)
    SetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_SetCellsAllocationMethod)
    GetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS2_GetCellsAllocationMethod)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshUS2
    cast = _swig_new_static_method(_itkMeshBasePython.itkMeshUS2_cast)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshUS2

        Create a new object of the class itkMeshUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshUS2 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshUS2_swigregister(itkMeshUS2)
itkMeshUS2___New_orig__ = _itkMeshBasePython.itkMeshUS2___New_orig__
itkMeshUS2_cast = _itkMeshBasePython.itkMeshUS2_cast


def itkMeshUS3_New():
    return itkMeshUS3.New()

class itkMeshUS3(itk.itkPointSetPython.itkPointSetUS3):
    r"""Proxy of C++ itkMeshUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMeshUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_Clone)
    GetNumberOfCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_GetNumberOfCells)
    PassStructure = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_PassStructure)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_GetBoundingBox)
    SetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_SetCellLinks)
    GetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_GetCellLinks)
    SetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_SetCells)
    SetCellsArray = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_SetCellsArray)
    GetCellsArray = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_GetCellsArray)
    GetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_GetCells)
    DeleteUnusedCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_DeleteUnusedCellData)
    SetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_SetCell)
    GetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_GetCell)
    SetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_SetCellData)
    GetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_GetCellData)
    SetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_SetBoundaryAssignment)
    GetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_GetBoundaryAssignment)
    RemoveBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_RemoveBoundaryAssignment)
    GetNumberOfCellBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_GetNumberOfCellBoundaryFeatures)
    GetCellBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_GetCellBoundaryFeature)
    GetCellBoundaryFeatureNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_GetCellBoundaryFeatureNeighbors)
    GetCellNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_GetCellNeighbors)
    GetAssignedCellBoundaryIfOneExists = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_GetAssignedCellBoundaryIfOneExists)
    BuildCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_BuildCellLinks)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_Accept)
    SetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_SetCellsAllocationMethod)
    GetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS3_GetCellsAllocationMethod)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshUS3
    cast = _swig_new_static_method(_itkMeshBasePython.itkMeshUS3_cast)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshUS3

        Create a new object of the class itkMeshUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshUS3 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshUS3_swigregister(itkMeshUS3)
itkMeshUS3___New_orig__ = _itkMeshBasePython.itkMeshUS3___New_orig__
itkMeshUS3_cast = _itkMeshBasePython.itkMeshUS3_cast


def itkMeshUS4_New():
    return itkMeshUS4.New()

class itkMeshUS4(itk.itkPointSetPython.itkPointSetUS4):
    r"""Proxy of C++ itkMeshUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkMeshUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS4_Clone)
    GetNumberOfCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS4_GetNumberOfCells)
    PassStructure = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS4_PassStructure)
    GetBoundingBox = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS4_GetBoundingBox)
    SetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS4_SetCellLinks)
    GetCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS4_GetCellLinks)
    SetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS4_SetCells)
    SetCellsArray = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS4_SetCellsArray)
    GetCellsArray = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS4_GetCellsArray)
    GetCells = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS4_GetCells)
    DeleteUnusedCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS4_DeleteUnusedCellData)
    SetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS4_SetCell)
    GetCell = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS4_GetCell)
    SetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS4_SetCellData)
    GetCellData = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS4_GetCellData)
    SetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS4_SetBoundaryAssignment)
    GetBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS4_GetBoundaryAssignment)
    RemoveBoundaryAssignment = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS4_RemoveBoundaryAssignment)
    GetNumberOfCellBoundaryFeatures = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS4_GetNumberOfCellBoundaryFeatures)
    GetCellBoundaryFeature = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS4_GetCellBoundaryFeature)
    GetCellBoundaryFeatureNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS4_GetCellBoundaryFeatureNeighbors)
    GetCellNeighbors = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS4_GetCellNeighbors)
    GetAssignedCellBoundaryIfOneExists = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS4_GetAssignedCellBoundaryIfOneExists)
    BuildCellLinks = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS4_BuildCellLinks)
    Accept = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS4_Accept)
    SetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS4_SetCellsAllocationMethod)
    GetCellsAllocationMethod = _swig_new_instance_method(_itkMeshBasePython.itkMeshUS4_GetCellsAllocationMethod)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshUS4
    cast = _swig_new_static_method(_itkMeshBasePython.itkMeshUS4_cast)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshUS4

        Create a new object of the class itkMeshUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshUS4 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshUS4_swigregister(itkMeshUS4)
itkMeshUS4___New_orig__ = _itkMeshBasePython.itkMeshUS4___New_orig__
itkMeshUS4_cast = _itkMeshBasePython.itkMeshUS4_cast


def itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_New():
    return itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2.New()

class itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2
    cast = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2

        Create a new object of the class itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_swigregister(itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2)
itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2___New_orig__ = _itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2___New_orig__
itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_cast = _itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_cast


def itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_New():
    return itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3.New()

class itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3
    cast = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3

        Create a new object of the class itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_swigregister(itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3)
itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3___New_orig__ = _itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3___New_orig__
itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_cast = _itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_cast


def itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_New():
    return itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4.New()

class itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4
    cast = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4

        Create a new object of the class itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_swigregister(itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4)
itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4___New_orig__ = _itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4___New_orig__
itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_cast = _itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_cast


def itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_New():
    return itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2.New()

class itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2
    cast = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2

        Create a new object of the class itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_swigregister(itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2)
itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2___New_orig__ = _itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2___New_orig__
itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_cast = _itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_cast


def itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_New():
    return itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3.New()

class itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3
    cast = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3

        Create a new object of the class itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_swigregister(itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3)
itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3___New_orig__ = _itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3___New_orig__
itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_cast = _itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_cast


def itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_New():
    return itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4.New()

class itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4
    cast = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4

        Create a new object of the class itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_swigregister(itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4)
itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4___New_orig__ = _itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4___New_orig__
itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_cast = _itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_cast


def itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_New():
    return itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2.New()

class itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2
    cast = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2

        Create a new object of the class itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_swigregister(itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2)
itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2___New_orig__ = _itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2___New_orig__
itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_cast = _itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_cast


def itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_New():
    return itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3.New()

class itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3
    cast = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3

        Create a new object of the class itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_swigregister(itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3)
itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3___New_orig__ = _itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3___New_orig__
itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_cast = _itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_cast


def itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_New():
    return itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4.New()

class itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4
    cast = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4

        Create a new object of the class itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_swigregister(itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4)
itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4___New_orig__ = _itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4___New_orig__
itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_cast = _itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_cast


def itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_New():
    return itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2.New()

class itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2
    cast = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2

        Create a new object of the class itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_swigregister(itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2)
itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2___New_orig__ = _itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2___New_orig__
itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_cast = _itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_cast


def itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_New():
    return itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3.New()

class itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3
    cast = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3

        Create a new object of the class itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_swigregister(itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3)
itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3___New_orig__ = _itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3___New_orig__
itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_cast = _itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_cast


def itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_New():
    return itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4.New()

class itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4
    cast = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4

        Create a new object of the class itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_swigregister(itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4)
itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4___New_orig__ = _itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4___New_orig__
itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_cast = _itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_cast


def itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_New():
    return itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2.New()

class itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2
    cast = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2

        Create a new object of the class itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_swigregister(itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2)
itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2___New_orig__ = _itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2___New_orig__
itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_cast = _itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_cast


def itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_New():
    return itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3.New()

class itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3
    cast = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3

        Create a new object of the class itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_swigregister(itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3)
itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3___New_orig__ = _itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3___New_orig__
itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_cast = _itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_cast


def itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_New():
    return itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4.New()

class itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4
    cast = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4

        Create a new object of the class itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_swigregister(itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4)
itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4___New_orig__ = _itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4___New_orig__
itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_cast = _itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_cast


def itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_New():
    return itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2.New()

class itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2
    cast = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2

        Create a new object of the class itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_swigregister(itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2)
itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2___New_orig__ = _itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2___New_orig__
itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_cast = _itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_cast


def itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_New():
    return itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3.New()

class itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3
    cast = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3

        Create a new object of the class itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_swigregister(itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3)
itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3___New_orig__ = _itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3___New_orig__
itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_cast = _itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_cast


def itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_New():
    return itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4.New()

class itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4___New_orig__)
    Clone = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_GetElement)
    SetElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_SetElement)
    InsertElement = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_InsertElement)
    IndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_DeleteIndex)
    Size = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_Size)
    Reserve = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_Reserve)
    Squeeze = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_Squeeze)
    Initialize = _swig_new_instance_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_Initialize)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4
    cast = _swig_new_static_method(_itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4

        Create a new object of the class itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_swigregister(itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4)
itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4___New_orig__ = _itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4___New_orig__
itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_cast = _itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_cast



