# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKCommonPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkSpecialCoordinatesImagePython
else:
    import _itkSpecialCoordinatesImagePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkSpecialCoordinatesImagePython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkSpecialCoordinatesImagePython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkImageRegionPython

def itkSpecialCoordinatesImageCD2_New():
    return itkSpecialCoordinatesImageCD2.New()

class itkSpecialCoordinatesImageCD2(itk.itkImagePython.itkImageBase2):
    r"""Proxy of C++ itkSpecialCoordinatesImageCD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD2___New_orig__)
    Clone = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD2_Clone)
    Allocate = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD2_Allocate)
    FillBuffer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD2_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD2_SetPixel)
    GetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD2_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD2_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD2_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD2_SetPixelContainer)
    GetPixelAccessor = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD2_GetPixelAccessor)
    SetSpacing = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD2_SetSpacing)
    SetOrigin = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD2_SetOrigin)
    __swig_destroy__ = _itkSpecialCoordinatesImagePython.delete_itkSpecialCoordinatesImageCD2
    cast = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD2_cast)

    def New(*args, **kargs):
        """New() -> itkSpecialCoordinatesImageCD2

        Create a new object of the class itkSpecialCoordinatesImageCD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpecialCoordinatesImageCD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpecialCoordinatesImageCD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpecialCoordinatesImageCD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpecialCoordinatesImageCD2 in _itkSpecialCoordinatesImagePython:
_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD2_swigregister(itkSpecialCoordinatesImageCD2)
itkSpecialCoordinatesImageCD2___New_orig__ = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD2___New_orig__
itkSpecialCoordinatesImageCD2_cast = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD2_cast


def itkSpecialCoordinatesImageCD3_New():
    return itkSpecialCoordinatesImageCD3.New()

class itkSpecialCoordinatesImageCD3(itk.itkImagePython.itkImageBase3):
    r"""Proxy of C++ itkSpecialCoordinatesImageCD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD3___New_orig__)
    Clone = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD3_Clone)
    Allocate = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD3_Allocate)
    FillBuffer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD3_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD3_SetPixel)
    GetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD3_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD3_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD3_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD3_SetPixelContainer)
    GetPixelAccessor = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD3_GetPixelAccessor)
    SetSpacing = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD3_SetSpacing)
    SetOrigin = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD3_SetOrigin)
    __swig_destroy__ = _itkSpecialCoordinatesImagePython.delete_itkSpecialCoordinatesImageCD3
    cast = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD3_cast)

    def New(*args, **kargs):
        """New() -> itkSpecialCoordinatesImageCD3

        Create a new object of the class itkSpecialCoordinatesImageCD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpecialCoordinatesImageCD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpecialCoordinatesImageCD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpecialCoordinatesImageCD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpecialCoordinatesImageCD3 in _itkSpecialCoordinatesImagePython:
_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD3_swigregister(itkSpecialCoordinatesImageCD3)
itkSpecialCoordinatesImageCD3___New_orig__ = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD3___New_orig__
itkSpecialCoordinatesImageCD3_cast = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD3_cast


def itkSpecialCoordinatesImageCD4_New():
    return itkSpecialCoordinatesImageCD4.New()

class itkSpecialCoordinatesImageCD4(itk.itkImagePython.itkImageBase4):
    r"""Proxy of C++ itkSpecialCoordinatesImageCD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD4___New_orig__)
    Clone = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD4_Clone)
    Allocate = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD4_Allocate)
    FillBuffer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD4_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD4_SetPixel)
    GetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD4_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD4_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD4_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD4_SetPixelContainer)
    GetPixelAccessor = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD4_GetPixelAccessor)
    SetSpacing = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD4_SetSpacing)
    SetOrigin = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD4_SetOrigin)
    __swig_destroy__ = _itkSpecialCoordinatesImagePython.delete_itkSpecialCoordinatesImageCD4
    cast = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD4_cast)

    def New(*args, **kargs):
        """New() -> itkSpecialCoordinatesImageCD4

        Create a new object of the class itkSpecialCoordinatesImageCD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpecialCoordinatesImageCD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpecialCoordinatesImageCD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpecialCoordinatesImageCD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpecialCoordinatesImageCD4 in _itkSpecialCoordinatesImagePython:
_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD4_swigregister(itkSpecialCoordinatesImageCD4)
itkSpecialCoordinatesImageCD4___New_orig__ = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD4___New_orig__
itkSpecialCoordinatesImageCD4_cast = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCD4_cast


def itkSpecialCoordinatesImageCF2_New():
    return itkSpecialCoordinatesImageCF2.New()

class itkSpecialCoordinatesImageCF2(itk.itkImagePython.itkImageBase2):
    r"""Proxy of C++ itkSpecialCoordinatesImageCF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF2___New_orig__)
    Clone = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF2_Clone)
    Allocate = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF2_Allocate)
    FillBuffer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF2_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF2_SetPixel)
    GetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF2_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF2_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF2_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF2_SetPixelContainer)
    GetPixelAccessor = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF2_GetPixelAccessor)
    SetSpacing = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF2_SetSpacing)
    SetOrigin = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF2_SetOrigin)
    __swig_destroy__ = _itkSpecialCoordinatesImagePython.delete_itkSpecialCoordinatesImageCF2
    cast = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF2_cast)

    def New(*args, **kargs):
        """New() -> itkSpecialCoordinatesImageCF2

        Create a new object of the class itkSpecialCoordinatesImageCF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpecialCoordinatesImageCF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpecialCoordinatesImageCF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpecialCoordinatesImageCF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpecialCoordinatesImageCF2 in _itkSpecialCoordinatesImagePython:
_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF2_swigregister(itkSpecialCoordinatesImageCF2)
itkSpecialCoordinatesImageCF2___New_orig__ = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF2___New_orig__
itkSpecialCoordinatesImageCF2_cast = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF2_cast


def itkSpecialCoordinatesImageCF3_New():
    return itkSpecialCoordinatesImageCF3.New()

class itkSpecialCoordinatesImageCF3(itk.itkImagePython.itkImageBase3):
    r"""Proxy of C++ itkSpecialCoordinatesImageCF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF3___New_orig__)
    Clone = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF3_Clone)
    Allocate = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF3_Allocate)
    FillBuffer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF3_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF3_SetPixel)
    GetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF3_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF3_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF3_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF3_SetPixelContainer)
    GetPixelAccessor = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF3_GetPixelAccessor)
    SetSpacing = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF3_SetSpacing)
    SetOrigin = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF3_SetOrigin)
    __swig_destroy__ = _itkSpecialCoordinatesImagePython.delete_itkSpecialCoordinatesImageCF3
    cast = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF3_cast)

    def New(*args, **kargs):
        """New() -> itkSpecialCoordinatesImageCF3

        Create a new object of the class itkSpecialCoordinatesImageCF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpecialCoordinatesImageCF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpecialCoordinatesImageCF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpecialCoordinatesImageCF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpecialCoordinatesImageCF3 in _itkSpecialCoordinatesImagePython:
_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF3_swigregister(itkSpecialCoordinatesImageCF3)
itkSpecialCoordinatesImageCF3___New_orig__ = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF3___New_orig__
itkSpecialCoordinatesImageCF3_cast = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF3_cast


def itkSpecialCoordinatesImageCF4_New():
    return itkSpecialCoordinatesImageCF4.New()

class itkSpecialCoordinatesImageCF4(itk.itkImagePython.itkImageBase4):
    r"""Proxy of C++ itkSpecialCoordinatesImageCF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF4___New_orig__)
    Clone = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF4_Clone)
    Allocate = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF4_Allocate)
    FillBuffer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF4_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF4_SetPixel)
    GetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF4_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF4_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF4_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF4_SetPixelContainer)
    GetPixelAccessor = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF4_GetPixelAccessor)
    SetSpacing = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF4_SetSpacing)
    SetOrigin = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF4_SetOrigin)
    __swig_destroy__ = _itkSpecialCoordinatesImagePython.delete_itkSpecialCoordinatesImageCF4
    cast = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF4_cast)

    def New(*args, **kargs):
        """New() -> itkSpecialCoordinatesImageCF4

        Create a new object of the class itkSpecialCoordinatesImageCF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpecialCoordinatesImageCF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpecialCoordinatesImageCF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpecialCoordinatesImageCF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpecialCoordinatesImageCF4 in _itkSpecialCoordinatesImagePython:
_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF4_swigregister(itkSpecialCoordinatesImageCF4)
itkSpecialCoordinatesImageCF4___New_orig__ = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF4___New_orig__
itkSpecialCoordinatesImageCF4_cast = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageCF4_cast


def itkSpecialCoordinatesImageD2_New():
    return itkSpecialCoordinatesImageD2.New()

class itkSpecialCoordinatesImageD2(itk.itkImagePython.itkImageBase2):
    r"""Proxy of C++ itkSpecialCoordinatesImageD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD2___New_orig__)
    Clone = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD2_Clone)
    Allocate = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD2_Allocate)
    FillBuffer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD2_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD2_SetPixel)
    GetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD2_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD2_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD2_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD2_SetPixelContainer)
    GetPixelAccessor = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD2_GetPixelAccessor)
    SetSpacing = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD2_SetSpacing)
    SetOrigin = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD2_SetOrigin)
    __swig_destroy__ = _itkSpecialCoordinatesImagePython.delete_itkSpecialCoordinatesImageD2
    cast = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD2_cast)

    def New(*args, **kargs):
        """New() -> itkSpecialCoordinatesImageD2

        Create a new object of the class itkSpecialCoordinatesImageD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpecialCoordinatesImageD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpecialCoordinatesImageD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpecialCoordinatesImageD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpecialCoordinatesImageD2 in _itkSpecialCoordinatesImagePython:
_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD2_swigregister(itkSpecialCoordinatesImageD2)
itkSpecialCoordinatesImageD2___New_orig__ = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD2___New_orig__
itkSpecialCoordinatesImageD2_cast = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD2_cast


def itkSpecialCoordinatesImageD3_New():
    return itkSpecialCoordinatesImageD3.New()

class itkSpecialCoordinatesImageD3(itk.itkImagePython.itkImageBase3):
    r"""Proxy of C++ itkSpecialCoordinatesImageD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD3___New_orig__)
    Clone = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD3_Clone)
    Allocate = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD3_Allocate)
    FillBuffer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD3_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD3_SetPixel)
    GetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD3_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD3_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD3_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD3_SetPixelContainer)
    GetPixelAccessor = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD3_GetPixelAccessor)
    SetSpacing = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD3_SetSpacing)
    SetOrigin = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD3_SetOrigin)
    __swig_destroy__ = _itkSpecialCoordinatesImagePython.delete_itkSpecialCoordinatesImageD3
    cast = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD3_cast)

    def New(*args, **kargs):
        """New() -> itkSpecialCoordinatesImageD3

        Create a new object of the class itkSpecialCoordinatesImageD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpecialCoordinatesImageD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpecialCoordinatesImageD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpecialCoordinatesImageD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpecialCoordinatesImageD3 in _itkSpecialCoordinatesImagePython:
_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD3_swigregister(itkSpecialCoordinatesImageD3)
itkSpecialCoordinatesImageD3___New_orig__ = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD3___New_orig__
itkSpecialCoordinatesImageD3_cast = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD3_cast


def itkSpecialCoordinatesImageD4_New():
    return itkSpecialCoordinatesImageD4.New()

class itkSpecialCoordinatesImageD4(itk.itkImagePython.itkImageBase4):
    r"""Proxy of C++ itkSpecialCoordinatesImageD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD4___New_orig__)
    Clone = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD4_Clone)
    Allocate = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD4_Allocate)
    FillBuffer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD4_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD4_SetPixel)
    GetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD4_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD4_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD4_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD4_SetPixelContainer)
    GetPixelAccessor = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD4_GetPixelAccessor)
    SetSpacing = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD4_SetSpacing)
    SetOrigin = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD4_SetOrigin)
    __swig_destroy__ = _itkSpecialCoordinatesImagePython.delete_itkSpecialCoordinatesImageD4
    cast = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD4_cast)

    def New(*args, **kargs):
        """New() -> itkSpecialCoordinatesImageD4

        Create a new object of the class itkSpecialCoordinatesImageD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpecialCoordinatesImageD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpecialCoordinatesImageD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpecialCoordinatesImageD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpecialCoordinatesImageD4 in _itkSpecialCoordinatesImagePython:
_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD4_swigregister(itkSpecialCoordinatesImageD4)
itkSpecialCoordinatesImageD4___New_orig__ = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD4___New_orig__
itkSpecialCoordinatesImageD4_cast = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageD4_cast


def itkSpecialCoordinatesImageF2_New():
    return itkSpecialCoordinatesImageF2.New()

class itkSpecialCoordinatesImageF2(itk.itkImagePython.itkImageBase2):
    r"""Proxy of C++ itkSpecialCoordinatesImageF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF2___New_orig__)
    Clone = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF2_Clone)
    Allocate = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF2_Allocate)
    FillBuffer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF2_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF2_SetPixel)
    GetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF2_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF2_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF2_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF2_SetPixelContainer)
    GetPixelAccessor = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF2_GetPixelAccessor)
    SetSpacing = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF2_SetSpacing)
    SetOrigin = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF2_SetOrigin)
    __swig_destroy__ = _itkSpecialCoordinatesImagePython.delete_itkSpecialCoordinatesImageF2
    cast = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF2_cast)

    def New(*args, **kargs):
        """New() -> itkSpecialCoordinatesImageF2

        Create a new object of the class itkSpecialCoordinatesImageF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpecialCoordinatesImageF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpecialCoordinatesImageF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpecialCoordinatesImageF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpecialCoordinatesImageF2 in _itkSpecialCoordinatesImagePython:
_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF2_swigregister(itkSpecialCoordinatesImageF2)
itkSpecialCoordinatesImageF2___New_orig__ = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF2___New_orig__
itkSpecialCoordinatesImageF2_cast = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF2_cast


def itkSpecialCoordinatesImageF3_New():
    return itkSpecialCoordinatesImageF3.New()

class itkSpecialCoordinatesImageF3(itk.itkImagePython.itkImageBase3):
    r"""Proxy of C++ itkSpecialCoordinatesImageF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF3___New_orig__)
    Clone = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF3_Clone)
    Allocate = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF3_Allocate)
    FillBuffer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF3_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF3_SetPixel)
    GetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF3_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF3_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF3_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF3_SetPixelContainer)
    GetPixelAccessor = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF3_GetPixelAccessor)
    SetSpacing = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF3_SetSpacing)
    SetOrigin = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF3_SetOrigin)
    __swig_destroy__ = _itkSpecialCoordinatesImagePython.delete_itkSpecialCoordinatesImageF3
    cast = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF3_cast)

    def New(*args, **kargs):
        """New() -> itkSpecialCoordinatesImageF3

        Create a new object of the class itkSpecialCoordinatesImageF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpecialCoordinatesImageF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpecialCoordinatesImageF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpecialCoordinatesImageF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpecialCoordinatesImageF3 in _itkSpecialCoordinatesImagePython:
_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF3_swigregister(itkSpecialCoordinatesImageF3)
itkSpecialCoordinatesImageF3___New_orig__ = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF3___New_orig__
itkSpecialCoordinatesImageF3_cast = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF3_cast


def itkSpecialCoordinatesImageF4_New():
    return itkSpecialCoordinatesImageF4.New()

class itkSpecialCoordinatesImageF4(itk.itkImagePython.itkImageBase4):
    r"""Proxy of C++ itkSpecialCoordinatesImageF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF4___New_orig__)
    Clone = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF4_Clone)
    Allocate = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF4_Allocate)
    FillBuffer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF4_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF4_SetPixel)
    GetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF4_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF4_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF4_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF4_SetPixelContainer)
    GetPixelAccessor = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF4_GetPixelAccessor)
    SetSpacing = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF4_SetSpacing)
    SetOrigin = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF4_SetOrigin)
    __swig_destroy__ = _itkSpecialCoordinatesImagePython.delete_itkSpecialCoordinatesImageF4
    cast = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF4_cast)

    def New(*args, **kargs):
        """New() -> itkSpecialCoordinatesImageF4

        Create a new object of the class itkSpecialCoordinatesImageF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpecialCoordinatesImageF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpecialCoordinatesImageF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpecialCoordinatesImageF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpecialCoordinatesImageF4 in _itkSpecialCoordinatesImagePython:
_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF4_swigregister(itkSpecialCoordinatesImageF4)
itkSpecialCoordinatesImageF4___New_orig__ = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF4___New_orig__
itkSpecialCoordinatesImageF4_cast = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageF4_cast


def itkSpecialCoordinatesImageSS2_New():
    return itkSpecialCoordinatesImageSS2.New()

class itkSpecialCoordinatesImageSS2(itk.itkImagePython.itkImageBase2):
    r"""Proxy of C++ itkSpecialCoordinatesImageSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS2___New_orig__)
    Clone = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS2_Clone)
    Allocate = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS2_Allocate)
    FillBuffer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS2_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS2_SetPixel)
    GetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS2_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS2_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS2_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS2_SetPixelContainer)
    GetPixelAccessor = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS2_GetPixelAccessor)
    SetSpacing = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS2_SetSpacing)
    SetOrigin = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS2_SetOrigin)
    __swig_destroy__ = _itkSpecialCoordinatesImagePython.delete_itkSpecialCoordinatesImageSS2
    cast = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS2_cast)

    def New(*args, **kargs):
        """New() -> itkSpecialCoordinatesImageSS2

        Create a new object of the class itkSpecialCoordinatesImageSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpecialCoordinatesImageSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpecialCoordinatesImageSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpecialCoordinatesImageSS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpecialCoordinatesImageSS2 in _itkSpecialCoordinatesImagePython:
_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS2_swigregister(itkSpecialCoordinatesImageSS2)
itkSpecialCoordinatesImageSS2___New_orig__ = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS2___New_orig__
itkSpecialCoordinatesImageSS2_cast = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS2_cast


def itkSpecialCoordinatesImageSS3_New():
    return itkSpecialCoordinatesImageSS3.New()

class itkSpecialCoordinatesImageSS3(itk.itkImagePython.itkImageBase3):
    r"""Proxy of C++ itkSpecialCoordinatesImageSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS3___New_orig__)
    Clone = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS3_Clone)
    Allocate = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS3_Allocate)
    FillBuffer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS3_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS3_SetPixel)
    GetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS3_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS3_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS3_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS3_SetPixelContainer)
    GetPixelAccessor = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS3_GetPixelAccessor)
    SetSpacing = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS3_SetSpacing)
    SetOrigin = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS3_SetOrigin)
    __swig_destroy__ = _itkSpecialCoordinatesImagePython.delete_itkSpecialCoordinatesImageSS3
    cast = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS3_cast)

    def New(*args, **kargs):
        """New() -> itkSpecialCoordinatesImageSS3

        Create a new object of the class itkSpecialCoordinatesImageSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpecialCoordinatesImageSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpecialCoordinatesImageSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpecialCoordinatesImageSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpecialCoordinatesImageSS3 in _itkSpecialCoordinatesImagePython:
_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS3_swigregister(itkSpecialCoordinatesImageSS3)
itkSpecialCoordinatesImageSS3___New_orig__ = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS3___New_orig__
itkSpecialCoordinatesImageSS3_cast = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS3_cast


def itkSpecialCoordinatesImageSS4_New():
    return itkSpecialCoordinatesImageSS4.New()

class itkSpecialCoordinatesImageSS4(itk.itkImagePython.itkImageBase4):
    r"""Proxy of C++ itkSpecialCoordinatesImageSS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS4___New_orig__)
    Clone = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS4_Clone)
    Allocate = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS4_Allocate)
    FillBuffer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS4_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS4_SetPixel)
    GetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS4_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS4_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS4_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS4_SetPixelContainer)
    GetPixelAccessor = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS4_GetPixelAccessor)
    SetSpacing = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS4_SetSpacing)
    SetOrigin = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS4_SetOrigin)
    __swig_destroy__ = _itkSpecialCoordinatesImagePython.delete_itkSpecialCoordinatesImageSS4
    cast = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS4_cast)

    def New(*args, **kargs):
        """New() -> itkSpecialCoordinatesImageSS4

        Create a new object of the class itkSpecialCoordinatesImageSS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpecialCoordinatesImageSS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpecialCoordinatesImageSS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpecialCoordinatesImageSS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpecialCoordinatesImageSS4 in _itkSpecialCoordinatesImagePython:
_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS4_swigregister(itkSpecialCoordinatesImageSS4)
itkSpecialCoordinatesImageSS4___New_orig__ = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS4___New_orig__
itkSpecialCoordinatesImageSS4_cast = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageSS4_cast


def itkSpecialCoordinatesImageUC2_New():
    return itkSpecialCoordinatesImageUC2.New()

class itkSpecialCoordinatesImageUC2(itk.itkImagePython.itkImageBase2):
    r"""Proxy of C++ itkSpecialCoordinatesImageUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC2_Clone)
    Allocate = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC2_Allocate)
    FillBuffer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC2_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC2_SetPixel)
    GetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC2_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC2_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC2_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC2_SetPixelContainer)
    GetPixelAccessor = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC2_GetPixelAccessor)
    SetSpacing = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC2_SetSpacing)
    SetOrigin = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC2_SetOrigin)
    __swig_destroy__ = _itkSpecialCoordinatesImagePython.delete_itkSpecialCoordinatesImageUC2
    cast = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC2_cast)

    def New(*args, **kargs):
        """New() -> itkSpecialCoordinatesImageUC2

        Create a new object of the class itkSpecialCoordinatesImageUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpecialCoordinatesImageUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpecialCoordinatesImageUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpecialCoordinatesImageUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpecialCoordinatesImageUC2 in _itkSpecialCoordinatesImagePython:
_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC2_swigregister(itkSpecialCoordinatesImageUC2)
itkSpecialCoordinatesImageUC2___New_orig__ = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC2___New_orig__
itkSpecialCoordinatesImageUC2_cast = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC2_cast


def itkSpecialCoordinatesImageUC3_New():
    return itkSpecialCoordinatesImageUC3.New()

class itkSpecialCoordinatesImageUC3(itk.itkImagePython.itkImageBase3):
    r"""Proxy of C++ itkSpecialCoordinatesImageUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC3_Clone)
    Allocate = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC3_Allocate)
    FillBuffer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC3_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC3_SetPixel)
    GetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC3_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC3_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC3_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC3_SetPixelContainer)
    GetPixelAccessor = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC3_GetPixelAccessor)
    SetSpacing = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC3_SetSpacing)
    SetOrigin = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC3_SetOrigin)
    __swig_destroy__ = _itkSpecialCoordinatesImagePython.delete_itkSpecialCoordinatesImageUC3
    cast = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC3_cast)

    def New(*args, **kargs):
        """New() -> itkSpecialCoordinatesImageUC3

        Create a new object of the class itkSpecialCoordinatesImageUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpecialCoordinatesImageUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpecialCoordinatesImageUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpecialCoordinatesImageUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpecialCoordinatesImageUC3 in _itkSpecialCoordinatesImagePython:
_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC3_swigregister(itkSpecialCoordinatesImageUC3)
itkSpecialCoordinatesImageUC3___New_orig__ = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC3___New_orig__
itkSpecialCoordinatesImageUC3_cast = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC3_cast


def itkSpecialCoordinatesImageUC4_New():
    return itkSpecialCoordinatesImageUC4.New()

class itkSpecialCoordinatesImageUC4(itk.itkImagePython.itkImageBase4):
    r"""Proxy of C++ itkSpecialCoordinatesImageUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC4_Clone)
    Allocate = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC4_Allocate)
    FillBuffer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC4_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC4_SetPixel)
    GetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC4_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC4_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC4_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC4_SetPixelContainer)
    GetPixelAccessor = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC4_GetPixelAccessor)
    SetSpacing = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC4_SetSpacing)
    SetOrigin = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC4_SetOrigin)
    __swig_destroy__ = _itkSpecialCoordinatesImagePython.delete_itkSpecialCoordinatesImageUC4
    cast = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC4_cast)

    def New(*args, **kargs):
        """New() -> itkSpecialCoordinatesImageUC4

        Create a new object of the class itkSpecialCoordinatesImageUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpecialCoordinatesImageUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpecialCoordinatesImageUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpecialCoordinatesImageUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpecialCoordinatesImageUC4 in _itkSpecialCoordinatesImagePython:
_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC4_swigregister(itkSpecialCoordinatesImageUC4)
itkSpecialCoordinatesImageUC4___New_orig__ = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC4___New_orig__
itkSpecialCoordinatesImageUC4_cast = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUC4_cast


def itkSpecialCoordinatesImageUS2_New():
    return itkSpecialCoordinatesImageUS2.New()

class itkSpecialCoordinatesImageUS2(itk.itkImagePython.itkImageBase2):
    r"""Proxy of C++ itkSpecialCoordinatesImageUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS2_Clone)
    Allocate = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS2_Allocate)
    FillBuffer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS2_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS2_SetPixel)
    GetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS2_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS2_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS2_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS2_SetPixelContainer)
    GetPixelAccessor = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS2_GetPixelAccessor)
    SetSpacing = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS2_SetSpacing)
    SetOrigin = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS2_SetOrigin)
    __swig_destroy__ = _itkSpecialCoordinatesImagePython.delete_itkSpecialCoordinatesImageUS2
    cast = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS2_cast)

    def New(*args, **kargs):
        """New() -> itkSpecialCoordinatesImageUS2

        Create a new object of the class itkSpecialCoordinatesImageUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpecialCoordinatesImageUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpecialCoordinatesImageUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpecialCoordinatesImageUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpecialCoordinatesImageUS2 in _itkSpecialCoordinatesImagePython:
_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS2_swigregister(itkSpecialCoordinatesImageUS2)
itkSpecialCoordinatesImageUS2___New_orig__ = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS2___New_orig__
itkSpecialCoordinatesImageUS2_cast = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS2_cast


def itkSpecialCoordinatesImageUS3_New():
    return itkSpecialCoordinatesImageUS3.New()

class itkSpecialCoordinatesImageUS3(itk.itkImagePython.itkImageBase3):
    r"""Proxy of C++ itkSpecialCoordinatesImageUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS3_Clone)
    Allocate = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS3_Allocate)
    FillBuffer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS3_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS3_SetPixel)
    GetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS3_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS3_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS3_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS3_SetPixelContainer)
    GetPixelAccessor = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS3_GetPixelAccessor)
    SetSpacing = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS3_SetSpacing)
    SetOrigin = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS3_SetOrigin)
    __swig_destroy__ = _itkSpecialCoordinatesImagePython.delete_itkSpecialCoordinatesImageUS3
    cast = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS3_cast)

    def New(*args, **kargs):
        """New() -> itkSpecialCoordinatesImageUS3

        Create a new object of the class itkSpecialCoordinatesImageUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpecialCoordinatesImageUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpecialCoordinatesImageUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpecialCoordinatesImageUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpecialCoordinatesImageUS3 in _itkSpecialCoordinatesImagePython:
_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS3_swigregister(itkSpecialCoordinatesImageUS3)
itkSpecialCoordinatesImageUS3___New_orig__ = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS3___New_orig__
itkSpecialCoordinatesImageUS3_cast = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS3_cast


def itkSpecialCoordinatesImageUS4_New():
    return itkSpecialCoordinatesImageUS4.New()

class itkSpecialCoordinatesImageUS4(itk.itkImagePython.itkImageBase4):
    r"""Proxy of C++ itkSpecialCoordinatesImageUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS4_Clone)
    Allocate = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS4_Allocate)
    FillBuffer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS4_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS4_SetPixel)
    GetPixel = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS4_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS4_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS4_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS4_SetPixelContainer)
    GetPixelAccessor = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS4_GetPixelAccessor)
    SetSpacing = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS4_SetSpacing)
    SetOrigin = _swig_new_instance_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS4_SetOrigin)
    __swig_destroy__ = _itkSpecialCoordinatesImagePython.delete_itkSpecialCoordinatesImageUS4
    cast = _swig_new_static_method(_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS4_cast)

    def New(*args, **kargs):
        """New() -> itkSpecialCoordinatesImageUS4

        Create a new object of the class itkSpecialCoordinatesImageUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpecialCoordinatesImageUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpecialCoordinatesImageUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpecialCoordinatesImageUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpecialCoordinatesImageUS4 in _itkSpecialCoordinatesImagePython:
_itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS4_swigregister(itkSpecialCoordinatesImageUS4)
itkSpecialCoordinatesImageUS4___New_orig__ = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS4___New_orig__
itkSpecialCoordinatesImageUS4_cast = _itkSpecialCoordinatesImagePython.itkSpecialCoordinatesImageUS4_cast



