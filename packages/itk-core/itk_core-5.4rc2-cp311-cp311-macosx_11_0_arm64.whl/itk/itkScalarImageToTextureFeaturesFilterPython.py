# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKStatisticsPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkScalarImageToTextureFeaturesFilterPython
else:
    import _itkScalarImageToTextureFeaturesFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkScalarImageToTextureFeaturesFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkScalarImageToTextureFeaturesFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkImagePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkSizePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkArrayPython

def itkScalarImageToTextureFeaturesFilterID2_New():
    return itkScalarImageToTextureFeaturesFilterID2.New()

class itkScalarImageToTextureFeaturesFilterID2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToTextureFeaturesFilterID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_Clone)
    GetFeatureMeansOutput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_GetFeatureMeansOutput)
    GetFeatureStandardDeviationsOutput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_GetFeatureStandardDeviationsOutput)
    SetInput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_SetInput)
    GetInput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_GetInput)
    GetFeatureMeans = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_GetFeatureMeans)
    GetFeatureStandardDeviations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_GetFeatureStandardDeviations)
    SetRequestedFeatures = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_SetRequestedFeatures)
    GetRequestedFeatures = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_GetRequestedFeatures)
    SetOffsets = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_SetOffsets)
    GetOffsets = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_SetNumberOfBinsPerAxis)
    SetPixelValueMinMax = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_SetPixelValueMinMax)
    SetMaskImage = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_GetMaskImage)
    SetInsidePixelValue = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_SetInsidePixelValue)
    GetFastCalculations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_GetFastCalculations)
    SetFastCalculations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_SetFastCalculations)
    FastCalculationsOn = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_FastCalculationsOn)
    FastCalculationsOff = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_FastCalculationsOff)
    __swig_destroy__ = _itkScalarImageToTextureFeaturesFilterPython.delete_itkScalarImageToTextureFeaturesFilterID2
    cast = _swig_new_static_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_cast)

    def New(*args, **kargs):
        """New() -> itkScalarImageToTextureFeaturesFilterID2

        Create a new object of the class itkScalarImageToTextureFeaturesFilterID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToTextureFeaturesFilterID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToTextureFeaturesFilterID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToTextureFeaturesFilterID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToTextureFeaturesFilterID2 in _itkScalarImageToTextureFeaturesFilterPython:
_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_swigregister(itkScalarImageToTextureFeaturesFilterID2)
itkScalarImageToTextureFeaturesFilterID2___New_orig__ = _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2___New_orig__
itkScalarImageToTextureFeaturesFilterID2_cast = _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID2_cast


def itkScalarImageToTextureFeaturesFilterID3_New():
    return itkScalarImageToTextureFeaturesFilterID3.New()

class itkScalarImageToTextureFeaturesFilterID3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToTextureFeaturesFilterID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_Clone)
    GetFeatureMeansOutput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_GetFeatureMeansOutput)
    GetFeatureStandardDeviationsOutput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_GetFeatureStandardDeviationsOutput)
    SetInput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_SetInput)
    GetInput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_GetInput)
    GetFeatureMeans = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_GetFeatureMeans)
    GetFeatureStandardDeviations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_GetFeatureStandardDeviations)
    SetRequestedFeatures = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_SetRequestedFeatures)
    GetRequestedFeatures = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_GetRequestedFeatures)
    SetOffsets = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_SetOffsets)
    GetOffsets = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_SetNumberOfBinsPerAxis)
    SetPixelValueMinMax = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_SetPixelValueMinMax)
    SetMaskImage = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_GetMaskImage)
    SetInsidePixelValue = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_SetInsidePixelValue)
    GetFastCalculations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_GetFastCalculations)
    SetFastCalculations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_SetFastCalculations)
    FastCalculationsOn = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_FastCalculationsOn)
    FastCalculationsOff = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_FastCalculationsOff)
    __swig_destroy__ = _itkScalarImageToTextureFeaturesFilterPython.delete_itkScalarImageToTextureFeaturesFilterID3
    cast = _swig_new_static_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_cast)

    def New(*args, **kargs):
        """New() -> itkScalarImageToTextureFeaturesFilterID3

        Create a new object of the class itkScalarImageToTextureFeaturesFilterID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToTextureFeaturesFilterID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToTextureFeaturesFilterID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToTextureFeaturesFilterID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToTextureFeaturesFilterID3 in _itkScalarImageToTextureFeaturesFilterPython:
_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_swigregister(itkScalarImageToTextureFeaturesFilterID3)
itkScalarImageToTextureFeaturesFilterID3___New_orig__ = _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3___New_orig__
itkScalarImageToTextureFeaturesFilterID3_cast = _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID3_cast


def itkScalarImageToTextureFeaturesFilterID4_New():
    return itkScalarImageToTextureFeaturesFilterID4.New()

class itkScalarImageToTextureFeaturesFilterID4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToTextureFeaturesFilterID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_Clone)
    GetFeatureMeansOutput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_GetFeatureMeansOutput)
    GetFeatureStandardDeviationsOutput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_GetFeatureStandardDeviationsOutput)
    SetInput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_SetInput)
    GetInput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_GetInput)
    GetFeatureMeans = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_GetFeatureMeans)
    GetFeatureStandardDeviations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_GetFeatureStandardDeviations)
    SetRequestedFeatures = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_SetRequestedFeatures)
    GetRequestedFeatures = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_GetRequestedFeatures)
    SetOffsets = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_SetOffsets)
    GetOffsets = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_SetNumberOfBinsPerAxis)
    SetPixelValueMinMax = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_SetPixelValueMinMax)
    SetMaskImage = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_GetMaskImage)
    SetInsidePixelValue = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_SetInsidePixelValue)
    GetFastCalculations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_GetFastCalculations)
    SetFastCalculations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_SetFastCalculations)
    FastCalculationsOn = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_FastCalculationsOn)
    FastCalculationsOff = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_FastCalculationsOff)
    __swig_destroy__ = _itkScalarImageToTextureFeaturesFilterPython.delete_itkScalarImageToTextureFeaturesFilterID4
    cast = _swig_new_static_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_cast)

    def New(*args, **kargs):
        """New() -> itkScalarImageToTextureFeaturesFilterID4

        Create a new object of the class itkScalarImageToTextureFeaturesFilterID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToTextureFeaturesFilterID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToTextureFeaturesFilterID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToTextureFeaturesFilterID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToTextureFeaturesFilterID4 in _itkScalarImageToTextureFeaturesFilterPython:
_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_swigregister(itkScalarImageToTextureFeaturesFilterID4)
itkScalarImageToTextureFeaturesFilterID4___New_orig__ = _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4___New_orig__
itkScalarImageToTextureFeaturesFilterID4_cast = _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterID4_cast


def itkScalarImageToTextureFeaturesFilterIF2_New():
    return itkScalarImageToTextureFeaturesFilterIF2.New()

class itkScalarImageToTextureFeaturesFilterIF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToTextureFeaturesFilterIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_Clone)
    GetFeatureMeansOutput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_GetFeatureMeansOutput)
    GetFeatureStandardDeviationsOutput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_GetFeatureStandardDeviationsOutput)
    SetInput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_SetInput)
    GetInput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_GetInput)
    GetFeatureMeans = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_GetFeatureMeans)
    GetFeatureStandardDeviations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_GetFeatureStandardDeviations)
    SetRequestedFeatures = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_SetRequestedFeatures)
    GetRequestedFeatures = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_GetRequestedFeatures)
    SetOffsets = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_SetOffsets)
    GetOffsets = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_SetNumberOfBinsPerAxis)
    SetPixelValueMinMax = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_SetPixelValueMinMax)
    SetMaskImage = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_GetMaskImage)
    SetInsidePixelValue = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_SetInsidePixelValue)
    GetFastCalculations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_GetFastCalculations)
    SetFastCalculations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_SetFastCalculations)
    FastCalculationsOn = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_FastCalculationsOn)
    FastCalculationsOff = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_FastCalculationsOff)
    __swig_destroy__ = _itkScalarImageToTextureFeaturesFilterPython.delete_itkScalarImageToTextureFeaturesFilterIF2
    cast = _swig_new_static_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_cast)

    def New(*args, **kargs):
        """New() -> itkScalarImageToTextureFeaturesFilterIF2

        Create a new object of the class itkScalarImageToTextureFeaturesFilterIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToTextureFeaturesFilterIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToTextureFeaturesFilterIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToTextureFeaturesFilterIF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToTextureFeaturesFilterIF2 in _itkScalarImageToTextureFeaturesFilterPython:
_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_swigregister(itkScalarImageToTextureFeaturesFilterIF2)
itkScalarImageToTextureFeaturesFilterIF2___New_orig__ = _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2___New_orig__
itkScalarImageToTextureFeaturesFilterIF2_cast = _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF2_cast


def itkScalarImageToTextureFeaturesFilterIF3_New():
    return itkScalarImageToTextureFeaturesFilterIF3.New()

class itkScalarImageToTextureFeaturesFilterIF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToTextureFeaturesFilterIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_Clone)
    GetFeatureMeansOutput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_GetFeatureMeansOutput)
    GetFeatureStandardDeviationsOutput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_GetFeatureStandardDeviationsOutput)
    SetInput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_SetInput)
    GetInput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_GetInput)
    GetFeatureMeans = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_GetFeatureMeans)
    GetFeatureStandardDeviations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_GetFeatureStandardDeviations)
    SetRequestedFeatures = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_SetRequestedFeatures)
    GetRequestedFeatures = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_GetRequestedFeatures)
    SetOffsets = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_SetOffsets)
    GetOffsets = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_SetNumberOfBinsPerAxis)
    SetPixelValueMinMax = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_SetPixelValueMinMax)
    SetMaskImage = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_GetMaskImage)
    SetInsidePixelValue = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_SetInsidePixelValue)
    GetFastCalculations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_GetFastCalculations)
    SetFastCalculations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_SetFastCalculations)
    FastCalculationsOn = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_FastCalculationsOn)
    FastCalculationsOff = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_FastCalculationsOff)
    __swig_destroy__ = _itkScalarImageToTextureFeaturesFilterPython.delete_itkScalarImageToTextureFeaturesFilterIF3
    cast = _swig_new_static_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_cast)

    def New(*args, **kargs):
        """New() -> itkScalarImageToTextureFeaturesFilterIF3

        Create a new object of the class itkScalarImageToTextureFeaturesFilterIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToTextureFeaturesFilterIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToTextureFeaturesFilterIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToTextureFeaturesFilterIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToTextureFeaturesFilterIF3 in _itkScalarImageToTextureFeaturesFilterPython:
_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_swigregister(itkScalarImageToTextureFeaturesFilterIF3)
itkScalarImageToTextureFeaturesFilterIF3___New_orig__ = _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3___New_orig__
itkScalarImageToTextureFeaturesFilterIF3_cast = _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF3_cast


def itkScalarImageToTextureFeaturesFilterIF4_New():
    return itkScalarImageToTextureFeaturesFilterIF4.New()

class itkScalarImageToTextureFeaturesFilterIF4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToTextureFeaturesFilterIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_Clone)
    GetFeatureMeansOutput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_GetFeatureMeansOutput)
    GetFeatureStandardDeviationsOutput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_GetFeatureStandardDeviationsOutput)
    SetInput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_SetInput)
    GetInput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_GetInput)
    GetFeatureMeans = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_GetFeatureMeans)
    GetFeatureStandardDeviations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_GetFeatureStandardDeviations)
    SetRequestedFeatures = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_SetRequestedFeatures)
    GetRequestedFeatures = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_GetRequestedFeatures)
    SetOffsets = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_SetOffsets)
    GetOffsets = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_SetNumberOfBinsPerAxis)
    SetPixelValueMinMax = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_SetPixelValueMinMax)
    SetMaskImage = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_GetMaskImage)
    SetInsidePixelValue = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_SetInsidePixelValue)
    GetFastCalculations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_GetFastCalculations)
    SetFastCalculations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_SetFastCalculations)
    FastCalculationsOn = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_FastCalculationsOn)
    FastCalculationsOff = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_FastCalculationsOff)
    __swig_destroy__ = _itkScalarImageToTextureFeaturesFilterPython.delete_itkScalarImageToTextureFeaturesFilterIF4
    cast = _swig_new_static_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_cast)

    def New(*args, **kargs):
        """New() -> itkScalarImageToTextureFeaturesFilterIF4

        Create a new object of the class itkScalarImageToTextureFeaturesFilterIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToTextureFeaturesFilterIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToTextureFeaturesFilterIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToTextureFeaturesFilterIF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToTextureFeaturesFilterIF4 in _itkScalarImageToTextureFeaturesFilterPython:
_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_swigregister(itkScalarImageToTextureFeaturesFilterIF4)
itkScalarImageToTextureFeaturesFilterIF4___New_orig__ = _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4___New_orig__
itkScalarImageToTextureFeaturesFilterIF4_cast = _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIF4_cast


def itkScalarImageToTextureFeaturesFilterISS2_New():
    return itkScalarImageToTextureFeaturesFilterISS2.New()

class itkScalarImageToTextureFeaturesFilterISS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToTextureFeaturesFilterISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_Clone)
    GetFeatureMeansOutput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_GetFeatureMeansOutput)
    GetFeatureStandardDeviationsOutput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_GetFeatureStandardDeviationsOutput)
    SetInput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_SetInput)
    GetInput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_GetInput)
    GetFeatureMeans = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_GetFeatureMeans)
    GetFeatureStandardDeviations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_GetFeatureStandardDeviations)
    SetRequestedFeatures = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_SetRequestedFeatures)
    GetRequestedFeatures = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_GetRequestedFeatures)
    SetOffsets = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_SetOffsets)
    GetOffsets = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_SetNumberOfBinsPerAxis)
    SetPixelValueMinMax = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_SetPixelValueMinMax)
    SetMaskImage = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_GetMaskImage)
    SetInsidePixelValue = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_SetInsidePixelValue)
    GetFastCalculations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_GetFastCalculations)
    SetFastCalculations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_SetFastCalculations)
    FastCalculationsOn = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_FastCalculationsOn)
    FastCalculationsOff = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_FastCalculationsOff)
    __swig_destroy__ = _itkScalarImageToTextureFeaturesFilterPython.delete_itkScalarImageToTextureFeaturesFilterISS2
    cast = _swig_new_static_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_cast)

    def New(*args, **kargs):
        """New() -> itkScalarImageToTextureFeaturesFilterISS2

        Create a new object of the class itkScalarImageToTextureFeaturesFilterISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToTextureFeaturesFilterISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToTextureFeaturesFilterISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToTextureFeaturesFilterISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToTextureFeaturesFilterISS2 in _itkScalarImageToTextureFeaturesFilterPython:
_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_swigregister(itkScalarImageToTextureFeaturesFilterISS2)
itkScalarImageToTextureFeaturesFilterISS2___New_orig__ = _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2___New_orig__
itkScalarImageToTextureFeaturesFilterISS2_cast = _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS2_cast


def itkScalarImageToTextureFeaturesFilterISS3_New():
    return itkScalarImageToTextureFeaturesFilterISS3.New()

class itkScalarImageToTextureFeaturesFilterISS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToTextureFeaturesFilterISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_Clone)
    GetFeatureMeansOutput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_GetFeatureMeansOutput)
    GetFeatureStandardDeviationsOutput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_GetFeatureStandardDeviationsOutput)
    SetInput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_SetInput)
    GetInput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_GetInput)
    GetFeatureMeans = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_GetFeatureMeans)
    GetFeatureStandardDeviations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_GetFeatureStandardDeviations)
    SetRequestedFeatures = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_SetRequestedFeatures)
    GetRequestedFeatures = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_GetRequestedFeatures)
    SetOffsets = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_SetOffsets)
    GetOffsets = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_SetNumberOfBinsPerAxis)
    SetPixelValueMinMax = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_SetPixelValueMinMax)
    SetMaskImage = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_GetMaskImage)
    SetInsidePixelValue = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_SetInsidePixelValue)
    GetFastCalculations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_GetFastCalculations)
    SetFastCalculations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_SetFastCalculations)
    FastCalculationsOn = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_FastCalculationsOn)
    FastCalculationsOff = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_FastCalculationsOff)
    __swig_destroy__ = _itkScalarImageToTextureFeaturesFilterPython.delete_itkScalarImageToTextureFeaturesFilterISS3
    cast = _swig_new_static_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_cast)

    def New(*args, **kargs):
        """New() -> itkScalarImageToTextureFeaturesFilterISS3

        Create a new object of the class itkScalarImageToTextureFeaturesFilterISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToTextureFeaturesFilterISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToTextureFeaturesFilterISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToTextureFeaturesFilterISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToTextureFeaturesFilterISS3 in _itkScalarImageToTextureFeaturesFilterPython:
_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_swigregister(itkScalarImageToTextureFeaturesFilterISS3)
itkScalarImageToTextureFeaturesFilterISS3___New_orig__ = _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3___New_orig__
itkScalarImageToTextureFeaturesFilterISS3_cast = _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS3_cast


def itkScalarImageToTextureFeaturesFilterISS4_New():
    return itkScalarImageToTextureFeaturesFilterISS4.New()

class itkScalarImageToTextureFeaturesFilterISS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToTextureFeaturesFilterISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_Clone)
    GetFeatureMeansOutput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_GetFeatureMeansOutput)
    GetFeatureStandardDeviationsOutput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_GetFeatureStandardDeviationsOutput)
    SetInput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_SetInput)
    GetInput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_GetInput)
    GetFeatureMeans = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_GetFeatureMeans)
    GetFeatureStandardDeviations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_GetFeatureStandardDeviations)
    SetRequestedFeatures = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_SetRequestedFeatures)
    GetRequestedFeatures = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_GetRequestedFeatures)
    SetOffsets = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_SetOffsets)
    GetOffsets = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_SetNumberOfBinsPerAxis)
    SetPixelValueMinMax = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_SetPixelValueMinMax)
    SetMaskImage = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_GetMaskImage)
    SetInsidePixelValue = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_SetInsidePixelValue)
    GetFastCalculations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_GetFastCalculations)
    SetFastCalculations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_SetFastCalculations)
    FastCalculationsOn = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_FastCalculationsOn)
    FastCalculationsOff = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_FastCalculationsOff)
    __swig_destroy__ = _itkScalarImageToTextureFeaturesFilterPython.delete_itkScalarImageToTextureFeaturesFilterISS4
    cast = _swig_new_static_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_cast)

    def New(*args, **kargs):
        """New() -> itkScalarImageToTextureFeaturesFilterISS4

        Create a new object of the class itkScalarImageToTextureFeaturesFilterISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToTextureFeaturesFilterISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToTextureFeaturesFilterISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToTextureFeaturesFilterISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToTextureFeaturesFilterISS4 in _itkScalarImageToTextureFeaturesFilterPython:
_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_swigregister(itkScalarImageToTextureFeaturesFilterISS4)
itkScalarImageToTextureFeaturesFilterISS4___New_orig__ = _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4___New_orig__
itkScalarImageToTextureFeaturesFilterISS4_cast = _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterISS4_cast


def itkScalarImageToTextureFeaturesFilterIUC2_New():
    return itkScalarImageToTextureFeaturesFilterIUC2.New()

class itkScalarImageToTextureFeaturesFilterIUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToTextureFeaturesFilterIUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_Clone)
    GetFeatureMeansOutput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_GetFeatureMeansOutput)
    GetFeatureStandardDeviationsOutput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_GetFeatureStandardDeviationsOutput)
    SetInput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_SetInput)
    GetInput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_GetInput)
    GetFeatureMeans = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_GetFeatureMeans)
    GetFeatureStandardDeviations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_GetFeatureStandardDeviations)
    SetRequestedFeatures = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_SetRequestedFeatures)
    GetRequestedFeatures = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_GetRequestedFeatures)
    SetOffsets = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_SetOffsets)
    GetOffsets = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_SetNumberOfBinsPerAxis)
    SetPixelValueMinMax = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_SetPixelValueMinMax)
    SetMaskImage = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_GetMaskImage)
    SetInsidePixelValue = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_SetInsidePixelValue)
    GetFastCalculations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_GetFastCalculations)
    SetFastCalculations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_SetFastCalculations)
    FastCalculationsOn = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_FastCalculationsOn)
    FastCalculationsOff = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_FastCalculationsOff)
    __swig_destroy__ = _itkScalarImageToTextureFeaturesFilterPython.delete_itkScalarImageToTextureFeaturesFilterIUC2
    cast = _swig_new_static_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_cast)

    def New(*args, **kargs):
        """New() -> itkScalarImageToTextureFeaturesFilterIUC2

        Create a new object of the class itkScalarImageToTextureFeaturesFilterIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToTextureFeaturesFilterIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToTextureFeaturesFilterIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToTextureFeaturesFilterIUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToTextureFeaturesFilterIUC2 in _itkScalarImageToTextureFeaturesFilterPython:
_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_swigregister(itkScalarImageToTextureFeaturesFilterIUC2)
itkScalarImageToTextureFeaturesFilterIUC2___New_orig__ = _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2___New_orig__
itkScalarImageToTextureFeaturesFilterIUC2_cast = _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC2_cast


def itkScalarImageToTextureFeaturesFilterIUC3_New():
    return itkScalarImageToTextureFeaturesFilterIUC3.New()

class itkScalarImageToTextureFeaturesFilterIUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToTextureFeaturesFilterIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_Clone)
    GetFeatureMeansOutput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_GetFeatureMeansOutput)
    GetFeatureStandardDeviationsOutput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_GetFeatureStandardDeviationsOutput)
    SetInput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_SetInput)
    GetInput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_GetInput)
    GetFeatureMeans = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_GetFeatureMeans)
    GetFeatureStandardDeviations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_GetFeatureStandardDeviations)
    SetRequestedFeatures = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_SetRequestedFeatures)
    GetRequestedFeatures = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_GetRequestedFeatures)
    SetOffsets = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_SetOffsets)
    GetOffsets = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_SetNumberOfBinsPerAxis)
    SetPixelValueMinMax = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_SetPixelValueMinMax)
    SetMaskImage = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_GetMaskImage)
    SetInsidePixelValue = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_SetInsidePixelValue)
    GetFastCalculations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_GetFastCalculations)
    SetFastCalculations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_SetFastCalculations)
    FastCalculationsOn = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_FastCalculationsOn)
    FastCalculationsOff = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_FastCalculationsOff)
    __swig_destroy__ = _itkScalarImageToTextureFeaturesFilterPython.delete_itkScalarImageToTextureFeaturesFilterIUC3
    cast = _swig_new_static_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_cast)

    def New(*args, **kargs):
        """New() -> itkScalarImageToTextureFeaturesFilterIUC3

        Create a new object of the class itkScalarImageToTextureFeaturesFilterIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToTextureFeaturesFilterIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToTextureFeaturesFilterIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToTextureFeaturesFilterIUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToTextureFeaturesFilterIUC3 in _itkScalarImageToTextureFeaturesFilterPython:
_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_swigregister(itkScalarImageToTextureFeaturesFilterIUC3)
itkScalarImageToTextureFeaturesFilterIUC3___New_orig__ = _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3___New_orig__
itkScalarImageToTextureFeaturesFilterIUC3_cast = _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC3_cast


def itkScalarImageToTextureFeaturesFilterIUC4_New():
    return itkScalarImageToTextureFeaturesFilterIUC4.New()

class itkScalarImageToTextureFeaturesFilterIUC4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToTextureFeaturesFilterIUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_Clone)
    GetFeatureMeansOutput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_GetFeatureMeansOutput)
    GetFeatureStandardDeviationsOutput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_GetFeatureStandardDeviationsOutput)
    SetInput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_SetInput)
    GetInput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_GetInput)
    GetFeatureMeans = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_GetFeatureMeans)
    GetFeatureStandardDeviations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_GetFeatureStandardDeviations)
    SetRequestedFeatures = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_SetRequestedFeatures)
    GetRequestedFeatures = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_GetRequestedFeatures)
    SetOffsets = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_SetOffsets)
    GetOffsets = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_SetNumberOfBinsPerAxis)
    SetPixelValueMinMax = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_SetPixelValueMinMax)
    SetMaskImage = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_GetMaskImage)
    SetInsidePixelValue = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_SetInsidePixelValue)
    GetFastCalculations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_GetFastCalculations)
    SetFastCalculations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_SetFastCalculations)
    FastCalculationsOn = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_FastCalculationsOn)
    FastCalculationsOff = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_FastCalculationsOff)
    __swig_destroy__ = _itkScalarImageToTextureFeaturesFilterPython.delete_itkScalarImageToTextureFeaturesFilterIUC4
    cast = _swig_new_static_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_cast)

    def New(*args, **kargs):
        """New() -> itkScalarImageToTextureFeaturesFilterIUC4

        Create a new object of the class itkScalarImageToTextureFeaturesFilterIUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToTextureFeaturesFilterIUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToTextureFeaturesFilterIUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToTextureFeaturesFilterIUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToTextureFeaturesFilterIUC4 in _itkScalarImageToTextureFeaturesFilterPython:
_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_swigregister(itkScalarImageToTextureFeaturesFilterIUC4)
itkScalarImageToTextureFeaturesFilterIUC4___New_orig__ = _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4___New_orig__
itkScalarImageToTextureFeaturesFilterIUC4_cast = _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUC4_cast


def itkScalarImageToTextureFeaturesFilterIUS2_New():
    return itkScalarImageToTextureFeaturesFilterIUS2.New()

class itkScalarImageToTextureFeaturesFilterIUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToTextureFeaturesFilterIUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_Clone)
    GetFeatureMeansOutput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_GetFeatureMeansOutput)
    GetFeatureStandardDeviationsOutput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_GetFeatureStandardDeviationsOutput)
    SetInput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_SetInput)
    GetInput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_GetInput)
    GetFeatureMeans = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_GetFeatureMeans)
    GetFeatureStandardDeviations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_GetFeatureStandardDeviations)
    SetRequestedFeatures = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_SetRequestedFeatures)
    GetRequestedFeatures = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_GetRequestedFeatures)
    SetOffsets = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_SetOffsets)
    GetOffsets = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_SetNumberOfBinsPerAxis)
    SetPixelValueMinMax = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_SetPixelValueMinMax)
    SetMaskImage = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_GetMaskImage)
    SetInsidePixelValue = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_SetInsidePixelValue)
    GetFastCalculations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_GetFastCalculations)
    SetFastCalculations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_SetFastCalculations)
    FastCalculationsOn = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_FastCalculationsOn)
    FastCalculationsOff = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_FastCalculationsOff)
    __swig_destroy__ = _itkScalarImageToTextureFeaturesFilterPython.delete_itkScalarImageToTextureFeaturesFilterIUS2
    cast = _swig_new_static_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_cast)

    def New(*args, **kargs):
        """New() -> itkScalarImageToTextureFeaturesFilterIUS2

        Create a new object of the class itkScalarImageToTextureFeaturesFilterIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToTextureFeaturesFilterIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToTextureFeaturesFilterIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToTextureFeaturesFilterIUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToTextureFeaturesFilterIUS2 in _itkScalarImageToTextureFeaturesFilterPython:
_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_swigregister(itkScalarImageToTextureFeaturesFilterIUS2)
itkScalarImageToTextureFeaturesFilterIUS2___New_orig__ = _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2___New_orig__
itkScalarImageToTextureFeaturesFilterIUS2_cast = _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS2_cast


def itkScalarImageToTextureFeaturesFilterIUS3_New():
    return itkScalarImageToTextureFeaturesFilterIUS3.New()

class itkScalarImageToTextureFeaturesFilterIUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToTextureFeaturesFilterIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_Clone)
    GetFeatureMeansOutput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_GetFeatureMeansOutput)
    GetFeatureStandardDeviationsOutput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_GetFeatureStandardDeviationsOutput)
    SetInput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_SetInput)
    GetInput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_GetInput)
    GetFeatureMeans = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_GetFeatureMeans)
    GetFeatureStandardDeviations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_GetFeatureStandardDeviations)
    SetRequestedFeatures = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_SetRequestedFeatures)
    GetRequestedFeatures = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_GetRequestedFeatures)
    SetOffsets = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_SetOffsets)
    GetOffsets = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_SetNumberOfBinsPerAxis)
    SetPixelValueMinMax = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_SetPixelValueMinMax)
    SetMaskImage = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_GetMaskImage)
    SetInsidePixelValue = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_SetInsidePixelValue)
    GetFastCalculations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_GetFastCalculations)
    SetFastCalculations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_SetFastCalculations)
    FastCalculationsOn = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_FastCalculationsOn)
    FastCalculationsOff = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_FastCalculationsOff)
    __swig_destroy__ = _itkScalarImageToTextureFeaturesFilterPython.delete_itkScalarImageToTextureFeaturesFilterIUS3
    cast = _swig_new_static_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_cast)

    def New(*args, **kargs):
        """New() -> itkScalarImageToTextureFeaturesFilterIUS3

        Create a new object of the class itkScalarImageToTextureFeaturesFilterIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToTextureFeaturesFilterIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToTextureFeaturesFilterIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToTextureFeaturesFilterIUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToTextureFeaturesFilterIUS3 in _itkScalarImageToTextureFeaturesFilterPython:
_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_swigregister(itkScalarImageToTextureFeaturesFilterIUS3)
itkScalarImageToTextureFeaturesFilterIUS3___New_orig__ = _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3___New_orig__
itkScalarImageToTextureFeaturesFilterIUS3_cast = _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS3_cast


def itkScalarImageToTextureFeaturesFilterIUS4_New():
    return itkScalarImageToTextureFeaturesFilterIUS4.New()

class itkScalarImageToTextureFeaturesFilterIUS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToTextureFeaturesFilterIUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_Clone)
    GetFeatureMeansOutput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_GetFeatureMeansOutput)
    GetFeatureStandardDeviationsOutput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_GetFeatureStandardDeviationsOutput)
    SetInput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_SetInput)
    GetInput = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_GetInput)
    GetFeatureMeans = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_GetFeatureMeans)
    GetFeatureStandardDeviations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_GetFeatureStandardDeviations)
    SetRequestedFeatures = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_SetRequestedFeatures)
    GetRequestedFeatures = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_GetRequestedFeatures)
    SetOffsets = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_SetOffsets)
    GetOffsets = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_GetOffsets)
    SetNumberOfBinsPerAxis = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_SetNumberOfBinsPerAxis)
    SetPixelValueMinMax = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_SetPixelValueMinMax)
    SetMaskImage = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_SetMaskImage)
    GetMaskImage = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_GetMaskImage)
    SetInsidePixelValue = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_SetInsidePixelValue)
    GetFastCalculations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_GetFastCalculations)
    SetFastCalculations = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_SetFastCalculations)
    FastCalculationsOn = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_FastCalculationsOn)
    FastCalculationsOff = _swig_new_instance_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_FastCalculationsOff)
    __swig_destroy__ = _itkScalarImageToTextureFeaturesFilterPython.delete_itkScalarImageToTextureFeaturesFilterIUS4
    cast = _swig_new_static_method(_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_cast)

    def New(*args, **kargs):
        """New() -> itkScalarImageToTextureFeaturesFilterIUS4

        Create a new object of the class itkScalarImageToTextureFeaturesFilterIUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToTextureFeaturesFilterIUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToTextureFeaturesFilterIUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToTextureFeaturesFilterIUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToTextureFeaturesFilterIUS4 in _itkScalarImageToTextureFeaturesFilterPython:
_itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_swigregister(itkScalarImageToTextureFeaturesFilterIUS4)
itkScalarImageToTextureFeaturesFilterIUS4___New_orig__ = _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4___New_orig__
itkScalarImageToTextureFeaturesFilterIUS4_cast = _itkScalarImageToTextureFeaturesFilterPython.itkScalarImageToTextureFeaturesFilterIUS4_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def scalar_image_to_texture_features_filter(*args,  requested_features: Sequence[int]=..., offsets: Sequence[Sequence[int]]=..., number_of_bins_per_axis: int=..., pixel_value_min_max: int=..., mask_image: itkt.Image=..., inside_pixel_value: int=..., fast_calculations: bool=...,**kwargs):
    """Functional interface for ScalarImageToTextureFeaturesFilter"""
    import itk

    kwarg_typehints = { 'requested_features':requested_features,'offsets':offsets,'number_of_bins_per_axis':number_of_bins_per_axis,'pixel_value_min_max':pixel_value_min_max,'mask_image':mask_image,'inside_pixel_value':inside_pixel_value,'fast_calculations':fast_calculations }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ScalarImageToTextureFeaturesFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def scalar_image_to_texture_features_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKStatistics.ScalarImageToTextureFeaturesFilter
    scalar_image_to_texture_features_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    scalar_image_to_texture_features_filter.__doc__ = filter_object.__doc__




