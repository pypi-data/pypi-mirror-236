# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKPyUtilsPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkPyImageFilterPython
else:
    import _itkPyImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkPyImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkPyImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.itkPointPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkImageToImageFilterAPython
import itk.itkImagePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython

def itkPyImageFilterID2ID2_New():
    return itkPyImageFilterID2ID2.New()

class itkPyImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkPyImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID2ID2_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID2ID2_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID2ID2_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID2ID2_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID2ID2_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID2ID2__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterID2ID2
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterID2ID2_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterID2ID2

        Create a new object of the class itkPyImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterID2ID2 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterID2ID2_swigregister(itkPyImageFilterID2ID2)
itkPyImageFilterID2ID2___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterID2ID2___New_orig__
itkPyImageFilterID2ID2_cast = _itkPyImageFilterPython.itkPyImageFilterID2ID2_cast


def itkPyImageFilterID2IF2_New():
    return itkPyImageFilterID2IF2.New()

class itkPyImageFilterID2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2IF2):
    r"""Proxy of C++ itkPyImageFilterID2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterID2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID2IF2_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID2IF2_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID2IF2_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID2IF2_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID2IF2_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID2IF2__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterID2IF2
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterID2IF2_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterID2IF2

        Create a new object of the class itkPyImageFilterID2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterID2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterID2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterID2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterID2IF2 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterID2IF2_swigregister(itkPyImageFilterID2IF2)
itkPyImageFilterID2IF2___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterID2IF2___New_orig__
itkPyImageFilterID2IF2_cast = _itkPyImageFilterPython.itkPyImageFilterID2IF2_cast


def itkPyImageFilterID2ISS2_New():
    return itkPyImageFilterID2ISS2.New()

class itkPyImageFilterID2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ISS2):
    r"""Proxy of C++ itkPyImageFilterID2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterID2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID2ISS2_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID2ISS2_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID2ISS2_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID2ISS2_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID2ISS2_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID2ISS2__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterID2ISS2
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterID2ISS2_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterID2ISS2

        Create a new object of the class itkPyImageFilterID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterID2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterID2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterID2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterID2ISS2 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterID2ISS2_swigregister(itkPyImageFilterID2ISS2)
itkPyImageFilterID2ISS2___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterID2ISS2___New_orig__
itkPyImageFilterID2ISS2_cast = _itkPyImageFilterPython.itkPyImageFilterID2ISS2_cast


def itkPyImageFilterID2IUC2_New():
    return itkPyImageFilterID2IUC2.New()

class itkPyImageFilterID2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2):
    r"""Proxy of C++ itkPyImageFilterID2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterID2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID2IUC2_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID2IUC2_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID2IUC2_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID2IUC2_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID2IUC2_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID2IUC2__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterID2IUC2
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterID2IUC2_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterID2IUC2

        Create a new object of the class itkPyImageFilterID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterID2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterID2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterID2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterID2IUC2 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterID2IUC2_swigregister(itkPyImageFilterID2IUC2)
itkPyImageFilterID2IUC2___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterID2IUC2___New_orig__
itkPyImageFilterID2IUC2_cast = _itkPyImageFilterPython.itkPyImageFilterID2IUC2_cast


def itkPyImageFilterID2IUS2_New():
    return itkPyImageFilterID2IUS2.New()

class itkPyImageFilterID2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2):
    r"""Proxy of C++ itkPyImageFilterID2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterID2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID2IUS2_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID2IUS2_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID2IUS2_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID2IUS2_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID2IUS2_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID2IUS2__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterID2IUS2
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterID2IUS2_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterID2IUS2

        Create a new object of the class itkPyImageFilterID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterID2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterID2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterID2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterID2IUS2 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterID2IUS2_swigregister(itkPyImageFilterID2IUS2)
itkPyImageFilterID2IUS2___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterID2IUS2___New_orig__
itkPyImageFilterID2IUS2_cast = _itkPyImageFilterPython.itkPyImageFilterID2IUS2_cast


def itkPyImageFilterID3ID3_New():
    return itkPyImageFilterID3ID3.New()

class itkPyImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkPyImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID3ID3_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID3ID3_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID3ID3_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID3ID3_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID3ID3_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID3ID3__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterID3ID3
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterID3ID3_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterID3ID3

        Create a new object of the class itkPyImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterID3ID3 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterID3ID3_swigregister(itkPyImageFilterID3ID3)
itkPyImageFilterID3ID3___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterID3ID3___New_orig__
itkPyImageFilterID3ID3_cast = _itkPyImageFilterPython.itkPyImageFilterID3ID3_cast


def itkPyImageFilterID3IF3_New():
    return itkPyImageFilterID3IF3.New()

class itkPyImageFilterID3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3IF3):
    r"""Proxy of C++ itkPyImageFilterID3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterID3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID3IF3_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID3IF3_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID3IF3_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID3IF3_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID3IF3_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID3IF3__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterID3IF3
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterID3IF3_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterID3IF3

        Create a new object of the class itkPyImageFilterID3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterID3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterID3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterID3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterID3IF3 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterID3IF3_swigregister(itkPyImageFilterID3IF3)
itkPyImageFilterID3IF3___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterID3IF3___New_orig__
itkPyImageFilterID3IF3_cast = _itkPyImageFilterPython.itkPyImageFilterID3IF3_cast


def itkPyImageFilterID3ISS3_New():
    return itkPyImageFilterID3ISS3.New()

class itkPyImageFilterID3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ISS3):
    r"""Proxy of C++ itkPyImageFilterID3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterID3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID3ISS3_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID3ISS3_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID3ISS3_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID3ISS3_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID3ISS3_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID3ISS3__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterID3ISS3
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterID3ISS3_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterID3ISS3

        Create a new object of the class itkPyImageFilterID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterID3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterID3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterID3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterID3ISS3 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterID3ISS3_swigregister(itkPyImageFilterID3ISS3)
itkPyImageFilterID3ISS3___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterID3ISS3___New_orig__
itkPyImageFilterID3ISS3_cast = _itkPyImageFilterPython.itkPyImageFilterID3ISS3_cast


def itkPyImageFilterID3IUC3_New():
    return itkPyImageFilterID3IUC3.New()

class itkPyImageFilterID3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3):
    r"""Proxy of C++ itkPyImageFilterID3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterID3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID3IUC3_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID3IUC3_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID3IUC3_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID3IUC3_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID3IUC3_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID3IUC3__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterID3IUC3
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterID3IUC3_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterID3IUC3

        Create a new object of the class itkPyImageFilterID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterID3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterID3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterID3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterID3IUC3 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterID3IUC3_swigregister(itkPyImageFilterID3IUC3)
itkPyImageFilterID3IUC3___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterID3IUC3___New_orig__
itkPyImageFilterID3IUC3_cast = _itkPyImageFilterPython.itkPyImageFilterID3IUC3_cast


def itkPyImageFilterID3IUS3_New():
    return itkPyImageFilterID3IUS3.New()

class itkPyImageFilterID3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3):
    r"""Proxy of C++ itkPyImageFilterID3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterID3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID3IUS3_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID3IUS3_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID3IUS3_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID3IUS3_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID3IUS3_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID3IUS3__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterID3IUS3
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterID3IUS3_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterID3IUS3

        Create a new object of the class itkPyImageFilterID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterID3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterID3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterID3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterID3IUS3 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterID3IUS3_swigregister(itkPyImageFilterID3IUS3)
itkPyImageFilterID3IUS3___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterID3IUS3___New_orig__
itkPyImageFilterID3IUS3_cast = _itkPyImageFilterPython.itkPyImageFilterID3IUS3_cast


def itkPyImageFilterID4ID4_New():
    return itkPyImageFilterID4ID4.New()

class itkPyImageFilterID4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkPyImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterID4ID4___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID4ID4_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID4ID4_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID4ID4_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID4ID4_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID4ID4_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID4ID4__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterID4ID4
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterID4ID4_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterID4ID4

        Create a new object of the class itkPyImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterID4ID4 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterID4ID4_swigregister(itkPyImageFilterID4ID4)
itkPyImageFilterID4ID4___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterID4ID4___New_orig__
itkPyImageFilterID4ID4_cast = _itkPyImageFilterPython.itkPyImageFilterID4ID4_cast


def itkPyImageFilterID4IF4_New():
    return itkPyImageFilterID4IF4.New()

class itkPyImageFilterID4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4IF4):
    r"""Proxy of C++ itkPyImageFilterID4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterID4IF4___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID4IF4_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID4IF4_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID4IF4_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID4IF4_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID4IF4_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID4IF4__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterID4IF4
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterID4IF4_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterID4IF4

        Create a new object of the class itkPyImageFilterID4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterID4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterID4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterID4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterID4IF4 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterID4IF4_swigregister(itkPyImageFilterID4IF4)
itkPyImageFilterID4IF4___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterID4IF4___New_orig__
itkPyImageFilterID4IF4_cast = _itkPyImageFilterPython.itkPyImageFilterID4IF4_cast


def itkPyImageFilterID4ISS4_New():
    return itkPyImageFilterID4ISS4.New()

class itkPyImageFilterID4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ISS4):
    r"""Proxy of C++ itkPyImageFilterID4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterID4ISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID4ISS4_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID4ISS4_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID4ISS4_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID4ISS4_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID4ISS4_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID4ISS4__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterID4ISS4
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterID4ISS4_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterID4ISS4

        Create a new object of the class itkPyImageFilterID4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterID4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterID4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterID4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterID4ISS4 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterID4ISS4_swigregister(itkPyImageFilterID4ISS4)
itkPyImageFilterID4ISS4___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterID4ISS4___New_orig__
itkPyImageFilterID4ISS4_cast = _itkPyImageFilterPython.itkPyImageFilterID4ISS4_cast


def itkPyImageFilterID4IUC4_New():
    return itkPyImageFilterID4IUC4.New()

class itkPyImageFilterID4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4IUC4):
    r"""Proxy of C++ itkPyImageFilterID4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterID4IUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID4IUC4_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID4IUC4_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID4IUC4_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID4IUC4_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID4IUC4_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID4IUC4__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterID4IUC4
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterID4IUC4_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterID4IUC4

        Create a new object of the class itkPyImageFilterID4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterID4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterID4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterID4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterID4IUC4 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterID4IUC4_swigregister(itkPyImageFilterID4IUC4)
itkPyImageFilterID4IUC4___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterID4IUC4___New_orig__
itkPyImageFilterID4IUC4_cast = _itkPyImageFilterPython.itkPyImageFilterID4IUC4_cast


def itkPyImageFilterID4IUS4_New():
    return itkPyImageFilterID4IUS4.New()

class itkPyImageFilterID4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4IUS4):
    r"""Proxy of C++ itkPyImageFilterID4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterID4IUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID4IUS4_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID4IUS4_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID4IUS4_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID4IUS4_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID4IUS4_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterID4IUS4__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterID4IUS4
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterID4IUS4_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterID4IUS4

        Create a new object of the class itkPyImageFilterID4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterID4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterID4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterID4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterID4IUS4 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterID4IUS4_swigregister(itkPyImageFilterID4IUS4)
itkPyImageFilterID4IUS4___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterID4IUS4___New_orig__
itkPyImageFilterID4IUS4_cast = _itkPyImageFilterPython.itkPyImageFilterID4IUS4_cast


def itkPyImageFilterIF2ID2_New():
    return itkPyImageFilterIF2ID2.New()

class itkPyImageFilterIF2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2):
    r"""Proxy of C++ itkPyImageFilterIF2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIF2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF2ID2_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF2ID2_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF2ID2_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF2ID2_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF2ID2_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF2ID2__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIF2ID2
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIF2ID2_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIF2ID2

        Create a new object of the class itkPyImageFilterIF2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIF2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIF2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIF2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIF2ID2 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIF2ID2_swigregister(itkPyImageFilterIF2ID2)
itkPyImageFilterIF2ID2___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIF2ID2___New_orig__
itkPyImageFilterIF2ID2_cast = _itkPyImageFilterPython.itkPyImageFilterIF2ID2_cast


def itkPyImageFilterIF2IF2_New():
    return itkPyImageFilterIF2IF2.New()

class itkPyImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkPyImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF2IF2_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF2IF2_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF2IF2_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF2IF2_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF2IF2_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF2IF2__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIF2IF2
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIF2IF2_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIF2IF2

        Create a new object of the class itkPyImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIF2IF2 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIF2IF2_swigregister(itkPyImageFilterIF2IF2)
itkPyImageFilterIF2IF2___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIF2IF2___New_orig__
itkPyImageFilterIF2IF2_cast = _itkPyImageFilterPython.itkPyImageFilterIF2IF2_cast


def itkPyImageFilterIF2ISS2_New():
    return itkPyImageFilterIF2ISS2.New()

class itkPyImageFilterIF2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2ISS2):
    r"""Proxy of C++ itkPyImageFilterIF2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIF2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF2ISS2_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF2ISS2_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF2ISS2_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF2ISS2_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF2ISS2_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF2ISS2__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIF2ISS2
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIF2ISS2_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIF2ISS2

        Create a new object of the class itkPyImageFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIF2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIF2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIF2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIF2ISS2 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIF2ISS2_swigregister(itkPyImageFilterIF2ISS2)
itkPyImageFilterIF2ISS2___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIF2ISS2___New_orig__
itkPyImageFilterIF2ISS2_cast = _itkPyImageFilterPython.itkPyImageFilterIF2ISS2_cast


def itkPyImageFilterIF2IUC2_New():
    return itkPyImageFilterIF2IUC2.New()

class itkPyImageFilterIF2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2):
    r"""Proxy of C++ itkPyImageFilterIF2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIF2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF2IUC2_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF2IUC2_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF2IUC2_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF2IUC2_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF2IUC2_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF2IUC2__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIF2IUC2
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIF2IUC2_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIF2IUC2

        Create a new object of the class itkPyImageFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIF2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIF2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIF2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIF2IUC2 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIF2IUC2_swigregister(itkPyImageFilterIF2IUC2)
itkPyImageFilterIF2IUC2___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIF2IUC2___New_orig__
itkPyImageFilterIF2IUC2_cast = _itkPyImageFilterPython.itkPyImageFilterIF2IUC2_cast


def itkPyImageFilterIF2IUS2_New():
    return itkPyImageFilterIF2IUS2.New()

class itkPyImageFilterIF2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2):
    r"""Proxy of C++ itkPyImageFilterIF2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIF2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF2IUS2_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF2IUS2_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF2IUS2_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF2IUS2_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF2IUS2_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF2IUS2__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIF2IUS2
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIF2IUS2_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIF2IUS2

        Create a new object of the class itkPyImageFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIF2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIF2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIF2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIF2IUS2 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIF2IUS2_swigregister(itkPyImageFilterIF2IUS2)
itkPyImageFilterIF2IUS2___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIF2IUS2___New_orig__
itkPyImageFilterIF2IUS2_cast = _itkPyImageFilterPython.itkPyImageFilterIF2IUS2_cast


def itkPyImageFilterIF3ID3_New():
    return itkPyImageFilterIF3ID3.New()

class itkPyImageFilterIF3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3):
    r"""Proxy of C++ itkPyImageFilterIF3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIF3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF3ID3_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF3ID3_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF3ID3_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF3ID3_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF3ID3_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF3ID3__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIF3ID3
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIF3ID3_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIF3ID3

        Create a new object of the class itkPyImageFilterIF3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIF3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIF3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIF3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIF3ID3 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIF3ID3_swigregister(itkPyImageFilterIF3ID3)
itkPyImageFilterIF3ID3___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIF3ID3___New_orig__
itkPyImageFilterIF3ID3_cast = _itkPyImageFilterPython.itkPyImageFilterIF3ID3_cast


def itkPyImageFilterIF3IF3_New():
    return itkPyImageFilterIF3IF3.New()

class itkPyImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkPyImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF3IF3_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF3IF3_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF3IF3_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF3IF3_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF3IF3_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF3IF3__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIF3IF3
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIF3IF3_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIF3IF3

        Create a new object of the class itkPyImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIF3IF3 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIF3IF3_swigregister(itkPyImageFilterIF3IF3)
itkPyImageFilterIF3IF3___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIF3IF3___New_orig__
itkPyImageFilterIF3IF3_cast = _itkPyImageFilterPython.itkPyImageFilterIF3IF3_cast


def itkPyImageFilterIF3ISS3_New():
    return itkPyImageFilterIF3ISS3.New()

class itkPyImageFilterIF3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3ISS3):
    r"""Proxy of C++ itkPyImageFilterIF3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIF3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF3ISS3_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF3ISS3_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF3ISS3_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF3ISS3_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF3ISS3_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF3ISS3__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIF3ISS3
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIF3ISS3_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIF3ISS3

        Create a new object of the class itkPyImageFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIF3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIF3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIF3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIF3ISS3 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIF3ISS3_swigregister(itkPyImageFilterIF3ISS3)
itkPyImageFilterIF3ISS3___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIF3ISS3___New_orig__
itkPyImageFilterIF3ISS3_cast = _itkPyImageFilterPython.itkPyImageFilterIF3ISS3_cast


def itkPyImageFilterIF3IUC3_New():
    return itkPyImageFilterIF3IUC3.New()

class itkPyImageFilterIF3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3):
    r"""Proxy of C++ itkPyImageFilterIF3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIF3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF3IUC3_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF3IUC3_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF3IUC3_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF3IUC3_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF3IUC3_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF3IUC3__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIF3IUC3
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIF3IUC3_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIF3IUC3

        Create a new object of the class itkPyImageFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIF3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIF3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIF3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIF3IUC3 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIF3IUC3_swigregister(itkPyImageFilterIF3IUC3)
itkPyImageFilterIF3IUC3___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIF3IUC3___New_orig__
itkPyImageFilterIF3IUC3_cast = _itkPyImageFilterPython.itkPyImageFilterIF3IUC3_cast


def itkPyImageFilterIF3IUS3_New():
    return itkPyImageFilterIF3IUS3.New()

class itkPyImageFilterIF3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3):
    r"""Proxy of C++ itkPyImageFilterIF3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIF3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF3IUS3_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF3IUS3_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF3IUS3_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF3IUS3_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF3IUS3_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF3IUS3__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIF3IUS3
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIF3IUS3_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIF3IUS3

        Create a new object of the class itkPyImageFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIF3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIF3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIF3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIF3IUS3 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIF3IUS3_swigregister(itkPyImageFilterIF3IUS3)
itkPyImageFilterIF3IUS3___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIF3IUS3___New_orig__
itkPyImageFilterIF3IUS3_cast = _itkPyImageFilterPython.itkPyImageFilterIF3IUS3_cast


def itkPyImageFilterIF4ID4_New():
    return itkPyImageFilterIF4ID4.New()

class itkPyImageFilterIF4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4ID4):
    r"""Proxy of C++ itkPyImageFilterIF4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIF4ID4___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF4ID4_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF4ID4_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF4ID4_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF4ID4_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF4ID4_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF4ID4__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIF4ID4
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIF4ID4_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIF4ID4

        Create a new object of the class itkPyImageFilterIF4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIF4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIF4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIF4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIF4ID4 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIF4ID4_swigregister(itkPyImageFilterIF4ID4)
itkPyImageFilterIF4ID4___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIF4ID4___New_orig__
itkPyImageFilterIF4ID4_cast = _itkPyImageFilterPython.itkPyImageFilterIF4ID4_cast


def itkPyImageFilterIF4IF4_New():
    return itkPyImageFilterIF4IF4.New()

class itkPyImageFilterIF4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkPyImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIF4IF4___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF4IF4_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF4IF4_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF4IF4_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF4IF4_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF4IF4_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF4IF4__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIF4IF4
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIF4IF4_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIF4IF4

        Create a new object of the class itkPyImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIF4IF4 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIF4IF4_swigregister(itkPyImageFilterIF4IF4)
itkPyImageFilterIF4IF4___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIF4IF4___New_orig__
itkPyImageFilterIF4IF4_cast = _itkPyImageFilterPython.itkPyImageFilterIF4IF4_cast


def itkPyImageFilterIF4ISS4_New():
    return itkPyImageFilterIF4ISS4.New()

class itkPyImageFilterIF4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4ISS4):
    r"""Proxy of C++ itkPyImageFilterIF4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIF4ISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF4ISS4_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF4ISS4_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF4ISS4_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF4ISS4_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF4ISS4_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF4ISS4__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIF4ISS4
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIF4ISS4_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIF4ISS4

        Create a new object of the class itkPyImageFilterIF4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIF4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIF4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIF4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIF4ISS4 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIF4ISS4_swigregister(itkPyImageFilterIF4ISS4)
itkPyImageFilterIF4ISS4___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIF4ISS4___New_orig__
itkPyImageFilterIF4ISS4_cast = _itkPyImageFilterPython.itkPyImageFilterIF4ISS4_cast


def itkPyImageFilterIF4IUC4_New():
    return itkPyImageFilterIF4IUC4.New()

class itkPyImageFilterIF4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IUC4):
    r"""Proxy of C++ itkPyImageFilterIF4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIF4IUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF4IUC4_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF4IUC4_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF4IUC4_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF4IUC4_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF4IUC4_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF4IUC4__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIF4IUC4
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIF4IUC4_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIF4IUC4

        Create a new object of the class itkPyImageFilterIF4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIF4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIF4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIF4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIF4IUC4 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIF4IUC4_swigregister(itkPyImageFilterIF4IUC4)
itkPyImageFilterIF4IUC4___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIF4IUC4___New_orig__
itkPyImageFilterIF4IUC4_cast = _itkPyImageFilterPython.itkPyImageFilterIF4IUC4_cast


def itkPyImageFilterIF4IUS4_New():
    return itkPyImageFilterIF4IUS4.New()

class itkPyImageFilterIF4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IUS4):
    r"""Proxy of C++ itkPyImageFilterIF4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIF4IUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF4IUS4_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF4IUS4_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF4IUS4_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF4IUS4_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF4IUS4_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIF4IUS4__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIF4IUS4
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIF4IUS4_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIF4IUS4

        Create a new object of the class itkPyImageFilterIF4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIF4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIF4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIF4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIF4IUS4 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIF4IUS4_swigregister(itkPyImageFilterIF4IUS4)
itkPyImageFilterIF4IUS4___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIF4IUS4___New_orig__
itkPyImageFilterIF4IUS4_cast = _itkPyImageFilterPython.itkPyImageFilterIF4IUS4_cast


def itkPyImageFilterISS2ID2_New():
    return itkPyImageFilterISS2ID2.New()

class itkPyImageFilterISS2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ID2):
    r"""Proxy of C++ itkPyImageFilterISS2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterISS2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS2ID2_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS2ID2_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS2ID2_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS2ID2_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS2ID2_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS2ID2__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterISS2ID2
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterISS2ID2_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterISS2ID2

        Create a new object of the class itkPyImageFilterISS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterISS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterISS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterISS2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterISS2ID2 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterISS2ID2_swigregister(itkPyImageFilterISS2ID2)
itkPyImageFilterISS2ID2___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterISS2ID2___New_orig__
itkPyImageFilterISS2ID2_cast = _itkPyImageFilterPython.itkPyImageFilterISS2ID2_cast


def itkPyImageFilterISS2IF2_New():
    return itkPyImageFilterISS2IF2.New()

class itkPyImageFilterISS2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2IF2):
    r"""Proxy of C++ itkPyImageFilterISS2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterISS2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS2IF2_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS2IF2_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS2IF2_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS2IF2_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS2IF2_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS2IF2__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterISS2IF2
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterISS2IF2_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterISS2IF2

        Create a new object of the class itkPyImageFilterISS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterISS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterISS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterISS2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterISS2IF2 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterISS2IF2_swigregister(itkPyImageFilterISS2IF2)
itkPyImageFilterISS2IF2___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterISS2IF2___New_orig__
itkPyImageFilterISS2IF2_cast = _itkPyImageFilterPython.itkPyImageFilterISS2IF2_cast


def itkPyImageFilterISS2ISS2_New():
    return itkPyImageFilterISS2ISS2.New()

class itkPyImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkPyImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS2ISS2_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS2ISS2_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS2ISS2_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS2ISS2_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS2ISS2_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS2ISS2__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterISS2ISS2_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterISS2ISS2

        Create a new object of the class itkPyImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterISS2ISS2 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterISS2ISS2_swigregister(itkPyImageFilterISS2ISS2)
itkPyImageFilterISS2ISS2___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterISS2ISS2___New_orig__
itkPyImageFilterISS2ISS2_cast = _itkPyImageFilterPython.itkPyImageFilterISS2ISS2_cast


def itkPyImageFilterISS2IUC2_New():
    return itkPyImageFilterISS2IUC2.New()

class itkPyImageFilterISS2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2IUC2):
    r"""Proxy of C++ itkPyImageFilterISS2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterISS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS2IUC2_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS2IUC2_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS2IUC2_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS2IUC2_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS2IUC2_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS2IUC2__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterISS2IUC2
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterISS2IUC2_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterISS2IUC2

        Create a new object of the class itkPyImageFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterISS2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterISS2IUC2 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterISS2IUC2_swigregister(itkPyImageFilterISS2IUC2)
itkPyImageFilterISS2IUC2___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterISS2IUC2___New_orig__
itkPyImageFilterISS2IUC2_cast = _itkPyImageFilterPython.itkPyImageFilterISS2IUC2_cast


def itkPyImageFilterISS2IUS2_New():
    return itkPyImageFilterISS2IUS2.New()

class itkPyImageFilterISS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2IUS2):
    r"""Proxy of C++ itkPyImageFilterISS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterISS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS2IUS2_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS2IUS2_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS2IUS2_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS2IUS2_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS2IUS2_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS2IUS2__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterISS2IUS2
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterISS2IUS2_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterISS2IUS2

        Create a new object of the class itkPyImageFilterISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterISS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterISS2IUS2 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterISS2IUS2_swigregister(itkPyImageFilterISS2IUS2)
itkPyImageFilterISS2IUS2___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterISS2IUS2___New_orig__
itkPyImageFilterISS2IUS2_cast = _itkPyImageFilterPython.itkPyImageFilterISS2IUS2_cast


def itkPyImageFilterISS3ID3_New():
    return itkPyImageFilterISS3ID3.New()

class itkPyImageFilterISS3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ID3):
    r"""Proxy of C++ itkPyImageFilterISS3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterISS3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS3ID3_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS3ID3_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS3ID3_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS3ID3_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS3ID3_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS3ID3__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterISS3ID3
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterISS3ID3_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterISS3ID3

        Create a new object of the class itkPyImageFilterISS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterISS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterISS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterISS3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterISS3ID3 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterISS3ID3_swigregister(itkPyImageFilterISS3ID3)
itkPyImageFilterISS3ID3___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterISS3ID3___New_orig__
itkPyImageFilterISS3ID3_cast = _itkPyImageFilterPython.itkPyImageFilterISS3ID3_cast


def itkPyImageFilterISS3IF3_New():
    return itkPyImageFilterISS3IF3.New()

class itkPyImageFilterISS3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3IF3):
    r"""Proxy of C++ itkPyImageFilterISS3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterISS3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS3IF3_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS3IF3_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS3IF3_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS3IF3_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS3IF3_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS3IF3__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterISS3IF3
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterISS3IF3_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterISS3IF3

        Create a new object of the class itkPyImageFilterISS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterISS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterISS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterISS3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterISS3IF3 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterISS3IF3_swigregister(itkPyImageFilterISS3IF3)
itkPyImageFilterISS3IF3___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterISS3IF3___New_orig__
itkPyImageFilterISS3IF3_cast = _itkPyImageFilterPython.itkPyImageFilterISS3IF3_cast


def itkPyImageFilterISS3ISS3_New():
    return itkPyImageFilterISS3ISS3.New()

class itkPyImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkPyImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS3ISS3_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS3ISS3_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS3ISS3_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS3ISS3_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS3ISS3_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS3ISS3__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterISS3ISS3_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterISS3ISS3

        Create a new object of the class itkPyImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterISS3ISS3 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterISS3ISS3_swigregister(itkPyImageFilterISS3ISS3)
itkPyImageFilterISS3ISS3___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterISS3ISS3___New_orig__
itkPyImageFilterISS3ISS3_cast = _itkPyImageFilterPython.itkPyImageFilterISS3ISS3_cast


def itkPyImageFilterISS3IUC3_New():
    return itkPyImageFilterISS3IUC3.New()

class itkPyImageFilterISS3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3IUC3):
    r"""Proxy of C++ itkPyImageFilterISS3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterISS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS3IUC3_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS3IUC3_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS3IUC3_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS3IUC3_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS3IUC3_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS3IUC3__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterISS3IUC3
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterISS3IUC3_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterISS3IUC3

        Create a new object of the class itkPyImageFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterISS3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterISS3IUC3 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterISS3IUC3_swigregister(itkPyImageFilterISS3IUC3)
itkPyImageFilterISS3IUC3___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterISS3IUC3___New_orig__
itkPyImageFilterISS3IUC3_cast = _itkPyImageFilterPython.itkPyImageFilterISS3IUC3_cast


def itkPyImageFilterISS3IUS3_New():
    return itkPyImageFilterISS3IUS3.New()

class itkPyImageFilterISS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3IUS3):
    r"""Proxy of C++ itkPyImageFilterISS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterISS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS3IUS3_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS3IUS3_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS3IUS3_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS3IUS3_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS3IUS3_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS3IUS3__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterISS3IUS3
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterISS3IUS3_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterISS3IUS3

        Create a new object of the class itkPyImageFilterISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterISS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterISS3IUS3 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterISS3IUS3_swigregister(itkPyImageFilterISS3IUS3)
itkPyImageFilterISS3IUS3___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterISS3IUS3___New_orig__
itkPyImageFilterISS3IUS3_cast = _itkPyImageFilterPython.itkPyImageFilterISS3IUS3_cast


def itkPyImageFilterISS4ID4_New():
    return itkPyImageFilterISS4ID4.New()

class itkPyImageFilterISS4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ID4):
    r"""Proxy of C++ itkPyImageFilterISS4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterISS4ID4___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS4ID4_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS4ID4_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS4ID4_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS4ID4_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS4ID4_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS4ID4__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterISS4ID4
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterISS4ID4_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterISS4ID4

        Create a new object of the class itkPyImageFilterISS4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterISS4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterISS4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterISS4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterISS4ID4 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterISS4ID4_swigregister(itkPyImageFilterISS4ID4)
itkPyImageFilterISS4ID4___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterISS4ID4___New_orig__
itkPyImageFilterISS4ID4_cast = _itkPyImageFilterPython.itkPyImageFilterISS4ID4_cast


def itkPyImageFilterISS4IF4_New():
    return itkPyImageFilterISS4IF4.New()

class itkPyImageFilterISS4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4IF4):
    r"""Proxy of C++ itkPyImageFilterISS4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterISS4IF4___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS4IF4_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS4IF4_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS4IF4_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS4IF4_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS4IF4_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS4IF4__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterISS4IF4
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterISS4IF4_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterISS4IF4

        Create a new object of the class itkPyImageFilterISS4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterISS4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterISS4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterISS4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterISS4IF4 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterISS4IF4_swigregister(itkPyImageFilterISS4IF4)
itkPyImageFilterISS4IF4___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterISS4IF4___New_orig__
itkPyImageFilterISS4IF4_cast = _itkPyImageFilterPython.itkPyImageFilterISS4IF4_cast


def itkPyImageFilterISS4ISS4_New():
    return itkPyImageFilterISS4ISS4.New()

class itkPyImageFilterISS4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkPyImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterISS4ISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS4ISS4_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS4ISS4_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS4ISS4_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS4ISS4_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS4ISS4_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS4ISS4__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterISS4ISS4
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterISS4ISS4_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterISS4ISS4

        Create a new object of the class itkPyImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterISS4ISS4 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterISS4ISS4_swigregister(itkPyImageFilterISS4ISS4)
itkPyImageFilterISS4ISS4___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterISS4ISS4___New_orig__
itkPyImageFilterISS4ISS4_cast = _itkPyImageFilterPython.itkPyImageFilterISS4ISS4_cast


def itkPyImageFilterISS4IUC4_New():
    return itkPyImageFilterISS4IUC4.New()

class itkPyImageFilterISS4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4IUC4):
    r"""Proxy of C++ itkPyImageFilterISS4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterISS4IUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS4IUC4_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS4IUC4_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS4IUC4_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS4IUC4_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS4IUC4_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS4IUC4__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterISS4IUC4
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterISS4IUC4_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterISS4IUC4

        Create a new object of the class itkPyImageFilterISS4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterISS4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterISS4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterISS4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterISS4IUC4 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterISS4IUC4_swigregister(itkPyImageFilterISS4IUC4)
itkPyImageFilterISS4IUC4___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterISS4IUC4___New_orig__
itkPyImageFilterISS4IUC4_cast = _itkPyImageFilterPython.itkPyImageFilterISS4IUC4_cast


def itkPyImageFilterISS4IUS4_New():
    return itkPyImageFilterISS4IUS4.New()

class itkPyImageFilterISS4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4IUS4):
    r"""Proxy of C++ itkPyImageFilterISS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterISS4IUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS4IUS4_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS4IUS4_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS4IUS4_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS4IUS4_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS4IUS4_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterISS4IUS4__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterISS4IUS4
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterISS4IUS4_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterISS4IUS4

        Create a new object of the class itkPyImageFilterISS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterISS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterISS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterISS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterISS4IUS4 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterISS4IUS4_swigregister(itkPyImageFilterISS4IUS4)
itkPyImageFilterISS4IUS4___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterISS4IUS4___New_orig__
itkPyImageFilterISS4IUS4_cast = _itkPyImageFilterPython.itkPyImageFilterISS4IUS4_cast


def itkPyImageFilterIUC2ID2_New():
    return itkPyImageFilterIUC2ID2.New()

class itkPyImageFilterIUC2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2):
    r"""Proxy of C++ itkPyImageFilterIUC2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUC2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC2ID2_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC2ID2_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC2ID2_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC2ID2_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC2ID2_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC2ID2__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIUC2ID2
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUC2ID2_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIUC2ID2

        Create a new object of the class itkPyImageFilterIUC2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIUC2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIUC2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIUC2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIUC2ID2 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIUC2ID2_swigregister(itkPyImageFilterIUC2ID2)
itkPyImageFilterIUC2ID2___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIUC2ID2___New_orig__
itkPyImageFilterIUC2ID2_cast = _itkPyImageFilterPython.itkPyImageFilterIUC2ID2_cast


def itkPyImageFilterIUC2IF2_New():
    return itkPyImageFilterIUC2IF2.New()

class itkPyImageFilterIUC2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2):
    r"""Proxy of C++ itkPyImageFilterIUC2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUC2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC2IF2_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC2IF2_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC2IF2_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC2IF2_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC2IF2_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC2IF2__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIUC2IF2
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUC2IF2_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIUC2IF2

        Create a new object of the class itkPyImageFilterIUC2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIUC2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIUC2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIUC2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIUC2IF2 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIUC2IF2_swigregister(itkPyImageFilterIUC2IF2)
itkPyImageFilterIUC2IF2___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIUC2IF2___New_orig__
itkPyImageFilterIUC2IF2_cast = _itkPyImageFilterPython.itkPyImageFilterIUC2IF2_cast


def itkPyImageFilterIUC2ISS2_New():
    return itkPyImageFilterIUC2ISS2.New()

class itkPyImageFilterIUC2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2ISS2):
    r"""Proxy of C++ itkPyImageFilterIUC2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUC2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC2ISS2_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC2ISS2_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC2ISS2_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC2ISS2_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC2ISS2_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC2ISS2__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIUC2ISS2
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUC2ISS2_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIUC2ISS2

        Create a new object of the class itkPyImageFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIUC2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIUC2ISS2 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIUC2ISS2_swigregister(itkPyImageFilterIUC2ISS2)
itkPyImageFilterIUC2ISS2___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIUC2ISS2___New_orig__
itkPyImageFilterIUC2ISS2_cast = _itkPyImageFilterPython.itkPyImageFilterIUC2ISS2_cast


def itkPyImageFilterIUC2IUC2_New():
    return itkPyImageFilterIUC2IUC2.New()

class itkPyImageFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkPyImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC2IUC2_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC2IUC2_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC2IUC2_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC2IUC2_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC2IUC2_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC2IUC2__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUC2IUC2_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIUC2IUC2

        Create a new object of the class itkPyImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIUC2IUC2 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIUC2IUC2_swigregister(itkPyImageFilterIUC2IUC2)
itkPyImageFilterIUC2IUC2___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIUC2IUC2___New_orig__
itkPyImageFilterIUC2IUC2_cast = _itkPyImageFilterPython.itkPyImageFilterIUC2IUC2_cast


def itkPyImageFilterIUC2IUS2_New():
    return itkPyImageFilterIUC2IUS2.New()

class itkPyImageFilterIUC2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2):
    r"""Proxy of C++ itkPyImageFilterIUC2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUC2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC2IUS2_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC2IUS2_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC2IUS2_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC2IUS2_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC2IUS2_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC2IUS2__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIUC2IUS2
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUC2IUS2_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIUC2IUS2

        Create a new object of the class itkPyImageFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIUC2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIUC2IUS2 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIUC2IUS2_swigregister(itkPyImageFilterIUC2IUS2)
itkPyImageFilterIUC2IUS2___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIUC2IUS2___New_orig__
itkPyImageFilterIUC2IUS2_cast = _itkPyImageFilterPython.itkPyImageFilterIUC2IUS2_cast


def itkPyImageFilterIUC3ID3_New():
    return itkPyImageFilterIUC3ID3.New()

class itkPyImageFilterIUC3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3):
    r"""Proxy of C++ itkPyImageFilterIUC3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUC3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC3ID3_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC3ID3_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC3ID3_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC3ID3_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC3ID3_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC3ID3__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIUC3ID3
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUC3ID3_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIUC3ID3

        Create a new object of the class itkPyImageFilterIUC3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIUC3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIUC3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIUC3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIUC3ID3 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIUC3ID3_swigregister(itkPyImageFilterIUC3ID3)
itkPyImageFilterIUC3ID3___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIUC3ID3___New_orig__
itkPyImageFilterIUC3ID3_cast = _itkPyImageFilterPython.itkPyImageFilterIUC3ID3_cast


def itkPyImageFilterIUC3IF3_New():
    return itkPyImageFilterIUC3IF3.New()

class itkPyImageFilterIUC3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3):
    r"""Proxy of C++ itkPyImageFilterIUC3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUC3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC3IF3_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC3IF3_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC3IF3_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC3IF3_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC3IF3_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC3IF3__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIUC3IF3
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUC3IF3_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIUC3IF3

        Create a new object of the class itkPyImageFilterIUC3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIUC3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIUC3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIUC3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIUC3IF3 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIUC3IF3_swigregister(itkPyImageFilterIUC3IF3)
itkPyImageFilterIUC3IF3___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIUC3IF3___New_orig__
itkPyImageFilterIUC3IF3_cast = _itkPyImageFilterPython.itkPyImageFilterIUC3IF3_cast


def itkPyImageFilterIUC3ISS3_New():
    return itkPyImageFilterIUC3ISS3.New()

class itkPyImageFilterIUC3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3ISS3):
    r"""Proxy of C++ itkPyImageFilterIUC3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUC3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC3ISS3_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC3ISS3_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC3ISS3_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC3ISS3_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC3ISS3_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC3ISS3__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIUC3ISS3
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUC3ISS3_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIUC3ISS3

        Create a new object of the class itkPyImageFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIUC3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIUC3ISS3 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIUC3ISS3_swigregister(itkPyImageFilterIUC3ISS3)
itkPyImageFilterIUC3ISS3___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIUC3ISS3___New_orig__
itkPyImageFilterIUC3ISS3_cast = _itkPyImageFilterPython.itkPyImageFilterIUC3ISS3_cast


def itkPyImageFilterIUC3IUC3_New():
    return itkPyImageFilterIUC3IUC3.New()

class itkPyImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkPyImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC3IUC3_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC3IUC3_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC3IUC3_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC3IUC3_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC3IUC3_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC3IUC3__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUC3IUC3_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIUC3IUC3

        Create a new object of the class itkPyImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIUC3IUC3 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIUC3IUC3_swigregister(itkPyImageFilterIUC3IUC3)
itkPyImageFilterIUC3IUC3___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIUC3IUC3___New_orig__
itkPyImageFilterIUC3IUC3_cast = _itkPyImageFilterPython.itkPyImageFilterIUC3IUC3_cast


def itkPyImageFilterIUC3IUS3_New():
    return itkPyImageFilterIUC3IUS3.New()

class itkPyImageFilterIUC3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3):
    r"""Proxy of C++ itkPyImageFilterIUC3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUC3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC3IUS3_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC3IUS3_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC3IUS3_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC3IUS3_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC3IUS3_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC3IUS3__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIUC3IUS3
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUC3IUS3_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIUC3IUS3

        Create a new object of the class itkPyImageFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIUC3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIUC3IUS3 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIUC3IUS3_swigregister(itkPyImageFilterIUC3IUS3)
itkPyImageFilterIUC3IUS3___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIUC3IUS3___New_orig__
itkPyImageFilterIUC3IUS3_cast = _itkPyImageFilterPython.itkPyImageFilterIUC3IUS3_cast


def itkPyImageFilterIUC4ID4_New():
    return itkPyImageFilterIUC4ID4.New()

class itkPyImageFilterIUC4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4ID4):
    r"""Proxy of C++ itkPyImageFilterIUC4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUC4ID4___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC4ID4_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC4ID4_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC4ID4_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC4ID4_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC4ID4_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC4ID4__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIUC4ID4
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUC4ID4_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIUC4ID4

        Create a new object of the class itkPyImageFilterIUC4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIUC4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIUC4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIUC4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIUC4ID4 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIUC4ID4_swigregister(itkPyImageFilterIUC4ID4)
itkPyImageFilterIUC4ID4___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIUC4ID4___New_orig__
itkPyImageFilterIUC4ID4_cast = _itkPyImageFilterPython.itkPyImageFilterIUC4ID4_cast


def itkPyImageFilterIUC4IF4_New():
    return itkPyImageFilterIUC4IF4.New()

class itkPyImageFilterIUC4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IF4):
    r"""Proxy of C++ itkPyImageFilterIUC4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUC4IF4___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC4IF4_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC4IF4_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC4IF4_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC4IF4_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC4IF4_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC4IF4__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIUC4IF4
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUC4IF4_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIUC4IF4

        Create a new object of the class itkPyImageFilterIUC4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIUC4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIUC4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIUC4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIUC4IF4 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIUC4IF4_swigregister(itkPyImageFilterIUC4IF4)
itkPyImageFilterIUC4IF4___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIUC4IF4___New_orig__
itkPyImageFilterIUC4IF4_cast = _itkPyImageFilterPython.itkPyImageFilterIUC4IF4_cast


def itkPyImageFilterIUC4ISS4_New():
    return itkPyImageFilterIUC4ISS4.New()

class itkPyImageFilterIUC4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4ISS4):
    r"""Proxy of C++ itkPyImageFilterIUC4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUC4ISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC4ISS4_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC4ISS4_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC4ISS4_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC4ISS4_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC4ISS4_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC4ISS4__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIUC4ISS4
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUC4ISS4_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIUC4ISS4

        Create a new object of the class itkPyImageFilterIUC4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIUC4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIUC4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIUC4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIUC4ISS4 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIUC4ISS4_swigregister(itkPyImageFilterIUC4ISS4)
itkPyImageFilterIUC4ISS4___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIUC4ISS4___New_orig__
itkPyImageFilterIUC4ISS4_cast = _itkPyImageFilterPython.itkPyImageFilterIUC4ISS4_cast


def itkPyImageFilterIUC4IUC4_New():
    return itkPyImageFilterIUC4IUC4.New()

class itkPyImageFilterIUC4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkPyImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUC4IUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC4IUC4_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC4IUC4_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC4IUC4_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC4IUC4_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC4IUC4_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC4IUC4__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIUC4IUC4
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUC4IUC4_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIUC4IUC4

        Create a new object of the class itkPyImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIUC4IUC4 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIUC4IUC4_swigregister(itkPyImageFilterIUC4IUC4)
itkPyImageFilterIUC4IUC4___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIUC4IUC4___New_orig__
itkPyImageFilterIUC4IUC4_cast = _itkPyImageFilterPython.itkPyImageFilterIUC4IUC4_cast


def itkPyImageFilterIUC4IUS4_New():
    return itkPyImageFilterIUC4IUS4.New()

class itkPyImageFilterIUC4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUS4):
    r"""Proxy of C++ itkPyImageFilterIUC4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUC4IUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC4IUS4_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC4IUS4_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC4IUS4_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC4IUS4_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC4IUS4_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUC4IUS4__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIUC4IUS4
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUC4IUS4_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIUC4IUS4

        Create a new object of the class itkPyImageFilterIUC4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIUC4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIUC4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIUC4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIUC4IUS4 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIUC4IUS4_swigregister(itkPyImageFilterIUC4IUS4)
itkPyImageFilterIUC4IUS4___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIUC4IUS4___New_orig__
itkPyImageFilterIUC4IUS4_cast = _itkPyImageFilterPython.itkPyImageFilterIUC4IUS4_cast


def itkPyImageFilterIUS2ID2_New():
    return itkPyImageFilterIUS2ID2.New()

class itkPyImageFilterIUS2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2):
    r"""Proxy of C++ itkPyImageFilterIUS2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUS2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS2ID2_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS2ID2_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS2ID2_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS2ID2_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS2ID2_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS2ID2__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIUS2ID2
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUS2ID2_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIUS2ID2

        Create a new object of the class itkPyImageFilterIUS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIUS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIUS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIUS2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIUS2ID2 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIUS2ID2_swigregister(itkPyImageFilterIUS2ID2)
itkPyImageFilterIUS2ID2___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIUS2ID2___New_orig__
itkPyImageFilterIUS2ID2_cast = _itkPyImageFilterPython.itkPyImageFilterIUS2ID2_cast


def itkPyImageFilterIUS2IF2_New():
    return itkPyImageFilterIUS2IF2.New()

class itkPyImageFilterIUS2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2):
    r"""Proxy of C++ itkPyImageFilterIUS2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUS2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS2IF2_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS2IF2_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS2IF2_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS2IF2_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS2IF2_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS2IF2__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIUS2IF2
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUS2IF2_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIUS2IF2

        Create a new object of the class itkPyImageFilterIUS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIUS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIUS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIUS2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIUS2IF2 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIUS2IF2_swigregister(itkPyImageFilterIUS2IF2)
itkPyImageFilterIUS2IF2___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIUS2IF2___New_orig__
itkPyImageFilterIUS2IF2_cast = _itkPyImageFilterPython.itkPyImageFilterIUS2IF2_cast


def itkPyImageFilterIUS2ISS2_New():
    return itkPyImageFilterIUS2ISS2.New()

class itkPyImageFilterIUS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2ISS2):
    r"""Proxy of C++ itkPyImageFilterIUS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS2ISS2_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS2ISS2_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS2ISS2_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS2ISS2_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS2ISS2_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS2ISS2__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIUS2ISS2
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUS2ISS2_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIUS2ISS2

        Create a new object of the class itkPyImageFilterIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIUS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIUS2ISS2 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIUS2ISS2_swigregister(itkPyImageFilterIUS2ISS2)
itkPyImageFilterIUS2ISS2___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIUS2ISS2___New_orig__
itkPyImageFilterIUS2ISS2_cast = _itkPyImageFilterPython.itkPyImageFilterIUS2ISS2_cast


def itkPyImageFilterIUS2IUC2_New():
    return itkPyImageFilterIUS2IUC2.New()

class itkPyImageFilterIUS2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2):
    r"""Proxy of C++ itkPyImageFilterIUS2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUS2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS2IUC2_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS2IUC2_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS2IUC2_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS2IUC2_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS2IUC2_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS2IUC2__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIUS2IUC2
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUS2IUC2_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIUS2IUC2

        Create a new object of the class itkPyImageFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIUS2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIUS2IUC2 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIUS2IUC2_swigregister(itkPyImageFilterIUS2IUC2)
itkPyImageFilterIUS2IUC2___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIUS2IUC2___New_orig__
itkPyImageFilterIUS2IUC2_cast = _itkPyImageFilterPython.itkPyImageFilterIUS2IUC2_cast


def itkPyImageFilterIUS2IUS2_New():
    return itkPyImageFilterIUS2IUS2.New()

class itkPyImageFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkPyImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS2IUS2_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS2IUS2_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS2IUS2_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS2IUS2_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS2IUS2_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS2IUS2__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUS2IUS2_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIUS2IUS2

        Create a new object of the class itkPyImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIUS2IUS2 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIUS2IUS2_swigregister(itkPyImageFilterIUS2IUS2)
itkPyImageFilterIUS2IUS2___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIUS2IUS2___New_orig__
itkPyImageFilterIUS2IUS2_cast = _itkPyImageFilterPython.itkPyImageFilterIUS2IUS2_cast


def itkPyImageFilterIUS3ID3_New():
    return itkPyImageFilterIUS3ID3.New()

class itkPyImageFilterIUS3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3):
    r"""Proxy of C++ itkPyImageFilterIUS3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUS3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS3ID3_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS3ID3_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS3ID3_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS3ID3_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS3ID3_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS3ID3__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIUS3ID3
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUS3ID3_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIUS3ID3

        Create a new object of the class itkPyImageFilterIUS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIUS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIUS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIUS3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIUS3ID3 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIUS3ID3_swigregister(itkPyImageFilterIUS3ID3)
itkPyImageFilterIUS3ID3___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIUS3ID3___New_orig__
itkPyImageFilterIUS3ID3_cast = _itkPyImageFilterPython.itkPyImageFilterIUS3ID3_cast


def itkPyImageFilterIUS3IF3_New():
    return itkPyImageFilterIUS3IF3.New()

class itkPyImageFilterIUS3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3):
    r"""Proxy of C++ itkPyImageFilterIUS3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUS3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS3IF3_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS3IF3_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS3IF3_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS3IF3_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS3IF3_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS3IF3__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIUS3IF3
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUS3IF3_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIUS3IF3

        Create a new object of the class itkPyImageFilterIUS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIUS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIUS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIUS3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIUS3IF3 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIUS3IF3_swigregister(itkPyImageFilterIUS3IF3)
itkPyImageFilterIUS3IF3___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIUS3IF3___New_orig__
itkPyImageFilterIUS3IF3_cast = _itkPyImageFilterPython.itkPyImageFilterIUS3IF3_cast


def itkPyImageFilterIUS3ISS3_New():
    return itkPyImageFilterIUS3ISS3.New()

class itkPyImageFilterIUS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3ISS3):
    r"""Proxy of C++ itkPyImageFilterIUS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS3ISS3_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS3ISS3_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS3ISS3_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS3ISS3_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS3ISS3_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS3ISS3__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIUS3ISS3
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUS3ISS3_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIUS3ISS3

        Create a new object of the class itkPyImageFilterIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIUS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIUS3ISS3 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIUS3ISS3_swigregister(itkPyImageFilterIUS3ISS3)
itkPyImageFilterIUS3ISS3___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIUS3ISS3___New_orig__
itkPyImageFilterIUS3ISS3_cast = _itkPyImageFilterPython.itkPyImageFilterIUS3ISS3_cast


def itkPyImageFilterIUS3IUC3_New():
    return itkPyImageFilterIUS3IUC3.New()

class itkPyImageFilterIUS3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3):
    r"""Proxy of C++ itkPyImageFilterIUS3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUS3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS3IUC3_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS3IUC3_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS3IUC3_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS3IUC3_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS3IUC3_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS3IUC3__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIUS3IUC3
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUS3IUC3_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIUS3IUC3

        Create a new object of the class itkPyImageFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIUS3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIUS3IUC3 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIUS3IUC3_swigregister(itkPyImageFilterIUS3IUC3)
itkPyImageFilterIUS3IUC3___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIUS3IUC3___New_orig__
itkPyImageFilterIUS3IUC3_cast = _itkPyImageFilterPython.itkPyImageFilterIUS3IUC3_cast


def itkPyImageFilterIUS3IUS3_New():
    return itkPyImageFilterIUS3IUS3.New()

class itkPyImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkPyImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS3IUS3_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS3IUS3_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS3IUS3_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS3IUS3_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS3IUS3_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS3IUS3__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUS3IUS3_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIUS3IUS3

        Create a new object of the class itkPyImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIUS3IUS3 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIUS3IUS3_swigregister(itkPyImageFilterIUS3IUS3)
itkPyImageFilterIUS3IUS3___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIUS3IUS3___New_orig__
itkPyImageFilterIUS3IUS3_cast = _itkPyImageFilterPython.itkPyImageFilterIUS3IUS3_cast


def itkPyImageFilterIUS4ID4_New():
    return itkPyImageFilterIUS4ID4.New()

class itkPyImageFilterIUS4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4ID4):
    r"""Proxy of C++ itkPyImageFilterIUS4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUS4ID4___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS4ID4_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS4ID4_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS4ID4_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS4ID4_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS4ID4_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS4ID4__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIUS4ID4
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUS4ID4_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIUS4ID4

        Create a new object of the class itkPyImageFilterIUS4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIUS4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIUS4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIUS4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIUS4ID4 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIUS4ID4_swigregister(itkPyImageFilterIUS4ID4)
itkPyImageFilterIUS4ID4___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIUS4ID4___New_orig__
itkPyImageFilterIUS4ID4_cast = _itkPyImageFilterPython.itkPyImageFilterIUS4ID4_cast


def itkPyImageFilterIUS4IF4_New():
    return itkPyImageFilterIUS4IF4.New()

class itkPyImageFilterIUS4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IF4):
    r"""Proxy of C++ itkPyImageFilterIUS4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUS4IF4___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS4IF4_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS4IF4_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS4IF4_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS4IF4_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS4IF4_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS4IF4__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIUS4IF4
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUS4IF4_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIUS4IF4

        Create a new object of the class itkPyImageFilterIUS4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIUS4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIUS4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIUS4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIUS4IF4 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIUS4IF4_swigregister(itkPyImageFilterIUS4IF4)
itkPyImageFilterIUS4IF4___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIUS4IF4___New_orig__
itkPyImageFilterIUS4IF4_cast = _itkPyImageFilterPython.itkPyImageFilterIUS4IF4_cast


def itkPyImageFilterIUS4ISS4_New():
    return itkPyImageFilterIUS4ISS4.New()

class itkPyImageFilterIUS4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4ISS4):
    r"""Proxy of C++ itkPyImageFilterIUS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUS4ISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS4ISS4_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS4ISS4_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS4ISS4_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS4ISS4_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS4ISS4_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS4ISS4__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIUS4ISS4
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUS4ISS4_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIUS4ISS4

        Create a new object of the class itkPyImageFilterIUS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIUS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIUS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIUS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIUS4ISS4 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIUS4ISS4_swigregister(itkPyImageFilterIUS4ISS4)
itkPyImageFilterIUS4ISS4___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIUS4ISS4___New_orig__
itkPyImageFilterIUS4ISS4_cast = _itkPyImageFilterPython.itkPyImageFilterIUS4ISS4_cast


def itkPyImageFilterIUS4IUC4_New():
    return itkPyImageFilterIUS4IUC4.New()

class itkPyImageFilterIUS4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUC4):
    r"""Proxy of C++ itkPyImageFilterIUS4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUS4IUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS4IUC4_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS4IUC4_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS4IUC4_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS4IUC4_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS4IUC4_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS4IUC4__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIUS4IUC4
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUS4IUC4_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIUS4IUC4

        Create a new object of the class itkPyImageFilterIUS4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIUS4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIUS4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIUS4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIUS4IUC4 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIUS4IUC4_swigregister(itkPyImageFilterIUS4IUC4)
itkPyImageFilterIUS4IUC4___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIUS4IUC4___New_orig__
itkPyImageFilterIUS4IUC4_cast = _itkPyImageFilterPython.itkPyImageFilterIUS4IUC4_cast


def itkPyImageFilterIUS4IUS4_New():
    return itkPyImageFilterIUS4IUS4.New()

class itkPyImageFilterIUS4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkPyImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUS4IUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS4IUS4_Clone)
    SetPyGenerateInputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS4IUS4_SetPyGenerateInputRequestedRegion)
    SetPyGenerateOutputInformation = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS4IUS4_SetPyGenerateOutputInformation)
    SetPyEnlargeOutputRequestedRegion = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS4IUS4_SetPyEnlargeOutputRequestedRegion)
    SetPyGenerateData = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS4IUS4_SetPyGenerateData)
    _SetSelf = _swig_new_instance_method(_itkPyImageFilterPython.itkPyImageFilterIUS4IUS4__SetSelf)
    __swig_destroy__ = _itkPyImageFilterPython.delete_itkPyImageFilterIUS4IUS4
    cast = _swig_new_static_method(_itkPyImageFilterPython.itkPyImageFilterIUS4IUS4_cast)

    def Update(self):
        """Internal method to pass a pointer to the Python object wrapper, then call Update() on the filter."""
        self._SetSelf(self)
        super().Update()
    def UpdateLargestPossibleRegion(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateLargestPossibleRegion() on the filter."""
        self._SetSelf(self)
        super().UpdateLargestPossibleRegion()
    def UpdateOutputInformation(self):
        """Internal method to pass a pointer to the Python object wrapper, then call UpdateOutputInformation() on the filter."""
        self._SetSelf(self)
        super().UpdateOutputInformation()


    def New(*args, **kargs):
        """New() -> itkPyImageFilterIUS4IUS4

        Create a new object of the class itkPyImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPyImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPyImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPyImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPyImageFilterIUS4IUS4 in _itkPyImageFilterPython:
_itkPyImageFilterPython.itkPyImageFilterIUS4IUS4_swigregister(itkPyImageFilterIUS4IUS4)
itkPyImageFilterIUS4IUS4___New_orig__ = _itkPyImageFilterPython.itkPyImageFilterIUS4IUS4___New_orig__
itkPyImageFilterIUS4IUS4_cast = _itkPyImageFilterPython.itkPyImageFilterIUS4IUS4_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def py_image_filter(*args: itkt.ImageLike,  py_generate_input_requested_region=..., py_generate_output_information=..., py_enlarge_output_requested_region=..., py_generate_data=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for PyImageFilter"""
    import itk

    kwarg_typehints = { 'py_generate_input_requested_region':py_generate_input_requested_region,'py_generate_output_information':py_generate_output_information,'py_enlarge_output_requested_region':py_enlarge_output_requested_region,'py_generate_data':py_generate_data }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.PyImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def py_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKPyUtils.PyImageFilter
    py_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    py_image_filter.__doc__ = filter_object.__doc__




