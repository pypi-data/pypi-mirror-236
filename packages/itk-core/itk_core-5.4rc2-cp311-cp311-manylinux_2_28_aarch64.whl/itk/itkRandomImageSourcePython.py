# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKTestKernelPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkRandomImageSourcePython
else:
    import _itkRandomImageSourcePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkRandomImageSourcePython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkRandomImageSourcePython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkSizePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkImageSourcePython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourceCommonPython

def itkRandomImageSourceID2_New():
    return itkRandomImageSourceID2.New()

class itkRandomImageSourceID2(itk.itkImageSourcePython.itkImageSourceID2):
    r"""Proxy of C++ itkRandomImageSourceID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRandomImageSourcePython.itkRandomImageSourceID2___New_orig__)
    Clone = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID2_Clone)
    SetSize = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID2_SetSize)
    GetSize = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID2_GetSize)
    SetSpacing = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID2_SetSpacing)
    GetSpacing = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID2_GetSpacing)
    SetOrigin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID2_SetOrigin)
    GetOrigin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID2_GetOrigin)
    SetDirection = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID2_SetDirection)
    GetDirection = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID2_GetDirection)
    SetMin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID2_SetMin)
    GetMin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID2_GetMin)
    SetMax = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID2_SetMax)
    GetMax = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID2_GetMax)
    __swig_destroy__ = _itkRandomImageSourcePython.delete_itkRandomImageSourceID2
    cast = _swig_new_static_method(_itkRandomImageSourcePython.itkRandomImageSourceID2_cast)

    def New(*args, **kargs):
        """New() -> itkRandomImageSourceID2

        Create a new object of the class itkRandomImageSourceID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRandomImageSourceID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRandomImageSourceID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRandomImageSourceID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRandomImageSourceID2 in _itkRandomImageSourcePython:
_itkRandomImageSourcePython.itkRandomImageSourceID2_swigregister(itkRandomImageSourceID2)
itkRandomImageSourceID2___New_orig__ = _itkRandomImageSourcePython.itkRandomImageSourceID2___New_orig__
itkRandomImageSourceID2_cast = _itkRandomImageSourcePython.itkRandomImageSourceID2_cast


def itkRandomImageSourceID3_New():
    return itkRandomImageSourceID3.New()

class itkRandomImageSourceID3(itk.itkImageSourcePython.itkImageSourceID3):
    r"""Proxy of C++ itkRandomImageSourceID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRandomImageSourcePython.itkRandomImageSourceID3___New_orig__)
    Clone = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID3_Clone)
    SetSize = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID3_SetSize)
    GetSize = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID3_GetSize)
    SetSpacing = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID3_SetSpacing)
    GetSpacing = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID3_GetSpacing)
    SetOrigin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID3_SetOrigin)
    GetOrigin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID3_GetOrigin)
    SetDirection = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID3_SetDirection)
    GetDirection = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID3_GetDirection)
    SetMin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID3_SetMin)
    GetMin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID3_GetMin)
    SetMax = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID3_SetMax)
    GetMax = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID3_GetMax)
    __swig_destroy__ = _itkRandomImageSourcePython.delete_itkRandomImageSourceID3
    cast = _swig_new_static_method(_itkRandomImageSourcePython.itkRandomImageSourceID3_cast)

    def New(*args, **kargs):
        """New() -> itkRandomImageSourceID3

        Create a new object of the class itkRandomImageSourceID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRandomImageSourceID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRandomImageSourceID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRandomImageSourceID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRandomImageSourceID3 in _itkRandomImageSourcePython:
_itkRandomImageSourcePython.itkRandomImageSourceID3_swigregister(itkRandomImageSourceID3)
itkRandomImageSourceID3___New_orig__ = _itkRandomImageSourcePython.itkRandomImageSourceID3___New_orig__
itkRandomImageSourceID3_cast = _itkRandomImageSourcePython.itkRandomImageSourceID3_cast


def itkRandomImageSourceID4_New():
    return itkRandomImageSourceID4.New()

class itkRandomImageSourceID4(itk.itkImageSourcePython.itkImageSourceID4):
    r"""Proxy of C++ itkRandomImageSourceID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRandomImageSourcePython.itkRandomImageSourceID4___New_orig__)
    Clone = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID4_Clone)
    SetSize = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID4_SetSize)
    GetSize = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID4_GetSize)
    SetSpacing = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID4_SetSpacing)
    GetSpacing = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID4_GetSpacing)
    SetOrigin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID4_SetOrigin)
    GetOrigin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID4_GetOrigin)
    SetDirection = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID4_SetDirection)
    GetDirection = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID4_GetDirection)
    SetMin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID4_SetMin)
    GetMin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID4_GetMin)
    SetMax = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID4_SetMax)
    GetMax = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceID4_GetMax)
    __swig_destroy__ = _itkRandomImageSourcePython.delete_itkRandomImageSourceID4
    cast = _swig_new_static_method(_itkRandomImageSourcePython.itkRandomImageSourceID4_cast)

    def New(*args, **kargs):
        """New() -> itkRandomImageSourceID4

        Create a new object of the class itkRandomImageSourceID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRandomImageSourceID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRandomImageSourceID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRandomImageSourceID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRandomImageSourceID4 in _itkRandomImageSourcePython:
_itkRandomImageSourcePython.itkRandomImageSourceID4_swigregister(itkRandomImageSourceID4)
itkRandomImageSourceID4___New_orig__ = _itkRandomImageSourcePython.itkRandomImageSourceID4___New_orig__
itkRandomImageSourceID4_cast = _itkRandomImageSourcePython.itkRandomImageSourceID4_cast


def itkRandomImageSourceIF2_New():
    return itkRandomImageSourceIF2.New()

class itkRandomImageSourceIF2(itk.itkImageSourcePython.itkImageSourceIF2):
    r"""Proxy of C++ itkRandomImageSourceIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRandomImageSourcePython.itkRandomImageSourceIF2___New_orig__)
    Clone = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF2_Clone)
    SetSize = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF2_SetSize)
    GetSize = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF2_GetSize)
    SetSpacing = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF2_SetSpacing)
    GetSpacing = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF2_GetSpacing)
    SetOrigin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF2_SetOrigin)
    GetOrigin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF2_GetOrigin)
    SetDirection = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF2_SetDirection)
    GetDirection = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF2_GetDirection)
    SetMin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF2_SetMin)
    GetMin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF2_GetMin)
    SetMax = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF2_SetMax)
    GetMax = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF2_GetMax)
    __swig_destroy__ = _itkRandomImageSourcePython.delete_itkRandomImageSourceIF2
    cast = _swig_new_static_method(_itkRandomImageSourcePython.itkRandomImageSourceIF2_cast)

    def New(*args, **kargs):
        """New() -> itkRandomImageSourceIF2

        Create a new object of the class itkRandomImageSourceIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRandomImageSourceIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRandomImageSourceIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRandomImageSourceIF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRandomImageSourceIF2 in _itkRandomImageSourcePython:
_itkRandomImageSourcePython.itkRandomImageSourceIF2_swigregister(itkRandomImageSourceIF2)
itkRandomImageSourceIF2___New_orig__ = _itkRandomImageSourcePython.itkRandomImageSourceIF2___New_orig__
itkRandomImageSourceIF2_cast = _itkRandomImageSourcePython.itkRandomImageSourceIF2_cast


def itkRandomImageSourceIF3_New():
    return itkRandomImageSourceIF3.New()

class itkRandomImageSourceIF3(itk.itkImageSourcePython.itkImageSourceIF3):
    r"""Proxy of C++ itkRandomImageSourceIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRandomImageSourcePython.itkRandomImageSourceIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF3_Clone)
    SetSize = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF3_SetSize)
    GetSize = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF3_GetSize)
    SetSpacing = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF3_SetSpacing)
    GetSpacing = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF3_GetSpacing)
    SetOrigin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF3_SetOrigin)
    GetOrigin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF3_GetOrigin)
    SetDirection = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF3_SetDirection)
    GetDirection = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF3_GetDirection)
    SetMin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF3_SetMin)
    GetMin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF3_GetMin)
    SetMax = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF3_SetMax)
    GetMax = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF3_GetMax)
    __swig_destroy__ = _itkRandomImageSourcePython.delete_itkRandomImageSourceIF3
    cast = _swig_new_static_method(_itkRandomImageSourcePython.itkRandomImageSourceIF3_cast)

    def New(*args, **kargs):
        """New() -> itkRandomImageSourceIF3

        Create a new object of the class itkRandomImageSourceIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRandomImageSourceIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRandomImageSourceIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRandomImageSourceIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRandomImageSourceIF3 in _itkRandomImageSourcePython:
_itkRandomImageSourcePython.itkRandomImageSourceIF3_swigregister(itkRandomImageSourceIF3)
itkRandomImageSourceIF3___New_orig__ = _itkRandomImageSourcePython.itkRandomImageSourceIF3___New_orig__
itkRandomImageSourceIF3_cast = _itkRandomImageSourcePython.itkRandomImageSourceIF3_cast


def itkRandomImageSourceIF4_New():
    return itkRandomImageSourceIF4.New()

class itkRandomImageSourceIF4(itk.itkImageSourcePython.itkImageSourceIF4):
    r"""Proxy of C++ itkRandomImageSourceIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRandomImageSourcePython.itkRandomImageSourceIF4___New_orig__)
    Clone = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF4_Clone)
    SetSize = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF4_SetSize)
    GetSize = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF4_GetSize)
    SetSpacing = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF4_SetSpacing)
    GetSpacing = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF4_GetSpacing)
    SetOrigin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF4_SetOrigin)
    GetOrigin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF4_GetOrigin)
    SetDirection = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF4_SetDirection)
    GetDirection = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF4_GetDirection)
    SetMin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF4_SetMin)
    GetMin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF4_GetMin)
    SetMax = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF4_SetMax)
    GetMax = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIF4_GetMax)
    __swig_destroy__ = _itkRandomImageSourcePython.delete_itkRandomImageSourceIF4
    cast = _swig_new_static_method(_itkRandomImageSourcePython.itkRandomImageSourceIF4_cast)

    def New(*args, **kargs):
        """New() -> itkRandomImageSourceIF4

        Create a new object of the class itkRandomImageSourceIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRandomImageSourceIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRandomImageSourceIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRandomImageSourceIF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRandomImageSourceIF4 in _itkRandomImageSourcePython:
_itkRandomImageSourcePython.itkRandomImageSourceIF4_swigregister(itkRandomImageSourceIF4)
itkRandomImageSourceIF4___New_orig__ = _itkRandomImageSourcePython.itkRandomImageSourceIF4___New_orig__
itkRandomImageSourceIF4_cast = _itkRandomImageSourcePython.itkRandomImageSourceIF4_cast


def itkRandomImageSourceISS2_New():
    return itkRandomImageSourceISS2.New()

class itkRandomImageSourceISS2(itk.itkImageSourcePython.itkImageSourceISS2):
    r"""Proxy of C++ itkRandomImageSourceISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRandomImageSourcePython.itkRandomImageSourceISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS2_Clone)
    SetSize = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS2_SetSize)
    GetSize = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS2_GetSize)
    SetSpacing = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS2_SetSpacing)
    GetSpacing = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS2_GetSpacing)
    SetOrigin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS2_SetOrigin)
    GetOrigin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS2_GetOrigin)
    SetDirection = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS2_SetDirection)
    GetDirection = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS2_GetDirection)
    SetMin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS2_SetMin)
    GetMin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS2_GetMin)
    SetMax = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS2_SetMax)
    GetMax = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS2_GetMax)
    __swig_destroy__ = _itkRandomImageSourcePython.delete_itkRandomImageSourceISS2
    cast = _swig_new_static_method(_itkRandomImageSourcePython.itkRandomImageSourceISS2_cast)

    def New(*args, **kargs):
        """New() -> itkRandomImageSourceISS2

        Create a new object of the class itkRandomImageSourceISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRandomImageSourceISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRandomImageSourceISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRandomImageSourceISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRandomImageSourceISS2 in _itkRandomImageSourcePython:
_itkRandomImageSourcePython.itkRandomImageSourceISS2_swigregister(itkRandomImageSourceISS2)
itkRandomImageSourceISS2___New_orig__ = _itkRandomImageSourcePython.itkRandomImageSourceISS2___New_orig__
itkRandomImageSourceISS2_cast = _itkRandomImageSourcePython.itkRandomImageSourceISS2_cast


def itkRandomImageSourceISS3_New():
    return itkRandomImageSourceISS3.New()

class itkRandomImageSourceISS3(itk.itkImageSourcePython.itkImageSourceISS3):
    r"""Proxy of C++ itkRandomImageSourceISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRandomImageSourcePython.itkRandomImageSourceISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS3_Clone)
    SetSize = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS3_SetSize)
    GetSize = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS3_GetSize)
    SetSpacing = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS3_SetSpacing)
    GetSpacing = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS3_GetSpacing)
    SetOrigin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS3_SetOrigin)
    GetOrigin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS3_GetOrigin)
    SetDirection = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS3_SetDirection)
    GetDirection = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS3_GetDirection)
    SetMin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS3_SetMin)
    GetMin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS3_GetMin)
    SetMax = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS3_SetMax)
    GetMax = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS3_GetMax)
    __swig_destroy__ = _itkRandomImageSourcePython.delete_itkRandomImageSourceISS3
    cast = _swig_new_static_method(_itkRandomImageSourcePython.itkRandomImageSourceISS3_cast)

    def New(*args, **kargs):
        """New() -> itkRandomImageSourceISS3

        Create a new object of the class itkRandomImageSourceISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRandomImageSourceISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRandomImageSourceISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRandomImageSourceISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRandomImageSourceISS3 in _itkRandomImageSourcePython:
_itkRandomImageSourcePython.itkRandomImageSourceISS3_swigregister(itkRandomImageSourceISS3)
itkRandomImageSourceISS3___New_orig__ = _itkRandomImageSourcePython.itkRandomImageSourceISS3___New_orig__
itkRandomImageSourceISS3_cast = _itkRandomImageSourcePython.itkRandomImageSourceISS3_cast


def itkRandomImageSourceISS4_New():
    return itkRandomImageSourceISS4.New()

class itkRandomImageSourceISS4(itk.itkImageSourcePython.itkImageSourceISS4):
    r"""Proxy of C++ itkRandomImageSourceISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRandomImageSourcePython.itkRandomImageSourceISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS4_Clone)
    SetSize = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS4_SetSize)
    GetSize = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS4_GetSize)
    SetSpacing = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS4_SetSpacing)
    GetSpacing = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS4_GetSpacing)
    SetOrigin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS4_SetOrigin)
    GetOrigin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS4_GetOrigin)
    SetDirection = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS4_SetDirection)
    GetDirection = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS4_GetDirection)
    SetMin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS4_SetMin)
    GetMin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS4_GetMin)
    SetMax = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS4_SetMax)
    GetMax = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceISS4_GetMax)
    __swig_destroy__ = _itkRandomImageSourcePython.delete_itkRandomImageSourceISS4
    cast = _swig_new_static_method(_itkRandomImageSourcePython.itkRandomImageSourceISS4_cast)

    def New(*args, **kargs):
        """New() -> itkRandomImageSourceISS4

        Create a new object of the class itkRandomImageSourceISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRandomImageSourceISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRandomImageSourceISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRandomImageSourceISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRandomImageSourceISS4 in _itkRandomImageSourcePython:
_itkRandomImageSourcePython.itkRandomImageSourceISS4_swigregister(itkRandomImageSourceISS4)
itkRandomImageSourceISS4___New_orig__ = _itkRandomImageSourcePython.itkRandomImageSourceISS4___New_orig__
itkRandomImageSourceISS4_cast = _itkRandomImageSourcePython.itkRandomImageSourceISS4_cast


def itkRandomImageSourceIUC2_New():
    return itkRandomImageSourceIUC2.New()

class itkRandomImageSourceIUC2(itk.itkImageSourcePython.itkImageSourceIUC2):
    r"""Proxy of C++ itkRandomImageSourceIUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC2_Clone)
    SetSize = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC2_SetSize)
    GetSize = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC2_GetSize)
    SetSpacing = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC2_SetSpacing)
    GetSpacing = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC2_GetSpacing)
    SetOrigin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC2_SetOrigin)
    GetOrigin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC2_GetOrigin)
    SetDirection = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC2_SetDirection)
    GetDirection = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC2_GetDirection)
    SetMin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC2_SetMin)
    GetMin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC2_GetMin)
    SetMax = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC2_SetMax)
    GetMax = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC2_GetMax)
    __swig_destroy__ = _itkRandomImageSourcePython.delete_itkRandomImageSourceIUC2
    cast = _swig_new_static_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC2_cast)

    def New(*args, **kargs):
        """New() -> itkRandomImageSourceIUC2

        Create a new object of the class itkRandomImageSourceIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRandomImageSourceIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRandomImageSourceIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRandomImageSourceIUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRandomImageSourceIUC2 in _itkRandomImageSourcePython:
_itkRandomImageSourcePython.itkRandomImageSourceIUC2_swigregister(itkRandomImageSourceIUC2)
itkRandomImageSourceIUC2___New_orig__ = _itkRandomImageSourcePython.itkRandomImageSourceIUC2___New_orig__
itkRandomImageSourceIUC2_cast = _itkRandomImageSourcePython.itkRandomImageSourceIUC2_cast


def itkRandomImageSourceIUC3_New():
    return itkRandomImageSourceIUC3.New()

class itkRandomImageSourceIUC3(itk.itkImageSourcePython.itkImageSourceIUC3):
    r"""Proxy of C++ itkRandomImageSourceIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC3_Clone)
    SetSize = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC3_SetSize)
    GetSize = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC3_GetSize)
    SetSpacing = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC3_SetSpacing)
    GetSpacing = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC3_GetSpacing)
    SetOrigin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC3_SetOrigin)
    GetOrigin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC3_GetOrigin)
    SetDirection = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC3_SetDirection)
    GetDirection = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC3_GetDirection)
    SetMin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC3_SetMin)
    GetMin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC3_GetMin)
    SetMax = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC3_SetMax)
    GetMax = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC3_GetMax)
    __swig_destroy__ = _itkRandomImageSourcePython.delete_itkRandomImageSourceIUC3
    cast = _swig_new_static_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC3_cast)

    def New(*args, **kargs):
        """New() -> itkRandomImageSourceIUC3

        Create a new object of the class itkRandomImageSourceIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRandomImageSourceIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRandomImageSourceIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRandomImageSourceIUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRandomImageSourceIUC3 in _itkRandomImageSourcePython:
_itkRandomImageSourcePython.itkRandomImageSourceIUC3_swigregister(itkRandomImageSourceIUC3)
itkRandomImageSourceIUC3___New_orig__ = _itkRandomImageSourcePython.itkRandomImageSourceIUC3___New_orig__
itkRandomImageSourceIUC3_cast = _itkRandomImageSourcePython.itkRandomImageSourceIUC3_cast


def itkRandomImageSourceIUC4_New():
    return itkRandomImageSourceIUC4.New()

class itkRandomImageSourceIUC4(itk.itkImageSourcePython.itkImageSourceIUC4):
    r"""Proxy of C++ itkRandomImageSourceIUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC4_Clone)
    SetSize = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC4_SetSize)
    GetSize = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC4_GetSize)
    SetSpacing = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC4_SetSpacing)
    GetSpacing = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC4_GetSpacing)
    SetOrigin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC4_SetOrigin)
    GetOrigin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC4_GetOrigin)
    SetDirection = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC4_SetDirection)
    GetDirection = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC4_GetDirection)
    SetMin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC4_SetMin)
    GetMin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC4_GetMin)
    SetMax = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC4_SetMax)
    GetMax = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC4_GetMax)
    __swig_destroy__ = _itkRandomImageSourcePython.delete_itkRandomImageSourceIUC4
    cast = _swig_new_static_method(_itkRandomImageSourcePython.itkRandomImageSourceIUC4_cast)

    def New(*args, **kargs):
        """New() -> itkRandomImageSourceIUC4

        Create a new object of the class itkRandomImageSourceIUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRandomImageSourceIUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRandomImageSourceIUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRandomImageSourceIUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRandomImageSourceIUC4 in _itkRandomImageSourcePython:
_itkRandomImageSourcePython.itkRandomImageSourceIUC4_swigregister(itkRandomImageSourceIUC4)
itkRandomImageSourceIUC4___New_orig__ = _itkRandomImageSourcePython.itkRandomImageSourceIUC4___New_orig__
itkRandomImageSourceIUC4_cast = _itkRandomImageSourcePython.itkRandomImageSourceIUC4_cast


def itkRandomImageSourceIUS2_New():
    return itkRandomImageSourceIUS2.New()

class itkRandomImageSourceIUS2(itk.itkImageSourcePython.itkImageSourceIUS2):
    r"""Proxy of C++ itkRandomImageSourceIUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS2_Clone)
    SetSize = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS2_SetSize)
    GetSize = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS2_GetSize)
    SetSpacing = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS2_SetSpacing)
    GetSpacing = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS2_GetSpacing)
    SetOrigin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS2_SetOrigin)
    GetOrigin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS2_GetOrigin)
    SetDirection = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS2_SetDirection)
    GetDirection = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS2_GetDirection)
    SetMin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS2_SetMin)
    GetMin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS2_GetMin)
    SetMax = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS2_SetMax)
    GetMax = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS2_GetMax)
    __swig_destroy__ = _itkRandomImageSourcePython.delete_itkRandomImageSourceIUS2
    cast = _swig_new_static_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS2_cast)

    def New(*args, **kargs):
        """New() -> itkRandomImageSourceIUS2

        Create a new object of the class itkRandomImageSourceIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRandomImageSourceIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRandomImageSourceIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRandomImageSourceIUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRandomImageSourceIUS2 in _itkRandomImageSourcePython:
_itkRandomImageSourcePython.itkRandomImageSourceIUS2_swigregister(itkRandomImageSourceIUS2)
itkRandomImageSourceIUS2___New_orig__ = _itkRandomImageSourcePython.itkRandomImageSourceIUS2___New_orig__
itkRandomImageSourceIUS2_cast = _itkRandomImageSourcePython.itkRandomImageSourceIUS2_cast


def itkRandomImageSourceIUS3_New():
    return itkRandomImageSourceIUS3.New()

class itkRandomImageSourceIUS3(itk.itkImageSourcePython.itkImageSourceIUS3):
    r"""Proxy of C++ itkRandomImageSourceIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS3_Clone)
    SetSize = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS3_SetSize)
    GetSize = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS3_GetSize)
    SetSpacing = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS3_SetSpacing)
    GetSpacing = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS3_GetSpacing)
    SetOrigin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS3_SetOrigin)
    GetOrigin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS3_GetOrigin)
    SetDirection = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS3_SetDirection)
    GetDirection = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS3_GetDirection)
    SetMin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS3_SetMin)
    GetMin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS3_GetMin)
    SetMax = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS3_SetMax)
    GetMax = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS3_GetMax)
    __swig_destroy__ = _itkRandomImageSourcePython.delete_itkRandomImageSourceIUS3
    cast = _swig_new_static_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS3_cast)

    def New(*args, **kargs):
        """New() -> itkRandomImageSourceIUS3

        Create a new object of the class itkRandomImageSourceIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRandomImageSourceIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRandomImageSourceIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRandomImageSourceIUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRandomImageSourceIUS3 in _itkRandomImageSourcePython:
_itkRandomImageSourcePython.itkRandomImageSourceIUS3_swigregister(itkRandomImageSourceIUS3)
itkRandomImageSourceIUS3___New_orig__ = _itkRandomImageSourcePython.itkRandomImageSourceIUS3___New_orig__
itkRandomImageSourceIUS3_cast = _itkRandomImageSourcePython.itkRandomImageSourceIUS3_cast


def itkRandomImageSourceIUS4_New():
    return itkRandomImageSourceIUS4.New()

class itkRandomImageSourceIUS4(itk.itkImageSourcePython.itkImageSourceIUS4):
    r"""Proxy of C++ itkRandomImageSourceIUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS4_Clone)
    SetSize = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS4_SetSize)
    GetSize = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS4_GetSize)
    SetSpacing = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS4_SetSpacing)
    GetSpacing = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS4_GetSpacing)
    SetOrigin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS4_SetOrigin)
    GetOrigin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS4_GetOrigin)
    SetDirection = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS4_SetDirection)
    GetDirection = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS4_GetDirection)
    SetMin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS4_SetMin)
    GetMin = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS4_GetMin)
    SetMax = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS4_SetMax)
    GetMax = _swig_new_instance_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS4_GetMax)
    __swig_destroy__ = _itkRandomImageSourcePython.delete_itkRandomImageSourceIUS4
    cast = _swig_new_static_method(_itkRandomImageSourcePython.itkRandomImageSourceIUS4_cast)

    def New(*args, **kargs):
        """New() -> itkRandomImageSourceIUS4

        Create a new object of the class itkRandomImageSourceIUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRandomImageSourceIUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRandomImageSourceIUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRandomImageSourceIUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRandomImageSourceIUS4 in _itkRandomImageSourcePython:
_itkRandomImageSourcePython.itkRandomImageSourceIUS4_swigregister(itkRandomImageSourceIUS4)
itkRandomImageSourceIUS4___New_orig__ = _itkRandomImageSourcePython.itkRandomImageSourceIUS4___New_orig__
itkRandomImageSourceIUS4_cast = _itkRandomImageSourcePython.itkRandomImageSourceIUS4_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def random_image_source(*args,  size: Sequence[int]=..., spacing: Sequence[float]=..., origin: Sequence[float]=..., direction=..., min: int=..., max: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for RandomImageSource"""
    import itk

    kwarg_typehints = { 'size':size,'spacing':spacing,'origin':origin,'direction':direction,'min':min,'max':max }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.RandomImageSource.New(*args, **kwargs)

    return instance.__internal_call__()

def random_image_source_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKTestKernel.RandomImageSource
    random_image_source.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    random_image_source.__doc__ = filter_object.__doc__




