# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageGridPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkPasteImageFilterPython
else:
    import _itkPasteImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkPasteImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkPasteImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkRGBPixelPython
import itk.itkArrayPython
import itk.itkRGBAPixelPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageRegionPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterBPython

def itkPasteImageFilterID2_New():
    return itkPasteImageFilterID2.New()

class itkPasteImageFilterID2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    r"""Proxy of C++ itkPasteImageFilterID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterID2___New_orig__)
    Clone = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID2_Clone)
    SetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID2_SetDestinationIndex)
    GetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID2_GetDestinationIndex)
    SetDestinationSkipAxes = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID2_SetDestinationSkipAxes)
    GetDestinationSkipAxes = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID2_GetDestinationSkipAxes)
    SetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID2_SetSourceRegion)
    GetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID2_GetSourceRegion)
    SetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID2_SetDestinationImage)
    GetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID2_GetDestinationImage)
    SetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID2_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID2_GetSourceImage)
    SetConstantInput = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID2_SetConstantInput)
    SetConstant = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID2_SetConstant)
    GetConstantInput = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID2_GetConstantInput)
    GetConstant = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID2_GetConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID2_GenerateInputRequestedRegion)
    VerifyInputInformation = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID2_VerifyInputInformation)
    VerifyPreconditions = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID2_VerifyPreconditions)
    __swig_destroy__ = _itkPasteImageFilterPython.delete_itkPasteImageFilterID2
    cast = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterID2_cast)

    def New(*args, **kargs):
        """New() -> itkPasteImageFilterID2

        Create a new object of the class itkPasteImageFilterID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPasteImageFilterID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPasteImageFilterID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPasteImageFilterID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPasteImageFilterID2 in _itkPasteImageFilterPython:
_itkPasteImageFilterPython.itkPasteImageFilterID2_swigregister(itkPasteImageFilterID2)
itkPasteImageFilterID2___New_orig__ = _itkPasteImageFilterPython.itkPasteImageFilterID2___New_orig__
itkPasteImageFilterID2_cast = _itkPasteImageFilterPython.itkPasteImageFilterID2_cast


def itkPasteImageFilterID3_New():
    return itkPasteImageFilterID3.New()

class itkPasteImageFilterID3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    r"""Proxy of C++ itkPasteImageFilterID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterID3___New_orig__)
    Clone = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID3_Clone)
    SetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID3_SetDestinationIndex)
    GetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID3_GetDestinationIndex)
    SetDestinationSkipAxes = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID3_SetDestinationSkipAxes)
    GetDestinationSkipAxes = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID3_GetDestinationSkipAxes)
    SetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID3_SetSourceRegion)
    GetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID3_GetSourceRegion)
    SetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID3_SetDestinationImage)
    GetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID3_GetDestinationImage)
    SetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID3_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID3_GetSourceImage)
    SetConstantInput = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID3_SetConstantInput)
    SetConstant = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID3_SetConstant)
    GetConstantInput = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID3_GetConstantInput)
    GetConstant = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID3_GetConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID3_GenerateInputRequestedRegion)
    VerifyInputInformation = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID3_VerifyInputInformation)
    VerifyPreconditions = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID3_VerifyPreconditions)
    __swig_destroy__ = _itkPasteImageFilterPython.delete_itkPasteImageFilterID3
    cast = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterID3_cast)

    def New(*args, **kargs):
        """New() -> itkPasteImageFilterID3

        Create a new object of the class itkPasteImageFilterID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPasteImageFilterID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPasteImageFilterID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPasteImageFilterID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPasteImageFilterID3 in _itkPasteImageFilterPython:
_itkPasteImageFilterPython.itkPasteImageFilterID3_swigregister(itkPasteImageFilterID3)
itkPasteImageFilterID3___New_orig__ = _itkPasteImageFilterPython.itkPasteImageFilterID3___New_orig__
itkPasteImageFilterID3_cast = _itkPasteImageFilterPython.itkPasteImageFilterID3_cast


def itkPasteImageFilterID4_New():
    return itkPasteImageFilterID4.New()

class itkPasteImageFilterID4(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID4ID4):
    r"""Proxy of C++ itkPasteImageFilterID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterID4___New_orig__)
    Clone = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID4_Clone)
    SetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID4_SetDestinationIndex)
    GetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID4_GetDestinationIndex)
    SetDestinationSkipAxes = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID4_SetDestinationSkipAxes)
    GetDestinationSkipAxes = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID4_GetDestinationSkipAxes)
    SetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID4_SetSourceRegion)
    GetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID4_GetSourceRegion)
    SetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID4_SetDestinationImage)
    GetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID4_GetDestinationImage)
    SetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID4_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID4_GetSourceImage)
    SetConstantInput = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID4_SetConstantInput)
    SetConstant = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID4_SetConstant)
    GetConstantInput = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID4_GetConstantInput)
    GetConstant = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID4_GetConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID4_GenerateInputRequestedRegion)
    VerifyInputInformation = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID4_VerifyInputInformation)
    VerifyPreconditions = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterID4_VerifyPreconditions)
    __swig_destroy__ = _itkPasteImageFilterPython.delete_itkPasteImageFilterID4
    cast = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterID4_cast)

    def New(*args, **kargs):
        """New() -> itkPasteImageFilterID4

        Create a new object of the class itkPasteImageFilterID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPasteImageFilterID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPasteImageFilterID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPasteImageFilterID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPasteImageFilterID4 in _itkPasteImageFilterPython:
_itkPasteImageFilterPython.itkPasteImageFilterID4_swigregister(itkPasteImageFilterID4)
itkPasteImageFilterID4___New_orig__ = _itkPasteImageFilterPython.itkPasteImageFilterID4___New_orig__
itkPasteImageFilterID4_cast = _itkPasteImageFilterPython.itkPasteImageFilterID4_cast


def itkPasteImageFilterIF2_New():
    return itkPasteImageFilterIF2.New()

class itkPasteImageFilterIF2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    r"""Proxy of C++ itkPasteImageFilterIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterIF2___New_orig__)
    Clone = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF2_Clone)
    SetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF2_SetDestinationIndex)
    GetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF2_GetDestinationIndex)
    SetDestinationSkipAxes = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF2_SetDestinationSkipAxes)
    GetDestinationSkipAxes = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF2_GetDestinationSkipAxes)
    SetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF2_SetSourceRegion)
    GetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF2_GetSourceRegion)
    SetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF2_SetDestinationImage)
    GetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF2_GetDestinationImage)
    SetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF2_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF2_GetSourceImage)
    SetConstantInput = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF2_SetConstantInput)
    SetConstant = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF2_SetConstant)
    GetConstantInput = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF2_GetConstantInput)
    GetConstant = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF2_GetConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF2_GenerateInputRequestedRegion)
    VerifyInputInformation = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF2_VerifyInputInformation)
    VerifyPreconditions = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF2_VerifyPreconditions)
    __swig_destroy__ = _itkPasteImageFilterPython.delete_itkPasteImageFilterIF2
    cast = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterIF2_cast)

    def New(*args, **kargs):
        """New() -> itkPasteImageFilterIF2

        Create a new object of the class itkPasteImageFilterIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPasteImageFilterIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPasteImageFilterIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPasteImageFilterIF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPasteImageFilterIF2 in _itkPasteImageFilterPython:
_itkPasteImageFilterPython.itkPasteImageFilterIF2_swigregister(itkPasteImageFilterIF2)
itkPasteImageFilterIF2___New_orig__ = _itkPasteImageFilterPython.itkPasteImageFilterIF2___New_orig__
itkPasteImageFilterIF2_cast = _itkPasteImageFilterPython.itkPasteImageFilterIF2_cast


def itkPasteImageFilterIF3_New():
    return itkPasteImageFilterIF3.New()

class itkPasteImageFilterIF3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    r"""Proxy of C++ itkPasteImageFilterIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF3_Clone)
    SetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF3_SetDestinationIndex)
    GetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF3_GetDestinationIndex)
    SetDestinationSkipAxes = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF3_SetDestinationSkipAxes)
    GetDestinationSkipAxes = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF3_GetDestinationSkipAxes)
    SetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF3_SetSourceRegion)
    GetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF3_GetSourceRegion)
    SetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF3_SetDestinationImage)
    GetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF3_GetDestinationImage)
    SetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF3_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF3_GetSourceImage)
    SetConstantInput = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF3_SetConstantInput)
    SetConstant = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF3_SetConstant)
    GetConstantInput = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF3_GetConstantInput)
    GetConstant = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF3_GetConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF3_GenerateInputRequestedRegion)
    VerifyInputInformation = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF3_VerifyInputInformation)
    VerifyPreconditions = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF3_VerifyPreconditions)
    __swig_destroy__ = _itkPasteImageFilterPython.delete_itkPasteImageFilterIF3
    cast = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterIF3_cast)

    def New(*args, **kargs):
        """New() -> itkPasteImageFilterIF3

        Create a new object of the class itkPasteImageFilterIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPasteImageFilterIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPasteImageFilterIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPasteImageFilterIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPasteImageFilterIF3 in _itkPasteImageFilterPython:
_itkPasteImageFilterPython.itkPasteImageFilterIF3_swigregister(itkPasteImageFilterIF3)
itkPasteImageFilterIF3___New_orig__ = _itkPasteImageFilterPython.itkPasteImageFilterIF3___New_orig__
itkPasteImageFilterIF3_cast = _itkPasteImageFilterPython.itkPasteImageFilterIF3_cast


def itkPasteImageFilterIF4_New():
    return itkPasteImageFilterIF4.New()

class itkPasteImageFilterIF4(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF4IF4):
    r"""Proxy of C++ itkPasteImageFilterIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterIF4___New_orig__)
    Clone = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF4_Clone)
    SetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF4_SetDestinationIndex)
    GetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF4_GetDestinationIndex)
    SetDestinationSkipAxes = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF4_SetDestinationSkipAxes)
    GetDestinationSkipAxes = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF4_GetDestinationSkipAxes)
    SetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF4_SetSourceRegion)
    GetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF4_GetSourceRegion)
    SetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF4_SetDestinationImage)
    GetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF4_GetDestinationImage)
    SetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF4_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF4_GetSourceImage)
    SetConstantInput = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF4_SetConstantInput)
    SetConstant = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF4_SetConstant)
    GetConstantInput = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF4_GetConstantInput)
    GetConstant = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF4_GetConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF4_GenerateInputRequestedRegion)
    VerifyInputInformation = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF4_VerifyInputInformation)
    VerifyPreconditions = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIF4_VerifyPreconditions)
    __swig_destroy__ = _itkPasteImageFilterPython.delete_itkPasteImageFilterIF4
    cast = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterIF4_cast)

    def New(*args, **kargs):
        """New() -> itkPasteImageFilterIF4

        Create a new object of the class itkPasteImageFilterIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPasteImageFilterIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPasteImageFilterIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPasteImageFilterIF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPasteImageFilterIF4 in _itkPasteImageFilterPython:
_itkPasteImageFilterPython.itkPasteImageFilterIF4_swigregister(itkPasteImageFilterIF4)
itkPasteImageFilterIF4___New_orig__ = _itkPasteImageFilterPython.itkPasteImageFilterIF4___New_orig__
itkPasteImageFilterIF4_cast = _itkPasteImageFilterPython.itkPasteImageFilterIF4_cast


def itkPasteImageFilterISS2_New():
    return itkPasteImageFilterISS2.New()

class itkPasteImageFilterISS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    r"""Proxy of C++ itkPasteImageFilterISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS2_Clone)
    SetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS2_SetDestinationIndex)
    GetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS2_GetDestinationIndex)
    SetDestinationSkipAxes = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS2_SetDestinationSkipAxes)
    GetDestinationSkipAxes = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS2_GetDestinationSkipAxes)
    SetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS2_SetSourceRegion)
    GetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS2_GetSourceRegion)
    SetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS2_SetDestinationImage)
    GetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS2_GetDestinationImage)
    SetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS2_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS2_GetSourceImage)
    SetConstantInput = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS2_SetConstantInput)
    SetConstant = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS2_SetConstant)
    GetConstantInput = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS2_GetConstantInput)
    GetConstant = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS2_GetConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS2_GenerateInputRequestedRegion)
    VerifyInputInformation = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS2_VerifyInputInformation)
    VerifyPreconditions = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS2_VerifyPreconditions)
    __swig_destroy__ = _itkPasteImageFilterPython.delete_itkPasteImageFilterISS2
    cast = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterISS2_cast)

    def New(*args, **kargs):
        """New() -> itkPasteImageFilterISS2

        Create a new object of the class itkPasteImageFilterISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPasteImageFilterISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPasteImageFilterISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPasteImageFilterISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPasteImageFilterISS2 in _itkPasteImageFilterPython:
_itkPasteImageFilterPython.itkPasteImageFilterISS2_swigregister(itkPasteImageFilterISS2)
itkPasteImageFilterISS2___New_orig__ = _itkPasteImageFilterPython.itkPasteImageFilterISS2___New_orig__
itkPasteImageFilterISS2_cast = _itkPasteImageFilterPython.itkPasteImageFilterISS2_cast


def itkPasteImageFilterISS3_New():
    return itkPasteImageFilterISS3.New()

class itkPasteImageFilterISS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    r"""Proxy of C++ itkPasteImageFilterISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS3_Clone)
    SetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS3_SetDestinationIndex)
    GetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS3_GetDestinationIndex)
    SetDestinationSkipAxes = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS3_SetDestinationSkipAxes)
    GetDestinationSkipAxes = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS3_GetDestinationSkipAxes)
    SetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS3_SetSourceRegion)
    GetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS3_GetSourceRegion)
    SetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS3_SetDestinationImage)
    GetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS3_GetDestinationImage)
    SetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS3_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS3_GetSourceImage)
    SetConstantInput = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS3_SetConstantInput)
    SetConstant = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS3_SetConstant)
    GetConstantInput = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS3_GetConstantInput)
    GetConstant = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS3_GetConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS3_GenerateInputRequestedRegion)
    VerifyInputInformation = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS3_VerifyInputInformation)
    VerifyPreconditions = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS3_VerifyPreconditions)
    __swig_destroy__ = _itkPasteImageFilterPython.delete_itkPasteImageFilterISS3
    cast = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterISS3_cast)

    def New(*args, **kargs):
        """New() -> itkPasteImageFilterISS3

        Create a new object of the class itkPasteImageFilterISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPasteImageFilterISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPasteImageFilterISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPasteImageFilterISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPasteImageFilterISS3 in _itkPasteImageFilterPython:
_itkPasteImageFilterPython.itkPasteImageFilterISS3_swigregister(itkPasteImageFilterISS3)
itkPasteImageFilterISS3___New_orig__ = _itkPasteImageFilterPython.itkPasteImageFilterISS3___New_orig__
itkPasteImageFilterISS3_cast = _itkPasteImageFilterPython.itkPasteImageFilterISS3_cast


def itkPasteImageFilterISS4_New():
    return itkPasteImageFilterISS4.New()

class itkPasteImageFilterISS4(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS4ISS4):
    r"""Proxy of C++ itkPasteImageFilterISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS4_Clone)
    SetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS4_SetDestinationIndex)
    GetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS4_GetDestinationIndex)
    SetDestinationSkipAxes = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS4_SetDestinationSkipAxes)
    GetDestinationSkipAxes = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS4_GetDestinationSkipAxes)
    SetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS4_SetSourceRegion)
    GetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS4_GetSourceRegion)
    SetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS4_SetDestinationImage)
    GetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS4_GetDestinationImage)
    SetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS4_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS4_GetSourceImage)
    SetConstantInput = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS4_SetConstantInput)
    SetConstant = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS4_SetConstant)
    GetConstantInput = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS4_GetConstantInput)
    GetConstant = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS4_GetConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS4_GenerateInputRequestedRegion)
    VerifyInputInformation = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS4_VerifyInputInformation)
    VerifyPreconditions = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterISS4_VerifyPreconditions)
    __swig_destroy__ = _itkPasteImageFilterPython.delete_itkPasteImageFilterISS4
    cast = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterISS4_cast)

    def New(*args, **kargs):
        """New() -> itkPasteImageFilterISS4

        Create a new object of the class itkPasteImageFilterISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPasteImageFilterISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPasteImageFilterISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPasteImageFilterISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPasteImageFilterISS4 in _itkPasteImageFilterPython:
_itkPasteImageFilterPython.itkPasteImageFilterISS4_swigregister(itkPasteImageFilterISS4)
itkPasteImageFilterISS4___New_orig__ = _itkPasteImageFilterPython.itkPasteImageFilterISS4___New_orig__
itkPasteImageFilterISS4_cast = _itkPasteImageFilterPython.itkPasteImageFilterISS4_cast


def itkPasteImageFilterIUC2_New():
    return itkPasteImageFilterIUC2.New()

class itkPasteImageFilterIUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    r"""Proxy of C++ itkPasteImageFilterIUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC2_Clone)
    SetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC2_SetDestinationIndex)
    GetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC2_GetDestinationIndex)
    SetDestinationSkipAxes = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC2_SetDestinationSkipAxes)
    GetDestinationSkipAxes = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC2_GetDestinationSkipAxes)
    SetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC2_SetSourceRegion)
    GetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC2_GetSourceRegion)
    SetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC2_SetDestinationImage)
    GetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC2_GetDestinationImage)
    SetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC2_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC2_GetSourceImage)
    SetConstantInput = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC2_SetConstantInput)
    SetConstant = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC2_SetConstant)
    GetConstantInput = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC2_GetConstantInput)
    GetConstant = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC2_GetConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC2_GenerateInputRequestedRegion)
    VerifyInputInformation = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC2_VerifyInputInformation)
    VerifyPreconditions = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC2_VerifyPreconditions)
    __swig_destroy__ = _itkPasteImageFilterPython.delete_itkPasteImageFilterIUC2
    cast = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC2_cast)

    def New(*args, **kargs):
        """New() -> itkPasteImageFilterIUC2

        Create a new object of the class itkPasteImageFilterIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPasteImageFilterIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPasteImageFilterIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPasteImageFilterIUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPasteImageFilterIUC2 in _itkPasteImageFilterPython:
_itkPasteImageFilterPython.itkPasteImageFilterIUC2_swigregister(itkPasteImageFilterIUC2)
itkPasteImageFilterIUC2___New_orig__ = _itkPasteImageFilterPython.itkPasteImageFilterIUC2___New_orig__
itkPasteImageFilterIUC2_cast = _itkPasteImageFilterPython.itkPasteImageFilterIUC2_cast


def itkPasteImageFilterIUC3_New():
    return itkPasteImageFilterIUC3.New()

class itkPasteImageFilterIUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    r"""Proxy of C++ itkPasteImageFilterIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC3_Clone)
    SetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC3_SetDestinationIndex)
    GetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC3_GetDestinationIndex)
    SetDestinationSkipAxes = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC3_SetDestinationSkipAxes)
    GetDestinationSkipAxes = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC3_GetDestinationSkipAxes)
    SetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC3_SetSourceRegion)
    GetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC3_GetSourceRegion)
    SetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC3_SetDestinationImage)
    GetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC3_GetDestinationImage)
    SetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC3_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC3_GetSourceImage)
    SetConstantInput = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC3_SetConstantInput)
    SetConstant = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC3_SetConstant)
    GetConstantInput = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC3_GetConstantInput)
    GetConstant = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC3_GetConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC3_GenerateInputRequestedRegion)
    VerifyInputInformation = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC3_VerifyInputInformation)
    VerifyPreconditions = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC3_VerifyPreconditions)
    __swig_destroy__ = _itkPasteImageFilterPython.delete_itkPasteImageFilterIUC3
    cast = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC3_cast)

    def New(*args, **kargs):
        """New() -> itkPasteImageFilterIUC3

        Create a new object of the class itkPasteImageFilterIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPasteImageFilterIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPasteImageFilterIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPasteImageFilterIUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPasteImageFilterIUC3 in _itkPasteImageFilterPython:
_itkPasteImageFilterPython.itkPasteImageFilterIUC3_swigregister(itkPasteImageFilterIUC3)
itkPasteImageFilterIUC3___New_orig__ = _itkPasteImageFilterPython.itkPasteImageFilterIUC3___New_orig__
itkPasteImageFilterIUC3_cast = _itkPasteImageFilterPython.itkPasteImageFilterIUC3_cast


def itkPasteImageFilterIUC4_New():
    return itkPasteImageFilterIUC4.New()

class itkPasteImageFilterIUC4(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC4IUC4):
    r"""Proxy of C++ itkPasteImageFilterIUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC4_Clone)
    SetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC4_SetDestinationIndex)
    GetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC4_GetDestinationIndex)
    SetDestinationSkipAxes = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC4_SetDestinationSkipAxes)
    GetDestinationSkipAxes = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC4_GetDestinationSkipAxes)
    SetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC4_SetSourceRegion)
    GetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC4_GetSourceRegion)
    SetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC4_SetDestinationImage)
    GetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC4_GetDestinationImage)
    SetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC4_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC4_GetSourceImage)
    SetConstantInput = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC4_SetConstantInput)
    SetConstant = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC4_SetConstant)
    GetConstantInput = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC4_GetConstantInput)
    GetConstant = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC4_GetConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC4_GenerateInputRequestedRegion)
    VerifyInputInformation = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC4_VerifyInputInformation)
    VerifyPreconditions = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC4_VerifyPreconditions)
    __swig_destroy__ = _itkPasteImageFilterPython.delete_itkPasteImageFilterIUC4
    cast = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterIUC4_cast)

    def New(*args, **kargs):
        """New() -> itkPasteImageFilterIUC4

        Create a new object of the class itkPasteImageFilterIUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPasteImageFilterIUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPasteImageFilterIUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPasteImageFilterIUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPasteImageFilterIUC4 in _itkPasteImageFilterPython:
_itkPasteImageFilterPython.itkPasteImageFilterIUC4_swigregister(itkPasteImageFilterIUC4)
itkPasteImageFilterIUC4___New_orig__ = _itkPasteImageFilterPython.itkPasteImageFilterIUC4___New_orig__
itkPasteImageFilterIUC4_cast = _itkPasteImageFilterPython.itkPasteImageFilterIUC4_cast


def itkPasteImageFilterIUS2_New():
    return itkPasteImageFilterIUS2.New()

class itkPasteImageFilterIUS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    r"""Proxy of C++ itkPasteImageFilterIUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS2_Clone)
    SetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS2_SetDestinationIndex)
    GetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS2_GetDestinationIndex)
    SetDestinationSkipAxes = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS2_SetDestinationSkipAxes)
    GetDestinationSkipAxes = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS2_GetDestinationSkipAxes)
    SetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS2_SetSourceRegion)
    GetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS2_GetSourceRegion)
    SetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS2_SetDestinationImage)
    GetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS2_GetDestinationImage)
    SetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS2_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS2_GetSourceImage)
    SetConstantInput = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS2_SetConstantInput)
    SetConstant = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS2_SetConstant)
    GetConstantInput = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS2_GetConstantInput)
    GetConstant = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS2_GetConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS2_GenerateInputRequestedRegion)
    VerifyInputInformation = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS2_VerifyInputInformation)
    VerifyPreconditions = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS2_VerifyPreconditions)
    __swig_destroy__ = _itkPasteImageFilterPython.delete_itkPasteImageFilterIUS2
    cast = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS2_cast)

    def New(*args, **kargs):
        """New() -> itkPasteImageFilterIUS2

        Create a new object of the class itkPasteImageFilterIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPasteImageFilterIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPasteImageFilterIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPasteImageFilterIUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPasteImageFilterIUS2 in _itkPasteImageFilterPython:
_itkPasteImageFilterPython.itkPasteImageFilterIUS2_swigregister(itkPasteImageFilterIUS2)
itkPasteImageFilterIUS2___New_orig__ = _itkPasteImageFilterPython.itkPasteImageFilterIUS2___New_orig__
itkPasteImageFilterIUS2_cast = _itkPasteImageFilterPython.itkPasteImageFilterIUS2_cast


def itkPasteImageFilterIUS3_New():
    return itkPasteImageFilterIUS3.New()

class itkPasteImageFilterIUS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    r"""Proxy of C++ itkPasteImageFilterIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS3_Clone)
    SetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS3_SetDestinationIndex)
    GetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS3_GetDestinationIndex)
    SetDestinationSkipAxes = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS3_SetDestinationSkipAxes)
    GetDestinationSkipAxes = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS3_GetDestinationSkipAxes)
    SetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS3_SetSourceRegion)
    GetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS3_GetSourceRegion)
    SetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS3_SetDestinationImage)
    GetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS3_GetDestinationImage)
    SetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS3_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS3_GetSourceImage)
    SetConstantInput = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS3_SetConstantInput)
    SetConstant = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS3_SetConstant)
    GetConstantInput = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS3_GetConstantInput)
    GetConstant = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS3_GetConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS3_GenerateInputRequestedRegion)
    VerifyInputInformation = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS3_VerifyInputInformation)
    VerifyPreconditions = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS3_VerifyPreconditions)
    __swig_destroy__ = _itkPasteImageFilterPython.delete_itkPasteImageFilterIUS3
    cast = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS3_cast)

    def New(*args, **kargs):
        """New() -> itkPasteImageFilterIUS3

        Create a new object of the class itkPasteImageFilterIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPasteImageFilterIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPasteImageFilterIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPasteImageFilterIUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPasteImageFilterIUS3 in _itkPasteImageFilterPython:
_itkPasteImageFilterPython.itkPasteImageFilterIUS3_swigregister(itkPasteImageFilterIUS3)
itkPasteImageFilterIUS3___New_orig__ = _itkPasteImageFilterPython.itkPasteImageFilterIUS3___New_orig__
itkPasteImageFilterIUS3_cast = _itkPasteImageFilterPython.itkPasteImageFilterIUS3_cast


def itkPasteImageFilterIUS4_New():
    return itkPasteImageFilterIUS4.New()

class itkPasteImageFilterIUS4(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS4IUS4):
    r"""Proxy of C++ itkPasteImageFilterIUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS4_Clone)
    SetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS4_SetDestinationIndex)
    GetDestinationIndex = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS4_GetDestinationIndex)
    SetDestinationSkipAxes = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS4_SetDestinationSkipAxes)
    GetDestinationSkipAxes = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS4_GetDestinationSkipAxes)
    SetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS4_SetSourceRegion)
    GetSourceRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS4_GetSourceRegion)
    SetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS4_SetDestinationImage)
    GetDestinationImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS4_GetDestinationImage)
    SetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS4_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS4_GetSourceImage)
    SetConstantInput = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS4_SetConstantInput)
    SetConstant = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS4_SetConstant)
    GetConstantInput = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS4_GetConstantInput)
    GetConstant = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS4_GetConstant)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS4_GenerateInputRequestedRegion)
    VerifyInputInformation = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS4_VerifyInputInformation)
    VerifyPreconditions = _swig_new_instance_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS4_VerifyPreconditions)
    __swig_destroy__ = _itkPasteImageFilterPython.delete_itkPasteImageFilterIUS4
    cast = _swig_new_static_method(_itkPasteImageFilterPython.itkPasteImageFilterIUS4_cast)

    def New(*args, **kargs):
        """New() -> itkPasteImageFilterIUS4

        Create a new object of the class itkPasteImageFilterIUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPasteImageFilterIUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPasteImageFilterIUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPasteImageFilterIUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPasteImageFilterIUS4 in _itkPasteImageFilterPython:
_itkPasteImageFilterPython.itkPasteImageFilterIUS4_swigregister(itkPasteImageFilterIUS4)
itkPasteImageFilterIUS4___New_orig__ = _itkPasteImageFilterPython.itkPasteImageFilterIUS4___New_orig__
itkPasteImageFilterIUS4_cast = _itkPasteImageFilterPython.itkPasteImageFilterIUS4_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def paste_image_filter(*args: itkt.ImageLike,  destination_index: Sequence[int]=..., destination_skip_axes: Sequence[bool]=..., source_region: itkt.ImageRegion=..., destination_image: itkt.Image=..., source_image: itkt.Image=..., constant_input=..., constant: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for PasteImageFilter"""
    import itk

    kwarg_typehints = { 'destination_index':destination_index,'destination_skip_axes':destination_skip_axes,'source_region':source_region,'destination_image':destination_image,'source_image':source_image,'constant_input':constant_input,'constant':constant }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.PasteImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def paste_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageGrid.PasteImageFilter
    paste_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    paste_image_filter.__doc__ = filter_object.__doc__




