# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageGridPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkRegionOfInterestImageFilterPython
else:
    import _itkRegionOfInterestImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkRegionOfInterestImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkRegionOfInterestImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython

def itkRegionOfInterestImageFilterID2ID2_New():
    return itkRegionOfInterestImageFilterID2ID2.New()

class itkRegionOfInterestImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkRegionOfInterestImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterID2ID2_Clone)
    SetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterID2ID2_SetRegionOfInterest)
    GetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterID2ID2_GetRegionOfInterest)
    SameDimensionCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterID2ID2_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterID2ID2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkRegionOfInterestImageFilterPython.delete_itkRegionOfInterestImageFilterID2ID2
    cast = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkRegionOfInterestImageFilterID2ID2

        Create a new object of the class itkRegionOfInterestImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegionOfInterestImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegionOfInterestImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegionOfInterestImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegionOfInterestImageFilterID2ID2 in _itkRegionOfInterestImageFilterPython:
_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterID2ID2_swigregister(itkRegionOfInterestImageFilterID2ID2)
itkRegionOfInterestImageFilterID2ID2___New_orig__ = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterID2ID2___New_orig__
itkRegionOfInterestImageFilterID2ID2_cast = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterID2ID2_cast


def itkRegionOfInterestImageFilterID3ID3_New():
    return itkRegionOfInterestImageFilterID3ID3.New()

class itkRegionOfInterestImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkRegionOfInterestImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterID3ID3_Clone)
    SetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterID3ID3_SetRegionOfInterest)
    GetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterID3ID3_GetRegionOfInterest)
    SameDimensionCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterID3ID3_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterID3ID3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkRegionOfInterestImageFilterPython.delete_itkRegionOfInterestImageFilterID3ID3
    cast = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkRegionOfInterestImageFilterID3ID3

        Create a new object of the class itkRegionOfInterestImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegionOfInterestImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegionOfInterestImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegionOfInterestImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegionOfInterestImageFilterID3ID3 in _itkRegionOfInterestImageFilterPython:
_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterID3ID3_swigregister(itkRegionOfInterestImageFilterID3ID3)
itkRegionOfInterestImageFilterID3ID3___New_orig__ = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterID3ID3___New_orig__
itkRegionOfInterestImageFilterID3ID3_cast = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterID3ID3_cast


def itkRegionOfInterestImageFilterID4ID4_New():
    return itkRegionOfInterestImageFilterID4ID4.New()

class itkRegionOfInterestImageFilterID4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkRegionOfInterestImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterID4ID4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterID4ID4_Clone)
    SetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterID4ID4_SetRegionOfInterest)
    GetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterID4ID4_GetRegionOfInterest)
    SameDimensionCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterID4ID4_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterID4ID4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkRegionOfInterestImageFilterPython.delete_itkRegionOfInterestImageFilterID4ID4
    cast = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterID4ID4_cast)

    def New(*args, **kargs):
        """New() -> itkRegionOfInterestImageFilterID4ID4

        Create a new object of the class itkRegionOfInterestImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegionOfInterestImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegionOfInterestImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegionOfInterestImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegionOfInterestImageFilterID4ID4 in _itkRegionOfInterestImageFilterPython:
_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterID4ID4_swigregister(itkRegionOfInterestImageFilterID4ID4)
itkRegionOfInterestImageFilterID4ID4___New_orig__ = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterID4ID4___New_orig__
itkRegionOfInterestImageFilterID4ID4_cast = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterID4ID4_cast


def itkRegionOfInterestImageFilterIF2IF2_New():
    return itkRegionOfInterestImageFilterIF2IF2.New()

class itkRegionOfInterestImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkRegionOfInterestImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIF2IF2_Clone)
    SetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIF2IF2_SetRegionOfInterest)
    GetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIF2IF2_GetRegionOfInterest)
    SameDimensionCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIF2IF2_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIF2IF2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkRegionOfInterestImageFilterPython.delete_itkRegionOfInterestImageFilterIF2IF2
    cast = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkRegionOfInterestImageFilterIF2IF2

        Create a new object of the class itkRegionOfInterestImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegionOfInterestImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegionOfInterestImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegionOfInterestImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegionOfInterestImageFilterIF2IF2 in _itkRegionOfInterestImageFilterPython:
_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIF2IF2_swigregister(itkRegionOfInterestImageFilterIF2IF2)
itkRegionOfInterestImageFilterIF2IF2___New_orig__ = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIF2IF2___New_orig__
itkRegionOfInterestImageFilterIF2IF2_cast = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIF2IF2_cast


def itkRegionOfInterestImageFilterIF3IF3_New():
    return itkRegionOfInterestImageFilterIF3IF3.New()

class itkRegionOfInterestImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkRegionOfInterestImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIF3IF3_Clone)
    SetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIF3IF3_SetRegionOfInterest)
    GetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIF3IF3_GetRegionOfInterest)
    SameDimensionCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIF3IF3_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIF3IF3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkRegionOfInterestImageFilterPython.delete_itkRegionOfInterestImageFilterIF3IF3
    cast = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkRegionOfInterestImageFilterIF3IF3

        Create a new object of the class itkRegionOfInterestImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegionOfInterestImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegionOfInterestImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegionOfInterestImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegionOfInterestImageFilterIF3IF3 in _itkRegionOfInterestImageFilterPython:
_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIF3IF3_swigregister(itkRegionOfInterestImageFilterIF3IF3)
itkRegionOfInterestImageFilterIF3IF3___New_orig__ = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIF3IF3___New_orig__
itkRegionOfInterestImageFilterIF3IF3_cast = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIF3IF3_cast


def itkRegionOfInterestImageFilterIF4IF4_New():
    return itkRegionOfInterestImageFilterIF4IF4.New()

class itkRegionOfInterestImageFilterIF4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkRegionOfInterestImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIF4IF4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIF4IF4_Clone)
    SetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIF4IF4_SetRegionOfInterest)
    GetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIF4IF4_GetRegionOfInterest)
    SameDimensionCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIF4IF4_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIF4IF4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkRegionOfInterestImageFilterPython.delete_itkRegionOfInterestImageFilterIF4IF4
    cast = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIF4IF4_cast)

    def New(*args, **kargs):
        """New() -> itkRegionOfInterestImageFilterIF4IF4

        Create a new object of the class itkRegionOfInterestImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegionOfInterestImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegionOfInterestImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegionOfInterestImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegionOfInterestImageFilterIF4IF4 in _itkRegionOfInterestImageFilterPython:
_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIF4IF4_swigregister(itkRegionOfInterestImageFilterIF4IF4)
itkRegionOfInterestImageFilterIF4IF4___New_orig__ = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIF4IF4___New_orig__
itkRegionOfInterestImageFilterIF4IF4_cast = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIF4IF4_cast


def itkRegionOfInterestImageFilterISS2ISS2_New():
    return itkRegionOfInterestImageFilterISS2ISS2.New()

class itkRegionOfInterestImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkRegionOfInterestImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterISS2ISS2_Clone)
    SetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterISS2ISS2_SetRegionOfInterest)
    GetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterISS2ISS2_GetRegionOfInterest)
    SameDimensionCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterISS2ISS2_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterISS2ISS2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkRegionOfInterestImageFilterPython.delete_itkRegionOfInterestImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkRegionOfInterestImageFilterISS2ISS2

        Create a new object of the class itkRegionOfInterestImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegionOfInterestImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegionOfInterestImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegionOfInterestImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegionOfInterestImageFilterISS2ISS2 in _itkRegionOfInterestImageFilterPython:
_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterISS2ISS2_swigregister(itkRegionOfInterestImageFilterISS2ISS2)
itkRegionOfInterestImageFilterISS2ISS2___New_orig__ = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterISS2ISS2___New_orig__
itkRegionOfInterestImageFilterISS2ISS2_cast = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterISS2ISS2_cast


def itkRegionOfInterestImageFilterISS3ISS3_New():
    return itkRegionOfInterestImageFilterISS3ISS3.New()

class itkRegionOfInterestImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkRegionOfInterestImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterISS3ISS3_Clone)
    SetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterISS3ISS3_SetRegionOfInterest)
    GetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterISS3ISS3_GetRegionOfInterest)
    SameDimensionCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterISS3ISS3_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterISS3ISS3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkRegionOfInterestImageFilterPython.delete_itkRegionOfInterestImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkRegionOfInterestImageFilterISS3ISS3

        Create a new object of the class itkRegionOfInterestImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegionOfInterestImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegionOfInterestImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegionOfInterestImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegionOfInterestImageFilterISS3ISS3 in _itkRegionOfInterestImageFilterPython:
_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterISS3ISS3_swigregister(itkRegionOfInterestImageFilterISS3ISS3)
itkRegionOfInterestImageFilterISS3ISS3___New_orig__ = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterISS3ISS3___New_orig__
itkRegionOfInterestImageFilterISS3ISS3_cast = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterISS3ISS3_cast


def itkRegionOfInterestImageFilterISS4ISS4_New():
    return itkRegionOfInterestImageFilterISS4ISS4.New()

class itkRegionOfInterestImageFilterISS4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkRegionOfInterestImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterISS4ISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterISS4ISS4_Clone)
    SetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterISS4ISS4_SetRegionOfInterest)
    GetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterISS4ISS4_GetRegionOfInterest)
    SameDimensionCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterISS4ISS4_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterISS4ISS4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkRegionOfInterestImageFilterPython.delete_itkRegionOfInterestImageFilterISS4ISS4
    cast = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterISS4ISS4_cast)

    def New(*args, **kargs):
        """New() -> itkRegionOfInterestImageFilterISS4ISS4

        Create a new object of the class itkRegionOfInterestImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegionOfInterestImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegionOfInterestImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegionOfInterestImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegionOfInterestImageFilterISS4ISS4 in _itkRegionOfInterestImageFilterPython:
_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterISS4ISS4_swigregister(itkRegionOfInterestImageFilterISS4ISS4)
itkRegionOfInterestImageFilterISS4ISS4___New_orig__ = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterISS4ISS4___New_orig__
itkRegionOfInterestImageFilterISS4ISS4_cast = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterISS4ISS4_cast


def itkRegionOfInterestImageFilterIUC2IUC2_New():
    return itkRegionOfInterestImageFilterIUC2IUC2.New()

class itkRegionOfInterestImageFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkRegionOfInterestImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUC2IUC2_Clone)
    SetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUC2IUC2_SetRegionOfInterest)
    GetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUC2IUC2_GetRegionOfInterest)
    SameDimensionCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUC2IUC2_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUC2IUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkRegionOfInterestImageFilterPython.delete_itkRegionOfInterestImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkRegionOfInterestImageFilterIUC2IUC2

        Create a new object of the class itkRegionOfInterestImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegionOfInterestImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegionOfInterestImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegionOfInterestImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegionOfInterestImageFilterIUC2IUC2 in _itkRegionOfInterestImageFilterPython:
_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUC2IUC2_swigregister(itkRegionOfInterestImageFilterIUC2IUC2)
itkRegionOfInterestImageFilterIUC2IUC2___New_orig__ = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUC2IUC2___New_orig__
itkRegionOfInterestImageFilterIUC2IUC2_cast = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUC2IUC2_cast


def itkRegionOfInterestImageFilterIUC3IUC3_New():
    return itkRegionOfInterestImageFilterIUC3IUC3.New()

class itkRegionOfInterestImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkRegionOfInterestImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUC3IUC3_Clone)
    SetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUC3IUC3_SetRegionOfInterest)
    GetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUC3IUC3_GetRegionOfInterest)
    SameDimensionCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUC3IUC3_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUC3IUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkRegionOfInterestImageFilterPython.delete_itkRegionOfInterestImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkRegionOfInterestImageFilterIUC3IUC3

        Create a new object of the class itkRegionOfInterestImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegionOfInterestImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegionOfInterestImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegionOfInterestImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegionOfInterestImageFilterIUC3IUC3 in _itkRegionOfInterestImageFilterPython:
_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUC3IUC3_swigregister(itkRegionOfInterestImageFilterIUC3IUC3)
itkRegionOfInterestImageFilterIUC3IUC3___New_orig__ = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUC3IUC3___New_orig__
itkRegionOfInterestImageFilterIUC3IUC3_cast = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUC3IUC3_cast


def itkRegionOfInterestImageFilterIUC4IUC4_New():
    return itkRegionOfInterestImageFilterIUC4IUC4.New()

class itkRegionOfInterestImageFilterIUC4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkRegionOfInterestImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUC4IUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUC4IUC4_Clone)
    SetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUC4IUC4_SetRegionOfInterest)
    GetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUC4IUC4_GetRegionOfInterest)
    SameDimensionCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUC4IUC4_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUC4IUC4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkRegionOfInterestImageFilterPython.delete_itkRegionOfInterestImageFilterIUC4IUC4
    cast = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUC4IUC4_cast)

    def New(*args, **kargs):
        """New() -> itkRegionOfInterestImageFilterIUC4IUC4

        Create a new object of the class itkRegionOfInterestImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegionOfInterestImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegionOfInterestImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegionOfInterestImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegionOfInterestImageFilterIUC4IUC4 in _itkRegionOfInterestImageFilterPython:
_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUC4IUC4_swigregister(itkRegionOfInterestImageFilterIUC4IUC4)
itkRegionOfInterestImageFilterIUC4IUC4___New_orig__ = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUC4IUC4___New_orig__
itkRegionOfInterestImageFilterIUC4IUC4_cast = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUC4IUC4_cast


def itkRegionOfInterestImageFilterIUS2IUS2_New():
    return itkRegionOfInterestImageFilterIUS2IUS2.New()

class itkRegionOfInterestImageFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkRegionOfInterestImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUS2IUS2_Clone)
    SetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUS2IUS2_SetRegionOfInterest)
    GetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUS2IUS2_GetRegionOfInterest)
    SameDimensionCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUS2IUS2_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUS2IUS2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkRegionOfInterestImageFilterPython.delete_itkRegionOfInterestImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkRegionOfInterestImageFilterIUS2IUS2

        Create a new object of the class itkRegionOfInterestImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegionOfInterestImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegionOfInterestImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegionOfInterestImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegionOfInterestImageFilterIUS2IUS2 in _itkRegionOfInterestImageFilterPython:
_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUS2IUS2_swigregister(itkRegionOfInterestImageFilterIUS2IUS2)
itkRegionOfInterestImageFilterIUS2IUS2___New_orig__ = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUS2IUS2___New_orig__
itkRegionOfInterestImageFilterIUS2IUS2_cast = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUS2IUS2_cast


def itkRegionOfInterestImageFilterIUS3IUS3_New():
    return itkRegionOfInterestImageFilterIUS3IUS3.New()

class itkRegionOfInterestImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkRegionOfInterestImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUS3IUS3_Clone)
    SetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUS3IUS3_SetRegionOfInterest)
    GetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUS3IUS3_GetRegionOfInterest)
    SameDimensionCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUS3IUS3_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUS3IUS3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkRegionOfInterestImageFilterPython.delete_itkRegionOfInterestImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkRegionOfInterestImageFilterIUS3IUS3

        Create a new object of the class itkRegionOfInterestImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegionOfInterestImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegionOfInterestImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegionOfInterestImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegionOfInterestImageFilterIUS3IUS3 in _itkRegionOfInterestImageFilterPython:
_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUS3IUS3_swigregister(itkRegionOfInterestImageFilterIUS3IUS3)
itkRegionOfInterestImageFilterIUS3IUS3___New_orig__ = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUS3IUS3___New_orig__
itkRegionOfInterestImageFilterIUS3IUS3_cast = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUS3IUS3_cast


def itkRegionOfInterestImageFilterIUS4IUS4_New():
    return itkRegionOfInterestImageFilterIUS4IUS4.New()

class itkRegionOfInterestImageFilterIUS4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkRegionOfInterestImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUS4IUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUS4IUS4_Clone)
    SetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUS4IUS4_SetRegionOfInterest)
    GetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUS4IUS4_GetRegionOfInterest)
    SameDimensionCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUS4IUS4_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUS4IUS4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkRegionOfInterestImageFilterPython.delete_itkRegionOfInterestImageFilterIUS4IUS4
    cast = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUS4IUS4_cast)

    def New(*args, **kargs):
        """New() -> itkRegionOfInterestImageFilterIUS4IUS4

        Create a new object of the class itkRegionOfInterestImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegionOfInterestImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegionOfInterestImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegionOfInterestImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegionOfInterestImageFilterIUS4IUS4 in _itkRegionOfInterestImageFilterPython:
_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUS4IUS4_swigregister(itkRegionOfInterestImageFilterIUS4IUS4)
itkRegionOfInterestImageFilterIUS4IUS4___New_orig__ = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUS4IUS4___New_orig__
itkRegionOfInterestImageFilterIUS4IUS4_cast = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterIUS4IUS4_cast


def itkRegionOfInterestImageFilterVID2VID2_New():
    return itkRegionOfInterestImageFilterVID2VID2.New()

class itkRegionOfInterestImageFilterVID2VID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterVID2VID2):
    r"""Proxy of C++ itkRegionOfInterestImageFilterVID2VID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVID2VID2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVID2VID2_Clone)
    SetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVID2VID2_SetRegionOfInterest)
    GetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVID2VID2_GetRegionOfInterest)
    SameDimensionCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVID2VID2_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVID2VID2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkRegionOfInterestImageFilterPython.delete_itkRegionOfInterestImageFilterVID2VID2
    cast = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVID2VID2_cast)

    def New(*args, **kargs):
        """New() -> itkRegionOfInterestImageFilterVID2VID2

        Create a new object of the class itkRegionOfInterestImageFilterVID2VID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegionOfInterestImageFilterVID2VID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegionOfInterestImageFilterVID2VID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegionOfInterestImageFilterVID2VID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegionOfInterestImageFilterVID2VID2 in _itkRegionOfInterestImageFilterPython:
_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVID2VID2_swigregister(itkRegionOfInterestImageFilterVID2VID2)
itkRegionOfInterestImageFilterVID2VID2___New_orig__ = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVID2VID2___New_orig__
itkRegionOfInterestImageFilterVID2VID2_cast = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVID2VID2_cast


def itkRegionOfInterestImageFilterVID3VID3_New():
    return itkRegionOfInterestImageFilterVID3VID3.New()

class itkRegionOfInterestImageFilterVID3VID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterVID3VID3):
    r"""Proxy of C++ itkRegionOfInterestImageFilterVID3VID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVID3VID3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVID3VID3_Clone)
    SetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVID3VID3_SetRegionOfInterest)
    GetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVID3VID3_GetRegionOfInterest)
    SameDimensionCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVID3VID3_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVID3VID3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkRegionOfInterestImageFilterPython.delete_itkRegionOfInterestImageFilterVID3VID3
    cast = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVID3VID3_cast)

    def New(*args, **kargs):
        """New() -> itkRegionOfInterestImageFilterVID3VID3

        Create a new object of the class itkRegionOfInterestImageFilterVID3VID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegionOfInterestImageFilterVID3VID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegionOfInterestImageFilterVID3VID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegionOfInterestImageFilterVID3VID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegionOfInterestImageFilterVID3VID3 in _itkRegionOfInterestImageFilterPython:
_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVID3VID3_swigregister(itkRegionOfInterestImageFilterVID3VID3)
itkRegionOfInterestImageFilterVID3VID3___New_orig__ = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVID3VID3___New_orig__
itkRegionOfInterestImageFilterVID3VID3_cast = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVID3VID3_cast


def itkRegionOfInterestImageFilterVID4VID4_New():
    return itkRegionOfInterestImageFilterVID4VID4.New()

class itkRegionOfInterestImageFilterVID4VID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterVID4VID4):
    r"""Proxy of C++ itkRegionOfInterestImageFilterVID4VID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVID4VID4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVID4VID4_Clone)
    SetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVID4VID4_SetRegionOfInterest)
    GetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVID4VID4_GetRegionOfInterest)
    SameDimensionCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVID4VID4_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVID4VID4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkRegionOfInterestImageFilterPython.delete_itkRegionOfInterestImageFilterVID4VID4
    cast = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVID4VID4_cast)

    def New(*args, **kargs):
        """New() -> itkRegionOfInterestImageFilterVID4VID4

        Create a new object of the class itkRegionOfInterestImageFilterVID4VID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegionOfInterestImageFilterVID4VID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegionOfInterestImageFilterVID4VID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegionOfInterestImageFilterVID4VID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegionOfInterestImageFilterVID4VID4 in _itkRegionOfInterestImageFilterPython:
_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVID4VID4_swigregister(itkRegionOfInterestImageFilterVID4VID4)
itkRegionOfInterestImageFilterVID4VID4___New_orig__ = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVID4VID4___New_orig__
itkRegionOfInterestImageFilterVID4VID4_cast = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVID4VID4_cast


def itkRegionOfInterestImageFilterVIF2VIF2_New():
    return itkRegionOfInterestImageFilterVIF2VIF2.New()

class itkRegionOfInterestImageFilterVIF2VIF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterVIF2VIF2):
    r"""Proxy of C++ itkRegionOfInterestImageFilterVIF2VIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIF2VIF2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIF2VIF2_Clone)
    SetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIF2VIF2_SetRegionOfInterest)
    GetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIF2VIF2_GetRegionOfInterest)
    SameDimensionCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIF2VIF2_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIF2VIF2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkRegionOfInterestImageFilterPython.delete_itkRegionOfInterestImageFilterVIF2VIF2
    cast = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIF2VIF2_cast)

    def New(*args, **kargs):
        """New() -> itkRegionOfInterestImageFilterVIF2VIF2

        Create a new object of the class itkRegionOfInterestImageFilterVIF2VIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegionOfInterestImageFilterVIF2VIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegionOfInterestImageFilterVIF2VIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegionOfInterestImageFilterVIF2VIF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegionOfInterestImageFilterVIF2VIF2 in _itkRegionOfInterestImageFilterPython:
_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIF2VIF2_swigregister(itkRegionOfInterestImageFilterVIF2VIF2)
itkRegionOfInterestImageFilterVIF2VIF2___New_orig__ = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIF2VIF2___New_orig__
itkRegionOfInterestImageFilterVIF2VIF2_cast = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIF2VIF2_cast


def itkRegionOfInterestImageFilterVIF3VIF3_New():
    return itkRegionOfInterestImageFilterVIF3VIF3.New()

class itkRegionOfInterestImageFilterVIF3VIF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterVIF3VIF3):
    r"""Proxy of C++ itkRegionOfInterestImageFilterVIF3VIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIF3VIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIF3VIF3_Clone)
    SetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIF3VIF3_SetRegionOfInterest)
    GetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIF3VIF3_GetRegionOfInterest)
    SameDimensionCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIF3VIF3_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIF3VIF3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkRegionOfInterestImageFilterPython.delete_itkRegionOfInterestImageFilterVIF3VIF3
    cast = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIF3VIF3_cast)

    def New(*args, **kargs):
        """New() -> itkRegionOfInterestImageFilterVIF3VIF3

        Create a new object of the class itkRegionOfInterestImageFilterVIF3VIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegionOfInterestImageFilterVIF3VIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegionOfInterestImageFilterVIF3VIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegionOfInterestImageFilterVIF3VIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegionOfInterestImageFilterVIF3VIF3 in _itkRegionOfInterestImageFilterPython:
_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIF3VIF3_swigregister(itkRegionOfInterestImageFilterVIF3VIF3)
itkRegionOfInterestImageFilterVIF3VIF3___New_orig__ = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIF3VIF3___New_orig__
itkRegionOfInterestImageFilterVIF3VIF3_cast = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIF3VIF3_cast


def itkRegionOfInterestImageFilterVIF4VIF4_New():
    return itkRegionOfInterestImageFilterVIF4VIF4.New()

class itkRegionOfInterestImageFilterVIF4VIF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterVIF4VIF4):
    r"""Proxy of C++ itkRegionOfInterestImageFilterVIF4VIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIF4VIF4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIF4VIF4_Clone)
    SetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIF4VIF4_SetRegionOfInterest)
    GetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIF4VIF4_GetRegionOfInterest)
    SameDimensionCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIF4VIF4_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIF4VIF4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkRegionOfInterestImageFilterPython.delete_itkRegionOfInterestImageFilterVIF4VIF4
    cast = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIF4VIF4_cast)

    def New(*args, **kargs):
        """New() -> itkRegionOfInterestImageFilterVIF4VIF4

        Create a new object of the class itkRegionOfInterestImageFilterVIF4VIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegionOfInterestImageFilterVIF4VIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegionOfInterestImageFilterVIF4VIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegionOfInterestImageFilterVIF4VIF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegionOfInterestImageFilterVIF4VIF4 in _itkRegionOfInterestImageFilterPython:
_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIF4VIF4_swigregister(itkRegionOfInterestImageFilterVIF4VIF4)
itkRegionOfInterestImageFilterVIF4VIF4___New_orig__ = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIF4VIF4___New_orig__
itkRegionOfInterestImageFilterVIF4VIF4_cast = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIF4VIF4_cast


def itkRegionOfInterestImageFilterVISS2VISS2_New():
    return itkRegionOfInterestImageFilterVISS2VISS2.New()

class itkRegionOfInterestImageFilterVISS2VISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterVISS2VISS2):
    r"""Proxy of C++ itkRegionOfInterestImageFilterVISS2VISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVISS2VISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVISS2VISS2_Clone)
    SetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVISS2VISS2_SetRegionOfInterest)
    GetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVISS2VISS2_GetRegionOfInterest)
    SameDimensionCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVISS2VISS2_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVISS2VISS2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkRegionOfInterestImageFilterPython.delete_itkRegionOfInterestImageFilterVISS2VISS2
    cast = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVISS2VISS2_cast)

    def New(*args, **kargs):
        """New() -> itkRegionOfInterestImageFilterVISS2VISS2

        Create a new object of the class itkRegionOfInterestImageFilterVISS2VISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegionOfInterestImageFilterVISS2VISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegionOfInterestImageFilterVISS2VISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegionOfInterestImageFilterVISS2VISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegionOfInterestImageFilterVISS2VISS2 in _itkRegionOfInterestImageFilterPython:
_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVISS2VISS2_swigregister(itkRegionOfInterestImageFilterVISS2VISS2)
itkRegionOfInterestImageFilterVISS2VISS2___New_orig__ = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVISS2VISS2___New_orig__
itkRegionOfInterestImageFilterVISS2VISS2_cast = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVISS2VISS2_cast


def itkRegionOfInterestImageFilterVISS3VISS3_New():
    return itkRegionOfInterestImageFilterVISS3VISS3.New()

class itkRegionOfInterestImageFilterVISS3VISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterVISS3VISS3):
    r"""Proxy of C++ itkRegionOfInterestImageFilterVISS3VISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVISS3VISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVISS3VISS3_Clone)
    SetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVISS3VISS3_SetRegionOfInterest)
    GetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVISS3VISS3_GetRegionOfInterest)
    SameDimensionCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVISS3VISS3_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVISS3VISS3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkRegionOfInterestImageFilterPython.delete_itkRegionOfInterestImageFilterVISS3VISS3
    cast = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVISS3VISS3_cast)

    def New(*args, **kargs):
        """New() -> itkRegionOfInterestImageFilterVISS3VISS3

        Create a new object of the class itkRegionOfInterestImageFilterVISS3VISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegionOfInterestImageFilterVISS3VISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegionOfInterestImageFilterVISS3VISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegionOfInterestImageFilterVISS3VISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegionOfInterestImageFilterVISS3VISS3 in _itkRegionOfInterestImageFilterPython:
_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVISS3VISS3_swigregister(itkRegionOfInterestImageFilterVISS3VISS3)
itkRegionOfInterestImageFilterVISS3VISS3___New_orig__ = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVISS3VISS3___New_orig__
itkRegionOfInterestImageFilterVISS3VISS3_cast = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVISS3VISS3_cast


def itkRegionOfInterestImageFilterVISS4VISS4_New():
    return itkRegionOfInterestImageFilterVISS4VISS4.New()

class itkRegionOfInterestImageFilterVISS4VISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterVISS4VISS4):
    r"""Proxy of C++ itkRegionOfInterestImageFilterVISS4VISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVISS4VISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVISS4VISS4_Clone)
    SetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVISS4VISS4_SetRegionOfInterest)
    GetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVISS4VISS4_GetRegionOfInterest)
    SameDimensionCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVISS4VISS4_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVISS4VISS4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkRegionOfInterestImageFilterPython.delete_itkRegionOfInterestImageFilterVISS4VISS4
    cast = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVISS4VISS4_cast)

    def New(*args, **kargs):
        """New() -> itkRegionOfInterestImageFilterVISS4VISS4

        Create a new object of the class itkRegionOfInterestImageFilterVISS4VISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegionOfInterestImageFilterVISS4VISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegionOfInterestImageFilterVISS4VISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegionOfInterestImageFilterVISS4VISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegionOfInterestImageFilterVISS4VISS4 in _itkRegionOfInterestImageFilterPython:
_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVISS4VISS4_swigregister(itkRegionOfInterestImageFilterVISS4VISS4)
itkRegionOfInterestImageFilterVISS4VISS4___New_orig__ = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVISS4VISS4___New_orig__
itkRegionOfInterestImageFilterVISS4VISS4_cast = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVISS4VISS4_cast


def itkRegionOfInterestImageFilterVIUC2VIUC2_New():
    return itkRegionOfInterestImageFilterVIUC2VIUC2.New()

class itkRegionOfInterestImageFilterVIUC2VIUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterVIUC2VIUC2):
    r"""Proxy of C++ itkRegionOfInterestImageFilterVIUC2VIUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUC2VIUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUC2VIUC2_Clone)
    SetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUC2VIUC2_SetRegionOfInterest)
    GetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUC2VIUC2_GetRegionOfInterest)
    SameDimensionCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUC2VIUC2_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUC2VIUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkRegionOfInterestImageFilterPython.delete_itkRegionOfInterestImageFilterVIUC2VIUC2
    cast = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUC2VIUC2_cast)

    def New(*args, **kargs):
        """New() -> itkRegionOfInterestImageFilterVIUC2VIUC2

        Create a new object of the class itkRegionOfInterestImageFilterVIUC2VIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegionOfInterestImageFilterVIUC2VIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegionOfInterestImageFilterVIUC2VIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegionOfInterestImageFilterVIUC2VIUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegionOfInterestImageFilterVIUC2VIUC2 in _itkRegionOfInterestImageFilterPython:
_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUC2VIUC2_swigregister(itkRegionOfInterestImageFilterVIUC2VIUC2)
itkRegionOfInterestImageFilterVIUC2VIUC2___New_orig__ = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUC2VIUC2___New_orig__
itkRegionOfInterestImageFilterVIUC2VIUC2_cast = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUC2VIUC2_cast


def itkRegionOfInterestImageFilterVIUC3VIUC3_New():
    return itkRegionOfInterestImageFilterVIUC3VIUC3.New()

class itkRegionOfInterestImageFilterVIUC3VIUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterVIUC3VIUC3):
    r"""Proxy of C++ itkRegionOfInterestImageFilterVIUC3VIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUC3VIUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUC3VIUC3_Clone)
    SetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUC3VIUC3_SetRegionOfInterest)
    GetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUC3VIUC3_GetRegionOfInterest)
    SameDimensionCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUC3VIUC3_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUC3VIUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkRegionOfInterestImageFilterPython.delete_itkRegionOfInterestImageFilterVIUC3VIUC3
    cast = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUC3VIUC3_cast)

    def New(*args, **kargs):
        """New() -> itkRegionOfInterestImageFilterVIUC3VIUC3

        Create a new object of the class itkRegionOfInterestImageFilterVIUC3VIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegionOfInterestImageFilterVIUC3VIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegionOfInterestImageFilterVIUC3VIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegionOfInterestImageFilterVIUC3VIUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegionOfInterestImageFilterVIUC3VIUC3 in _itkRegionOfInterestImageFilterPython:
_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUC3VIUC3_swigregister(itkRegionOfInterestImageFilterVIUC3VIUC3)
itkRegionOfInterestImageFilterVIUC3VIUC3___New_orig__ = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUC3VIUC3___New_orig__
itkRegionOfInterestImageFilterVIUC3VIUC3_cast = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUC3VIUC3_cast


def itkRegionOfInterestImageFilterVIUC4VIUC4_New():
    return itkRegionOfInterestImageFilterVIUC4VIUC4.New()

class itkRegionOfInterestImageFilterVIUC4VIUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterVIUC4VIUC4):
    r"""Proxy of C++ itkRegionOfInterestImageFilterVIUC4VIUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUC4VIUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUC4VIUC4_Clone)
    SetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUC4VIUC4_SetRegionOfInterest)
    GetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUC4VIUC4_GetRegionOfInterest)
    SameDimensionCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUC4VIUC4_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUC4VIUC4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkRegionOfInterestImageFilterPython.delete_itkRegionOfInterestImageFilterVIUC4VIUC4
    cast = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUC4VIUC4_cast)

    def New(*args, **kargs):
        """New() -> itkRegionOfInterestImageFilterVIUC4VIUC4

        Create a new object of the class itkRegionOfInterestImageFilterVIUC4VIUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegionOfInterestImageFilterVIUC4VIUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegionOfInterestImageFilterVIUC4VIUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegionOfInterestImageFilterVIUC4VIUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegionOfInterestImageFilterVIUC4VIUC4 in _itkRegionOfInterestImageFilterPython:
_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUC4VIUC4_swigregister(itkRegionOfInterestImageFilterVIUC4VIUC4)
itkRegionOfInterestImageFilterVIUC4VIUC4___New_orig__ = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUC4VIUC4___New_orig__
itkRegionOfInterestImageFilterVIUC4VIUC4_cast = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUC4VIUC4_cast


def itkRegionOfInterestImageFilterVIUS2VIUS2_New():
    return itkRegionOfInterestImageFilterVIUS2VIUS2.New()

class itkRegionOfInterestImageFilterVIUS2VIUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterVIUS2VIUS2):
    r"""Proxy of C++ itkRegionOfInterestImageFilterVIUS2VIUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUS2VIUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUS2VIUS2_Clone)
    SetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUS2VIUS2_SetRegionOfInterest)
    GetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUS2VIUS2_GetRegionOfInterest)
    SameDimensionCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUS2VIUS2_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUS2VIUS2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkRegionOfInterestImageFilterPython.delete_itkRegionOfInterestImageFilterVIUS2VIUS2
    cast = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUS2VIUS2_cast)

    def New(*args, **kargs):
        """New() -> itkRegionOfInterestImageFilterVIUS2VIUS2

        Create a new object of the class itkRegionOfInterestImageFilterVIUS2VIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegionOfInterestImageFilterVIUS2VIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegionOfInterestImageFilterVIUS2VIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegionOfInterestImageFilterVIUS2VIUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegionOfInterestImageFilterVIUS2VIUS2 in _itkRegionOfInterestImageFilterPython:
_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUS2VIUS2_swigregister(itkRegionOfInterestImageFilterVIUS2VIUS2)
itkRegionOfInterestImageFilterVIUS2VIUS2___New_orig__ = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUS2VIUS2___New_orig__
itkRegionOfInterestImageFilterVIUS2VIUS2_cast = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUS2VIUS2_cast


def itkRegionOfInterestImageFilterVIUS3VIUS3_New():
    return itkRegionOfInterestImageFilterVIUS3VIUS3.New()

class itkRegionOfInterestImageFilterVIUS3VIUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterVIUS3VIUS3):
    r"""Proxy of C++ itkRegionOfInterestImageFilterVIUS3VIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUS3VIUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUS3VIUS3_Clone)
    SetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUS3VIUS3_SetRegionOfInterest)
    GetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUS3VIUS3_GetRegionOfInterest)
    SameDimensionCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUS3VIUS3_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUS3VIUS3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkRegionOfInterestImageFilterPython.delete_itkRegionOfInterestImageFilterVIUS3VIUS3
    cast = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUS3VIUS3_cast)

    def New(*args, **kargs):
        """New() -> itkRegionOfInterestImageFilterVIUS3VIUS3

        Create a new object of the class itkRegionOfInterestImageFilterVIUS3VIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegionOfInterestImageFilterVIUS3VIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegionOfInterestImageFilterVIUS3VIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegionOfInterestImageFilterVIUS3VIUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegionOfInterestImageFilterVIUS3VIUS3 in _itkRegionOfInterestImageFilterPython:
_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUS3VIUS3_swigregister(itkRegionOfInterestImageFilterVIUS3VIUS3)
itkRegionOfInterestImageFilterVIUS3VIUS3___New_orig__ = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUS3VIUS3___New_orig__
itkRegionOfInterestImageFilterVIUS3VIUS3_cast = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUS3VIUS3_cast


def itkRegionOfInterestImageFilterVIUS4VIUS4_New():
    return itkRegionOfInterestImageFilterVIUS4VIUS4.New()

class itkRegionOfInterestImageFilterVIUS4VIUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterVIUS4VIUS4):
    r"""Proxy of C++ itkRegionOfInterestImageFilterVIUS4VIUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUS4VIUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUS4VIUS4_Clone)
    SetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUS4VIUS4_SetRegionOfInterest)
    GetRegionOfInterest = _swig_new_instance_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUS4VIUS4_GetRegionOfInterest)
    SameDimensionCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUS4VIUS4_SameDimensionCheck
    
    InputConvertibleToOutputCheck = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUS4VIUS4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkRegionOfInterestImageFilterPython.delete_itkRegionOfInterestImageFilterVIUS4VIUS4
    cast = _swig_new_static_method(_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUS4VIUS4_cast)

    def New(*args, **kargs):
        """New() -> itkRegionOfInterestImageFilterVIUS4VIUS4

        Create a new object of the class itkRegionOfInterestImageFilterVIUS4VIUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegionOfInterestImageFilterVIUS4VIUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegionOfInterestImageFilterVIUS4VIUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegionOfInterestImageFilterVIUS4VIUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegionOfInterestImageFilterVIUS4VIUS4 in _itkRegionOfInterestImageFilterPython:
_itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUS4VIUS4_swigregister(itkRegionOfInterestImageFilterVIUS4VIUS4)
itkRegionOfInterestImageFilterVIUS4VIUS4___New_orig__ = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUS4VIUS4___New_orig__
itkRegionOfInterestImageFilterVIUS4VIUS4_cast = _itkRegionOfInterestImageFilterPython.itkRegionOfInterestImageFilterVIUS4VIUS4_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def region_of_interest_image_filter(*args: itkt.ImageLike,  region_of_interest: itkt.ImageRegion=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for RegionOfInterestImageFilter"""
    import itk

    kwarg_typehints = { 'region_of_interest':region_of_interest }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.RegionOfInterestImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def region_of_interest_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageGrid.RegionOfInterestImageFilter
    region_of_interest_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    region_of_interest_image_filter.__doc__ = filter_object.__doc__




