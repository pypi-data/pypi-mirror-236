# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKCommonPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkArray2DPython
else:
    import _itkArray2DPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkArray2DPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkArray2DPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
class itkArray2DD(itk.vnl_matrixPython.vnl_matrixD):
    r"""Proxy of C++ itkArray2DD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkArray2DD
        __init__(self, numberOfRows, numberOfCols) -> itkArray2DD

        Parameters
        ----------
        numberOfRows: unsigned int
        numberOfCols: unsigned int

        __init__(self, array) -> itkArray2DD

        Parameters
        ----------
        array: itkArray2DD const &

        __init__(self, matrix) -> itkArray2DD

        Parameters
        ----------
        matrix: vnl_matrixD const &

        """
        _itkArray2DPython.itkArray2DD_swiginit(self, _itkArray2DPython.new_itkArray2DD(*args))
    Fill = _swig_new_instance_method(_itkArray2DPython.itkArray2DD_Fill)
    GetElement = _swig_new_instance_method(_itkArray2DPython.itkArray2DD_GetElement)
    SetElement = _swig_new_instance_method(_itkArray2DPython.itkArray2DD_SetElement)
    SetSize = _swig_new_instance_method(_itkArray2DPython.itkArray2DD_SetSize)
    __swig_destroy__ = _itkArray2DPython.delete_itkArray2DD

# Register itkArray2DD in _itkArray2DPython:
_itkArray2DPython.itkArray2DD_swigregister(itkArray2DD)

class itkArray2DF(itk.vnl_matrixPython.vnl_matrixF):
    r"""Proxy of C++ itkArray2DF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkArray2DF
        __init__(self, numberOfRows, numberOfCols) -> itkArray2DF

        Parameters
        ----------
        numberOfRows: unsigned int
        numberOfCols: unsigned int

        __init__(self, array) -> itkArray2DF

        Parameters
        ----------
        array: itkArray2DF const &

        __init__(self, matrix) -> itkArray2DF

        Parameters
        ----------
        matrix: vnl_matrixF const &

        """
        _itkArray2DPython.itkArray2DF_swiginit(self, _itkArray2DPython.new_itkArray2DF(*args))
    Fill = _swig_new_instance_method(_itkArray2DPython.itkArray2DF_Fill)
    GetElement = _swig_new_instance_method(_itkArray2DPython.itkArray2DF_GetElement)
    SetElement = _swig_new_instance_method(_itkArray2DPython.itkArray2DF_SetElement)
    SetSize = _swig_new_instance_method(_itkArray2DPython.itkArray2DF_SetSize)
    __swig_destroy__ = _itkArray2DPython.delete_itkArray2DF

# Register itkArray2DF in _itkArray2DPython:
_itkArray2DPython.itkArray2DF_swigregister(itkArray2DF)

class itkArray2DUI(itk.vnl_matrixPython.vnl_matrixUI):
    r"""Proxy of C++ itkArray2DUI class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkArray2DUI
        __init__(self, numberOfRows, numberOfCols) -> itkArray2DUI

        Parameters
        ----------
        numberOfRows: unsigned int
        numberOfCols: unsigned int

        __init__(self, array) -> itkArray2DUI

        Parameters
        ----------
        array: itkArray2DUI const &

        __init__(self, matrix) -> itkArray2DUI

        Parameters
        ----------
        matrix: vnl_matrixUI const &

        """
        _itkArray2DPython.itkArray2DUI_swiginit(self, _itkArray2DPython.new_itkArray2DUI(*args))
    Fill = _swig_new_instance_method(_itkArray2DPython.itkArray2DUI_Fill)
    GetElement = _swig_new_instance_method(_itkArray2DPython.itkArray2DUI_GetElement)
    SetElement = _swig_new_instance_method(_itkArray2DPython.itkArray2DUI_SetElement)
    SetSize = _swig_new_instance_method(_itkArray2DPython.itkArray2DUI_SetSize)
    __swig_destroy__ = _itkArray2DPython.delete_itkArray2DUI

# Register itkArray2DUI in _itkArray2DPython:
_itkArray2DPython.itkArray2DUI_swigregister(itkArray2DUI)



