# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKFFTPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkFFTPadImageFilterPython
else:
    import _itkFFTPadImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkFFTPadImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkFFTPadImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkPadImageFilterBasePython
import itk.itkImageToImageFilterAPython
import itk.itkImageToImageFilterCommonPython
import itk.pyBasePython
import itk.itkImagePython
import itk.stdcomplexPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkRGBPixelPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.ITKCommonBasePython
import itk.itkImageRegionPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython
import itk.itkImageBoundaryConditionPython
import itk.itkImageToImageFilterBPython

def itkFFTPadImageFilterICD2_New():
    return itkFFTPadImageFilterICD2.New()

class itkFFTPadImageFilterICD2(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseICD2ICD2):
    r"""Proxy of C++ itkFFTPadImageFilterICD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICD2___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICD2_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICD2_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICD2_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterICD2
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICD2_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterICD2

        Create a new object of the class itkFFTPadImageFilterICD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterICD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterICD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterICD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterICD2 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterICD2_swigregister(itkFFTPadImageFilterICD2)
itkFFTPadImageFilterICD2___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterICD2___New_orig__
itkFFTPadImageFilterICD2_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterICD2_cast


def itkFFTPadImageFilterICD3_New():
    return itkFFTPadImageFilterICD3.New()

class itkFFTPadImageFilterICD3(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseICD3ICD3):
    r"""Proxy of C++ itkFFTPadImageFilterICD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICD3___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICD3_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICD3_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICD3_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterICD3
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICD3_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterICD3

        Create a new object of the class itkFFTPadImageFilterICD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterICD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterICD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterICD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterICD3 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterICD3_swigregister(itkFFTPadImageFilterICD3)
itkFFTPadImageFilterICD3___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterICD3___New_orig__
itkFFTPadImageFilterICD3_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterICD3_cast


def itkFFTPadImageFilterICD4_New():
    return itkFFTPadImageFilterICD4.New()

class itkFFTPadImageFilterICD4(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseICD4ICD4):
    r"""Proxy of C++ itkFFTPadImageFilterICD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICD4___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICD4_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICD4_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICD4_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterICD4
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICD4_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterICD4

        Create a new object of the class itkFFTPadImageFilterICD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterICD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterICD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterICD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterICD4 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterICD4_swigregister(itkFFTPadImageFilterICD4)
itkFFTPadImageFilterICD4___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterICD4___New_orig__
itkFFTPadImageFilterICD4_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterICD4_cast


def itkFFTPadImageFilterICF2_New():
    return itkFFTPadImageFilterICF2.New()

class itkFFTPadImageFilterICF2(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseICF2ICF2):
    r"""Proxy of C++ itkFFTPadImageFilterICF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICF2___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICF2_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICF2_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICF2_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterICF2
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICF2_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterICF2

        Create a new object of the class itkFFTPadImageFilterICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterICF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterICF2 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterICF2_swigregister(itkFFTPadImageFilterICF2)
itkFFTPadImageFilterICF2___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterICF2___New_orig__
itkFFTPadImageFilterICF2_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterICF2_cast


def itkFFTPadImageFilterICF3_New():
    return itkFFTPadImageFilterICF3.New()

class itkFFTPadImageFilterICF3(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseICF3ICF3):
    r"""Proxy of C++ itkFFTPadImageFilterICF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICF3___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICF3_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICF3_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICF3_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterICF3
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICF3_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterICF3

        Create a new object of the class itkFFTPadImageFilterICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterICF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterICF3 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterICF3_swigregister(itkFFTPadImageFilterICF3)
itkFFTPadImageFilterICF3___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterICF3___New_orig__
itkFFTPadImageFilterICF3_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterICF3_cast


def itkFFTPadImageFilterICF4_New():
    return itkFFTPadImageFilterICF4.New()

class itkFFTPadImageFilterICF4(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseICF4ICF4):
    r"""Proxy of C++ itkFFTPadImageFilterICF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICF4___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICF4_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICF4_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICF4_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterICF4
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICF4_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterICF4

        Create a new object of the class itkFFTPadImageFilterICF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterICF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterICF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterICF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterICF4 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterICF4_swigregister(itkFFTPadImageFilterICF4)
itkFFTPadImageFilterICF4___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterICF4___New_orig__
itkFFTPadImageFilterICF4_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterICF4_cast


def itkFFTPadImageFilterICVF22_New():
    return itkFFTPadImageFilterICVF22.New()

class itkFFTPadImageFilterICVF22(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseICVF22ICVF22):
    r"""Proxy of C++ itkFFTPadImageFilterICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF22_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF22_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF22_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterICVF22
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF22_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterICVF22

        Create a new object of the class itkFFTPadImageFilterICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterICVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterICVF22 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF22_swigregister(itkFFTPadImageFilterICVF22)
itkFFTPadImageFilterICVF22___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF22___New_orig__
itkFFTPadImageFilterICVF22_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF22_cast


def itkFFTPadImageFilterICVF23_New():
    return itkFFTPadImageFilterICVF23.New()

class itkFFTPadImageFilterICVF23(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseICVF23ICVF23):
    r"""Proxy of C++ itkFFTPadImageFilterICVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF23_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF23_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF23_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterICVF23
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF23_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterICVF23

        Create a new object of the class itkFFTPadImageFilterICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterICVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterICVF23 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF23_swigregister(itkFFTPadImageFilterICVF23)
itkFFTPadImageFilterICVF23___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF23___New_orig__
itkFFTPadImageFilterICVF23_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF23_cast


def itkFFTPadImageFilterICVF24_New():
    return itkFFTPadImageFilterICVF24.New()

class itkFFTPadImageFilterICVF24(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseICVF24ICVF24):
    r"""Proxy of C++ itkFFTPadImageFilterICVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF24___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF24_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF24_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF24_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterICVF24
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF24_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterICVF24

        Create a new object of the class itkFFTPadImageFilterICVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterICVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterICVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterICVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterICVF24 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF24_swigregister(itkFFTPadImageFilterICVF24)
itkFFTPadImageFilterICVF24___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF24___New_orig__
itkFFTPadImageFilterICVF24_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF24_cast


def itkFFTPadImageFilterICVF32_New():
    return itkFFTPadImageFilterICVF32.New()

class itkFFTPadImageFilterICVF32(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseICVF32ICVF32):
    r"""Proxy of C++ itkFFTPadImageFilterICVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF32_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF32_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF32_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterICVF32
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF32_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterICVF32

        Create a new object of the class itkFFTPadImageFilterICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterICVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterICVF32 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF32_swigregister(itkFFTPadImageFilterICVF32)
itkFFTPadImageFilterICVF32___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF32___New_orig__
itkFFTPadImageFilterICVF32_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF32_cast


def itkFFTPadImageFilterICVF33_New():
    return itkFFTPadImageFilterICVF33.New()

class itkFFTPadImageFilterICVF33(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseICVF33ICVF33):
    r"""Proxy of C++ itkFFTPadImageFilterICVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF33_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF33_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF33_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterICVF33
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF33_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterICVF33

        Create a new object of the class itkFFTPadImageFilterICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterICVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterICVF33 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF33_swigregister(itkFFTPadImageFilterICVF33)
itkFFTPadImageFilterICVF33___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF33___New_orig__
itkFFTPadImageFilterICVF33_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF33_cast


def itkFFTPadImageFilterICVF34_New():
    return itkFFTPadImageFilterICVF34.New()

class itkFFTPadImageFilterICVF34(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseICVF34ICVF34):
    r"""Proxy of C++ itkFFTPadImageFilterICVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF34___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF34_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF34_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF34_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterICVF34
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF34_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterICVF34

        Create a new object of the class itkFFTPadImageFilterICVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterICVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterICVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterICVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterICVF34 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF34_swigregister(itkFFTPadImageFilterICVF34)
itkFFTPadImageFilterICVF34___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF34___New_orig__
itkFFTPadImageFilterICVF34_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF34_cast


def itkFFTPadImageFilterICVF42_New():
    return itkFFTPadImageFilterICVF42.New()

class itkFFTPadImageFilterICVF42(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseICVF42ICVF42):
    r"""Proxy of C++ itkFFTPadImageFilterICVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF42_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF42_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF42_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterICVF42
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF42_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterICVF42

        Create a new object of the class itkFFTPadImageFilterICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterICVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterICVF42 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF42_swigregister(itkFFTPadImageFilterICVF42)
itkFFTPadImageFilterICVF42___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF42___New_orig__
itkFFTPadImageFilterICVF42_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF42_cast


def itkFFTPadImageFilterICVF43_New():
    return itkFFTPadImageFilterICVF43.New()

class itkFFTPadImageFilterICVF43(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseICVF43ICVF43):
    r"""Proxy of C++ itkFFTPadImageFilterICVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF43_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF43_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF43_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterICVF43
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF43_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterICVF43

        Create a new object of the class itkFFTPadImageFilterICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterICVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterICVF43 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF43_swigregister(itkFFTPadImageFilterICVF43)
itkFFTPadImageFilterICVF43___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF43___New_orig__
itkFFTPadImageFilterICVF43_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF43_cast


def itkFFTPadImageFilterICVF44_New():
    return itkFFTPadImageFilterICVF44.New()

class itkFFTPadImageFilterICVF44(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseICVF44ICVF44):
    r"""Proxy of C++ itkFFTPadImageFilterICVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF44___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF44_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF44_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF44_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterICVF44
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF44_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterICVF44

        Create a new object of the class itkFFTPadImageFilterICVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterICVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterICVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterICVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterICVF44 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF44_swigregister(itkFFTPadImageFilterICVF44)
itkFFTPadImageFilterICVF44___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF44___New_orig__
itkFFTPadImageFilterICVF44_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterICVF44_cast


def itkFFTPadImageFilterID2_New():
    return itkFFTPadImageFilterID2.New()

class itkFFTPadImageFilterID2(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseID2ID2):
    r"""Proxy of C++ itkFFTPadImageFilterID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterID2___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterID2_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterID2_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterID2_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterID2
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterID2_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterID2

        Create a new object of the class itkFFTPadImageFilterID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterID2 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterID2_swigregister(itkFFTPadImageFilterID2)
itkFFTPadImageFilterID2___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterID2___New_orig__
itkFFTPadImageFilterID2_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterID2_cast


def itkFFTPadImageFilterID3_New():
    return itkFFTPadImageFilterID3.New()

class itkFFTPadImageFilterID3(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseID3ID3):
    r"""Proxy of C++ itkFFTPadImageFilterID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterID3___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterID3_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterID3_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterID3_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterID3
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterID3_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterID3

        Create a new object of the class itkFFTPadImageFilterID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterID3 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterID3_swigregister(itkFFTPadImageFilterID3)
itkFFTPadImageFilterID3___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterID3___New_orig__
itkFFTPadImageFilterID3_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterID3_cast


def itkFFTPadImageFilterID4_New():
    return itkFFTPadImageFilterID4.New()

class itkFFTPadImageFilterID4(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseID4ID4):
    r"""Proxy of C++ itkFFTPadImageFilterID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterID4___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterID4_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterID4_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterID4_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterID4
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterID4_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterID4

        Create a new object of the class itkFFTPadImageFilterID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterID4 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterID4_swigregister(itkFFTPadImageFilterID4)
itkFFTPadImageFilterID4___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterID4___New_orig__
itkFFTPadImageFilterID4_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterID4_cast


def itkFFTPadImageFilterIF2_New():
    return itkFFTPadImageFilterIF2.New()

class itkFFTPadImageFilterIF2(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIF2IF2):
    r"""Proxy of C++ itkFFTPadImageFilterIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIF2___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIF2_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIF2_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIF2_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterIF2
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIF2_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterIF2

        Create a new object of the class itkFFTPadImageFilterIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterIF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterIF2 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterIF2_swigregister(itkFFTPadImageFilterIF2)
itkFFTPadImageFilterIF2___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIF2___New_orig__
itkFFTPadImageFilterIF2_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIF2_cast


def itkFFTPadImageFilterIF3_New():
    return itkFFTPadImageFilterIF3.New()

class itkFFTPadImageFilterIF3(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIF3IF3):
    r"""Proxy of C++ itkFFTPadImageFilterIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIF3_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIF3_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIF3_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterIF3
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIF3_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterIF3

        Create a new object of the class itkFFTPadImageFilterIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterIF3 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterIF3_swigregister(itkFFTPadImageFilterIF3)
itkFFTPadImageFilterIF3___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIF3___New_orig__
itkFFTPadImageFilterIF3_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIF3_cast


def itkFFTPadImageFilterIF4_New():
    return itkFFTPadImageFilterIF4.New()

class itkFFTPadImageFilterIF4(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIF4IF4):
    r"""Proxy of C++ itkFFTPadImageFilterIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIF4___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIF4_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIF4_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIF4_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterIF4
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIF4_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterIF4

        Create a new object of the class itkFFTPadImageFilterIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterIF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterIF4 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterIF4_swigregister(itkFFTPadImageFilterIF4)
itkFFTPadImageFilterIF4___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIF4___New_orig__
itkFFTPadImageFilterIF4_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIF4_cast


def itkFFTPadImageFilterIRGBAUC2_New():
    return itkFFTPadImageFilterIRGBAUC2.New()

class itkFFTPadImageFilterIRGBAUC2(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBAUC2IRGBAUC2):
    r"""Proxy of C++ itkFFTPadImageFilterIRGBAUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBAUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBAUC2_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBAUC2_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBAUC2_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterIRGBAUC2
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBAUC2_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterIRGBAUC2

        Create a new object of the class itkFFTPadImageFilterIRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterIRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterIRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterIRGBAUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterIRGBAUC2 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBAUC2_swigregister(itkFFTPadImageFilterIRGBAUC2)
itkFFTPadImageFilterIRGBAUC2___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBAUC2___New_orig__
itkFFTPadImageFilterIRGBAUC2_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBAUC2_cast


def itkFFTPadImageFilterIRGBAUC3_New():
    return itkFFTPadImageFilterIRGBAUC3.New()

class itkFFTPadImageFilterIRGBAUC3(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBAUC3IRGBAUC3):
    r"""Proxy of C++ itkFFTPadImageFilterIRGBAUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBAUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBAUC3_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBAUC3_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBAUC3_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterIRGBAUC3
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBAUC3_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterIRGBAUC3

        Create a new object of the class itkFFTPadImageFilterIRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterIRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterIRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterIRGBAUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterIRGBAUC3 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBAUC3_swigregister(itkFFTPadImageFilterIRGBAUC3)
itkFFTPadImageFilterIRGBAUC3___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBAUC3___New_orig__
itkFFTPadImageFilterIRGBAUC3_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBAUC3_cast


def itkFFTPadImageFilterIRGBAUC4_New():
    return itkFFTPadImageFilterIRGBAUC4.New()

class itkFFTPadImageFilterIRGBAUC4(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBAUC4IRGBAUC4):
    r"""Proxy of C++ itkFFTPadImageFilterIRGBAUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBAUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBAUC4_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBAUC4_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBAUC4_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterIRGBAUC4
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBAUC4_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterIRGBAUC4

        Create a new object of the class itkFFTPadImageFilterIRGBAUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterIRGBAUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterIRGBAUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterIRGBAUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterIRGBAUC4 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBAUC4_swigregister(itkFFTPadImageFilterIRGBAUC4)
itkFFTPadImageFilterIRGBAUC4___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBAUC4___New_orig__
itkFFTPadImageFilterIRGBAUC4_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBAUC4_cast


def itkFFTPadImageFilterIRGBUC2_New():
    return itkFFTPadImageFilterIRGBUC2.New()

class itkFFTPadImageFilterIRGBUC2(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBUC2IRGBUC2):
    r"""Proxy of C++ itkFFTPadImageFilterIRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBUC2_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBUC2_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBUC2_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterIRGBUC2
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBUC2_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterIRGBUC2

        Create a new object of the class itkFFTPadImageFilterIRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterIRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterIRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterIRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterIRGBUC2 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBUC2_swigregister(itkFFTPadImageFilterIRGBUC2)
itkFFTPadImageFilterIRGBUC2___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBUC2___New_orig__
itkFFTPadImageFilterIRGBUC2_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBUC2_cast


def itkFFTPadImageFilterIRGBUC3_New():
    return itkFFTPadImageFilterIRGBUC3.New()

class itkFFTPadImageFilterIRGBUC3(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBUC3IRGBUC3):
    r"""Proxy of C++ itkFFTPadImageFilterIRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBUC3_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBUC3_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBUC3_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterIRGBUC3
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterIRGBUC3

        Create a new object of the class itkFFTPadImageFilterIRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterIRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterIRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterIRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterIRGBUC3 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBUC3_swigregister(itkFFTPadImageFilterIRGBUC3)
itkFFTPadImageFilterIRGBUC3___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBUC3___New_orig__
itkFFTPadImageFilterIRGBUC3_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBUC3_cast


def itkFFTPadImageFilterIRGBUC4_New():
    return itkFFTPadImageFilterIRGBUC4.New()

class itkFFTPadImageFilterIRGBUC4(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIRGBUC4IRGBUC4):
    r"""Proxy of C++ itkFFTPadImageFilterIRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBUC4_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBUC4_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBUC4_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterIRGBUC4
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBUC4_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterIRGBUC4

        Create a new object of the class itkFFTPadImageFilterIRGBUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterIRGBUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterIRGBUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterIRGBUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterIRGBUC4 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBUC4_swigregister(itkFFTPadImageFilterIRGBUC4)
itkFFTPadImageFilterIRGBUC4___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBUC4___New_orig__
itkFFTPadImageFilterIRGBUC4_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIRGBUC4_cast


def itkFFTPadImageFilterISS2_New():
    return itkFFTPadImageFilterISS2.New()

class itkFFTPadImageFilterISS2(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseISS2ISS2):
    r"""Proxy of C++ itkFFTPadImageFilterISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterISS2_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterISS2_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterISS2_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterISS2
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterISS2_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterISS2

        Create a new object of the class itkFFTPadImageFilterISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterISS2 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterISS2_swigregister(itkFFTPadImageFilterISS2)
itkFFTPadImageFilterISS2___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterISS2___New_orig__
itkFFTPadImageFilterISS2_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterISS2_cast


def itkFFTPadImageFilterISS3_New():
    return itkFFTPadImageFilterISS3.New()

class itkFFTPadImageFilterISS3(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseISS3ISS3):
    r"""Proxy of C++ itkFFTPadImageFilterISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterISS3_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterISS3_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterISS3_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterISS3
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterISS3_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterISS3

        Create a new object of the class itkFFTPadImageFilterISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterISS3 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterISS3_swigregister(itkFFTPadImageFilterISS3)
itkFFTPadImageFilterISS3___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterISS3___New_orig__
itkFFTPadImageFilterISS3_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterISS3_cast


def itkFFTPadImageFilterISS4_New():
    return itkFFTPadImageFilterISS4.New()

class itkFFTPadImageFilterISS4(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseISS4ISS4):
    r"""Proxy of C++ itkFFTPadImageFilterISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterISS4_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterISS4_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterISS4_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterISS4
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterISS4_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterISS4

        Create a new object of the class itkFFTPadImageFilterISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterISS4 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterISS4_swigregister(itkFFTPadImageFilterISS4)
itkFFTPadImageFilterISS4___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterISS4___New_orig__
itkFFTPadImageFilterISS4_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterISS4_cast


def itkFFTPadImageFilterIUC2_New():
    return itkFFTPadImageFilterIUC2.New()

class itkFFTPadImageFilterIUC2(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIUC2IUC2):
    r"""Proxy of C++ itkFFTPadImageFilterIUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIUC2_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIUC2_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIUC2_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterIUC2
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIUC2_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterIUC2

        Create a new object of the class itkFFTPadImageFilterIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterIUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterIUC2 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterIUC2_swigregister(itkFFTPadImageFilterIUC2)
itkFFTPadImageFilterIUC2___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIUC2___New_orig__
itkFFTPadImageFilterIUC2_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIUC2_cast


def itkFFTPadImageFilterIUC3_New():
    return itkFFTPadImageFilterIUC3.New()

class itkFFTPadImageFilterIUC3(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIUC3IUC3):
    r"""Proxy of C++ itkFFTPadImageFilterIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIUC3_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIUC3_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIUC3_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterIUC3
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIUC3_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterIUC3

        Create a new object of the class itkFFTPadImageFilterIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterIUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterIUC3 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterIUC3_swigregister(itkFFTPadImageFilterIUC3)
itkFFTPadImageFilterIUC3___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIUC3___New_orig__
itkFFTPadImageFilterIUC3_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIUC3_cast


def itkFFTPadImageFilterIUC4_New():
    return itkFFTPadImageFilterIUC4.New()

class itkFFTPadImageFilterIUC4(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIUC4IUC4):
    r"""Proxy of C++ itkFFTPadImageFilterIUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIUC4_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIUC4_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIUC4_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterIUC4
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIUC4_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterIUC4

        Create a new object of the class itkFFTPadImageFilterIUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterIUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterIUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterIUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterIUC4 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterIUC4_swigregister(itkFFTPadImageFilterIUC4)
itkFFTPadImageFilterIUC4___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIUC4___New_orig__
itkFFTPadImageFilterIUC4_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIUC4_cast


def itkFFTPadImageFilterIUS2_New():
    return itkFFTPadImageFilterIUS2.New()

class itkFFTPadImageFilterIUS2(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIUS2IUS2):
    r"""Proxy of C++ itkFFTPadImageFilterIUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIUS2_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIUS2_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIUS2_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterIUS2
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIUS2_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterIUS2

        Create a new object of the class itkFFTPadImageFilterIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterIUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterIUS2 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterIUS2_swigregister(itkFFTPadImageFilterIUS2)
itkFFTPadImageFilterIUS2___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIUS2___New_orig__
itkFFTPadImageFilterIUS2_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIUS2_cast


def itkFFTPadImageFilterIUS3_New():
    return itkFFTPadImageFilterIUS3.New()

class itkFFTPadImageFilterIUS3(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIUS3IUS3):
    r"""Proxy of C++ itkFFTPadImageFilterIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIUS3_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIUS3_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIUS3_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterIUS3
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIUS3_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterIUS3

        Create a new object of the class itkFFTPadImageFilterIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterIUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterIUS3 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterIUS3_swigregister(itkFFTPadImageFilterIUS3)
itkFFTPadImageFilterIUS3___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIUS3___New_orig__
itkFFTPadImageFilterIUS3_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIUS3_cast


def itkFFTPadImageFilterIUS4_New():
    return itkFFTPadImageFilterIUS4.New()

class itkFFTPadImageFilterIUS4(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIUS4IUS4):
    r"""Proxy of C++ itkFFTPadImageFilterIUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIUS4_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIUS4_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIUS4_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterIUS4
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIUS4_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterIUS4

        Create a new object of the class itkFFTPadImageFilterIUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterIUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterIUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterIUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterIUS4 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterIUS4_swigregister(itkFFTPadImageFilterIUS4)
itkFFTPadImageFilterIUS4___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIUS4___New_orig__
itkFFTPadImageFilterIUS4_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIUS4_cast


def itkFFTPadImageFilterIVF22_New():
    return itkFFTPadImageFilterIVF22.New()

class itkFFTPadImageFilterIVF22(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIVF22IVF22):
    r"""Proxy of C++ itkFFTPadImageFilterIVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF22_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF22_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF22_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterIVF22
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF22_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterIVF22

        Create a new object of the class itkFFTPadImageFilterIVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterIVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterIVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterIVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterIVF22 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF22_swigregister(itkFFTPadImageFilterIVF22)
itkFFTPadImageFilterIVF22___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF22___New_orig__
itkFFTPadImageFilterIVF22_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF22_cast


def itkFFTPadImageFilterIVF23_New():
    return itkFFTPadImageFilterIVF23.New()

class itkFFTPadImageFilterIVF23(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIVF23IVF23):
    r"""Proxy of C++ itkFFTPadImageFilterIVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF23_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF23_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF23_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterIVF23
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF23_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterIVF23

        Create a new object of the class itkFFTPadImageFilterIVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterIVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterIVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterIVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterIVF23 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF23_swigregister(itkFFTPadImageFilterIVF23)
itkFFTPadImageFilterIVF23___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF23___New_orig__
itkFFTPadImageFilterIVF23_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF23_cast


def itkFFTPadImageFilterIVF24_New():
    return itkFFTPadImageFilterIVF24.New()

class itkFFTPadImageFilterIVF24(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIVF24IVF24):
    r"""Proxy of C++ itkFFTPadImageFilterIVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF24___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF24_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF24_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF24_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterIVF24
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF24_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterIVF24

        Create a new object of the class itkFFTPadImageFilterIVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterIVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterIVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterIVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterIVF24 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF24_swigregister(itkFFTPadImageFilterIVF24)
itkFFTPadImageFilterIVF24___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF24___New_orig__
itkFFTPadImageFilterIVF24_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF24_cast


def itkFFTPadImageFilterIVF32_New():
    return itkFFTPadImageFilterIVF32.New()

class itkFFTPadImageFilterIVF32(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIVF32IVF32):
    r"""Proxy of C++ itkFFTPadImageFilterIVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF32_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF32_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF32_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterIVF32
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF32_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterIVF32

        Create a new object of the class itkFFTPadImageFilterIVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterIVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterIVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterIVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterIVF32 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF32_swigregister(itkFFTPadImageFilterIVF32)
itkFFTPadImageFilterIVF32___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF32___New_orig__
itkFFTPadImageFilterIVF32_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF32_cast


def itkFFTPadImageFilterIVF33_New():
    return itkFFTPadImageFilterIVF33.New()

class itkFFTPadImageFilterIVF33(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIVF33IVF33):
    r"""Proxy of C++ itkFFTPadImageFilterIVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF33_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF33_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF33_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterIVF33
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF33_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterIVF33

        Create a new object of the class itkFFTPadImageFilterIVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterIVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterIVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterIVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterIVF33 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF33_swigregister(itkFFTPadImageFilterIVF33)
itkFFTPadImageFilterIVF33___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF33___New_orig__
itkFFTPadImageFilterIVF33_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF33_cast


def itkFFTPadImageFilterIVF34_New():
    return itkFFTPadImageFilterIVF34.New()

class itkFFTPadImageFilterIVF34(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIVF34IVF34):
    r"""Proxy of C++ itkFFTPadImageFilterIVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF34___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF34_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF34_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF34_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterIVF34
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF34_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterIVF34

        Create a new object of the class itkFFTPadImageFilterIVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterIVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterIVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterIVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterIVF34 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF34_swigregister(itkFFTPadImageFilterIVF34)
itkFFTPadImageFilterIVF34___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF34___New_orig__
itkFFTPadImageFilterIVF34_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF34_cast


def itkFFTPadImageFilterIVF42_New():
    return itkFFTPadImageFilterIVF42.New()

class itkFFTPadImageFilterIVF42(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIVF42IVF42):
    r"""Proxy of C++ itkFFTPadImageFilterIVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF42_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF42_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF42_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterIVF42
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF42_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterIVF42

        Create a new object of the class itkFFTPadImageFilterIVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterIVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterIVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterIVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterIVF42 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF42_swigregister(itkFFTPadImageFilterIVF42)
itkFFTPadImageFilterIVF42___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF42___New_orig__
itkFFTPadImageFilterIVF42_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF42_cast


def itkFFTPadImageFilterIVF43_New():
    return itkFFTPadImageFilterIVF43.New()

class itkFFTPadImageFilterIVF43(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIVF43IVF43):
    r"""Proxy of C++ itkFFTPadImageFilterIVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF43_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF43_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF43_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterIVF43
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF43_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterIVF43

        Create a new object of the class itkFFTPadImageFilterIVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterIVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterIVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterIVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterIVF43 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF43_swigregister(itkFFTPadImageFilterIVF43)
itkFFTPadImageFilterIVF43___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF43___New_orig__
itkFFTPadImageFilterIVF43_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF43_cast


def itkFFTPadImageFilterIVF44_New():
    return itkFFTPadImageFilterIVF44.New()

class itkFFTPadImageFilterIVF44(itk.itkPadImageFilterBasePython.itkPadImageFilterBaseIVF44IVF44):
    r"""Proxy of C++ itkFFTPadImageFilterIVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF44___New_orig__)
    Clone = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF44_Clone)
    GetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF44_GetSizeGreatestPrimeFactor)
    SetSizeGreatestPrimeFactor = _swig_new_instance_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF44_SetSizeGreatestPrimeFactor)
    __swig_destroy__ = _itkFFTPadImageFilterPython.delete_itkFFTPadImageFilterIVF44
    cast = _swig_new_static_method(_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF44_cast)

    def New(*args, **kargs):
        """New() -> itkFFTPadImageFilterIVF44

        Create a new object of the class itkFFTPadImageFilterIVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTPadImageFilterIVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTPadImageFilterIVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTPadImageFilterIVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTPadImageFilterIVF44 in _itkFFTPadImageFilterPython:
_itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF44_swigregister(itkFFTPadImageFilterIVF44)
itkFFTPadImageFilterIVF44___New_orig__ = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF44___New_orig__
itkFFTPadImageFilterIVF44_cast = _itkFFTPadImageFilterPython.itkFFTPadImageFilterIVF44_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def fft_pad_image_filter(*args: itkt.ImageLike,  size_greatest_prime_factor: int=..., boundary_condition: itkt.ImageBoundaryCondition=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for FFTPadImageFilter"""
    import itk

    kwarg_typehints = { 'size_greatest_prime_factor':size_greatest_prime_factor,'boundary_condition':boundary_condition }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.FFTPadImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def fft_pad_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKFFT.FFTPadImageFilter
    fft_pad_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    fft_pad_image_filter.__doc__ = filter_object.__doc__




