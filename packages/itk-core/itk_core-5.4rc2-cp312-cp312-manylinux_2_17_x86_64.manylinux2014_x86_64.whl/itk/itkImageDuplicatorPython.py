# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKCommonPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkImageDuplicatorPython
else:
    import _itkImageDuplicatorPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkImageDuplicatorPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkImageDuplicatorPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkImagePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython

def itkImageDuplicatorICVF22_New():
    return itkImageDuplicatorICVF22.New()

class itkImageDuplicatorICVF22(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF22_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF22_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF22_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF22_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorICVF22
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF22_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorICVF22

        Create a new object of the class itkImageDuplicatorICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorICVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorICVF22 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorICVF22_swigregister(itkImageDuplicatorICVF22)
itkImageDuplicatorICVF22___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorICVF22___New_orig__
itkImageDuplicatorICVF22_cast = _itkImageDuplicatorPython.itkImageDuplicatorICVF22_cast


def itkImageDuplicatorICVF23_New():
    return itkImageDuplicatorICVF23.New()

class itkImageDuplicatorICVF23(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorICVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF23_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF23_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF23_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF23_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorICVF23
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF23_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorICVF23

        Create a new object of the class itkImageDuplicatorICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorICVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorICVF23 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorICVF23_swigregister(itkImageDuplicatorICVF23)
itkImageDuplicatorICVF23___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorICVF23___New_orig__
itkImageDuplicatorICVF23_cast = _itkImageDuplicatorPython.itkImageDuplicatorICVF23_cast


def itkImageDuplicatorICVF24_New():
    return itkImageDuplicatorICVF24.New()

class itkImageDuplicatorICVF24(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorICVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF24___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF24_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF24_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF24_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF24_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorICVF24
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF24_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorICVF24

        Create a new object of the class itkImageDuplicatorICVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorICVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorICVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorICVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorICVF24 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorICVF24_swigregister(itkImageDuplicatorICVF24)
itkImageDuplicatorICVF24___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorICVF24___New_orig__
itkImageDuplicatorICVF24_cast = _itkImageDuplicatorPython.itkImageDuplicatorICVF24_cast


def itkImageDuplicatorICVF32_New():
    return itkImageDuplicatorICVF32.New()

class itkImageDuplicatorICVF32(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorICVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF32_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF32_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF32_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF32_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorICVF32
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF32_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorICVF32

        Create a new object of the class itkImageDuplicatorICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorICVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorICVF32 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorICVF32_swigregister(itkImageDuplicatorICVF32)
itkImageDuplicatorICVF32___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorICVF32___New_orig__
itkImageDuplicatorICVF32_cast = _itkImageDuplicatorPython.itkImageDuplicatorICVF32_cast


def itkImageDuplicatorICVF33_New():
    return itkImageDuplicatorICVF33.New()

class itkImageDuplicatorICVF33(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorICVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF33_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF33_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF33_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF33_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorICVF33
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF33_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorICVF33

        Create a new object of the class itkImageDuplicatorICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorICVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorICVF33 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorICVF33_swigregister(itkImageDuplicatorICVF33)
itkImageDuplicatorICVF33___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorICVF33___New_orig__
itkImageDuplicatorICVF33_cast = _itkImageDuplicatorPython.itkImageDuplicatorICVF33_cast


def itkImageDuplicatorICVF34_New():
    return itkImageDuplicatorICVF34.New()

class itkImageDuplicatorICVF34(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorICVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF34___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF34_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF34_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF34_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF34_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorICVF34
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF34_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorICVF34

        Create a new object of the class itkImageDuplicatorICVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorICVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorICVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorICVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorICVF34 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorICVF34_swigregister(itkImageDuplicatorICVF34)
itkImageDuplicatorICVF34___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorICVF34___New_orig__
itkImageDuplicatorICVF34_cast = _itkImageDuplicatorPython.itkImageDuplicatorICVF34_cast


def itkImageDuplicatorICVF42_New():
    return itkImageDuplicatorICVF42.New()

class itkImageDuplicatorICVF42(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorICVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF42_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF42_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF42_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF42_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorICVF42
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF42_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorICVF42

        Create a new object of the class itkImageDuplicatorICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorICVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorICVF42 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorICVF42_swigregister(itkImageDuplicatorICVF42)
itkImageDuplicatorICVF42___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorICVF42___New_orig__
itkImageDuplicatorICVF42_cast = _itkImageDuplicatorPython.itkImageDuplicatorICVF42_cast


def itkImageDuplicatorICVF43_New():
    return itkImageDuplicatorICVF43.New()

class itkImageDuplicatorICVF43(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorICVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF43_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF43_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF43_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF43_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorICVF43
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF43_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorICVF43

        Create a new object of the class itkImageDuplicatorICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorICVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorICVF43 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorICVF43_swigregister(itkImageDuplicatorICVF43)
itkImageDuplicatorICVF43___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorICVF43___New_orig__
itkImageDuplicatorICVF43_cast = _itkImageDuplicatorPython.itkImageDuplicatorICVF43_cast


def itkImageDuplicatorICVF44_New():
    return itkImageDuplicatorICVF44.New()

class itkImageDuplicatorICVF44(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorICVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF44___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF44_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF44_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF44_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF44_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorICVF44
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorICVF44_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorICVF44

        Create a new object of the class itkImageDuplicatorICVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorICVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorICVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorICVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorICVF44 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorICVF44_swigregister(itkImageDuplicatorICVF44)
itkImageDuplicatorICVF44___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorICVF44___New_orig__
itkImageDuplicatorICVF44_cast = _itkImageDuplicatorPython.itkImageDuplicatorICVF44_cast


def itkImageDuplicatorID2_New():
    return itkImageDuplicatorID2.New()

class itkImageDuplicatorID2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorID2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorID2_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorID2_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorID2_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorID2_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorID2
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorID2_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorID2

        Create a new object of the class itkImageDuplicatorID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorID2 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorID2_swigregister(itkImageDuplicatorID2)
itkImageDuplicatorID2___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorID2___New_orig__
itkImageDuplicatorID2_cast = _itkImageDuplicatorPython.itkImageDuplicatorID2_cast


def itkImageDuplicatorID3_New():
    return itkImageDuplicatorID3.New()

class itkImageDuplicatorID3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorID3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorID3_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorID3_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorID3_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorID3_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorID3
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorID3_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorID3

        Create a new object of the class itkImageDuplicatorID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorID3 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorID3_swigregister(itkImageDuplicatorID3)
itkImageDuplicatorID3___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorID3___New_orig__
itkImageDuplicatorID3_cast = _itkImageDuplicatorPython.itkImageDuplicatorID3_cast


def itkImageDuplicatorID4_New():
    return itkImageDuplicatorID4.New()

class itkImageDuplicatorID4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorID4___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorID4_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorID4_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorID4_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorID4_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorID4
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorID4_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorID4

        Create a new object of the class itkImageDuplicatorID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorID4 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorID4_swigregister(itkImageDuplicatorID4)
itkImageDuplicatorID4___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorID4___New_orig__
itkImageDuplicatorID4_cast = _itkImageDuplicatorPython.itkImageDuplicatorID4_cast


def itkImageDuplicatorIF2_New():
    return itkImageDuplicatorIF2.New()

class itkImageDuplicatorIF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIF2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIF2_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIF2_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIF2_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIF2_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIF2
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIF2_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIF2

        Create a new object of the class itkImageDuplicatorIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorIF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorIF2 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorIF2_swigregister(itkImageDuplicatorIF2)
itkImageDuplicatorIF2___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorIF2___New_orig__
itkImageDuplicatorIF2_cast = _itkImageDuplicatorPython.itkImageDuplicatorIF2_cast


def itkImageDuplicatorIF3_New():
    return itkImageDuplicatorIF3.New()

class itkImageDuplicatorIF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIF3_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIF3_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIF3_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIF3_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIF3
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIF3_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIF3

        Create a new object of the class itkImageDuplicatorIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorIF3 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorIF3_swigregister(itkImageDuplicatorIF3)
itkImageDuplicatorIF3___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorIF3___New_orig__
itkImageDuplicatorIF3_cast = _itkImageDuplicatorPython.itkImageDuplicatorIF3_cast


def itkImageDuplicatorIF4_New():
    return itkImageDuplicatorIF4.New()

class itkImageDuplicatorIF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIF4___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIF4_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIF4_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIF4_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIF4_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIF4
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIF4_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIF4

        Create a new object of the class itkImageDuplicatorIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorIF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorIF4 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorIF4_swigregister(itkImageDuplicatorIF4)
itkImageDuplicatorIF4___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorIF4___New_orig__
itkImageDuplicatorIF4_cast = _itkImageDuplicatorPython.itkImageDuplicatorIF4_cast


def itkImageDuplicatorIRGBAUC2_New():
    return itkImageDuplicatorIRGBAUC2.New()

class itkImageDuplicatorIRGBAUC2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorIRGBAUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC2_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC2_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC2_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC2_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIRGBAUC2
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC2_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIRGBAUC2

        Create a new object of the class itkImageDuplicatorIRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorIRGBAUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorIRGBAUC2 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC2_swigregister(itkImageDuplicatorIRGBAUC2)
itkImageDuplicatorIRGBAUC2___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC2___New_orig__
itkImageDuplicatorIRGBAUC2_cast = _itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC2_cast


def itkImageDuplicatorIRGBAUC3_New():
    return itkImageDuplicatorIRGBAUC3.New()

class itkImageDuplicatorIRGBAUC3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorIRGBAUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC3_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC3_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC3_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC3_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIRGBAUC3
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC3_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIRGBAUC3

        Create a new object of the class itkImageDuplicatorIRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorIRGBAUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorIRGBAUC3 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC3_swigregister(itkImageDuplicatorIRGBAUC3)
itkImageDuplicatorIRGBAUC3___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC3___New_orig__
itkImageDuplicatorIRGBAUC3_cast = _itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC3_cast


def itkImageDuplicatorIRGBAUC4_New():
    return itkImageDuplicatorIRGBAUC4.New()

class itkImageDuplicatorIRGBAUC4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorIRGBAUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC4_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC4_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC4_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC4_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIRGBAUC4
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC4_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIRGBAUC4

        Create a new object of the class itkImageDuplicatorIRGBAUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIRGBAUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIRGBAUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorIRGBAUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorIRGBAUC4 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC4_swigregister(itkImageDuplicatorIRGBAUC4)
itkImageDuplicatorIRGBAUC4___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC4___New_orig__
itkImageDuplicatorIRGBAUC4_cast = _itkImageDuplicatorPython.itkImageDuplicatorIRGBAUC4_cast


def itkImageDuplicatorIRGBUC2_New():
    return itkImageDuplicatorIRGBUC2.New()

class itkImageDuplicatorIRGBUC2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorIRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIRGBUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIRGBUC2_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIRGBUC2_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIRGBUC2_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIRGBUC2_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIRGBUC2
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIRGBUC2_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIRGBUC2

        Create a new object of the class itkImageDuplicatorIRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorIRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorIRGBUC2 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorIRGBUC2_swigregister(itkImageDuplicatorIRGBUC2)
itkImageDuplicatorIRGBUC2___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorIRGBUC2___New_orig__
itkImageDuplicatorIRGBUC2_cast = _itkImageDuplicatorPython.itkImageDuplicatorIRGBUC2_cast


def itkImageDuplicatorIRGBUC3_New():
    return itkImageDuplicatorIRGBUC3.New()

class itkImageDuplicatorIRGBUC3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorIRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIRGBUC3_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIRGBUC3_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIRGBUC3_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIRGBUC3_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIRGBUC3
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIRGBUC3_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIRGBUC3

        Create a new object of the class itkImageDuplicatorIRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorIRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorIRGBUC3 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorIRGBUC3_swigregister(itkImageDuplicatorIRGBUC3)
itkImageDuplicatorIRGBUC3___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorIRGBUC3___New_orig__
itkImageDuplicatorIRGBUC3_cast = _itkImageDuplicatorPython.itkImageDuplicatorIRGBUC3_cast


def itkImageDuplicatorIRGBUC4_New():
    return itkImageDuplicatorIRGBUC4.New()

class itkImageDuplicatorIRGBUC4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorIRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIRGBUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIRGBUC4_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIRGBUC4_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIRGBUC4_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIRGBUC4_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIRGBUC4
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIRGBUC4_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIRGBUC4

        Create a new object of the class itkImageDuplicatorIRGBUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIRGBUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIRGBUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorIRGBUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorIRGBUC4 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorIRGBUC4_swigregister(itkImageDuplicatorIRGBUC4)
itkImageDuplicatorIRGBUC4___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorIRGBUC4___New_orig__
itkImageDuplicatorIRGBUC4_cast = _itkImageDuplicatorPython.itkImageDuplicatorIRGBUC4_cast


def itkImageDuplicatorISI2_New():
    return itkImageDuplicatorISI2.New()

class itkImageDuplicatorISI2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorISI2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorISI2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISI2_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISI2_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISI2_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISI2_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorISI2
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorISI2_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorISI2

        Create a new object of the class itkImageDuplicatorISI2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorISI2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorISI2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorISI2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorISI2 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorISI2_swigregister(itkImageDuplicatorISI2)
itkImageDuplicatorISI2___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorISI2___New_orig__
itkImageDuplicatorISI2_cast = _itkImageDuplicatorPython.itkImageDuplicatorISI2_cast


def itkImageDuplicatorISI3_New():
    return itkImageDuplicatorISI3.New()

class itkImageDuplicatorISI3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorISI3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorISI3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISI3_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISI3_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISI3_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISI3_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorISI3
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorISI3_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorISI3

        Create a new object of the class itkImageDuplicatorISI3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorISI3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorISI3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorISI3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorISI3 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorISI3_swigregister(itkImageDuplicatorISI3)
itkImageDuplicatorISI3___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorISI3___New_orig__
itkImageDuplicatorISI3_cast = _itkImageDuplicatorPython.itkImageDuplicatorISI3_cast


def itkImageDuplicatorISI4_New():
    return itkImageDuplicatorISI4.New()

class itkImageDuplicatorISI4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorISI4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorISI4___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISI4_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISI4_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISI4_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISI4_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorISI4
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorISI4_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorISI4

        Create a new object of the class itkImageDuplicatorISI4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorISI4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorISI4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorISI4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorISI4 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorISI4_swigregister(itkImageDuplicatorISI4)
itkImageDuplicatorISI4___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorISI4___New_orig__
itkImageDuplicatorISI4_cast = _itkImageDuplicatorPython.itkImageDuplicatorISI4_cast


def itkImageDuplicatorISS2_New():
    return itkImageDuplicatorISS2.New()

class itkImageDuplicatorISS2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISS2_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISS2_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISS2_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISS2_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorISS2
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorISS2_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorISS2

        Create a new object of the class itkImageDuplicatorISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorISS2 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorISS2_swigregister(itkImageDuplicatorISS2)
itkImageDuplicatorISS2___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorISS2___New_orig__
itkImageDuplicatorISS2_cast = _itkImageDuplicatorPython.itkImageDuplicatorISS2_cast


def itkImageDuplicatorISS3_New():
    return itkImageDuplicatorISS3.New()

class itkImageDuplicatorISS3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISS3_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISS3_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISS3_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISS3_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorISS3
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorISS3_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorISS3

        Create a new object of the class itkImageDuplicatorISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorISS3 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorISS3_swigregister(itkImageDuplicatorISS3)
itkImageDuplicatorISS3___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorISS3___New_orig__
itkImageDuplicatorISS3_cast = _itkImageDuplicatorPython.itkImageDuplicatorISS3_cast


def itkImageDuplicatorISS4_New():
    return itkImageDuplicatorISS4.New()

class itkImageDuplicatorISS4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISS4_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISS4_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISS4_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISS4_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorISS4
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorISS4_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorISS4

        Create a new object of the class itkImageDuplicatorISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorISS4 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorISS4_swigregister(itkImageDuplicatorISS4)
itkImageDuplicatorISS4___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorISS4___New_orig__
itkImageDuplicatorISS4_cast = _itkImageDuplicatorPython.itkImageDuplicatorISS4_cast


def itkImageDuplicatorISSRTD22_New():
    return itkImageDuplicatorISSRTD22.New()

class itkImageDuplicatorISSRTD22(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorISSRTD22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorISSRTD22___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISSRTD22_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISSRTD22_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISSRTD22_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISSRTD22_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorISSRTD22
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorISSRTD22_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorISSRTD22

        Create a new object of the class itkImageDuplicatorISSRTD22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorISSRTD22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorISSRTD22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorISSRTD22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorISSRTD22 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorISSRTD22_swigregister(itkImageDuplicatorISSRTD22)
itkImageDuplicatorISSRTD22___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorISSRTD22___New_orig__
itkImageDuplicatorISSRTD22_cast = _itkImageDuplicatorPython.itkImageDuplicatorISSRTD22_cast


def itkImageDuplicatorISSRTD33_New():
    return itkImageDuplicatorISSRTD33.New()

class itkImageDuplicatorISSRTD33(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorISSRTD33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorISSRTD33___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISSRTD33_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISSRTD33_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISSRTD33_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISSRTD33_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorISSRTD33
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorISSRTD33_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorISSRTD33

        Create a new object of the class itkImageDuplicatorISSRTD33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorISSRTD33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorISSRTD33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorISSRTD33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorISSRTD33 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorISSRTD33_swigregister(itkImageDuplicatorISSRTD33)
itkImageDuplicatorISSRTD33___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorISSRTD33___New_orig__
itkImageDuplicatorISSRTD33_cast = _itkImageDuplicatorPython.itkImageDuplicatorISSRTD33_cast


def itkImageDuplicatorISSRTD44_New():
    return itkImageDuplicatorISSRTD44.New()

class itkImageDuplicatorISSRTD44(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorISSRTD44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorISSRTD44___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISSRTD44_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISSRTD44_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISSRTD44_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISSRTD44_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorISSRTD44
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorISSRTD44_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorISSRTD44

        Create a new object of the class itkImageDuplicatorISSRTD44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorISSRTD44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorISSRTD44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorISSRTD44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorISSRTD44 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorISSRTD44_swigregister(itkImageDuplicatorISSRTD44)
itkImageDuplicatorISSRTD44___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorISSRTD44___New_orig__
itkImageDuplicatorISSRTD44_cast = _itkImageDuplicatorPython.itkImageDuplicatorISSRTD44_cast


def itkImageDuplicatorISSRTF22_New():
    return itkImageDuplicatorISSRTF22.New()

class itkImageDuplicatorISSRTF22(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorISSRTF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorISSRTF22___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISSRTF22_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISSRTF22_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISSRTF22_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISSRTF22_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorISSRTF22
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorISSRTF22_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorISSRTF22

        Create a new object of the class itkImageDuplicatorISSRTF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorISSRTF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorISSRTF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorISSRTF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorISSRTF22 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorISSRTF22_swigregister(itkImageDuplicatorISSRTF22)
itkImageDuplicatorISSRTF22___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorISSRTF22___New_orig__
itkImageDuplicatorISSRTF22_cast = _itkImageDuplicatorPython.itkImageDuplicatorISSRTF22_cast


def itkImageDuplicatorISSRTF33_New():
    return itkImageDuplicatorISSRTF33.New()

class itkImageDuplicatorISSRTF33(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorISSRTF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorISSRTF33___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISSRTF33_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISSRTF33_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISSRTF33_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISSRTF33_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorISSRTF33
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorISSRTF33_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorISSRTF33

        Create a new object of the class itkImageDuplicatorISSRTF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorISSRTF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorISSRTF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorISSRTF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorISSRTF33 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorISSRTF33_swigregister(itkImageDuplicatorISSRTF33)
itkImageDuplicatorISSRTF33___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorISSRTF33___New_orig__
itkImageDuplicatorISSRTF33_cast = _itkImageDuplicatorPython.itkImageDuplicatorISSRTF33_cast


def itkImageDuplicatorISSRTF44_New():
    return itkImageDuplicatorISSRTF44.New()

class itkImageDuplicatorISSRTF44(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorISSRTF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorISSRTF44___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISSRTF44_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISSRTF44_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISSRTF44_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorISSRTF44_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorISSRTF44
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorISSRTF44_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorISSRTF44

        Create a new object of the class itkImageDuplicatorISSRTF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorISSRTF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorISSRTF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorISSRTF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorISSRTF44 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorISSRTF44_swigregister(itkImageDuplicatorISSRTF44)
itkImageDuplicatorISSRTF44___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorISSRTF44___New_orig__
itkImageDuplicatorISSRTF44_cast = _itkImageDuplicatorPython.itkImageDuplicatorISSRTF44_cast


def itkImageDuplicatorIUC2_New():
    return itkImageDuplicatorIUC2.New()

class itkImageDuplicatorIUC2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorIUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUC2_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUC2_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUC2_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUC2_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIUC2
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIUC2_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIUC2

        Create a new object of the class itkImageDuplicatorIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorIUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorIUC2 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorIUC2_swigregister(itkImageDuplicatorIUC2)
itkImageDuplicatorIUC2___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorIUC2___New_orig__
itkImageDuplicatorIUC2_cast = _itkImageDuplicatorPython.itkImageDuplicatorIUC2_cast


def itkImageDuplicatorIUC3_New():
    return itkImageDuplicatorIUC3.New()

class itkImageDuplicatorIUC3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUC3_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUC3_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUC3_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUC3_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIUC3
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIUC3_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIUC3

        Create a new object of the class itkImageDuplicatorIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorIUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorIUC3 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorIUC3_swigregister(itkImageDuplicatorIUC3)
itkImageDuplicatorIUC3___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorIUC3___New_orig__
itkImageDuplicatorIUC3_cast = _itkImageDuplicatorPython.itkImageDuplicatorIUC3_cast


def itkImageDuplicatorIUC4_New():
    return itkImageDuplicatorIUC4.New()

class itkImageDuplicatorIUC4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorIUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUC4_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUC4_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUC4_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUC4_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIUC4
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIUC4_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIUC4

        Create a new object of the class itkImageDuplicatorIUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorIUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorIUC4 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorIUC4_swigregister(itkImageDuplicatorIUC4)
itkImageDuplicatorIUC4___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorIUC4___New_orig__
itkImageDuplicatorIUC4_cast = _itkImageDuplicatorPython.itkImageDuplicatorIUC4_cast


def itkImageDuplicatorIUI2_New():
    return itkImageDuplicatorIUI2.New()

class itkImageDuplicatorIUI2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorIUI2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIUI2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUI2_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUI2_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUI2_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUI2_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIUI2
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIUI2_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIUI2

        Create a new object of the class itkImageDuplicatorIUI2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIUI2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIUI2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorIUI2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorIUI2 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorIUI2_swigregister(itkImageDuplicatorIUI2)
itkImageDuplicatorIUI2___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorIUI2___New_orig__
itkImageDuplicatorIUI2_cast = _itkImageDuplicatorPython.itkImageDuplicatorIUI2_cast


def itkImageDuplicatorIUI3_New():
    return itkImageDuplicatorIUI3.New()

class itkImageDuplicatorIUI3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorIUI3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIUI3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUI3_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUI3_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUI3_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUI3_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIUI3
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIUI3_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIUI3

        Create a new object of the class itkImageDuplicatorIUI3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIUI3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIUI3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorIUI3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorIUI3 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorIUI3_swigregister(itkImageDuplicatorIUI3)
itkImageDuplicatorIUI3___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorIUI3___New_orig__
itkImageDuplicatorIUI3_cast = _itkImageDuplicatorPython.itkImageDuplicatorIUI3_cast


def itkImageDuplicatorIUI4_New():
    return itkImageDuplicatorIUI4.New()

class itkImageDuplicatorIUI4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorIUI4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIUI4___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUI4_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUI4_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUI4_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUI4_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIUI4
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIUI4_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIUI4

        Create a new object of the class itkImageDuplicatorIUI4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIUI4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIUI4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorIUI4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorIUI4 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorIUI4_swigregister(itkImageDuplicatorIUI4)
itkImageDuplicatorIUI4___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorIUI4___New_orig__
itkImageDuplicatorIUI4_cast = _itkImageDuplicatorPython.itkImageDuplicatorIUI4_cast


def itkImageDuplicatorIUL2_New():
    return itkImageDuplicatorIUL2.New()

class itkImageDuplicatorIUL2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorIUL2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIUL2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUL2_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUL2_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUL2_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUL2_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIUL2
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIUL2_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIUL2

        Create a new object of the class itkImageDuplicatorIUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIUL2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIUL2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorIUL2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorIUL2 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorIUL2_swigregister(itkImageDuplicatorIUL2)
itkImageDuplicatorIUL2___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorIUL2___New_orig__
itkImageDuplicatorIUL2_cast = _itkImageDuplicatorPython.itkImageDuplicatorIUL2_cast


def itkImageDuplicatorIUL3_New():
    return itkImageDuplicatorIUL3.New()

class itkImageDuplicatorIUL3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorIUL3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIUL3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUL3_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUL3_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUL3_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUL3_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIUL3
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIUL3_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIUL3

        Create a new object of the class itkImageDuplicatorIUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIUL3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIUL3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorIUL3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorIUL3 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorIUL3_swigregister(itkImageDuplicatorIUL3)
itkImageDuplicatorIUL3___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorIUL3___New_orig__
itkImageDuplicatorIUL3_cast = _itkImageDuplicatorPython.itkImageDuplicatorIUL3_cast


def itkImageDuplicatorIUL4_New():
    return itkImageDuplicatorIUL4.New()

class itkImageDuplicatorIUL4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorIUL4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIUL4___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUL4_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUL4_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUL4_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUL4_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIUL4
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIUL4_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIUL4

        Create a new object of the class itkImageDuplicatorIUL4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIUL4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIUL4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorIUL4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorIUL4 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorIUL4_swigregister(itkImageDuplicatorIUL4)
itkImageDuplicatorIUL4___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorIUL4___New_orig__
itkImageDuplicatorIUL4_cast = _itkImageDuplicatorPython.itkImageDuplicatorIUL4_cast


def itkImageDuplicatorIULL2_New():
    return itkImageDuplicatorIULL2.New()

class itkImageDuplicatorIULL2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorIULL2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIULL2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIULL2_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIULL2_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIULL2_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIULL2_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIULL2
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIULL2_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIULL2

        Create a new object of the class itkImageDuplicatorIULL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIULL2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIULL2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorIULL2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorIULL2 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorIULL2_swigregister(itkImageDuplicatorIULL2)
itkImageDuplicatorIULL2___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorIULL2___New_orig__
itkImageDuplicatorIULL2_cast = _itkImageDuplicatorPython.itkImageDuplicatorIULL2_cast


def itkImageDuplicatorIULL3_New():
    return itkImageDuplicatorIULL3.New()

class itkImageDuplicatorIULL3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorIULL3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIULL3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIULL3_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIULL3_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIULL3_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIULL3_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIULL3
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIULL3_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIULL3

        Create a new object of the class itkImageDuplicatorIULL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIULL3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIULL3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorIULL3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorIULL3 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorIULL3_swigregister(itkImageDuplicatorIULL3)
itkImageDuplicatorIULL3___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorIULL3___New_orig__
itkImageDuplicatorIULL3_cast = _itkImageDuplicatorPython.itkImageDuplicatorIULL3_cast


def itkImageDuplicatorIULL4_New():
    return itkImageDuplicatorIULL4.New()

class itkImageDuplicatorIULL4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorIULL4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIULL4___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIULL4_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIULL4_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIULL4_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIULL4_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIULL4
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIULL4_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIULL4

        Create a new object of the class itkImageDuplicatorIULL4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIULL4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIULL4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorIULL4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorIULL4 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorIULL4_swigregister(itkImageDuplicatorIULL4)
itkImageDuplicatorIULL4___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorIULL4___New_orig__
itkImageDuplicatorIULL4_cast = _itkImageDuplicatorPython.itkImageDuplicatorIULL4_cast


def itkImageDuplicatorIUS2_New():
    return itkImageDuplicatorIUS2.New()

class itkImageDuplicatorIUS2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorIUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUS2_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUS2_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUS2_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUS2_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIUS2
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIUS2_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIUS2

        Create a new object of the class itkImageDuplicatorIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorIUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorIUS2 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorIUS2_swigregister(itkImageDuplicatorIUS2)
itkImageDuplicatorIUS2___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorIUS2___New_orig__
itkImageDuplicatorIUS2_cast = _itkImageDuplicatorPython.itkImageDuplicatorIUS2_cast


def itkImageDuplicatorIUS3_New():
    return itkImageDuplicatorIUS3.New()

class itkImageDuplicatorIUS3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUS3_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUS3_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUS3_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUS3_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIUS3
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIUS3_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIUS3

        Create a new object of the class itkImageDuplicatorIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorIUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorIUS3 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorIUS3_swigregister(itkImageDuplicatorIUS3)
itkImageDuplicatorIUS3___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorIUS3___New_orig__
itkImageDuplicatorIUS3_cast = _itkImageDuplicatorPython.itkImageDuplicatorIUS3_cast


def itkImageDuplicatorIUS4_New():
    return itkImageDuplicatorIUS4.New()

class itkImageDuplicatorIUS4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorIUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUS4_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUS4_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUS4_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIUS4_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIUS4
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIUS4_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIUS4

        Create a new object of the class itkImageDuplicatorIUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorIUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorIUS4 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorIUS4_swigregister(itkImageDuplicatorIUS4)
itkImageDuplicatorIUS4___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorIUS4___New_orig__
itkImageDuplicatorIUS4_cast = _itkImageDuplicatorPython.itkImageDuplicatorIUS4_cast


def itkImageDuplicatorIVF22_New():
    return itkImageDuplicatorIVF22.New()

class itkImageDuplicatorIVF22(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorIVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF22___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF22_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF22_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF22_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF22_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIVF22
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF22_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIVF22

        Create a new object of the class itkImageDuplicatorIVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorIVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorIVF22 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorIVF22_swigregister(itkImageDuplicatorIVF22)
itkImageDuplicatorIVF22___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorIVF22___New_orig__
itkImageDuplicatorIVF22_cast = _itkImageDuplicatorPython.itkImageDuplicatorIVF22_cast


def itkImageDuplicatorIVF23_New():
    return itkImageDuplicatorIVF23.New()

class itkImageDuplicatorIVF23(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorIVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF23___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF23_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF23_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF23_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF23_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIVF23
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF23_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIVF23

        Create a new object of the class itkImageDuplicatorIVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorIVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorIVF23 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorIVF23_swigregister(itkImageDuplicatorIVF23)
itkImageDuplicatorIVF23___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorIVF23___New_orig__
itkImageDuplicatorIVF23_cast = _itkImageDuplicatorPython.itkImageDuplicatorIVF23_cast


def itkImageDuplicatorIVF24_New():
    return itkImageDuplicatorIVF24.New()

class itkImageDuplicatorIVF24(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorIVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF24___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF24_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF24_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF24_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF24_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIVF24
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF24_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIVF24

        Create a new object of the class itkImageDuplicatorIVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorIVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorIVF24 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorIVF24_swigregister(itkImageDuplicatorIVF24)
itkImageDuplicatorIVF24___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorIVF24___New_orig__
itkImageDuplicatorIVF24_cast = _itkImageDuplicatorPython.itkImageDuplicatorIVF24_cast


def itkImageDuplicatorIVF32_New():
    return itkImageDuplicatorIVF32.New()

class itkImageDuplicatorIVF32(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorIVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF32___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF32_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF32_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF32_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF32_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIVF32
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF32_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIVF32

        Create a new object of the class itkImageDuplicatorIVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorIVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorIVF32 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorIVF32_swigregister(itkImageDuplicatorIVF32)
itkImageDuplicatorIVF32___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorIVF32___New_orig__
itkImageDuplicatorIVF32_cast = _itkImageDuplicatorPython.itkImageDuplicatorIVF32_cast


def itkImageDuplicatorIVF33_New():
    return itkImageDuplicatorIVF33.New()

class itkImageDuplicatorIVF33(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorIVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF33___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF33_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF33_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF33_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF33_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIVF33
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF33_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIVF33

        Create a new object of the class itkImageDuplicatorIVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorIVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorIVF33 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorIVF33_swigregister(itkImageDuplicatorIVF33)
itkImageDuplicatorIVF33___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorIVF33___New_orig__
itkImageDuplicatorIVF33_cast = _itkImageDuplicatorPython.itkImageDuplicatorIVF33_cast


def itkImageDuplicatorIVF34_New():
    return itkImageDuplicatorIVF34.New()

class itkImageDuplicatorIVF34(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorIVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF34___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF34_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF34_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF34_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF34_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIVF34
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF34_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIVF34

        Create a new object of the class itkImageDuplicatorIVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorIVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorIVF34 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorIVF34_swigregister(itkImageDuplicatorIVF34)
itkImageDuplicatorIVF34___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorIVF34___New_orig__
itkImageDuplicatorIVF34_cast = _itkImageDuplicatorPython.itkImageDuplicatorIVF34_cast


def itkImageDuplicatorIVF42_New():
    return itkImageDuplicatorIVF42.New()

class itkImageDuplicatorIVF42(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorIVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF42___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF42_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF42_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF42_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF42_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIVF42
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF42_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIVF42

        Create a new object of the class itkImageDuplicatorIVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorIVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorIVF42 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorIVF42_swigregister(itkImageDuplicatorIVF42)
itkImageDuplicatorIVF42___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorIVF42___New_orig__
itkImageDuplicatorIVF42_cast = _itkImageDuplicatorPython.itkImageDuplicatorIVF42_cast


def itkImageDuplicatorIVF43_New():
    return itkImageDuplicatorIVF43.New()

class itkImageDuplicatorIVF43(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorIVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF43___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF43_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF43_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF43_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF43_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIVF43
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF43_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIVF43

        Create a new object of the class itkImageDuplicatorIVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorIVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorIVF43 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorIVF43_swigregister(itkImageDuplicatorIVF43)
itkImageDuplicatorIVF43___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorIVF43___New_orig__
itkImageDuplicatorIVF43_cast = _itkImageDuplicatorPython.itkImageDuplicatorIVF43_cast


def itkImageDuplicatorIVF44_New():
    return itkImageDuplicatorIVF44.New()

class itkImageDuplicatorIVF44(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorIVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF44___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF44_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF44_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF44_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF44_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorIVF44
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorIVF44_cast)

    def __internal_call__(self):
        """Create an object, update with the inputs and
        attributes, and return the result.

        The syntax is the same as the one used in New().
        Update() is ran once the input are changed, and
        the current output.
        """
        self.Update()
        return self.GetOutput()


    def New(*args, **kargs):
        """New() -> itkImageDuplicatorIVF44

        Create a new object of the class itkImageDuplicatorIVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorIVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorIVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorIVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorIVF44 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorIVF44_swigregister(itkImageDuplicatorIVF44)
itkImageDuplicatorIVF44___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorIVF44___New_orig__
itkImageDuplicatorIVF44_cast = _itkImageDuplicatorPython.itkImageDuplicatorIVF44_cast


def itkImageDuplicatorVICD2_New():
    return itkImageDuplicatorVICD2.New()

class itkImageDuplicatorVICD2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorVICD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVICD2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVICD2_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVICD2_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVICD2_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVICD2_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorVICD2
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVICD2_cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorVICD2

        Create a new object of the class itkImageDuplicatorVICD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorVICD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorVICD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorVICD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorVICD2 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorVICD2_swigregister(itkImageDuplicatorVICD2)
itkImageDuplicatorVICD2___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorVICD2___New_orig__
itkImageDuplicatorVICD2_cast = _itkImageDuplicatorPython.itkImageDuplicatorVICD2_cast


def itkImageDuplicatorVICD3_New():
    return itkImageDuplicatorVICD3.New()

class itkImageDuplicatorVICD3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorVICD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVICD3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVICD3_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVICD3_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVICD3_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVICD3_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorVICD3
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVICD3_cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorVICD3

        Create a new object of the class itkImageDuplicatorVICD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorVICD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorVICD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorVICD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorVICD3 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorVICD3_swigregister(itkImageDuplicatorVICD3)
itkImageDuplicatorVICD3___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorVICD3___New_orig__
itkImageDuplicatorVICD3_cast = _itkImageDuplicatorPython.itkImageDuplicatorVICD3_cast


def itkImageDuplicatorVICD4_New():
    return itkImageDuplicatorVICD4.New()

class itkImageDuplicatorVICD4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorVICD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVICD4___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVICD4_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVICD4_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVICD4_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVICD4_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorVICD4
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVICD4_cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorVICD4

        Create a new object of the class itkImageDuplicatorVICD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorVICD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorVICD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorVICD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorVICD4 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorVICD4_swigregister(itkImageDuplicatorVICD4)
itkImageDuplicatorVICD4___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorVICD4___New_orig__
itkImageDuplicatorVICD4_cast = _itkImageDuplicatorPython.itkImageDuplicatorVICD4_cast


def itkImageDuplicatorVICF2_New():
    return itkImageDuplicatorVICF2.New()

class itkImageDuplicatorVICF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorVICF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVICF2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVICF2_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVICF2_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVICF2_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVICF2_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorVICF2
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVICF2_cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorVICF2

        Create a new object of the class itkImageDuplicatorVICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorVICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorVICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorVICF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorVICF2 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorVICF2_swigregister(itkImageDuplicatorVICF2)
itkImageDuplicatorVICF2___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorVICF2___New_orig__
itkImageDuplicatorVICF2_cast = _itkImageDuplicatorPython.itkImageDuplicatorVICF2_cast


def itkImageDuplicatorVICF3_New():
    return itkImageDuplicatorVICF3.New()

class itkImageDuplicatorVICF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorVICF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVICF3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVICF3_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVICF3_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVICF3_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVICF3_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorVICF3
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVICF3_cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorVICF3

        Create a new object of the class itkImageDuplicatorVICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorVICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorVICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorVICF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorVICF3 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorVICF3_swigregister(itkImageDuplicatorVICF3)
itkImageDuplicatorVICF3___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorVICF3___New_orig__
itkImageDuplicatorVICF3_cast = _itkImageDuplicatorPython.itkImageDuplicatorVICF3_cast


def itkImageDuplicatorVICF4_New():
    return itkImageDuplicatorVICF4.New()

class itkImageDuplicatorVICF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorVICF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVICF4___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVICF4_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVICF4_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVICF4_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVICF4_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorVICF4
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVICF4_cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorVICF4

        Create a new object of the class itkImageDuplicatorVICF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorVICF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorVICF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorVICF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorVICF4 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorVICF4_swigregister(itkImageDuplicatorVICF4)
itkImageDuplicatorVICF4___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorVICF4___New_orig__
itkImageDuplicatorVICF4_cast = _itkImageDuplicatorPython.itkImageDuplicatorVICF4_cast


def itkImageDuplicatorVID2_New():
    return itkImageDuplicatorVID2.New()

class itkImageDuplicatorVID2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorVID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVID2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVID2_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVID2_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVID2_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVID2_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorVID2
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVID2_cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorVID2

        Create a new object of the class itkImageDuplicatorVID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorVID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorVID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorVID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorVID2 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorVID2_swigregister(itkImageDuplicatorVID2)
itkImageDuplicatorVID2___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorVID2___New_orig__
itkImageDuplicatorVID2_cast = _itkImageDuplicatorPython.itkImageDuplicatorVID2_cast


def itkImageDuplicatorVID3_New():
    return itkImageDuplicatorVID3.New()

class itkImageDuplicatorVID3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorVID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVID3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVID3_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVID3_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVID3_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVID3_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorVID3
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVID3_cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorVID3

        Create a new object of the class itkImageDuplicatorVID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorVID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorVID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorVID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorVID3 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorVID3_swigregister(itkImageDuplicatorVID3)
itkImageDuplicatorVID3___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorVID3___New_orig__
itkImageDuplicatorVID3_cast = _itkImageDuplicatorPython.itkImageDuplicatorVID3_cast


def itkImageDuplicatorVID4_New():
    return itkImageDuplicatorVID4.New()

class itkImageDuplicatorVID4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorVID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVID4___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVID4_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVID4_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVID4_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVID4_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorVID4
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVID4_cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorVID4

        Create a new object of the class itkImageDuplicatorVID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorVID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorVID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorVID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorVID4 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorVID4_swigregister(itkImageDuplicatorVID4)
itkImageDuplicatorVID4___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorVID4___New_orig__
itkImageDuplicatorVID4_cast = _itkImageDuplicatorPython.itkImageDuplicatorVID4_cast


def itkImageDuplicatorVIF2_New():
    return itkImageDuplicatorVIF2.New()

class itkImageDuplicatorVIF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorVIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVIF2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVIF2_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVIF2_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVIF2_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVIF2_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorVIF2
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVIF2_cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorVIF2

        Create a new object of the class itkImageDuplicatorVIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorVIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorVIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorVIF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorVIF2 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorVIF2_swigregister(itkImageDuplicatorVIF2)
itkImageDuplicatorVIF2___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorVIF2___New_orig__
itkImageDuplicatorVIF2_cast = _itkImageDuplicatorPython.itkImageDuplicatorVIF2_cast


def itkImageDuplicatorVIF3_New():
    return itkImageDuplicatorVIF3.New()

class itkImageDuplicatorVIF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorVIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVIF3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVIF3_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVIF3_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVIF3_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVIF3_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorVIF3
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVIF3_cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorVIF3

        Create a new object of the class itkImageDuplicatorVIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorVIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorVIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorVIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorVIF3 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorVIF3_swigregister(itkImageDuplicatorVIF3)
itkImageDuplicatorVIF3___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorVIF3___New_orig__
itkImageDuplicatorVIF3_cast = _itkImageDuplicatorPython.itkImageDuplicatorVIF3_cast


def itkImageDuplicatorVIF4_New():
    return itkImageDuplicatorVIF4.New()

class itkImageDuplicatorVIF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorVIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVIF4___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVIF4_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVIF4_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVIF4_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVIF4_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorVIF4
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVIF4_cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorVIF4

        Create a new object of the class itkImageDuplicatorVIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorVIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorVIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorVIF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorVIF4 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorVIF4_swigregister(itkImageDuplicatorVIF4)
itkImageDuplicatorVIF4___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorVIF4___New_orig__
itkImageDuplicatorVIF4_cast = _itkImageDuplicatorPython.itkImageDuplicatorVIF4_cast


def itkImageDuplicatorVISS2_New():
    return itkImageDuplicatorVISS2.New()

class itkImageDuplicatorVISS2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorVISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVISS2_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVISS2_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVISS2_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVISS2_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorVISS2
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVISS2_cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorVISS2

        Create a new object of the class itkImageDuplicatorVISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorVISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorVISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorVISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorVISS2 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorVISS2_swigregister(itkImageDuplicatorVISS2)
itkImageDuplicatorVISS2___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorVISS2___New_orig__
itkImageDuplicatorVISS2_cast = _itkImageDuplicatorPython.itkImageDuplicatorVISS2_cast


def itkImageDuplicatorVISS3_New():
    return itkImageDuplicatorVISS3.New()

class itkImageDuplicatorVISS3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorVISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVISS3_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVISS3_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVISS3_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVISS3_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorVISS3
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVISS3_cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorVISS3

        Create a new object of the class itkImageDuplicatorVISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorVISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorVISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorVISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorVISS3 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorVISS3_swigregister(itkImageDuplicatorVISS3)
itkImageDuplicatorVISS3___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorVISS3___New_orig__
itkImageDuplicatorVISS3_cast = _itkImageDuplicatorPython.itkImageDuplicatorVISS3_cast


def itkImageDuplicatorVISS4_New():
    return itkImageDuplicatorVISS4.New()

class itkImageDuplicatorVISS4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorVISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVISS4_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVISS4_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVISS4_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVISS4_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorVISS4
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVISS4_cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorVISS4

        Create a new object of the class itkImageDuplicatorVISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorVISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorVISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorVISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorVISS4 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorVISS4_swigregister(itkImageDuplicatorVISS4)
itkImageDuplicatorVISS4___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorVISS4___New_orig__
itkImageDuplicatorVISS4_cast = _itkImageDuplicatorPython.itkImageDuplicatorVISS4_cast


def itkImageDuplicatorVIUC2_New():
    return itkImageDuplicatorVIUC2.New()

class itkImageDuplicatorVIUC2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorVIUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVIUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVIUC2_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVIUC2_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVIUC2_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVIUC2_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorVIUC2
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVIUC2_cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorVIUC2

        Create a new object of the class itkImageDuplicatorVIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorVIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorVIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorVIUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorVIUC2 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorVIUC2_swigregister(itkImageDuplicatorVIUC2)
itkImageDuplicatorVIUC2___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorVIUC2___New_orig__
itkImageDuplicatorVIUC2_cast = _itkImageDuplicatorPython.itkImageDuplicatorVIUC2_cast


def itkImageDuplicatorVIUC3_New():
    return itkImageDuplicatorVIUC3.New()

class itkImageDuplicatorVIUC3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorVIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVIUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVIUC3_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVIUC3_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVIUC3_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVIUC3_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorVIUC3
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVIUC3_cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorVIUC3

        Create a new object of the class itkImageDuplicatorVIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorVIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorVIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorVIUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorVIUC3 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorVIUC3_swigregister(itkImageDuplicatorVIUC3)
itkImageDuplicatorVIUC3___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorVIUC3___New_orig__
itkImageDuplicatorVIUC3_cast = _itkImageDuplicatorPython.itkImageDuplicatorVIUC3_cast


def itkImageDuplicatorVIUC4_New():
    return itkImageDuplicatorVIUC4.New()

class itkImageDuplicatorVIUC4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorVIUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVIUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVIUC4_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVIUC4_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVIUC4_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVIUC4_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorVIUC4
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVIUC4_cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorVIUC4

        Create a new object of the class itkImageDuplicatorVIUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorVIUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorVIUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorVIUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorVIUC4 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorVIUC4_swigregister(itkImageDuplicatorVIUC4)
itkImageDuplicatorVIUC4___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorVIUC4___New_orig__
itkImageDuplicatorVIUC4_cast = _itkImageDuplicatorPython.itkImageDuplicatorVIUC4_cast


def itkImageDuplicatorVIUS2_New():
    return itkImageDuplicatorVIUS2.New()

class itkImageDuplicatorVIUS2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorVIUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVIUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVIUS2_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVIUS2_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVIUS2_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVIUS2_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorVIUS2
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVIUS2_cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorVIUS2

        Create a new object of the class itkImageDuplicatorVIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorVIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorVIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorVIUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorVIUS2 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorVIUS2_swigregister(itkImageDuplicatorVIUS2)
itkImageDuplicatorVIUS2___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorVIUS2___New_orig__
itkImageDuplicatorVIUS2_cast = _itkImageDuplicatorPython.itkImageDuplicatorVIUS2_cast


def itkImageDuplicatorVIUS3_New():
    return itkImageDuplicatorVIUS3.New()

class itkImageDuplicatorVIUS3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorVIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVIUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVIUS3_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVIUS3_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVIUS3_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVIUS3_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorVIUS3
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVIUS3_cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorVIUS3

        Create a new object of the class itkImageDuplicatorVIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorVIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorVIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorVIUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorVIUS3 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorVIUS3_swigregister(itkImageDuplicatorVIUS3)
itkImageDuplicatorVIUS3___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorVIUS3___New_orig__
itkImageDuplicatorVIUS3_cast = _itkImageDuplicatorPython.itkImageDuplicatorVIUS3_cast


def itkImageDuplicatorVIUS4_New():
    return itkImageDuplicatorVIUS4.New()

class itkImageDuplicatorVIUS4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkImageDuplicatorVIUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVIUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVIUS4_Clone)
    SetInputImage = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVIUS4_SetInputImage)
    GetOutput = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVIUS4_GetOutput)
    Update = _swig_new_instance_method(_itkImageDuplicatorPython.itkImageDuplicatorVIUS4_Update)
    __swig_destroy__ = _itkImageDuplicatorPython.delete_itkImageDuplicatorVIUS4
    cast = _swig_new_static_method(_itkImageDuplicatorPython.itkImageDuplicatorVIUS4_cast)

    def New(*args, **kargs):
        """New() -> itkImageDuplicatorVIUS4

        Create a new object of the class itkImageDuplicatorVIUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageDuplicatorVIUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageDuplicatorVIUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageDuplicatorVIUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageDuplicatorVIUS4 in _itkImageDuplicatorPython:
_itkImageDuplicatorPython.itkImageDuplicatorVIUS4_swigregister(itkImageDuplicatorVIUS4)
itkImageDuplicatorVIUS4___New_orig__ = _itkImageDuplicatorPython.itkImageDuplicatorVIUS4___New_orig__
itkImageDuplicatorVIUS4_cast = _itkImageDuplicatorPython.itkImageDuplicatorVIUS4_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def image_duplicator(*args,  debug: bool=..., reference_count: int=..., global_warning_display: bool=..., meta_data_dictionary=..., object_name: str=...,**kwargs):
    """Functional interface for ImageDuplicator"""
    import itk

    kwarg_typehints = { 'debug':debug,'reference_count':reference_count,'global_warning_display':global_warning_display,'meta_data_dictionary':meta_data_dictionary,'object_name':object_name }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ImageDuplicator.New(*args, **kwargs)

    return instance.__internal_call__()

def image_duplicator_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKCommon.ImageDuplicator
    image_duplicator.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    image_duplicator.__doc__ = filter_object.__doc__




