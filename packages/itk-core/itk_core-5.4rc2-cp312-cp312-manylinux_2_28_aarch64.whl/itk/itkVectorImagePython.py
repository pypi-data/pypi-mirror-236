# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKCommonPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkVectorImagePython
else:
    import _itkVectorImagePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkVectorImagePython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkVectorImagePython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkImagePython
import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkRGBPixelPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkRGBAPixelPython
import itk.itkIndexPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageRegionPython
import itk.itkVariableLengthVectorPython

def itkVectorImageCD2_New():
    return itkVectorImageCD2.New()

class itkVectorImageCD2(itk.itkImagePython.itkImageBase2):
    r"""Proxy of C++ itkVectorImageCD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorImagePython.itkVectorImageCD2___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD2_Clone)
    Allocate = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD2_Allocate)
    FillBuffer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD2_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD2_SetPixel)
    GetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD2_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD2_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD2_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD2_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD2_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD2_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD2_GetNeighborhoodAccessor)
    SetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD2_SetVectorLength)
    GetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD2_GetVectorLength)
    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageCD2
    cast = _swig_new_static_method(_itkVectorImagePython.itkVectorImageCD2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorImageCD2

        Create a new object of the class itkVectorImageCD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorImageCD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorImageCD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorImageCD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorImageCD2 in _itkVectorImagePython:
_itkVectorImagePython.itkVectorImageCD2_swigregister(itkVectorImageCD2)
itkVectorImageCD2___New_orig__ = _itkVectorImagePython.itkVectorImageCD2___New_orig__
itkVectorImageCD2_cast = _itkVectorImagePython.itkVectorImageCD2_cast


def itkVectorImageCD3_New():
    return itkVectorImageCD3.New()

class itkVectorImageCD3(itk.itkImagePython.itkImageBase3):
    r"""Proxy of C++ itkVectorImageCD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorImagePython.itkVectorImageCD3___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD3_Clone)
    Allocate = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD3_Allocate)
    FillBuffer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD3_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD3_SetPixel)
    GetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD3_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD3_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD3_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD3_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD3_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD3_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD3_GetNeighborhoodAccessor)
    SetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD3_SetVectorLength)
    GetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD3_GetVectorLength)
    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageCD3
    cast = _swig_new_static_method(_itkVectorImagePython.itkVectorImageCD3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorImageCD3

        Create a new object of the class itkVectorImageCD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorImageCD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorImageCD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorImageCD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorImageCD3 in _itkVectorImagePython:
_itkVectorImagePython.itkVectorImageCD3_swigregister(itkVectorImageCD3)
itkVectorImageCD3___New_orig__ = _itkVectorImagePython.itkVectorImageCD3___New_orig__
itkVectorImageCD3_cast = _itkVectorImagePython.itkVectorImageCD3_cast


def itkVectorImageCD4_New():
    return itkVectorImageCD4.New()

class itkVectorImageCD4(itk.itkImagePython.itkImageBase4):
    r"""Proxy of C++ itkVectorImageCD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorImagePython.itkVectorImageCD4___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD4_Clone)
    Allocate = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD4_Allocate)
    FillBuffer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD4_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD4_SetPixel)
    GetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD4_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD4_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD4_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD4_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD4_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD4_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD4_GetNeighborhoodAccessor)
    SetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD4_SetVectorLength)
    GetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCD4_GetVectorLength)
    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageCD4
    cast = _swig_new_static_method(_itkVectorImagePython.itkVectorImageCD4_cast)

    def New(*args, **kargs):
        """New() -> itkVectorImageCD4

        Create a new object of the class itkVectorImageCD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorImageCD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorImageCD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorImageCD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorImageCD4 in _itkVectorImagePython:
_itkVectorImagePython.itkVectorImageCD4_swigregister(itkVectorImageCD4)
itkVectorImageCD4___New_orig__ = _itkVectorImagePython.itkVectorImageCD4___New_orig__
itkVectorImageCD4_cast = _itkVectorImagePython.itkVectorImageCD4_cast


def itkVectorImageCF2_New():
    return itkVectorImageCF2.New()

class itkVectorImageCF2(itk.itkImagePython.itkImageBase2):
    r"""Proxy of C++ itkVectorImageCF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorImagePython.itkVectorImageCF2___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF2_Clone)
    Allocate = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF2_Allocate)
    FillBuffer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF2_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF2_SetPixel)
    GetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF2_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF2_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF2_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF2_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF2_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF2_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF2_GetNeighborhoodAccessor)
    SetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF2_SetVectorLength)
    GetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF2_GetVectorLength)
    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageCF2
    cast = _swig_new_static_method(_itkVectorImagePython.itkVectorImageCF2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorImageCF2

        Create a new object of the class itkVectorImageCF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorImageCF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorImageCF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorImageCF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorImageCF2 in _itkVectorImagePython:
_itkVectorImagePython.itkVectorImageCF2_swigregister(itkVectorImageCF2)
itkVectorImageCF2___New_orig__ = _itkVectorImagePython.itkVectorImageCF2___New_orig__
itkVectorImageCF2_cast = _itkVectorImagePython.itkVectorImageCF2_cast


def itkVectorImageCF3_New():
    return itkVectorImageCF3.New()

class itkVectorImageCF3(itk.itkImagePython.itkImageBase3):
    r"""Proxy of C++ itkVectorImageCF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorImagePython.itkVectorImageCF3___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF3_Clone)
    Allocate = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF3_Allocate)
    FillBuffer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF3_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF3_SetPixel)
    GetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF3_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF3_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF3_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF3_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF3_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF3_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF3_GetNeighborhoodAccessor)
    SetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF3_SetVectorLength)
    GetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF3_GetVectorLength)
    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageCF3
    cast = _swig_new_static_method(_itkVectorImagePython.itkVectorImageCF3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorImageCF3

        Create a new object of the class itkVectorImageCF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorImageCF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorImageCF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorImageCF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorImageCF3 in _itkVectorImagePython:
_itkVectorImagePython.itkVectorImageCF3_swigregister(itkVectorImageCF3)
itkVectorImageCF3___New_orig__ = _itkVectorImagePython.itkVectorImageCF3___New_orig__
itkVectorImageCF3_cast = _itkVectorImagePython.itkVectorImageCF3_cast


def itkVectorImageCF4_New():
    return itkVectorImageCF4.New()

class itkVectorImageCF4(itk.itkImagePython.itkImageBase4):
    r"""Proxy of C++ itkVectorImageCF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorImagePython.itkVectorImageCF4___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF4_Clone)
    Allocate = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF4_Allocate)
    FillBuffer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF4_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF4_SetPixel)
    GetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF4_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF4_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF4_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF4_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF4_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF4_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF4_GetNeighborhoodAccessor)
    SetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF4_SetVectorLength)
    GetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageCF4_GetVectorLength)
    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageCF4
    cast = _swig_new_static_method(_itkVectorImagePython.itkVectorImageCF4_cast)

    def New(*args, **kargs):
        """New() -> itkVectorImageCF4

        Create a new object of the class itkVectorImageCF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorImageCF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorImageCF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorImageCF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorImageCF4 in _itkVectorImagePython:
_itkVectorImagePython.itkVectorImageCF4_swigregister(itkVectorImageCF4)
itkVectorImageCF4___New_orig__ = _itkVectorImagePython.itkVectorImageCF4___New_orig__
itkVectorImageCF4_cast = _itkVectorImagePython.itkVectorImageCF4_cast


def itkVectorImageD2_New():
    return itkVectorImageD2.New()

class itkVectorImageD2(itk.itkImagePython.itkImageBase2):
    r"""Proxy of C++ itkVectorImageD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorImagePython.itkVectorImageD2___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD2_Clone)
    Allocate = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD2_Allocate)
    FillBuffer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD2_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD2_SetPixel)
    GetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD2_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD2_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD2_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD2_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD2_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD2_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD2_GetNeighborhoodAccessor)
    SetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD2_SetVectorLength)
    GetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD2_GetVectorLength)
    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageD2
    cast = _swig_new_static_method(_itkVectorImagePython.itkVectorImageD2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorImageD2

        Create a new object of the class itkVectorImageD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorImageD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorImageD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorImageD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorImageD2 in _itkVectorImagePython:
_itkVectorImagePython.itkVectorImageD2_swigregister(itkVectorImageD2)
itkVectorImageD2___New_orig__ = _itkVectorImagePython.itkVectorImageD2___New_orig__
itkVectorImageD2_cast = _itkVectorImagePython.itkVectorImageD2_cast


def itkVectorImageD3_New():
    return itkVectorImageD3.New()

class itkVectorImageD3(itk.itkImagePython.itkImageBase3):
    r"""Proxy of C++ itkVectorImageD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorImagePython.itkVectorImageD3___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD3_Clone)
    Allocate = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD3_Allocate)
    FillBuffer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD3_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD3_SetPixel)
    GetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD3_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD3_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD3_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD3_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD3_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD3_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD3_GetNeighborhoodAccessor)
    SetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD3_SetVectorLength)
    GetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD3_GetVectorLength)
    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageD3
    cast = _swig_new_static_method(_itkVectorImagePython.itkVectorImageD3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorImageD3

        Create a new object of the class itkVectorImageD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorImageD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorImageD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorImageD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorImageD3 in _itkVectorImagePython:
_itkVectorImagePython.itkVectorImageD3_swigregister(itkVectorImageD3)
itkVectorImageD3___New_orig__ = _itkVectorImagePython.itkVectorImageD3___New_orig__
itkVectorImageD3_cast = _itkVectorImagePython.itkVectorImageD3_cast


def itkVectorImageD4_New():
    return itkVectorImageD4.New()

class itkVectorImageD4(itk.itkImagePython.itkImageBase4):
    r"""Proxy of C++ itkVectorImageD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorImagePython.itkVectorImageD4___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD4_Clone)
    Allocate = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD4_Allocate)
    FillBuffer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD4_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD4_SetPixel)
    GetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD4_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD4_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD4_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD4_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD4_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD4_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD4_GetNeighborhoodAccessor)
    SetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD4_SetVectorLength)
    GetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageD4_GetVectorLength)
    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageD4
    cast = _swig_new_static_method(_itkVectorImagePython.itkVectorImageD4_cast)

    def New(*args, **kargs):
        """New() -> itkVectorImageD4

        Create a new object of the class itkVectorImageD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorImageD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorImageD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorImageD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorImageD4 in _itkVectorImagePython:
_itkVectorImagePython.itkVectorImageD4_swigregister(itkVectorImageD4)
itkVectorImageD4___New_orig__ = _itkVectorImagePython.itkVectorImageD4___New_orig__
itkVectorImageD4_cast = _itkVectorImagePython.itkVectorImageD4_cast


def itkVectorImageF2_New():
    return itkVectorImageF2.New()

class itkVectorImageF2(itk.itkImagePython.itkImageBase2):
    r"""Proxy of C++ itkVectorImageF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorImagePython.itkVectorImageF2___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF2_Clone)
    Allocate = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF2_Allocate)
    FillBuffer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF2_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF2_SetPixel)
    GetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF2_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF2_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF2_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF2_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF2_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF2_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF2_GetNeighborhoodAccessor)
    SetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF2_SetVectorLength)
    GetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF2_GetVectorLength)
    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageF2
    cast = _swig_new_static_method(_itkVectorImagePython.itkVectorImageF2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorImageF2

        Create a new object of the class itkVectorImageF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorImageF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorImageF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorImageF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorImageF2 in _itkVectorImagePython:
_itkVectorImagePython.itkVectorImageF2_swigregister(itkVectorImageF2)
itkVectorImageF2___New_orig__ = _itkVectorImagePython.itkVectorImageF2___New_orig__
itkVectorImageF2_cast = _itkVectorImagePython.itkVectorImageF2_cast


def itkVectorImageF3_New():
    return itkVectorImageF3.New()

class itkVectorImageF3(itk.itkImagePython.itkImageBase3):
    r"""Proxy of C++ itkVectorImageF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorImagePython.itkVectorImageF3___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF3_Clone)
    Allocate = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF3_Allocate)
    FillBuffer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF3_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF3_SetPixel)
    GetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF3_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF3_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF3_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF3_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF3_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF3_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF3_GetNeighborhoodAccessor)
    SetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF3_SetVectorLength)
    GetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF3_GetVectorLength)
    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageF3
    cast = _swig_new_static_method(_itkVectorImagePython.itkVectorImageF3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorImageF3

        Create a new object of the class itkVectorImageF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorImageF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorImageF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorImageF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorImageF3 in _itkVectorImagePython:
_itkVectorImagePython.itkVectorImageF3_swigregister(itkVectorImageF3)
itkVectorImageF3___New_orig__ = _itkVectorImagePython.itkVectorImageF3___New_orig__
itkVectorImageF3_cast = _itkVectorImagePython.itkVectorImageF3_cast


def itkVectorImageF4_New():
    return itkVectorImageF4.New()

class itkVectorImageF4(itk.itkImagePython.itkImageBase4):
    r"""Proxy of C++ itkVectorImageF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorImagePython.itkVectorImageF4___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF4_Clone)
    Allocate = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF4_Allocate)
    FillBuffer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF4_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF4_SetPixel)
    GetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF4_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF4_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF4_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF4_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF4_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF4_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF4_GetNeighborhoodAccessor)
    SetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF4_SetVectorLength)
    GetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageF4_GetVectorLength)
    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageF4
    cast = _swig_new_static_method(_itkVectorImagePython.itkVectorImageF4_cast)

    def New(*args, **kargs):
        """New() -> itkVectorImageF4

        Create a new object of the class itkVectorImageF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorImageF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorImageF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorImageF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorImageF4 in _itkVectorImagePython:
_itkVectorImagePython.itkVectorImageF4_swigregister(itkVectorImageF4)
itkVectorImageF4___New_orig__ = _itkVectorImagePython.itkVectorImageF4___New_orig__
itkVectorImageF4_cast = _itkVectorImagePython.itkVectorImageF4_cast


def itkVectorImageSS2_New():
    return itkVectorImageSS2.New()

class itkVectorImageSS2(itk.itkImagePython.itkImageBase2):
    r"""Proxy of C++ itkVectorImageSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorImagePython.itkVectorImageSS2___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS2_Clone)
    Allocate = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS2_Allocate)
    FillBuffer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS2_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS2_SetPixel)
    GetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS2_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS2_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS2_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS2_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS2_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS2_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS2_GetNeighborhoodAccessor)
    SetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS2_SetVectorLength)
    GetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS2_GetVectorLength)
    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageSS2
    cast = _swig_new_static_method(_itkVectorImagePython.itkVectorImageSS2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorImageSS2

        Create a new object of the class itkVectorImageSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorImageSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorImageSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorImageSS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorImageSS2 in _itkVectorImagePython:
_itkVectorImagePython.itkVectorImageSS2_swigregister(itkVectorImageSS2)
itkVectorImageSS2___New_orig__ = _itkVectorImagePython.itkVectorImageSS2___New_orig__
itkVectorImageSS2_cast = _itkVectorImagePython.itkVectorImageSS2_cast


def itkVectorImageSS3_New():
    return itkVectorImageSS3.New()

class itkVectorImageSS3(itk.itkImagePython.itkImageBase3):
    r"""Proxy of C++ itkVectorImageSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorImagePython.itkVectorImageSS3___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS3_Clone)
    Allocate = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS3_Allocate)
    FillBuffer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS3_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS3_SetPixel)
    GetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS3_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS3_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS3_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS3_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS3_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS3_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS3_GetNeighborhoodAccessor)
    SetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS3_SetVectorLength)
    GetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS3_GetVectorLength)
    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageSS3
    cast = _swig_new_static_method(_itkVectorImagePython.itkVectorImageSS3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorImageSS3

        Create a new object of the class itkVectorImageSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorImageSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorImageSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorImageSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorImageSS3 in _itkVectorImagePython:
_itkVectorImagePython.itkVectorImageSS3_swigregister(itkVectorImageSS3)
itkVectorImageSS3___New_orig__ = _itkVectorImagePython.itkVectorImageSS3___New_orig__
itkVectorImageSS3_cast = _itkVectorImagePython.itkVectorImageSS3_cast


def itkVectorImageSS4_New():
    return itkVectorImageSS4.New()

class itkVectorImageSS4(itk.itkImagePython.itkImageBase4):
    r"""Proxy of C++ itkVectorImageSS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorImagePython.itkVectorImageSS4___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS4_Clone)
    Allocate = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS4_Allocate)
    FillBuffer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS4_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS4_SetPixel)
    GetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS4_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS4_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS4_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS4_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS4_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS4_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS4_GetNeighborhoodAccessor)
    SetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS4_SetVectorLength)
    GetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageSS4_GetVectorLength)
    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageSS4
    cast = _swig_new_static_method(_itkVectorImagePython.itkVectorImageSS4_cast)

    def New(*args, **kargs):
        """New() -> itkVectorImageSS4

        Create a new object of the class itkVectorImageSS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorImageSS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorImageSS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorImageSS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorImageSS4 in _itkVectorImagePython:
_itkVectorImagePython.itkVectorImageSS4_swigregister(itkVectorImageSS4)
itkVectorImageSS4___New_orig__ = _itkVectorImagePython.itkVectorImageSS4___New_orig__
itkVectorImageSS4_cast = _itkVectorImagePython.itkVectorImageSS4_cast


def itkVectorImageUC2_New():
    return itkVectorImageUC2.New()

class itkVectorImageUC2(itk.itkImagePython.itkImageBase2):
    r"""Proxy of C++ itkVectorImageUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorImagePython.itkVectorImageUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC2_Clone)
    Allocate = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC2_Allocate)
    FillBuffer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC2_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC2_SetPixel)
    GetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC2_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC2_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC2_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC2_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC2_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC2_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC2_GetNeighborhoodAccessor)
    SetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC2_SetVectorLength)
    GetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC2_GetVectorLength)
    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageUC2
    cast = _swig_new_static_method(_itkVectorImagePython.itkVectorImageUC2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorImageUC2

        Create a new object of the class itkVectorImageUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorImageUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorImageUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorImageUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorImageUC2 in _itkVectorImagePython:
_itkVectorImagePython.itkVectorImageUC2_swigregister(itkVectorImageUC2)
itkVectorImageUC2___New_orig__ = _itkVectorImagePython.itkVectorImageUC2___New_orig__
itkVectorImageUC2_cast = _itkVectorImagePython.itkVectorImageUC2_cast


def itkVectorImageUC3_New():
    return itkVectorImageUC3.New()

class itkVectorImageUC3(itk.itkImagePython.itkImageBase3):
    r"""Proxy of C++ itkVectorImageUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorImagePython.itkVectorImageUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC3_Clone)
    Allocate = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC3_Allocate)
    FillBuffer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC3_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC3_SetPixel)
    GetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC3_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC3_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC3_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC3_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC3_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC3_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC3_GetNeighborhoodAccessor)
    SetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC3_SetVectorLength)
    GetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC3_GetVectorLength)
    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageUC3
    cast = _swig_new_static_method(_itkVectorImagePython.itkVectorImageUC3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorImageUC3

        Create a new object of the class itkVectorImageUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorImageUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorImageUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorImageUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorImageUC3 in _itkVectorImagePython:
_itkVectorImagePython.itkVectorImageUC3_swigregister(itkVectorImageUC3)
itkVectorImageUC3___New_orig__ = _itkVectorImagePython.itkVectorImageUC3___New_orig__
itkVectorImageUC3_cast = _itkVectorImagePython.itkVectorImageUC3_cast


def itkVectorImageUC4_New():
    return itkVectorImageUC4.New()

class itkVectorImageUC4(itk.itkImagePython.itkImageBase4):
    r"""Proxy of C++ itkVectorImageUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorImagePython.itkVectorImageUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC4_Clone)
    Allocate = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC4_Allocate)
    FillBuffer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC4_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC4_SetPixel)
    GetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC4_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC4_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC4_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC4_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC4_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC4_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC4_GetNeighborhoodAccessor)
    SetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC4_SetVectorLength)
    GetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUC4_GetVectorLength)
    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageUC4
    cast = _swig_new_static_method(_itkVectorImagePython.itkVectorImageUC4_cast)

    def New(*args, **kargs):
        """New() -> itkVectorImageUC4

        Create a new object of the class itkVectorImageUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorImageUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorImageUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorImageUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorImageUC4 in _itkVectorImagePython:
_itkVectorImagePython.itkVectorImageUC4_swigregister(itkVectorImageUC4)
itkVectorImageUC4___New_orig__ = _itkVectorImagePython.itkVectorImageUC4___New_orig__
itkVectorImageUC4_cast = _itkVectorImagePython.itkVectorImageUC4_cast


def itkVectorImageUS2_New():
    return itkVectorImageUS2.New()

class itkVectorImageUS2(itk.itkImagePython.itkImageBase2):
    r"""Proxy of C++ itkVectorImageUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorImagePython.itkVectorImageUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS2_Clone)
    Allocate = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS2_Allocate)
    FillBuffer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS2_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS2_SetPixel)
    GetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS2_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS2_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS2_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS2_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS2_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS2_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS2_GetNeighborhoodAccessor)
    SetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS2_SetVectorLength)
    GetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS2_GetVectorLength)
    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageUS2
    cast = _swig_new_static_method(_itkVectorImagePython.itkVectorImageUS2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorImageUS2

        Create a new object of the class itkVectorImageUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorImageUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorImageUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorImageUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorImageUS2 in _itkVectorImagePython:
_itkVectorImagePython.itkVectorImageUS2_swigregister(itkVectorImageUS2)
itkVectorImageUS2___New_orig__ = _itkVectorImagePython.itkVectorImageUS2___New_orig__
itkVectorImageUS2_cast = _itkVectorImagePython.itkVectorImageUS2_cast


def itkVectorImageUS3_New():
    return itkVectorImageUS3.New()

class itkVectorImageUS3(itk.itkImagePython.itkImageBase3):
    r"""Proxy of C++ itkVectorImageUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorImagePython.itkVectorImageUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS3_Clone)
    Allocate = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS3_Allocate)
    FillBuffer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS3_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS3_SetPixel)
    GetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS3_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS3_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS3_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS3_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS3_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS3_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS3_GetNeighborhoodAccessor)
    SetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS3_SetVectorLength)
    GetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS3_GetVectorLength)
    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageUS3
    cast = _swig_new_static_method(_itkVectorImagePython.itkVectorImageUS3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorImageUS3

        Create a new object of the class itkVectorImageUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorImageUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorImageUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorImageUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorImageUS3 in _itkVectorImagePython:
_itkVectorImagePython.itkVectorImageUS3_swigregister(itkVectorImageUS3)
itkVectorImageUS3___New_orig__ = _itkVectorImagePython.itkVectorImageUS3___New_orig__
itkVectorImageUS3_cast = _itkVectorImagePython.itkVectorImageUS3_cast


def itkVectorImageUS4_New():
    return itkVectorImageUS4.New()

class itkVectorImageUS4(itk.itkImagePython.itkImageBase4):
    r"""Proxy of C++ itkVectorImageUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkVectorImagePython.itkVectorImageUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS4_Clone)
    Allocate = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS4_Allocate)
    FillBuffer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS4_FillBuffer)
    SetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS4_SetPixel)
    GetPixel = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS4_GetPixel)
    GetBufferPointer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS4_GetBufferPointer)
    GetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS4_GetPixelContainer)
    SetPixelContainer = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS4_SetPixelContainer)
    Graft = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS4_Graft)
    GetPixelAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS4_GetPixelAccessor)
    GetNeighborhoodAccessor = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS4_GetNeighborhoodAccessor)
    SetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS4_SetVectorLength)
    GetVectorLength = _swig_new_instance_method(_itkVectorImagePython.itkVectorImageUS4_GetVectorLength)
    __swig_destroy__ = _itkVectorImagePython.delete_itkVectorImageUS4
    cast = _swig_new_static_method(_itkVectorImagePython.itkVectorImageUS4_cast)

    def New(*args, **kargs):
        """New() -> itkVectorImageUS4

        Create a new object of the class itkVectorImageUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorImageUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorImageUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorImageUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorImageUS4 in _itkVectorImagePython:
_itkVectorImagePython.itkVectorImageUS4_swigregister(itkVectorImageUS4)
itkVectorImageUS4___New_orig__ = _itkVectorImagePython.itkVectorImageUS4___New_orig__
itkVectorImageUS4_cast = _itkVectorImagePython.itkVectorImageUS4_cast



