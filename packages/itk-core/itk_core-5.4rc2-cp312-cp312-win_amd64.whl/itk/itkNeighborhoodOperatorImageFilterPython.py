# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageFilterBasePython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkNeighborhoodOperatorImageFilterPython
else:
    import _itkNeighborhoodOperatorImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkNeighborhoodOperatorImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkNeighborhoodOperatorImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkOffsetPython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkImageToImageFilterAPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython
import itk.itkNeighborhoodPython
class itkImageBoundaryConditionD2D2(object):
    r"""Proxy of C++ itkImageBoundaryConditionD2D2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetNameOfClass = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionD2D2_GetNameOfClass)
    Print = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionD2D2_Print)
    __call__ = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionD2D2___call__)
    __swig_destroy__ = _itkNeighborhoodOperatorImageFilterPython.delete_itkImageBoundaryConditionD2D2
    RequiresCompleteNeighborhood = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionD2D2_RequiresCompleteNeighborhood)
    GetInputRequestedRegion = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionD2D2_GetInputRequestedRegion)
    GetPixel = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionD2D2_GetPixel)

# Register itkImageBoundaryConditionD2D2 in _itkNeighborhoodOperatorImageFilterPython:
_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionD2D2_swigregister(itkImageBoundaryConditionD2D2)

class itkImageBoundaryConditionD3D3(object):
    r"""Proxy of C++ itkImageBoundaryConditionD3D3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetNameOfClass = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionD3D3_GetNameOfClass)
    Print = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionD3D3_Print)
    __call__ = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionD3D3___call__)
    __swig_destroy__ = _itkNeighborhoodOperatorImageFilterPython.delete_itkImageBoundaryConditionD3D3
    RequiresCompleteNeighborhood = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionD3D3_RequiresCompleteNeighborhood)
    GetInputRequestedRegion = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionD3D3_GetInputRequestedRegion)
    GetPixel = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionD3D3_GetPixel)

# Register itkImageBoundaryConditionD3D3 in _itkNeighborhoodOperatorImageFilterPython:
_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionD3D3_swigregister(itkImageBoundaryConditionD3D3)

class itkImageBoundaryConditionD4D4(object):
    r"""Proxy of C++ itkImageBoundaryConditionD4D4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetNameOfClass = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionD4D4_GetNameOfClass)
    Print = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionD4D4_Print)
    __call__ = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionD4D4___call__)
    __swig_destroy__ = _itkNeighborhoodOperatorImageFilterPython.delete_itkImageBoundaryConditionD4D4
    RequiresCompleteNeighborhood = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionD4D4_RequiresCompleteNeighborhood)
    GetInputRequestedRegion = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionD4D4_GetInputRequestedRegion)
    GetPixel = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionD4D4_GetPixel)

# Register itkImageBoundaryConditionD4D4 in _itkNeighborhoodOperatorImageFilterPython:
_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionD4D4_swigregister(itkImageBoundaryConditionD4D4)

class itkImageBoundaryConditionF2F2(object):
    r"""Proxy of C++ itkImageBoundaryConditionF2F2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetNameOfClass = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionF2F2_GetNameOfClass)
    Print = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionF2F2_Print)
    __call__ = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionF2F2___call__)
    __swig_destroy__ = _itkNeighborhoodOperatorImageFilterPython.delete_itkImageBoundaryConditionF2F2
    RequiresCompleteNeighborhood = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionF2F2_RequiresCompleteNeighborhood)
    GetInputRequestedRegion = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionF2F2_GetInputRequestedRegion)
    GetPixel = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionF2F2_GetPixel)

# Register itkImageBoundaryConditionF2F2 in _itkNeighborhoodOperatorImageFilterPython:
_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionF2F2_swigregister(itkImageBoundaryConditionF2F2)

class itkImageBoundaryConditionF3F3(object):
    r"""Proxy of C++ itkImageBoundaryConditionF3F3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetNameOfClass = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionF3F3_GetNameOfClass)
    Print = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionF3F3_Print)
    __call__ = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionF3F3___call__)
    __swig_destroy__ = _itkNeighborhoodOperatorImageFilterPython.delete_itkImageBoundaryConditionF3F3
    RequiresCompleteNeighborhood = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionF3F3_RequiresCompleteNeighborhood)
    GetInputRequestedRegion = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionF3F3_GetInputRequestedRegion)
    GetPixel = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionF3F3_GetPixel)

# Register itkImageBoundaryConditionF3F3 in _itkNeighborhoodOperatorImageFilterPython:
_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionF3F3_swigregister(itkImageBoundaryConditionF3F3)

class itkImageBoundaryConditionF4F4(object):
    r"""Proxy of C++ itkImageBoundaryConditionF4F4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetNameOfClass = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionF4F4_GetNameOfClass)
    Print = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionF4F4_Print)
    __call__ = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionF4F4___call__)
    __swig_destroy__ = _itkNeighborhoodOperatorImageFilterPython.delete_itkImageBoundaryConditionF4F4
    RequiresCompleteNeighborhood = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionF4F4_RequiresCompleteNeighborhood)
    GetInputRequestedRegion = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionF4F4_GetInputRequestedRegion)
    GetPixel = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionF4F4_GetPixel)

# Register itkImageBoundaryConditionF4F4 in _itkNeighborhoodOperatorImageFilterPython:
_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionF4F4_swigregister(itkImageBoundaryConditionF4F4)

class itkImageBoundaryConditionSS2SS2(object):
    r"""Proxy of C++ itkImageBoundaryConditionSS2SS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetNameOfClass = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionSS2SS2_GetNameOfClass)
    Print = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionSS2SS2_Print)
    __call__ = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionSS2SS2___call__)
    __swig_destroy__ = _itkNeighborhoodOperatorImageFilterPython.delete_itkImageBoundaryConditionSS2SS2
    RequiresCompleteNeighborhood = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionSS2SS2_RequiresCompleteNeighborhood)
    GetInputRequestedRegion = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionSS2SS2_GetInputRequestedRegion)
    GetPixel = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionSS2SS2_GetPixel)

# Register itkImageBoundaryConditionSS2SS2 in _itkNeighborhoodOperatorImageFilterPython:
_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionSS2SS2_swigregister(itkImageBoundaryConditionSS2SS2)

class itkImageBoundaryConditionSS3SS3(object):
    r"""Proxy of C++ itkImageBoundaryConditionSS3SS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetNameOfClass = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionSS3SS3_GetNameOfClass)
    Print = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionSS3SS3_Print)
    __call__ = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionSS3SS3___call__)
    __swig_destroy__ = _itkNeighborhoodOperatorImageFilterPython.delete_itkImageBoundaryConditionSS3SS3
    RequiresCompleteNeighborhood = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionSS3SS3_RequiresCompleteNeighborhood)
    GetInputRequestedRegion = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionSS3SS3_GetInputRequestedRegion)
    GetPixel = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionSS3SS3_GetPixel)

# Register itkImageBoundaryConditionSS3SS3 in _itkNeighborhoodOperatorImageFilterPython:
_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionSS3SS3_swigregister(itkImageBoundaryConditionSS3SS3)

class itkImageBoundaryConditionSS4SS4(object):
    r"""Proxy of C++ itkImageBoundaryConditionSS4SS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetNameOfClass = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionSS4SS4_GetNameOfClass)
    Print = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionSS4SS4_Print)
    __call__ = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionSS4SS4___call__)
    __swig_destroy__ = _itkNeighborhoodOperatorImageFilterPython.delete_itkImageBoundaryConditionSS4SS4
    RequiresCompleteNeighborhood = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionSS4SS4_RequiresCompleteNeighborhood)
    GetInputRequestedRegion = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionSS4SS4_GetInputRequestedRegion)
    GetPixel = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionSS4SS4_GetPixel)

# Register itkImageBoundaryConditionSS4SS4 in _itkNeighborhoodOperatorImageFilterPython:
_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionSS4SS4_swigregister(itkImageBoundaryConditionSS4SS4)

class itkImageBoundaryConditionUC2UC2(object):
    r"""Proxy of C++ itkImageBoundaryConditionUC2UC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetNameOfClass = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUC2UC2_GetNameOfClass)
    Print = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUC2UC2_Print)
    __call__ = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUC2UC2___call__)
    __swig_destroy__ = _itkNeighborhoodOperatorImageFilterPython.delete_itkImageBoundaryConditionUC2UC2
    RequiresCompleteNeighborhood = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUC2UC2_RequiresCompleteNeighborhood)
    GetInputRequestedRegion = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUC2UC2_GetInputRequestedRegion)
    GetPixel = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUC2UC2_GetPixel)

# Register itkImageBoundaryConditionUC2UC2 in _itkNeighborhoodOperatorImageFilterPython:
_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUC2UC2_swigregister(itkImageBoundaryConditionUC2UC2)

class itkImageBoundaryConditionUC3UC3(object):
    r"""Proxy of C++ itkImageBoundaryConditionUC3UC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetNameOfClass = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUC3UC3_GetNameOfClass)
    Print = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUC3UC3_Print)
    __call__ = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUC3UC3___call__)
    __swig_destroy__ = _itkNeighborhoodOperatorImageFilterPython.delete_itkImageBoundaryConditionUC3UC3
    RequiresCompleteNeighborhood = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUC3UC3_RequiresCompleteNeighborhood)
    GetInputRequestedRegion = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUC3UC3_GetInputRequestedRegion)
    GetPixel = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUC3UC3_GetPixel)

# Register itkImageBoundaryConditionUC3UC3 in _itkNeighborhoodOperatorImageFilterPython:
_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUC3UC3_swigregister(itkImageBoundaryConditionUC3UC3)

class itkImageBoundaryConditionUC4UC4(object):
    r"""Proxy of C++ itkImageBoundaryConditionUC4UC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetNameOfClass = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUC4UC4_GetNameOfClass)
    Print = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUC4UC4_Print)
    __call__ = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUC4UC4___call__)
    __swig_destroy__ = _itkNeighborhoodOperatorImageFilterPython.delete_itkImageBoundaryConditionUC4UC4
    RequiresCompleteNeighborhood = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUC4UC4_RequiresCompleteNeighborhood)
    GetInputRequestedRegion = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUC4UC4_GetInputRequestedRegion)
    GetPixel = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUC4UC4_GetPixel)

# Register itkImageBoundaryConditionUC4UC4 in _itkNeighborhoodOperatorImageFilterPython:
_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUC4UC4_swigregister(itkImageBoundaryConditionUC4UC4)

class itkImageBoundaryConditionUS2US2(object):
    r"""Proxy of C++ itkImageBoundaryConditionUS2US2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetNameOfClass = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUS2US2_GetNameOfClass)
    Print = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUS2US2_Print)
    __call__ = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUS2US2___call__)
    __swig_destroy__ = _itkNeighborhoodOperatorImageFilterPython.delete_itkImageBoundaryConditionUS2US2
    RequiresCompleteNeighborhood = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUS2US2_RequiresCompleteNeighborhood)
    GetInputRequestedRegion = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUS2US2_GetInputRequestedRegion)
    GetPixel = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUS2US2_GetPixel)

# Register itkImageBoundaryConditionUS2US2 in _itkNeighborhoodOperatorImageFilterPython:
_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUS2US2_swigregister(itkImageBoundaryConditionUS2US2)

class itkImageBoundaryConditionUS3US3(object):
    r"""Proxy of C++ itkImageBoundaryConditionUS3US3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetNameOfClass = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUS3US3_GetNameOfClass)
    Print = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUS3US3_Print)
    __call__ = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUS3US3___call__)
    __swig_destroy__ = _itkNeighborhoodOperatorImageFilterPython.delete_itkImageBoundaryConditionUS3US3
    RequiresCompleteNeighborhood = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUS3US3_RequiresCompleteNeighborhood)
    GetInputRequestedRegion = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUS3US3_GetInputRequestedRegion)
    GetPixel = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUS3US3_GetPixel)

# Register itkImageBoundaryConditionUS3US3 in _itkNeighborhoodOperatorImageFilterPython:
_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUS3US3_swigregister(itkImageBoundaryConditionUS3US3)

class itkImageBoundaryConditionUS4US4(object):
    r"""Proxy of C++ itkImageBoundaryConditionUS4US4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    GetNameOfClass = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUS4US4_GetNameOfClass)
    Print = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUS4US4_Print)
    __call__ = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUS4US4___call__)
    __swig_destroy__ = _itkNeighborhoodOperatorImageFilterPython.delete_itkImageBoundaryConditionUS4US4
    RequiresCompleteNeighborhood = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUS4US4_RequiresCompleteNeighborhood)
    GetInputRequestedRegion = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUS4US4_GetInputRequestedRegion)
    GetPixel = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUS4US4_GetPixel)

# Register itkImageBoundaryConditionUS4US4 in _itkNeighborhoodOperatorImageFilterPython:
_itkNeighborhoodOperatorImageFilterPython.itkImageBoundaryConditionUS4US4_swigregister(itkImageBoundaryConditionUS4US4)


def itkNeighborhoodOperatorImageFilterD2D2D_New():
    return itkNeighborhoodOperatorImageFilterD2D2D.New()

class itkNeighborhoodOperatorImageFilterD2D2D(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkNeighborhoodOperatorImageFilterD2D2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD2D2D___New_orig__)
    Clone = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD2D2D_Clone)
    SetOperator = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD2D2D_SetOperator)
    GetOperator = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD2D2D_GetOperator)
    OverrideBoundaryCondition = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD2D2D_OverrideBoundaryCondition)
    GetBoundaryCondition = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD2D2D_GetBoundaryCondition)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD2D2D_GenerateInputRequestedRegion)
    SameDimensionCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD2D2D_SameDimensionCheck
    
    OperatorConvertibleToOutputCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD2D2D_OperatorConvertibleToOutputCheck
    
    InputConvertibleToOperatorCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD2D2D_InputConvertibleToOperatorCheck
    
    OperatorMultiplyOperatorCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD2D2D_OperatorMultiplyOperatorCheck
    
    OperatorAdditiveOperatorsCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD2D2D_OperatorAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkNeighborhoodOperatorImageFilterPython.delete_itkNeighborhoodOperatorImageFilterD2D2D
    cast = _swig_new_static_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD2D2D_cast)

    def New(*args, **kargs):
        """New() -> itkNeighborhoodOperatorImageFilterD2D2D

        Create a new object of the class itkNeighborhoodOperatorImageFilterD2D2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNeighborhoodOperatorImageFilterD2D2D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNeighborhoodOperatorImageFilterD2D2D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNeighborhoodOperatorImageFilterD2D2D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNeighborhoodOperatorImageFilterD2D2D in _itkNeighborhoodOperatorImageFilterPython:
_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD2D2D_swigregister(itkNeighborhoodOperatorImageFilterD2D2D)
itkNeighborhoodOperatorImageFilterD2D2D___New_orig__ = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD2D2D___New_orig__
itkNeighborhoodOperatorImageFilterD2D2D_cast = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD2D2D_cast


def itkNeighborhoodOperatorImageFilterD3D3D_New():
    return itkNeighborhoodOperatorImageFilterD3D3D.New()

class itkNeighborhoodOperatorImageFilterD3D3D(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkNeighborhoodOperatorImageFilterD3D3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD3D3D___New_orig__)
    Clone = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD3D3D_Clone)
    SetOperator = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD3D3D_SetOperator)
    GetOperator = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD3D3D_GetOperator)
    OverrideBoundaryCondition = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD3D3D_OverrideBoundaryCondition)
    GetBoundaryCondition = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD3D3D_GetBoundaryCondition)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD3D3D_GenerateInputRequestedRegion)
    SameDimensionCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD3D3D_SameDimensionCheck
    
    OperatorConvertibleToOutputCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD3D3D_OperatorConvertibleToOutputCheck
    
    InputConvertibleToOperatorCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD3D3D_InputConvertibleToOperatorCheck
    
    OperatorMultiplyOperatorCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD3D3D_OperatorMultiplyOperatorCheck
    
    OperatorAdditiveOperatorsCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD3D3D_OperatorAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkNeighborhoodOperatorImageFilterPython.delete_itkNeighborhoodOperatorImageFilterD3D3D
    cast = _swig_new_static_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD3D3D_cast)

    def New(*args, **kargs):
        """New() -> itkNeighborhoodOperatorImageFilterD3D3D

        Create a new object of the class itkNeighborhoodOperatorImageFilterD3D3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNeighborhoodOperatorImageFilterD3D3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNeighborhoodOperatorImageFilterD3D3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNeighborhoodOperatorImageFilterD3D3D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNeighborhoodOperatorImageFilterD3D3D in _itkNeighborhoodOperatorImageFilterPython:
_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD3D3D_swigregister(itkNeighborhoodOperatorImageFilterD3D3D)
itkNeighborhoodOperatorImageFilterD3D3D___New_orig__ = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD3D3D___New_orig__
itkNeighborhoodOperatorImageFilterD3D3D_cast = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD3D3D_cast


def itkNeighborhoodOperatorImageFilterD4D4D_New():
    return itkNeighborhoodOperatorImageFilterD4D4D.New()

class itkNeighborhoodOperatorImageFilterD4D4D(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkNeighborhoodOperatorImageFilterD4D4D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD4D4D___New_orig__)
    Clone = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD4D4D_Clone)
    SetOperator = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD4D4D_SetOperator)
    GetOperator = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD4D4D_GetOperator)
    OverrideBoundaryCondition = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD4D4D_OverrideBoundaryCondition)
    GetBoundaryCondition = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD4D4D_GetBoundaryCondition)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD4D4D_GenerateInputRequestedRegion)
    SameDimensionCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD4D4D_SameDimensionCheck
    
    OperatorConvertibleToOutputCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD4D4D_OperatorConvertibleToOutputCheck
    
    InputConvertibleToOperatorCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD4D4D_InputConvertibleToOperatorCheck
    
    OperatorMultiplyOperatorCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD4D4D_OperatorMultiplyOperatorCheck
    
    OperatorAdditiveOperatorsCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD4D4D_OperatorAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkNeighborhoodOperatorImageFilterPython.delete_itkNeighborhoodOperatorImageFilterD4D4D
    cast = _swig_new_static_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD4D4D_cast)

    def New(*args, **kargs):
        """New() -> itkNeighborhoodOperatorImageFilterD4D4D

        Create a new object of the class itkNeighborhoodOperatorImageFilterD4D4D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNeighborhoodOperatorImageFilterD4D4D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNeighborhoodOperatorImageFilterD4D4D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNeighborhoodOperatorImageFilterD4D4D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNeighborhoodOperatorImageFilterD4D4D in _itkNeighborhoodOperatorImageFilterPython:
_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD4D4D_swigregister(itkNeighborhoodOperatorImageFilterD4D4D)
itkNeighborhoodOperatorImageFilterD4D4D___New_orig__ = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD4D4D___New_orig__
itkNeighborhoodOperatorImageFilterD4D4D_cast = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterD4D4D_cast


def itkNeighborhoodOperatorImageFilterF2F2F_New():
    return itkNeighborhoodOperatorImageFilterF2F2F.New()

class itkNeighborhoodOperatorImageFilterF2F2F(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkNeighborhoodOperatorImageFilterF2F2F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF2F2F___New_orig__)
    Clone = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF2F2F_Clone)
    SetOperator = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF2F2F_SetOperator)
    GetOperator = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF2F2F_GetOperator)
    OverrideBoundaryCondition = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF2F2F_OverrideBoundaryCondition)
    GetBoundaryCondition = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF2F2F_GetBoundaryCondition)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF2F2F_GenerateInputRequestedRegion)
    SameDimensionCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF2F2F_SameDimensionCheck
    
    OperatorConvertibleToOutputCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF2F2F_OperatorConvertibleToOutputCheck
    
    InputConvertibleToOperatorCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF2F2F_InputConvertibleToOperatorCheck
    
    OperatorMultiplyOperatorCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF2F2F_OperatorMultiplyOperatorCheck
    
    OperatorAdditiveOperatorsCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF2F2F_OperatorAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkNeighborhoodOperatorImageFilterPython.delete_itkNeighborhoodOperatorImageFilterF2F2F
    cast = _swig_new_static_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF2F2F_cast)

    def New(*args, **kargs):
        """New() -> itkNeighborhoodOperatorImageFilterF2F2F

        Create a new object of the class itkNeighborhoodOperatorImageFilterF2F2F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNeighborhoodOperatorImageFilterF2F2F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNeighborhoodOperatorImageFilterF2F2F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNeighborhoodOperatorImageFilterF2F2F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNeighborhoodOperatorImageFilterF2F2F in _itkNeighborhoodOperatorImageFilterPython:
_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF2F2F_swigregister(itkNeighborhoodOperatorImageFilterF2F2F)
itkNeighborhoodOperatorImageFilterF2F2F___New_orig__ = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF2F2F___New_orig__
itkNeighborhoodOperatorImageFilterF2F2F_cast = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF2F2F_cast


def itkNeighborhoodOperatorImageFilterF3F3F_New():
    return itkNeighborhoodOperatorImageFilterF3F3F.New()

class itkNeighborhoodOperatorImageFilterF3F3F(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkNeighborhoodOperatorImageFilterF3F3F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF3F3F___New_orig__)
    Clone = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF3F3F_Clone)
    SetOperator = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF3F3F_SetOperator)
    GetOperator = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF3F3F_GetOperator)
    OverrideBoundaryCondition = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF3F3F_OverrideBoundaryCondition)
    GetBoundaryCondition = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF3F3F_GetBoundaryCondition)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF3F3F_GenerateInputRequestedRegion)
    SameDimensionCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF3F3F_SameDimensionCheck
    
    OperatorConvertibleToOutputCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF3F3F_OperatorConvertibleToOutputCheck
    
    InputConvertibleToOperatorCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF3F3F_InputConvertibleToOperatorCheck
    
    OperatorMultiplyOperatorCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF3F3F_OperatorMultiplyOperatorCheck
    
    OperatorAdditiveOperatorsCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF3F3F_OperatorAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkNeighborhoodOperatorImageFilterPython.delete_itkNeighborhoodOperatorImageFilterF3F3F
    cast = _swig_new_static_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF3F3F_cast)

    def New(*args, **kargs):
        """New() -> itkNeighborhoodOperatorImageFilterF3F3F

        Create a new object of the class itkNeighborhoodOperatorImageFilterF3F3F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNeighborhoodOperatorImageFilterF3F3F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNeighborhoodOperatorImageFilterF3F3F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNeighborhoodOperatorImageFilterF3F3F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNeighborhoodOperatorImageFilterF3F3F in _itkNeighborhoodOperatorImageFilterPython:
_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF3F3F_swigregister(itkNeighborhoodOperatorImageFilterF3F3F)
itkNeighborhoodOperatorImageFilterF3F3F___New_orig__ = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF3F3F___New_orig__
itkNeighborhoodOperatorImageFilterF3F3F_cast = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF3F3F_cast


def itkNeighborhoodOperatorImageFilterF4F4F_New():
    return itkNeighborhoodOperatorImageFilterF4F4F.New()

class itkNeighborhoodOperatorImageFilterF4F4F(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkNeighborhoodOperatorImageFilterF4F4F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF4F4F___New_orig__)
    Clone = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF4F4F_Clone)
    SetOperator = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF4F4F_SetOperator)
    GetOperator = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF4F4F_GetOperator)
    OverrideBoundaryCondition = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF4F4F_OverrideBoundaryCondition)
    GetBoundaryCondition = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF4F4F_GetBoundaryCondition)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF4F4F_GenerateInputRequestedRegion)
    SameDimensionCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF4F4F_SameDimensionCheck
    
    OperatorConvertibleToOutputCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF4F4F_OperatorConvertibleToOutputCheck
    
    InputConvertibleToOperatorCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF4F4F_InputConvertibleToOperatorCheck
    
    OperatorMultiplyOperatorCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF4F4F_OperatorMultiplyOperatorCheck
    
    OperatorAdditiveOperatorsCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF4F4F_OperatorAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkNeighborhoodOperatorImageFilterPython.delete_itkNeighborhoodOperatorImageFilterF4F4F
    cast = _swig_new_static_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF4F4F_cast)

    def New(*args, **kargs):
        """New() -> itkNeighborhoodOperatorImageFilterF4F4F

        Create a new object of the class itkNeighborhoodOperatorImageFilterF4F4F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNeighborhoodOperatorImageFilterF4F4F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNeighborhoodOperatorImageFilterF4F4F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNeighborhoodOperatorImageFilterF4F4F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNeighborhoodOperatorImageFilterF4F4F in _itkNeighborhoodOperatorImageFilterPython:
_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF4F4F_swigregister(itkNeighborhoodOperatorImageFilterF4F4F)
itkNeighborhoodOperatorImageFilterF4F4F___New_orig__ = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF4F4F___New_orig__
itkNeighborhoodOperatorImageFilterF4F4F_cast = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterF4F4F_cast


def itkNeighborhoodOperatorImageFilterSS2SS2SS_New():
    return itkNeighborhoodOperatorImageFilterSS2SS2SS.New()

class itkNeighborhoodOperatorImageFilterSS2SS2SS(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkNeighborhoodOperatorImageFilterSS2SS2SS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS2SS2SS___New_orig__)
    Clone = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS2SS2SS_Clone)
    SetOperator = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS2SS2SS_SetOperator)
    GetOperator = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS2SS2SS_GetOperator)
    OverrideBoundaryCondition = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS2SS2SS_OverrideBoundaryCondition)
    GetBoundaryCondition = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS2SS2SS_GetBoundaryCondition)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS2SS2SS_GenerateInputRequestedRegion)
    SameDimensionCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS2SS2SS_SameDimensionCheck
    
    OperatorConvertibleToOutputCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS2SS2SS_OperatorConvertibleToOutputCheck
    
    InputConvertibleToOperatorCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS2SS2SS_InputConvertibleToOperatorCheck
    
    OperatorMultiplyOperatorCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS2SS2SS_OperatorMultiplyOperatorCheck
    
    OperatorAdditiveOperatorsCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS2SS2SS_OperatorAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkNeighborhoodOperatorImageFilterPython.delete_itkNeighborhoodOperatorImageFilterSS2SS2SS
    cast = _swig_new_static_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS2SS2SS_cast)

    def New(*args, **kargs):
        """New() -> itkNeighborhoodOperatorImageFilterSS2SS2SS

        Create a new object of the class itkNeighborhoodOperatorImageFilterSS2SS2SS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNeighborhoodOperatorImageFilterSS2SS2SS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNeighborhoodOperatorImageFilterSS2SS2SS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNeighborhoodOperatorImageFilterSS2SS2SS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNeighborhoodOperatorImageFilterSS2SS2SS in _itkNeighborhoodOperatorImageFilterPython:
_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS2SS2SS_swigregister(itkNeighborhoodOperatorImageFilterSS2SS2SS)
itkNeighborhoodOperatorImageFilterSS2SS2SS___New_orig__ = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS2SS2SS___New_orig__
itkNeighborhoodOperatorImageFilterSS2SS2SS_cast = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS2SS2SS_cast


def itkNeighborhoodOperatorImageFilterSS3SS3SS_New():
    return itkNeighborhoodOperatorImageFilterSS3SS3SS.New()

class itkNeighborhoodOperatorImageFilterSS3SS3SS(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkNeighborhoodOperatorImageFilterSS3SS3SS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS3SS3SS___New_orig__)
    Clone = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS3SS3SS_Clone)
    SetOperator = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS3SS3SS_SetOperator)
    GetOperator = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS3SS3SS_GetOperator)
    OverrideBoundaryCondition = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS3SS3SS_OverrideBoundaryCondition)
    GetBoundaryCondition = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS3SS3SS_GetBoundaryCondition)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS3SS3SS_GenerateInputRequestedRegion)
    SameDimensionCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS3SS3SS_SameDimensionCheck
    
    OperatorConvertibleToOutputCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS3SS3SS_OperatorConvertibleToOutputCheck
    
    InputConvertibleToOperatorCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS3SS3SS_InputConvertibleToOperatorCheck
    
    OperatorMultiplyOperatorCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS3SS3SS_OperatorMultiplyOperatorCheck
    
    OperatorAdditiveOperatorsCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS3SS3SS_OperatorAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkNeighborhoodOperatorImageFilterPython.delete_itkNeighborhoodOperatorImageFilterSS3SS3SS
    cast = _swig_new_static_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS3SS3SS_cast)

    def New(*args, **kargs):
        """New() -> itkNeighborhoodOperatorImageFilterSS3SS3SS

        Create a new object of the class itkNeighborhoodOperatorImageFilterSS3SS3SS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNeighborhoodOperatorImageFilterSS3SS3SS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNeighborhoodOperatorImageFilterSS3SS3SS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNeighborhoodOperatorImageFilterSS3SS3SS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNeighborhoodOperatorImageFilterSS3SS3SS in _itkNeighborhoodOperatorImageFilterPython:
_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS3SS3SS_swigregister(itkNeighborhoodOperatorImageFilterSS3SS3SS)
itkNeighborhoodOperatorImageFilterSS3SS3SS___New_orig__ = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS3SS3SS___New_orig__
itkNeighborhoodOperatorImageFilterSS3SS3SS_cast = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS3SS3SS_cast


def itkNeighborhoodOperatorImageFilterSS4SS4SS_New():
    return itkNeighborhoodOperatorImageFilterSS4SS4SS.New()

class itkNeighborhoodOperatorImageFilterSS4SS4SS(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkNeighborhoodOperatorImageFilterSS4SS4SS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS4SS4SS___New_orig__)
    Clone = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS4SS4SS_Clone)
    SetOperator = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS4SS4SS_SetOperator)
    GetOperator = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS4SS4SS_GetOperator)
    OverrideBoundaryCondition = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS4SS4SS_OverrideBoundaryCondition)
    GetBoundaryCondition = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS4SS4SS_GetBoundaryCondition)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS4SS4SS_GenerateInputRequestedRegion)
    SameDimensionCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS4SS4SS_SameDimensionCheck
    
    OperatorConvertibleToOutputCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS4SS4SS_OperatorConvertibleToOutputCheck
    
    InputConvertibleToOperatorCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS4SS4SS_InputConvertibleToOperatorCheck
    
    OperatorMultiplyOperatorCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS4SS4SS_OperatorMultiplyOperatorCheck
    
    OperatorAdditiveOperatorsCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS4SS4SS_OperatorAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkNeighborhoodOperatorImageFilterPython.delete_itkNeighborhoodOperatorImageFilterSS4SS4SS
    cast = _swig_new_static_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS4SS4SS_cast)

    def New(*args, **kargs):
        """New() -> itkNeighborhoodOperatorImageFilterSS4SS4SS

        Create a new object of the class itkNeighborhoodOperatorImageFilterSS4SS4SS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNeighborhoodOperatorImageFilterSS4SS4SS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNeighborhoodOperatorImageFilterSS4SS4SS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNeighborhoodOperatorImageFilterSS4SS4SS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNeighborhoodOperatorImageFilterSS4SS4SS in _itkNeighborhoodOperatorImageFilterPython:
_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS4SS4SS_swigregister(itkNeighborhoodOperatorImageFilterSS4SS4SS)
itkNeighborhoodOperatorImageFilterSS4SS4SS___New_orig__ = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS4SS4SS___New_orig__
itkNeighborhoodOperatorImageFilterSS4SS4SS_cast = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterSS4SS4SS_cast


def itkNeighborhoodOperatorImageFilterUC2UC2UC_New():
    return itkNeighborhoodOperatorImageFilterUC2UC2UC.New()

class itkNeighborhoodOperatorImageFilterUC2UC2UC(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkNeighborhoodOperatorImageFilterUC2UC2UC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC2UC2UC___New_orig__)
    Clone = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC2UC2UC_Clone)
    SetOperator = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC2UC2UC_SetOperator)
    GetOperator = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC2UC2UC_GetOperator)
    OverrideBoundaryCondition = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC2UC2UC_OverrideBoundaryCondition)
    GetBoundaryCondition = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC2UC2UC_GetBoundaryCondition)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC2UC2UC_GenerateInputRequestedRegion)
    SameDimensionCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC2UC2UC_SameDimensionCheck
    
    OperatorConvertibleToOutputCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC2UC2UC_OperatorConvertibleToOutputCheck
    
    InputConvertibleToOperatorCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC2UC2UC_InputConvertibleToOperatorCheck
    
    OperatorMultiplyOperatorCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC2UC2UC_OperatorMultiplyOperatorCheck
    
    OperatorAdditiveOperatorsCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC2UC2UC_OperatorAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkNeighborhoodOperatorImageFilterPython.delete_itkNeighborhoodOperatorImageFilterUC2UC2UC
    cast = _swig_new_static_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC2UC2UC_cast)

    def New(*args, **kargs):
        """New() -> itkNeighborhoodOperatorImageFilterUC2UC2UC

        Create a new object of the class itkNeighborhoodOperatorImageFilterUC2UC2UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNeighborhoodOperatorImageFilterUC2UC2UC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNeighborhoodOperatorImageFilterUC2UC2UC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNeighborhoodOperatorImageFilterUC2UC2UC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNeighborhoodOperatorImageFilterUC2UC2UC in _itkNeighborhoodOperatorImageFilterPython:
_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC2UC2UC_swigregister(itkNeighborhoodOperatorImageFilterUC2UC2UC)
itkNeighborhoodOperatorImageFilterUC2UC2UC___New_orig__ = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC2UC2UC___New_orig__
itkNeighborhoodOperatorImageFilterUC2UC2UC_cast = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC2UC2UC_cast


def itkNeighborhoodOperatorImageFilterUC3UC3UC_New():
    return itkNeighborhoodOperatorImageFilterUC3UC3UC.New()

class itkNeighborhoodOperatorImageFilterUC3UC3UC(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkNeighborhoodOperatorImageFilterUC3UC3UC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC3UC3UC___New_orig__)
    Clone = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC3UC3UC_Clone)
    SetOperator = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC3UC3UC_SetOperator)
    GetOperator = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC3UC3UC_GetOperator)
    OverrideBoundaryCondition = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC3UC3UC_OverrideBoundaryCondition)
    GetBoundaryCondition = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC3UC3UC_GetBoundaryCondition)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC3UC3UC_GenerateInputRequestedRegion)
    SameDimensionCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC3UC3UC_SameDimensionCheck
    
    OperatorConvertibleToOutputCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC3UC3UC_OperatorConvertibleToOutputCheck
    
    InputConvertibleToOperatorCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC3UC3UC_InputConvertibleToOperatorCheck
    
    OperatorMultiplyOperatorCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC3UC3UC_OperatorMultiplyOperatorCheck
    
    OperatorAdditiveOperatorsCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC3UC3UC_OperatorAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkNeighborhoodOperatorImageFilterPython.delete_itkNeighborhoodOperatorImageFilterUC3UC3UC
    cast = _swig_new_static_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC3UC3UC_cast)

    def New(*args, **kargs):
        """New() -> itkNeighborhoodOperatorImageFilterUC3UC3UC

        Create a new object of the class itkNeighborhoodOperatorImageFilterUC3UC3UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNeighborhoodOperatorImageFilterUC3UC3UC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNeighborhoodOperatorImageFilterUC3UC3UC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNeighborhoodOperatorImageFilterUC3UC3UC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNeighborhoodOperatorImageFilterUC3UC3UC in _itkNeighborhoodOperatorImageFilterPython:
_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC3UC3UC_swigregister(itkNeighborhoodOperatorImageFilterUC3UC3UC)
itkNeighborhoodOperatorImageFilterUC3UC3UC___New_orig__ = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC3UC3UC___New_orig__
itkNeighborhoodOperatorImageFilterUC3UC3UC_cast = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC3UC3UC_cast


def itkNeighborhoodOperatorImageFilterUC4UC4UC_New():
    return itkNeighborhoodOperatorImageFilterUC4UC4UC.New()

class itkNeighborhoodOperatorImageFilterUC4UC4UC(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkNeighborhoodOperatorImageFilterUC4UC4UC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC4UC4UC___New_orig__)
    Clone = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC4UC4UC_Clone)
    SetOperator = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC4UC4UC_SetOperator)
    GetOperator = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC4UC4UC_GetOperator)
    OverrideBoundaryCondition = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC4UC4UC_OverrideBoundaryCondition)
    GetBoundaryCondition = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC4UC4UC_GetBoundaryCondition)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC4UC4UC_GenerateInputRequestedRegion)
    SameDimensionCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC4UC4UC_SameDimensionCheck
    
    OperatorConvertibleToOutputCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC4UC4UC_OperatorConvertibleToOutputCheck
    
    InputConvertibleToOperatorCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC4UC4UC_InputConvertibleToOperatorCheck
    
    OperatorMultiplyOperatorCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC4UC4UC_OperatorMultiplyOperatorCheck
    
    OperatorAdditiveOperatorsCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC4UC4UC_OperatorAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkNeighborhoodOperatorImageFilterPython.delete_itkNeighborhoodOperatorImageFilterUC4UC4UC
    cast = _swig_new_static_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC4UC4UC_cast)

    def New(*args, **kargs):
        """New() -> itkNeighborhoodOperatorImageFilterUC4UC4UC

        Create a new object of the class itkNeighborhoodOperatorImageFilterUC4UC4UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNeighborhoodOperatorImageFilterUC4UC4UC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNeighborhoodOperatorImageFilterUC4UC4UC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNeighborhoodOperatorImageFilterUC4UC4UC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNeighborhoodOperatorImageFilterUC4UC4UC in _itkNeighborhoodOperatorImageFilterPython:
_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC4UC4UC_swigregister(itkNeighborhoodOperatorImageFilterUC4UC4UC)
itkNeighborhoodOperatorImageFilterUC4UC4UC___New_orig__ = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC4UC4UC___New_orig__
itkNeighborhoodOperatorImageFilterUC4UC4UC_cast = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUC4UC4UC_cast


def itkNeighborhoodOperatorImageFilterUS2US2US_New():
    return itkNeighborhoodOperatorImageFilterUS2US2US.New()

class itkNeighborhoodOperatorImageFilterUS2US2US(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkNeighborhoodOperatorImageFilterUS2US2US class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS2US2US___New_orig__)
    Clone = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS2US2US_Clone)
    SetOperator = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS2US2US_SetOperator)
    GetOperator = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS2US2US_GetOperator)
    OverrideBoundaryCondition = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS2US2US_OverrideBoundaryCondition)
    GetBoundaryCondition = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS2US2US_GetBoundaryCondition)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS2US2US_GenerateInputRequestedRegion)
    SameDimensionCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS2US2US_SameDimensionCheck
    
    OperatorConvertibleToOutputCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS2US2US_OperatorConvertibleToOutputCheck
    
    InputConvertibleToOperatorCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS2US2US_InputConvertibleToOperatorCheck
    
    OperatorMultiplyOperatorCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS2US2US_OperatorMultiplyOperatorCheck
    
    OperatorAdditiveOperatorsCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS2US2US_OperatorAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkNeighborhoodOperatorImageFilterPython.delete_itkNeighborhoodOperatorImageFilterUS2US2US
    cast = _swig_new_static_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS2US2US_cast)

    def New(*args, **kargs):
        """New() -> itkNeighborhoodOperatorImageFilterUS2US2US

        Create a new object of the class itkNeighborhoodOperatorImageFilterUS2US2US and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNeighborhoodOperatorImageFilterUS2US2US.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNeighborhoodOperatorImageFilterUS2US2US.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNeighborhoodOperatorImageFilterUS2US2US.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNeighborhoodOperatorImageFilterUS2US2US in _itkNeighborhoodOperatorImageFilterPython:
_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS2US2US_swigregister(itkNeighborhoodOperatorImageFilterUS2US2US)
itkNeighborhoodOperatorImageFilterUS2US2US___New_orig__ = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS2US2US___New_orig__
itkNeighborhoodOperatorImageFilterUS2US2US_cast = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS2US2US_cast


def itkNeighborhoodOperatorImageFilterUS3US3US_New():
    return itkNeighborhoodOperatorImageFilterUS3US3US.New()

class itkNeighborhoodOperatorImageFilterUS3US3US(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkNeighborhoodOperatorImageFilterUS3US3US class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS3US3US___New_orig__)
    Clone = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS3US3US_Clone)
    SetOperator = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS3US3US_SetOperator)
    GetOperator = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS3US3US_GetOperator)
    OverrideBoundaryCondition = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS3US3US_OverrideBoundaryCondition)
    GetBoundaryCondition = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS3US3US_GetBoundaryCondition)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS3US3US_GenerateInputRequestedRegion)
    SameDimensionCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS3US3US_SameDimensionCheck
    
    OperatorConvertibleToOutputCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS3US3US_OperatorConvertibleToOutputCheck
    
    InputConvertibleToOperatorCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS3US3US_InputConvertibleToOperatorCheck
    
    OperatorMultiplyOperatorCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS3US3US_OperatorMultiplyOperatorCheck
    
    OperatorAdditiveOperatorsCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS3US3US_OperatorAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkNeighborhoodOperatorImageFilterPython.delete_itkNeighborhoodOperatorImageFilterUS3US3US
    cast = _swig_new_static_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS3US3US_cast)

    def New(*args, **kargs):
        """New() -> itkNeighborhoodOperatorImageFilterUS3US3US

        Create a new object of the class itkNeighborhoodOperatorImageFilterUS3US3US and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNeighborhoodOperatorImageFilterUS3US3US.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNeighborhoodOperatorImageFilterUS3US3US.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNeighborhoodOperatorImageFilterUS3US3US.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNeighborhoodOperatorImageFilterUS3US3US in _itkNeighborhoodOperatorImageFilterPython:
_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS3US3US_swigregister(itkNeighborhoodOperatorImageFilterUS3US3US)
itkNeighborhoodOperatorImageFilterUS3US3US___New_orig__ = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS3US3US___New_orig__
itkNeighborhoodOperatorImageFilterUS3US3US_cast = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS3US3US_cast


def itkNeighborhoodOperatorImageFilterUS4US4US_New():
    return itkNeighborhoodOperatorImageFilterUS4US4US.New()

class itkNeighborhoodOperatorImageFilterUS4US4US(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkNeighborhoodOperatorImageFilterUS4US4US class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS4US4US___New_orig__)
    Clone = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS4US4US_Clone)
    SetOperator = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS4US4US_SetOperator)
    GetOperator = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS4US4US_GetOperator)
    OverrideBoundaryCondition = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS4US4US_OverrideBoundaryCondition)
    GetBoundaryCondition = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS4US4US_GetBoundaryCondition)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS4US4US_GenerateInputRequestedRegion)
    SameDimensionCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS4US4US_SameDimensionCheck
    
    OperatorConvertibleToOutputCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS4US4US_OperatorConvertibleToOutputCheck
    
    InputConvertibleToOperatorCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS4US4US_InputConvertibleToOperatorCheck
    
    OperatorMultiplyOperatorCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS4US4US_OperatorMultiplyOperatorCheck
    
    OperatorAdditiveOperatorsCheck = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS4US4US_OperatorAdditiveOperatorsCheck
    
    __swig_destroy__ = _itkNeighborhoodOperatorImageFilterPython.delete_itkNeighborhoodOperatorImageFilterUS4US4US
    cast = _swig_new_static_method(_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS4US4US_cast)

    def New(*args, **kargs):
        """New() -> itkNeighborhoodOperatorImageFilterUS4US4US

        Create a new object of the class itkNeighborhoodOperatorImageFilterUS4US4US and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkNeighborhoodOperatorImageFilterUS4US4US.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkNeighborhoodOperatorImageFilterUS4US4US.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkNeighborhoodOperatorImageFilterUS4US4US.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkNeighborhoodOperatorImageFilterUS4US4US in _itkNeighborhoodOperatorImageFilterPython:
_itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS4US4US_swigregister(itkNeighborhoodOperatorImageFilterUS4US4US)
itkNeighborhoodOperatorImageFilterUS4US4US___New_orig__ = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS4US4US___New_orig__
itkNeighborhoodOperatorImageFilterUS4US4US_cast = _itkNeighborhoodOperatorImageFilterPython.itkNeighborhoodOperatorImageFilterUS4US4US_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def neighborhood_operator_image_filter(*args: itkt.ImageLike,  operator=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for NeighborhoodOperatorImageFilter"""
    import itk

    kwarg_typehints = { 'operator':operator }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.NeighborhoodOperatorImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def neighborhood_operator_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageFilterBase.NeighborhoodOperatorImageFilter
    neighborhood_operator_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    neighborhood_operator_image_filter.__doc__ = filter_object.__doc__




