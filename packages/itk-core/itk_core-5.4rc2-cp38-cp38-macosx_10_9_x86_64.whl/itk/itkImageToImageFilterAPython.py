# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKCommonPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkImageToImageFilterAPython
else:
    import _itkImageToImageFilterAPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkImageToImageFilterAPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkImageToImageFilterAPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkImageToImageFilterCommonPython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkVectorImagePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
class itkImageToImageFilterICVF22ICVF22(itk.itkImageSourcePython.itkImageSourceICVF22):
    r"""Proxy of C++ itkImageToImageFilterICVF22ICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterICVF22ICVF22
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22_cast)

# Register itkImageToImageFilterICVF22ICVF22 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22_swigregister(itkImageToImageFilterICVF22ICVF22)
itkImageToImageFilterICVF22ICVF22_cast = _itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22_cast

class itkImageToImageFilterICVF22IVF22(itk.itkImageSourcePython.itkImageSourceIVF22):
    r"""Proxy of C++ itkImageToImageFilterICVF22IVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22IVF22_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22IVF22_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22IVF22_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22IVF22_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22IVF22_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22IVF22_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22IVF22_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22IVF22_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22IVF22_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22IVF22_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterICVF22IVF22
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22IVF22_cast)

# Register itkImageToImageFilterICVF22IVF22 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterICVF22IVF22_swigregister(itkImageToImageFilterICVF22IVF22)
itkImageToImageFilterICVF22IVF22_cast = _itkImageToImageFilterAPython.itkImageToImageFilterICVF22IVF22_cast

class itkImageToImageFilterICVF22VIF2(itk.itkImageSourcePython.itkImageSourceVIF2):
    r"""Proxy of C++ itkImageToImageFilterICVF22VIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22VIF2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22VIF2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22VIF2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22VIF2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22VIF2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22VIF2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22VIF2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22VIF2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22VIF2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22VIF2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterICVF22VIF2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF22VIF2_cast)

# Register itkImageToImageFilterICVF22VIF2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterICVF22VIF2_swigregister(itkImageToImageFilterICVF22VIF2)
itkImageToImageFilterICVF22VIF2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterICVF22VIF2_cast

class itkImageToImageFilterICVF23ICVF23(itk.itkImageSourcePython.itkImageSourceICVF23):
    r"""Proxy of C++ itkImageToImageFilterICVF23ICVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF23ICVF23_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF23ICVF23_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF23ICVF23_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF23ICVF23_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF23ICVF23_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF23ICVF23_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF23ICVF23_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF23ICVF23_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF23ICVF23_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF23ICVF23_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterICVF23ICVF23
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF23ICVF23_cast)

# Register itkImageToImageFilterICVF23ICVF23 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterICVF23ICVF23_swigregister(itkImageToImageFilterICVF23ICVF23)
itkImageToImageFilterICVF23ICVF23_cast = _itkImageToImageFilterAPython.itkImageToImageFilterICVF23ICVF23_cast

class itkImageToImageFilterICVF23IVF23(itk.itkImageSourcePython.itkImageSourceIVF23):
    r"""Proxy of C++ itkImageToImageFilterICVF23IVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF23IVF23_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF23IVF23_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF23IVF23_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF23IVF23_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF23IVF23_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF23IVF23_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF23IVF23_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF23IVF23_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF23IVF23_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF23IVF23_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterICVF23IVF23
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF23IVF23_cast)

# Register itkImageToImageFilterICVF23IVF23 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterICVF23IVF23_swigregister(itkImageToImageFilterICVF23IVF23)
itkImageToImageFilterICVF23IVF23_cast = _itkImageToImageFilterAPython.itkImageToImageFilterICVF23IVF23_cast

class itkImageToImageFilterICVF23VIF3(itk.itkImageSourcePython.itkImageSourceVIF3):
    r"""Proxy of C++ itkImageToImageFilterICVF23VIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF23VIF3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF23VIF3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF23VIF3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF23VIF3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF23VIF3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF23VIF3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF23VIF3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF23VIF3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF23VIF3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF23VIF3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterICVF23VIF3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF23VIF3_cast)

# Register itkImageToImageFilterICVF23VIF3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterICVF23VIF3_swigregister(itkImageToImageFilterICVF23VIF3)
itkImageToImageFilterICVF23VIF3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterICVF23VIF3_cast

class itkImageToImageFilterICVF24ICVF24(itk.itkImageSourcePython.itkImageSourceICVF24):
    r"""Proxy of C++ itkImageToImageFilterICVF24ICVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF24ICVF24_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF24ICVF24_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF24ICVF24_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF24ICVF24_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF24ICVF24_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF24ICVF24_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF24ICVF24_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF24ICVF24_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF24ICVF24_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF24ICVF24_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterICVF24ICVF24
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF24ICVF24_cast)

# Register itkImageToImageFilterICVF24ICVF24 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterICVF24ICVF24_swigregister(itkImageToImageFilterICVF24ICVF24)
itkImageToImageFilterICVF24ICVF24_cast = _itkImageToImageFilterAPython.itkImageToImageFilterICVF24ICVF24_cast

class itkImageToImageFilterICVF24IVF24(itk.itkImageSourcePython.itkImageSourceIVF24):
    r"""Proxy of C++ itkImageToImageFilterICVF24IVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF24IVF24_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF24IVF24_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF24IVF24_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF24IVF24_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF24IVF24_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF24IVF24_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF24IVF24_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF24IVF24_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF24IVF24_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF24IVF24_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterICVF24IVF24
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF24IVF24_cast)

# Register itkImageToImageFilterICVF24IVF24 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterICVF24IVF24_swigregister(itkImageToImageFilterICVF24IVF24)
itkImageToImageFilterICVF24IVF24_cast = _itkImageToImageFilterAPython.itkImageToImageFilterICVF24IVF24_cast

class itkImageToImageFilterICVF24VIF4(itk.itkImageSourcePython.itkImageSourceVIF4):
    r"""Proxy of C++ itkImageToImageFilterICVF24VIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF24VIF4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF24VIF4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF24VIF4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF24VIF4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF24VIF4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF24VIF4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF24VIF4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF24VIF4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF24VIF4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF24VIF4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterICVF24VIF4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF24VIF4_cast)

# Register itkImageToImageFilterICVF24VIF4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterICVF24VIF4_swigregister(itkImageToImageFilterICVF24VIF4)
itkImageToImageFilterICVF24VIF4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterICVF24VIF4_cast

class itkImageToImageFilterICVF32ICVF32(itk.itkImageSourcePython.itkImageSourceICVF32):
    r"""Proxy of C++ itkImageToImageFilterICVF32ICVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF32ICVF32_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF32ICVF32_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF32ICVF32_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF32ICVF32_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF32ICVF32_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF32ICVF32_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF32ICVF32_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF32ICVF32_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF32ICVF32_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF32ICVF32_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterICVF32ICVF32
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF32ICVF32_cast)

# Register itkImageToImageFilterICVF32ICVF32 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterICVF32ICVF32_swigregister(itkImageToImageFilterICVF32ICVF32)
itkImageToImageFilterICVF32ICVF32_cast = _itkImageToImageFilterAPython.itkImageToImageFilterICVF32ICVF32_cast

class itkImageToImageFilterICVF32IVF32(itk.itkImageSourcePython.itkImageSourceIVF32):
    r"""Proxy of C++ itkImageToImageFilterICVF32IVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF32IVF32_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF32IVF32_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF32IVF32_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF32IVF32_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF32IVF32_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF32IVF32_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF32IVF32_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF32IVF32_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF32IVF32_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF32IVF32_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterICVF32IVF32
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF32IVF32_cast)

# Register itkImageToImageFilterICVF32IVF32 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterICVF32IVF32_swigregister(itkImageToImageFilterICVF32IVF32)
itkImageToImageFilterICVF32IVF32_cast = _itkImageToImageFilterAPython.itkImageToImageFilterICVF32IVF32_cast

class itkImageToImageFilterICVF32VIF2(itk.itkImageSourcePython.itkImageSourceVIF2):
    r"""Proxy of C++ itkImageToImageFilterICVF32VIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF32VIF2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF32VIF2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF32VIF2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF32VIF2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF32VIF2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF32VIF2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF32VIF2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF32VIF2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF32VIF2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF32VIF2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterICVF32VIF2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF32VIF2_cast)

# Register itkImageToImageFilterICVF32VIF2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterICVF32VIF2_swigregister(itkImageToImageFilterICVF32VIF2)
itkImageToImageFilterICVF32VIF2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterICVF32VIF2_cast

class itkImageToImageFilterICVF33ICVF33(itk.itkImageSourcePython.itkImageSourceICVF33):
    r"""Proxy of C++ itkImageToImageFilterICVF33ICVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterICVF33ICVF33
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33_cast)

# Register itkImageToImageFilterICVF33ICVF33 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33_swigregister(itkImageToImageFilterICVF33ICVF33)
itkImageToImageFilterICVF33ICVF33_cast = _itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33_cast

class itkImageToImageFilterICVF33IVF33(itk.itkImageSourcePython.itkImageSourceIVF33):
    r"""Proxy of C++ itkImageToImageFilterICVF33IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33IVF33_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33IVF33_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33IVF33_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33IVF33_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33IVF33_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33IVF33_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33IVF33_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33IVF33_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33IVF33_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33IVF33_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterICVF33IVF33
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33IVF33_cast)

# Register itkImageToImageFilterICVF33IVF33 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterICVF33IVF33_swigregister(itkImageToImageFilterICVF33IVF33)
itkImageToImageFilterICVF33IVF33_cast = _itkImageToImageFilterAPython.itkImageToImageFilterICVF33IVF33_cast

class itkImageToImageFilterICVF33VIF3(itk.itkImageSourcePython.itkImageSourceVIF3):
    r"""Proxy of C++ itkImageToImageFilterICVF33VIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33VIF3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33VIF3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33VIF3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33VIF3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33VIF3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33VIF3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33VIF3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33VIF3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33VIF3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33VIF3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterICVF33VIF3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF33VIF3_cast)

# Register itkImageToImageFilterICVF33VIF3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterICVF33VIF3_swigregister(itkImageToImageFilterICVF33VIF3)
itkImageToImageFilterICVF33VIF3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterICVF33VIF3_cast

class itkImageToImageFilterICVF34ICVF34(itk.itkImageSourcePython.itkImageSourceICVF34):
    r"""Proxy of C++ itkImageToImageFilterICVF34ICVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF34ICVF34_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF34ICVF34_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF34ICVF34_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF34ICVF34_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF34ICVF34_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF34ICVF34_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF34ICVF34_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF34ICVF34_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF34ICVF34_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF34ICVF34_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterICVF34ICVF34
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF34ICVF34_cast)

# Register itkImageToImageFilterICVF34ICVF34 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterICVF34ICVF34_swigregister(itkImageToImageFilterICVF34ICVF34)
itkImageToImageFilterICVF34ICVF34_cast = _itkImageToImageFilterAPython.itkImageToImageFilterICVF34ICVF34_cast

class itkImageToImageFilterICVF34IVF34(itk.itkImageSourcePython.itkImageSourceIVF34):
    r"""Proxy of C++ itkImageToImageFilterICVF34IVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF34IVF34_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF34IVF34_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF34IVF34_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF34IVF34_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF34IVF34_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF34IVF34_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF34IVF34_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF34IVF34_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF34IVF34_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF34IVF34_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterICVF34IVF34
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF34IVF34_cast)

# Register itkImageToImageFilterICVF34IVF34 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterICVF34IVF34_swigregister(itkImageToImageFilterICVF34IVF34)
itkImageToImageFilterICVF34IVF34_cast = _itkImageToImageFilterAPython.itkImageToImageFilterICVF34IVF34_cast

class itkImageToImageFilterICVF34VIF4(itk.itkImageSourcePython.itkImageSourceVIF4):
    r"""Proxy of C++ itkImageToImageFilterICVF34VIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF34VIF4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF34VIF4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF34VIF4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF34VIF4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF34VIF4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF34VIF4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF34VIF4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF34VIF4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF34VIF4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF34VIF4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterICVF34VIF4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF34VIF4_cast)

# Register itkImageToImageFilterICVF34VIF4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterICVF34VIF4_swigregister(itkImageToImageFilterICVF34VIF4)
itkImageToImageFilterICVF34VIF4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterICVF34VIF4_cast

class itkImageToImageFilterICVF42ICVF42(itk.itkImageSourcePython.itkImageSourceICVF42):
    r"""Proxy of C++ itkImageToImageFilterICVF42ICVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF42ICVF42_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF42ICVF42_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF42ICVF42_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF42ICVF42_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF42ICVF42_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF42ICVF42_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF42ICVF42_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF42ICVF42_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF42ICVF42_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF42ICVF42_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterICVF42ICVF42
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF42ICVF42_cast)

# Register itkImageToImageFilterICVF42ICVF42 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterICVF42ICVF42_swigregister(itkImageToImageFilterICVF42ICVF42)
itkImageToImageFilterICVF42ICVF42_cast = _itkImageToImageFilterAPython.itkImageToImageFilterICVF42ICVF42_cast

class itkImageToImageFilterICVF42IVF42(itk.itkImageSourcePython.itkImageSourceIVF42):
    r"""Proxy of C++ itkImageToImageFilterICVF42IVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF42IVF42_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF42IVF42_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF42IVF42_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF42IVF42_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF42IVF42_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF42IVF42_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF42IVF42_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF42IVF42_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF42IVF42_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF42IVF42_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterICVF42IVF42
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF42IVF42_cast)

# Register itkImageToImageFilterICVF42IVF42 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterICVF42IVF42_swigregister(itkImageToImageFilterICVF42IVF42)
itkImageToImageFilterICVF42IVF42_cast = _itkImageToImageFilterAPython.itkImageToImageFilterICVF42IVF42_cast

class itkImageToImageFilterICVF42VIF2(itk.itkImageSourcePython.itkImageSourceVIF2):
    r"""Proxy of C++ itkImageToImageFilterICVF42VIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF42VIF2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF42VIF2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF42VIF2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF42VIF2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF42VIF2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF42VIF2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF42VIF2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF42VIF2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF42VIF2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF42VIF2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterICVF42VIF2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF42VIF2_cast)

# Register itkImageToImageFilterICVF42VIF2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterICVF42VIF2_swigregister(itkImageToImageFilterICVF42VIF2)
itkImageToImageFilterICVF42VIF2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterICVF42VIF2_cast

class itkImageToImageFilterICVF43ICVF43(itk.itkImageSourcePython.itkImageSourceICVF43):
    r"""Proxy of C++ itkImageToImageFilterICVF43ICVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF43ICVF43_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF43ICVF43_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF43ICVF43_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF43ICVF43_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF43ICVF43_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF43ICVF43_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF43ICVF43_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF43ICVF43_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF43ICVF43_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF43ICVF43_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterICVF43ICVF43
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF43ICVF43_cast)

# Register itkImageToImageFilterICVF43ICVF43 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterICVF43ICVF43_swigregister(itkImageToImageFilterICVF43ICVF43)
itkImageToImageFilterICVF43ICVF43_cast = _itkImageToImageFilterAPython.itkImageToImageFilterICVF43ICVF43_cast

class itkImageToImageFilterICVF43IVF43(itk.itkImageSourcePython.itkImageSourceIVF43):
    r"""Proxy of C++ itkImageToImageFilterICVF43IVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF43IVF43_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF43IVF43_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF43IVF43_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF43IVF43_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF43IVF43_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF43IVF43_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF43IVF43_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF43IVF43_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF43IVF43_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF43IVF43_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterICVF43IVF43
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF43IVF43_cast)

# Register itkImageToImageFilterICVF43IVF43 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterICVF43IVF43_swigregister(itkImageToImageFilterICVF43IVF43)
itkImageToImageFilterICVF43IVF43_cast = _itkImageToImageFilterAPython.itkImageToImageFilterICVF43IVF43_cast

class itkImageToImageFilterICVF43VIF3(itk.itkImageSourcePython.itkImageSourceVIF3):
    r"""Proxy of C++ itkImageToImageFilterICVF43VIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF43VIF3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF43VIF3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF43VIF3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF43VIF3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF43VIF3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF43VIF3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF43VIF3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF43VIF3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF43VIF3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF43VIF3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterICVF43VIF3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF43VIF3_cast)

# Register itkImageToImageFilterICVF43VIF3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterICVF43VIF3_swigregister(itkImageToImageFilterICVF43VIF3)
itkImageToImageFilterICVF43VIF3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterICVF43VIF3_cast

class itkImageToImageFilterICVF44ICVF44(itk.itkImageSourcePython.itkImageSourceICVF44):
    r"""Proxy of C++ itkImageToImageFilterICVF44ICVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF44ICVF44_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF44ICVF44_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF44ICVF44_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF44ICVF44_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF44ICVF44_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF44ICVF44_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF44ICVF44_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF44ICVF44_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF44ICVF44_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF44ICVF44_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterICVF44ICVF44
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF44ICVF44_cast)

# Register itkImageToImageFilterICVF44ICVF44 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterICVF44ICVF44_swigregister(itkImageToImageFilterICVF44ICVF44)
itkImageToImageFilterICVF44ICVF44_cast = _itkImageToImageFilterAPython.itkImageToImageFilterICVF44ICVF44_cast

class itkImageToImageFilterICVF44IVF44(itk.itkImageSourcePython.itkImageSourceIVF44):
    r"""Proxy of C++ itkImageToImageFilterICVF44IVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF44IVF44_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF44IVF44_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF44IVF44_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF44IVF44_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF44IVF44_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF44IVF44_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF44IVF44_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF44IVF44_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF44IVF44_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF44IVF44_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterICVF44IVF44
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF44IVF44_cast)

# Register itkImageToImageFilterICVF44IVF44 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterICVF44IVF44_swigregister(itkImageToImageFilterICVF44IVF44)
itkImageToImageFilterICVF44IVF44_cast = _itkImageToImageFilterAPython.itkImageToImageFilterICVF44IVF44_cast

class itkImageToImageFilterICVF44VIF4(itk.itkImageSourcePython.itkImageSourceVIF4):
    r"""Proxy of C++ itkImageToImageFilterICVF44VIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF44VIF4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF44VIF4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF44VIF4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF44VIF4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF44VIF4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF44VIF4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF44VIF4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF44VIF4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF44VIF4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF44VIF4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterICVF44VIF4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterICVF44VIF4_cast)

# Register itkImageToImageFilterICVF44VIF4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterICVF44VIF4_swigregister(itkImageToImageFilterICVF44VIF4)
itkImageToImageFilterICVF44VIF4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterICVF44VIF4_cast

class itkImageToImageFilterID2ID2(itk.itkImageSourcePython.itkImageSourceID2):
    r"""Proxy of C++ itkImageToImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2ID2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2ID2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2ID2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2ID2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2ID2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2ID2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2ID2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2ID2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2ID2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2ID2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterID2ID2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2ID2_cast)

# Register itkImageToImageFilterID2ID2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterID2ID2_swigregister(itkImageToImageFilterID2ID2)
itkImageToImageFilterID2ID2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterID2ID2_cast

class itkImageToImageFilterID2IF2(itk.itkImageSourcePython.itkImageSourceIF2):
    r"""Proxy of C++ itkImageToImageFilterID2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IF2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IF2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IF2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IF2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IF2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IF2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IF2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IF2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IF2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IF2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterID2IF2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IF2_cast)

# Register itkImageToImageFilterID2IF2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterID2IF2_swigregister(itkImageToImageFilterID2IF2)
itkImageToImageFilterID2IF2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterID2IF2_cast

class itkImageToImageFilterID2ISI2(itk.itkImageSourcePython.itkImageSourceISI2):
    r"""Proxy of C++ itkImageToImageFilterID2ISI2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2ISI2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2ISI2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2ISI2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2ISI2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2ISI2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2ISI2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2ISI2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2ISI2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2ISI2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2ISI2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterID2ISI2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2ISI2_cast)

# Register itkImageToImageFilterID2ISI2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterID2ISI2_swigregister(itkImageToImageFilterID2ISI2)
itkImageToImageFilterID2ISI2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterID2ISI2_cast

class itkImageToImageFilterID2ISS2(itk.itkImageSourcePython.itkImageSourceISS2):
    r"""Proxy of C++ itkImageToImageFilterID2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2ISS2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2ISS2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2ISS2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2ISS2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2ISS2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2ISS2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2ISS2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2ISS2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2ISS2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2ISS2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterID2ISS2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2ISS2_cast)

# Register itkImageToImageFilterID2ISS2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterID2ISS2_swigregister(itkImageToImageFilterID2ISS2)
itkImageToImageFilterID2ISS2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterID2ISS2_cast

class itkImageToImageFilterID2IUC2(itk.itkImageSourcePython.itkImageSourceIUC2):
    r"""Proxy of C++ itkImageToImageFilterID2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterID2IUC2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2_cast)

# Register itkImageToImageFilterID2IUC2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2_swigregister(itkImageToImageFilterID2IUC2)
itkImageToImageFilterID2IUC2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterID2IUC2_cast

class itkImageToImageFilterID2IUI2(itk.itkImageSourcePython.itkImageSourceIUI2):
    r"""Proxy of C++ itkImageToImageFilterID2IUI2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUI2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUI2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUI2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUI2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUI2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUI2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUI2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUI2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUI2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUI2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterID2IUI2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUI2_cast)

# Register itkImageToImageFilterID2IUI2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterID2IUI2_swigregister(itkImageToImageFilterID2IUI2)
itkImageToImageFilterID2IUI2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterID2IUI2_cast

class itkImageToImageFilterID2IUL2(itk.itkImageSourcePython.itkImageSourceIUL2):
    r"""Proxy of C++ itkImageToImageFilterID2IUL2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterID2IUL2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2_cast)

# Register itkImageToImageFilterID2IUL2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2_swigregister(itkImageToImageFilterID2IUL2)
itkImageToImageFilterID2IUL2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterID2IUL2_cast

class itkImageToImageFilterID2IUS2(itk.itkImageSourcePython.itkImageSourceIUS2):
    r"""Proxy of C++ itkImageToImageFilterID2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterID2IUS2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2_cast)

# Register itkImageToImageFilterID2IUS2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2_swigregister(itkImageToImageFilterID2IUS2)
itkImageToImageFilterID2IUS2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterID2IUS2_cast

class itkImageToImageFilterID3ID3(itk.itkImageSourcePython.itkImageSourceID3):
    r"""Proxy of C++ itkImageToImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3ID3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3ID3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3ID3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3ID3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3ID3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3ID3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3ID3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3ID3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3ID3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3ID3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterID3ID3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3ID3_cast)

# Register itkImageToImageFilterID3ID3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterID3ID3_swigregister(itkImageToImageFilterID3ID3)
itkImageToImageFilterID3ID3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterID3ID3_cast

class itkImageToImageFilterID3IF3(itk.itkImageSourcePython.itkImageSourceIF3):
    r"""Proxy of C++ itkImageToImageFilterID3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IF3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IF3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IF3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IF3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IF3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IF3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IF3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IF3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IF3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IF3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterID3IF3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IF3_cast)

# Register itkImageToImageFilterID3IF3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterID3IF3_swigregister(itkImageToImageFilterID3IF3)
itkImageToImageFilterID3IF3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterID3IF3_cast

class itkImageToImageFilterID3ISI3(itk.itkImageSourcePython.itkImageSourceISI3):
    r"""Proxy of C++ itkImageToImageFilterID3ISI3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3ISI3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3ISI3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3ISI3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3ISI3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3ISI3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3ISI3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3ISI3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3ISI3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3ISI3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3ISI3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterID3ISI3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3ISI3_cast)

# Register itkImageToImageFilterID3ISI3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterID3ISI3_swigregister(itkImageToImageFilterID3ISI3)
itkImageToImageFilterID3ISI3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterID3ISI3_cast

class itkImageToImageFilterID3ISS3(itk.itkImageSourcePython.itkImageSourceISS3):
    r"""Proxy of C++ itkImageToImageFilterID3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3ISS3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3ISS3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3ISS3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3ISS3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3ISS3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3ISS3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3ISS3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3ISS3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3ISS3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3ISS3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterID3ISS3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3ISS3_cast)

# Register itkImageToImageFilterID3ISS3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterID3ISS3_swigregister(itkImageToImageFilterID3ISS3)
itkImageToImageFilterID3ISS3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterID3ISS3_cast

class itkImageToImageFilterID3IUC3(itk.itkImageSourcePython.itkImageSourceIUC3):
    r"""Proxy of C++ itkImageToImageFilterID3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterID3IUC3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3_cast)

# Register itkImageToImageFilterID3IUC3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3_swigregister(itkImageToImageFilterID3IUC3)
itkImageToImageFilterID3IUC3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterID3IUC3_cast

class itkImageToImageFilterID3IUI3(itk.itkImageSourcePython.itkImageSourceIUI3):
    r"""Proxy of C++ itkImageToImageFilterID3IUI3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUI3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUI3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUI3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUI3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUI3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUI3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUI3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUI3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUI3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUI3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterID3IUI3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUI3_cast)

# Register itkImageToImageFilterID3IUI3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterID3IUI3_swigregister(itkImageToImageFilterID3IUI3)
itkImageToImageFilterID3IUI3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterID3IUI3_cast

class itkImageToImageFilterID3IUL3(itk.itkImageSourcePython.itkImageSourceIUL3):
    r"""Proxy of C++ itkImageToImageFilterID3IUL3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUL3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUL3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUL3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUL3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUL3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUL3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUL3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUL3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUL3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUL3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterID3IUL3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUL3_cast)

# Register itkImageToImageFilterID3IUL3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterID3IUL3_swigregister(itkImageToImageFilterID3IUL3)
itkImageToImageFilterID3IUL3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterID3IUL3_cast

class itkImageToImageFilterID3IUS3(itk.itkImageSourcePython.itkImageSourceIUS3):
    r"""Proxy of C++ itkImageToImageFilterID3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterID3IUS3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3_cast)

# Register itkImageToImageFilterID3IUS3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3_swigregister(itkImageToImageFilterID3IUS3)
itkImageToImageFilterID3IUS3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterID3IUS3_cast

class itkImageToImageFilterID4ID4(itk.itkImageSourcePython.itkImageSourceID4):
    r"""Proxy of C++ itkImageToImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4ID4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4ID4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4ID4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4ID4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4ID4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4ID4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4ID4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4ID4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4ID4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4ID4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterID4ID4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4ID4_cast)

# Register itkImageToImageFilterID4ID4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterID4ID4_swigregister(itkImageToImageFilterID4ID4)
itkImageToImageFilterID4ID4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterID4ID4_cast

class itkImageToImageFilterID4IF4(itk.itkImageSourcePython.itkImageSourceIF4):
    r"""Proxy of C++ itkImageToImageFilterID4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IF4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IF4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IF4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IF4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IF4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IF4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IF4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IF4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IF4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IF4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterID4IF4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IF4_cast)

# Register itkImageToImageFilterID4IF4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterID4IF4_swigregister(itkImageToImageFilterID4IF4)
itkImageToImageFilterID4IF4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterID4IF4_cast

class itkImageToImageFilterID4ISI4(itk.itkImageSourcePython.itkImageSourceISI4):
    r"""Proxy of C++ itkImageToImageFilterID4ISI4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4ISI4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4ISI4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4ISI4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4ISI4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4ISI4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4ISI4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4ISI4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4ISI4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4ISI4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4ISI4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterID4ISI4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4ISI4_cast)

# Register itkImageToImageFilterID4ISI4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterID4ISI4_swigregister(itkImageToImageFilterID4ISI4)
itkImageToImageFilterID4ISI4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterID4ISI4_cast

class itkImageToImageFilterID4ISS4(itk.itkImageSourcePython.itkImageSourceISS4):
    r"""Proxy of C++ itkImageToImageFilterID4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4ISS4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4ISS4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4ISS4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4ISS4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4ISS4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4ISS4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4ISS4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4ISS4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4ISS4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4ISS4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterID4ISS4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4ISS4_cast)

# Register itkImageToImageFilterID4ISS4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterID4ISS4_swigregister(itkImageToImageFilterID4ISS4)
itkImageToImageFilterID4ISS4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterID4ISS4_cast

class itkImageToImageFilterID4IUC4(itk.itkImageSourcePython.itkImageSourceIUC4):
    r"""Proxy of C++ itkImageToImageFilterID4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUC4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUC4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUC4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUC4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUC4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUC4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUC4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUC4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUC4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUC4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterID4IUC4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUC4_cast)

# Register itkImageToImageFilterID4IUC4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterID4IUC4_swigregister(itkImageToImageFilterID4IUC4)
itkImageToImageFilterID4IUC4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterID4IUC4_cast

class itkImageToImageFilterID4IUI4(itk.itkImageSourcePython.itkImageSourceIUI4):
    r"""Proxy of C++ itkImageToImageFilterID4IUI4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUI4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUI4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUI4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUI4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUI4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUI4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUI4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUI4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUI4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUI4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterID4IUI4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUI4_cast)

# Register itkImageToImageFilterID4IUI4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterID4IUI4_swigregister(itkImageToImageFilterID4IUI4)
itkImageToImageFilterID4IUI4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterID4IUI4_cast

class itkImageToImageFilterID4IUL4(itk.itkImageSourcePython.itkImageSourceIUL4):
    r"""Proxy of C++ itkImageToImageFilterID4IUL4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUL4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUL4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUL4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUL4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUL4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUL4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUL4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUL4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUL4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUL4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterID4IUL4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUL4_cast)

# Register itkImageToImageFilterID4IUL4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterID4IUL4_swigregister(itkImageToImageFilterID4IUL4)
itkImageToImageFilterID4IUL4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterID4IUL4_cast

class itkImageToImageFilterID4IUS4(itk.itkImageSourcePython.itkImageSourceIUS4):
    r"""Proxy of C++ itkImageToImageFilterID4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUS4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUS4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUS4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUS4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUS4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUS4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUS4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUS4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUS4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUS4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterID4IUS4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterID4IUS4_cast)

# Register itkImageToImageFilterID4IUS4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterID4IUS4_swigregister(itkImageToImageFilterID4IUS4)
itkImageToImageFilterID4IUS4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterID4IUS4_cast

class itkImageToImageFilterIF2ID2(itk.itkImageSourcePython.itkImageSourceID2):
    r"""Proxy of C++ itkImageToImageFilterIF2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIF2ID2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2_cast)

# Register itkImageToImageFilterIF2ID2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2_swigregister(itkImageToImageFilterIF2ID2)
itkImageToImageFilterIF2ID2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2_cast

class itkImageToImageFilterIF2IF2(itk.itkImageSourcePython.itkImageSourceIF2):
    r"""Proxy of C++ itkImageToImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIF2IF2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2_cast)

# Register itkImageToImageFilterIF2IF2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2_swigregister(itkImageToImageFilterIF2IF2)
itkImageToImageFilterIF2IF2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2_cast

class itkImageToImageFilterIF2ISI2(itk.itkImageSourcePython.itkImageSourceISI2):
    r"""Proxy of C++ itkImageToImageFilterIF2ISI2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ISI2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ISI2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ISI2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ISI2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ISI2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ISI2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ISI2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ISI2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ISI2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ISI2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIF2ISI2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ISI2_cast)

# Register itkImageToImageFilterIF2ISI2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIF2ISI2_swigregister(itkImageToImageFilterIF2ISI2)
itkImageToImageFilterIF2ISI2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIF2ISI2_cast

class itkImageToImageFilterIF2ISS2(itk.itkImageSourcePython.itkImageSourceISS2):
    r"""Proxy of C++ itkImageToImageFilterIF2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ISS2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ISS2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ISS2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ISS2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ISS2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ISS2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ISS2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ISS2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ISS2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ISS2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIF2ISS2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2ISS2_cast)

# Register itkImageToImageFilterIF2ISS2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIF2ISS2_swigregister(itkImageToImageFilterIF2ISS2)
itkImageToImageFilterIF2ISS2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIF2ISS2_cast

class itkImageToImageFilterIF2IUC2(itk.itkImageSourcePython.itkImageSourceIUC2):
    r"""Proxy of C++ itkImageToImageFilterIF2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIF2IUC2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2_cast)

# Register itkImageToImageFilterIF2IUC2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2_swigregister(itkImageToImageFilterIF2IUC2)
itkImageToImageFilterIF2IUC2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUC2_cast

class itkImageToImageFilterIF2IUI2(itk.itkImageSourcePython.itkImageSourceIUI2):
    r"""Proxy of C++ itkImageToImageFilterIF2IUI2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUI2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUI2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUI2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUI2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUI2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUI2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUI2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUI2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUI2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUI2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIF2IUI2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUI2_cast)

# Register itkImageToImageFilterIF2IUI2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUI2_swigregister(itkImageToImageFilterIF2IUI2)
itkImageToImageFilterIF2IUI2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUI2_cast

class itkImageToImageFilterIF2IUL2(itk.itkImageSourcePython.itkImageSourceIUL2):
    r"""Proxy of C++ itkImageToImageFilterIF2IUL2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIF2IUL2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2_cast)

# Register itkImageToImageFilterIF2IUL2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2_swigregister(itkImageToImageFilterIF2IUL2)
itkImageToImageFilterIF2IUL2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUL2_cast

class itkImageToImageFilterIF2IUS2(itk.itkImageSourcePython.itkImageSourceIUS2):
    r"""Proxy of C++ itkImageToImageFilterIF2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIF2IUS2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2_cast)

# Register itkImageToImageFilterIF2IUS2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2_swigregister(itkImageToImageFilterIF2IUS2)
itkImageToImageFilterIF2IUS2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIF2IUS2_cast

class itkImageToImageFilterIF3ID3(itk.itkImageSourcePython.itkImageSourceID3):
    r"""Proxy of C++ itkImageToImageFilterIF3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIF3ID3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3_cast)

# Register itkImageToImageFilterIF3ID3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3_swigregister(itkImageToImageFilterIF3ID3)
itkImageToImageFilterIF3ID3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3_cast

class itkImageToImageFilterIF3IF3(itk.itkImageSourcePython.itkImageSourceIF3):
    r"""Proxy of C++ itkImageToImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIF3IF3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3_cast)

# Register itkImageToImageFilterIF3IF3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3_swigregister(itkImageToImageFilterIF3IF3)
itkImageToImageFilterIF3IF3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3_cast

class itkImageToImageFilterIF3ISI3(itk.itkImageSourcePython.itkImageSourceISI3):
    r"""Proxy of C++ itkImageToImageFilterIF3ISI3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ISI3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ISI3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ISI3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ISI3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ISI3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ISI3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ISI3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ISI3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ISI3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ISI3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIF3ISI3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ISI3_cast)

# Register itkImageToImageFilterIF3ISI3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIF3ISI3_swigregister(itkImageToImageFilterIF3ISI3)
itkImageToImageFilterIF3ISI3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIF3ISI3_cast

class itkImageToImageFilterIF3ISS3(itk.itkImageSourcePython.itkImageSourceISS3):
    r"""Proxy of C++ itkImageToImageFilterIF3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ISS3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ISS3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ISS3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ISS3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ISS3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ISS3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ISS3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ISS3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ISS3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ISS3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIF3ISS3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3ISS3_cast)

# Register itkImageToImageFilterIF3ISS3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIF3ISS3_swigregister(itkImageToImageFilterIF3ISS3)
itkImageToImageFilterIF3ISS3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIF3ISS3_cast

class itkImageToImageFilterIF3IUC3(itk.itkImageSourcePython.itkImageSourceIUC3):
    r"""Proxy of C++ itkImageToImageFilterIF3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIF3IUC3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3_cast)

# Register itkImageToImageFilterIF3IUC3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3_swigregister(itkImageToImageFilterIF3IUC3)
itkImageToImageFilterIF3IUC3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUC3_cast

class itkImageToImageFilterIF3IUI3(itk.itkImageSourcePython.itkImageSourceIUI3):
    r"""Proxy of C++ itkImageToImageFilterIF3IUI3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUI3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUI3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUI3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUI3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUI3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUI3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUI3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUI3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUI3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUI3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIF3IUI3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUI3_cast)

# Register itkImageToImageFilterIF3IUI3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUI3_swigregister(itkImageToImageFilterIF3IUI3)
itkImageToImageFilterIF3IUI3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUI3_cast

class itkImageToImageFilterIF3IUL3(itk.itkImageSourcePython.itkImageSourceIUL3):
    r"""Proxy of C++ itkImageToImageFilterIF3IUL3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUL3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUL3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUL3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUL3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUL3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUL3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUL3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUL3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUL3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUL3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIF3IUL3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUL3_cast)

# Register itkImageToImageFilterIF3IUL3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUL3_swigregister(itkImageToImageFilterIF3IUL3)
itkImageToImageFilterIF3IUL3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUL3_cast

class itkImageToImageFilterIF3IUS3(itk.itkImageSourcePython.itkImageSourceIUS3):
    r"""Proxy of C++ itkImageToImageFilterIF3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIF3IUS3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3_cast)

# Register itkImageToImageFilterIF3IUS3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3_swigregister(itkImageToImageFilterIF3IUS3)
itkImageToImageFilterIF3IUS3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIF3IUS3_cast

class itkImageToImageFilterIF4ID4(itk.itkImageSourcePython.itkImageSourceID4):
    r"""Proxy of C++ itkImageToImageFilterIF4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4ID4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4ID4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4ID4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4ID4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4ID4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4ID4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4ID4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4ID4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4ID4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4ID4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIF4ID4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4ID4_cast)

# Register itkImageToImageFilterIF4ID4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIF4ID4_swigregister(itkImageToImageFilterIF4ID4)
itkImageToImageFilterIF4ID4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIF4ID4_cast

class itkImageToImageFilterIF4IF4(itk.itkImageSourcePython.itkImageSourceIF4):
    r"""Proxy of C++ itkImageToImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIF4IF4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4_cast)

# Register itkImageToImageFilterIF4IF4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4_swigregister(itkImageToImageFilterIF4IF4)
itkImageToImageFilterIF4IF4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4_cast

class itkImageToImageFilterIF4ISI4(itk.itkImageSourcePython.itkImageSourceISI4):
    r"""Proxy of C++ itkImageToImageFilterIF4ISI4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4ISI4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4ISI4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4ISI4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4ISI4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4ISI4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4ISI4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4ISI4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4ISI4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4ISI4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4ISI4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIF4ISI4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4ISI4_cast)

# Register itkImageToImageFilterIF4ISI4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIF4ISI4_swigregister(itkImageToImageFilterIF4ISI4)
itkImageToImageFilterIF4ISI4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIF4ISI4_cast

class itkImageToImageFilterIF4ISS4(itk.itkImageSourcePython.itkImageSourceISS4):
    r"""Proxy of C++ itkImageToImageFilterIF4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4ISS4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4ISS4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4ISS4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4ISS4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4ISS4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4ISS4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4ISS4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4ISS4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4ISS4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4ISS4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIF4ISS4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4ISS4_cast)

# Register itkImageToImageFilterIF4ISS4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIF4ISS4_swigregister(itkImageToImageFilterIF4ISS4)
itkImageToImageFilterIF4ISS4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIF4ISS4_cast

class itkImageToImageFilterIF4IUC4(itk.itkImageSourcePython.itkImageSourceIUC4):
    r"""Proxy of C++ itkImageToImageFilterIF4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUC4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUC4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUC4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUC4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUC4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUC4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUC4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUC4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUC4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUC4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIF4IUC4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUC4_cast)

# Register itkImageToImageFilterIF4IUC4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUC4_swigregister(itkImageToImageFilterIF4IUC4)
itkImageToImageFilterIF4IUC4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIF4IUC4_cast

class itkImageToImageFilterIF4IUI4(itk.itkImageSourcePython.itkImageSourceIUI4):
    r"""Proxy of C++ itkImageToImageFilterIF4IUI4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUI4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUI4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUI4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUI4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUI4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUI4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUI4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUI4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUI4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUI4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIF4IUI4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUI4_cast)

# Register itkImageToImageFilterIF4IUI4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUI4_swigregister(itkImageToImageFilterIF4IUI4)
itkImageToImageFilterIF4IUI4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIF4IUI4_cast

class itkImageToImageFilterIF4IUL4(itk.itkImageSourcePython.itkImageSourceIUL4):
    r"""Proxy of C++ itkImageToImageFilterIF4IUL4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUL4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUL4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUL4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUL4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUL4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUL4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUL4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUL4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUL4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUL4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIF4IUL4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUL4_cast)

# Register itkImageToImageFilterIF4IUL4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUL4_swigregister(itkImageToImageFilterIF4IUL4)
itkImageToImageFilterIF4IUL4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIF4IUL4_cast

class itkImageToImageFilterIF4IUS4(itk.itkImageSourcePython.itkImageSourceIUS4):
    r"""Proxy of C++ itkImageToImageFilterIF4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUS4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUS4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUS4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUS4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUS4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUS4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUS4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUS4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUS4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUS4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIF4IUS4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUS4_cast)

# Register itkImageToImageFilterIF4IUS4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIF4IUS4_swigregister(itkImageToImageFilterIF4IUS4)
itkImageToImageFilterIF4IUS4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIF4IUS4_cast

class itkImageToImageFilterIRGBAUC2IRGBAUC2(itk.itkImageSourcePython.itkImageSourceIRGBAUC2):
    r"""Proxy of C++ itkImageToImageFilterIRGBAUC2IRGBAUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIRGBAUC2IRGBAUC2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2_cast)

# Register itkImageToImageFilterIRGBAUC2IRGBAUC2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2_swigregister(itkImageToImageFilterIRGBAUC2IRGBAUC2)
itkImageToImageFilterIRGBAUC2IRGBAUC2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2_cast

class itkImageToImageFilterIRGBAUC3IRGBAUC3(itk.itkImageSourcePython.itkImageSourceIRGBAUC3):
    r"""Proxy of C++ itkImageToImageFilterIRGBAUC3IRGBAUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIRGBAUC3IRGBAUC3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3_cast)

# Register itkImageToImageFilterIRGBAUC3IRGBAUC3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3_swigregister(itkImageToImageFilterIRGBAUC3IRGBAUC3)
itkImageToImageFilterIRGBAUC3IRGBAUC3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3_cast

class itkImageToImageFilterIRGBAUC4IRGBAUC4(itk.itkImageSourcePython.itkImageSourceIRGBAUC4):
    r"""Proxy of C++ itkImageToImageFilterIRGBAUC4IRGBAUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC4IRGBAUC4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC4IRGBAUC4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC4IRGBAUC4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC4IRGBAUC4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC4IRGBAUC4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC4IRGBAUC4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC4IRGBAUC4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC4IRGBAUC4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC4IRGBAUC4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC4IRGBAUC4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIRGBAUC4IRGBAUC4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC4IRGBAUC4_cast)

# Register itkImageToImageFilterIRGBAUC4IRGBAUC4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC4IRGBAUC4_swigregister(itkImageToImageFilterIRGBAUC4IRGBAUC4)
itkImageToImageFilterIRGBAUC4IRGBAUC4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC4IRGBAUC4_cast

class itkImageToImageFilterIRGBUC2IRGBUC2(itk.itkImageSourcePython.itkImageSourceIRGBUC2):
    r"""Proxy of C++ itkImageToImageFilterIRGBUC2IRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIRGBUC2IRGBUC2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2_cast)

# Register itkImageToImageFilterIRGBUC2IRGBUC2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2_swigregister(itkImageToImageFilterIRGBUC2IRGBUC2)
itkImageToImageFilterIRGBUC2IRGBUC2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2_cast

class itkImageToImageFilterIRGBUC3IRGBUC3(itk.itkImageSourcePython.itkImageSourceIRGBUC3):
    r"""Proxy of C++ itkImageToImageFilterIRGBUC3IRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIRGBUC3IRGBUC3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3_cast)

# Register itkImageToImageFilterIRGBUC3IRGBUC3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3_swigregister(itkImageToImageFilterIRGBUC3IRGBUC3)
itkImageToImageFilterIRGBUC3IRGBUC3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3_cast

class itkImageToImageFilterIRGBUC4IRGBUC4(itk.itkImageSourcePython.itkImageSourceIRGBUC4):
    r"""Proxy of C++ itkImageToImageFilterIRGBUC4IRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC4IRGBUC4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC4IRGBUC4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC4IRGBUC4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC4IRGBUC4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC4IRGBUC4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC4IRGBUC4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC4IRGBUC4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC4IRGBUC4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC4IRGBUC4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC4IRGBUC4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIRGBUC4IRGBUC4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC4IRGBUC4_cast)

# Register itkImageToImageFilterIRGBUC4IRGBUC4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC4IRGBUC4_swigregister(itkImageToImageFilterIRGBUC4IRGBUC4)
itkImageToImageFilterIRGBUC4IRGBUC4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC4IRGBUC4_cast

class itkImageToImageFilterISI2ID2(itk.itkImageSourcePython.itkImageSourceID2):
    r"""Proxy of C++ itkImageToImageFilterISI2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2ID2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2ID2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2ID2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2ID2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2ID2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2ID2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2ID2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2ID2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2ID2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2ID2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISI2ID2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2ID2_cast)

# Register itkImageToImageFilterISI2ID2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISI2ID2_swigregister(itkImageToImageFilterISI2ID2)
itkImageToImageFilterISI2ID2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISI2ID2_cast

class itkImageToImageFilterISI2IF2(itk.itkImageSourcePython.itkImageSourceIF2):
    r"""Proxy of C++ itkImageToImageFilterISI2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IF2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IF2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IF2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IF2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IF2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IF2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IF2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IF2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IF2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IF2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISI2IF2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IF2_cast)

# Register itkImageToImageFilterISI2IF2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISI2IF2_swigregister(itkImageToImageFilterISI2IF2)
itkImageToImageFilterISI2IF2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISI2IF2_cast

class itkImageToImageFilterISI2ISI2(itk.itkImageSourcePython.itkImageSourceISI2):
    r"""Proxy of C++ itkImageToImageFilterISI2ISI2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2ISI2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2ISI2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2ISI2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2ISI2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2ISI2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2ISI2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2ISI2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2ISI2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2ISI2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2ISI2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISI2ISI2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2ISI2_cast)

# Register itkImageToImageFilterISI2ISI2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISI2ISI2_swigregister(itkImageToImageFilterISI2ISI2)
itkImageToImageFilterISI2ISI2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISI2ISI2_cast

class itkImageToImageFilterISI2ISS2(itk.itkImageSourcePython.itkImageSourceISS2):
    r"""Proxy of C++ itkImageToImageFilterISI2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2ISS2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2ISS2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2ISS2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2ISS2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2ISS2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2ISS2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2ISS2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2ISS2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2ISS2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2ISS2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISI2ISS2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2ISS2_cast)

# Register itkImageToImageFilterISI2ISS2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISI2ISS2_swigregister(itkImageToImageFilterISI2ISS2)
itkImageToImageFilterISI2ISS2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISI2ISS2_cast

class itkImageToImageFilterISI2IUC2(itk.itkImageSourcePython.itkImageSourceIUC2):
    r"""Proxy of C++ itkImageToImageFilterISI2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUC2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUC2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUC2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUC2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUC2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUC2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUC2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUC2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUC2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUC2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISI2IUC2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUC2_cast)

# Register itkImageToImageFilterISI2IUC2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUC2_swigregister(itkImageToImageFilterISI2IUC2)
itkImageToImageFilterISI2IUC2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISI2IUC2_cast

class itkImageToImageFilterISI2IUI2(itk.itkImageSourcePython.itkImageSourceIUI2):
    r"""Proxy of C++ itkImageToImageFilterISI2IUI2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUI2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUI2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUI2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUI2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUI2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUI2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUI2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUI2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUI2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUI2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISI2IUI2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUI2_cast)

# Register itkImageToImageFilterISI2IUI2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUI2_swigregister(itkImageToImageFilterISI2IUI2)
itkImageToImageFilterISI2IUI2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISI2IUI2_cast

class itkImageToImageFilterISI2IUL2(itk.itkImageSourcePython.itkImageSourceIUL2):
    r"""Proxy of C++ itkImageToImageFilterISI2IUL2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUL2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUL2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUL2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUL2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUL2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUL2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUL2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUL2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUL2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUL2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISI2IUL2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUL2_cast)

# Register itkImageToImageFilterISI2IUL2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUL2_swigregister(itkImageToImageFilterISI2IUL2)
itkImageToImageFilterISI2IUL2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISI2IUL2_cast

class itkImageToImageFilterISI2IUS2(itk.itkImageSourcePython.itkImageSourceIUS2):
    r"""Proxy of C++ itkImageToImageFilterISI2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUS2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUS2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUS2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUS2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUS2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUS2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUS2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUS2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUS2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUS2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISI2IUS2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUS2_cast)

# Register itkImageToImageFilterISI2IUS2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISI2IUS2_swigregister(itkImageToImageFilterISI2IUS2)
itkImageToImageFilterISI2IUS2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISI2IUS2_cast

class itkImageToImageFilterISI3ID3(itk.itkImageSourcePython.itkImageSourceID3):
    r"""Proxy of C++ itkImageToImageFilterISI3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3ID3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3ID3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3ID3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3ID3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3ID3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3ID3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3ID3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3ID3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3ID3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3ID3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISI3ID3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3ID3_cast)

# Register itkImageToImageFilterISI3ID3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISI3ID3_swigregister(itkImageToImageFilterISI3ID3)
itkImageToImageFilterISI3ID3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISI3ID3_cast

class itkImageToImageFilterISI3IF3(itk.itkImageSourcePython.itkImageSourceIF3):
    r"""Proxy of C++ itkImageToImageFilterISI3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IF3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IF3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IF3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IF3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IF3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IF3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IF3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IF3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IF3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IF3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISI3IF3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IF3_cast)

# Register itkImageToImageFilterISI3IF3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISI3IF3_swigregister(itkImageToImageFilterISI3IF3)
itkImageToImageFilterISI3IF3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISI3IF3_cast

class itkImageToImageFilterISI3ISI3(itk.itkImageSourcePython.itkImageSourceISI3):
    r"""Proxy of C++ itkImageToImageFilterISI3ISI3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3ISI3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3ISI3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3ISI3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3ISI3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3ISI3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3ISI3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3ISI3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3ISI3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3ISI3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3ISI3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISI3ISI3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3ISI3_cast)

# Register itkImageToImageFilterISI3ISI3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISI3ISI3_swigregister(itkImageToImageFilterISI3ISI3)
itkImageToImageFilterISI3ISI3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISI3ISI3_cast

class itkImageToImageFilterISI3ISS3(itk.itkImageSourcePython.itkImageSourceISS3):
    r"""Proxy of C++ itkImageToImageFilterISI3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3ISS3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3ISS3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3ISS3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3ISS3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3ISS3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3ISS3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3ISS3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3ISS3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3ISS3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3ISS3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISI3ISS3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3ISS3_cast)

# Register itkImageToImageFilterISI3ISS3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISI3ISS3_swigregister(itkImageToImageFilterISI3ISS3)
itkImageToImageFilterISI3ISS3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISI3ISS3_cast

class itkImageToImageFilterISI3IUC3(itk.itkImageSourcePython.itkImageSourceIUC3):
    r"""Proxy of C++ itkImageToImageFilterISI3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUC3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUC3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUC3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUC3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUC3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUC3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUC3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUC3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUC3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUC3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISI3IUC3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUC3_cast)

# Register itkImageToImageFilterISI3IUC3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUC3_swigregister(itkImageToImageFilterISI3IUC3)
itkImageToImageFilterISI3IUC3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISI3IUC3_cast

class itkImageToImageFilterISI3IUI3(itk.itkImageSourcePython.itkImageSourceIUI3):
    r"""Proxy of C++ itkImageToImageFilterISI3IUI3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUI3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUI3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUI3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUI3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUI3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUI3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUI3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUI3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUI3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUI3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISI3IUI3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUI3_cast)

# Register itkImageToImageFilterISI3IUI3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUI3_swigregister(itkImageToImageFilterISI3IUI3)
itkImageToImageFilterISI3IUI3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISI3IUI3_cast

class itkImageToImageFilterISI3IUL3(itk.itkImageSourcePython.itkImageSourceIUL3):
    r"""Proxy of C++ itkImageToImageFilterISI3IUL3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUL3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUL3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUL3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUL3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUL3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUL3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUL3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUL3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUL3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUL3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISI3IUL3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUL3_cast)

# Register itkImageToImageFilterISI3IUL3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUL3_swigregister(itkImageToImageFilterISI3IUL3)
itkImageToImageFilterISI3IUL3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISI3IUL3_cast

class itkImageToImageFilterISI3IUS3(itk.itkImageSourcePython.itkImageSourceIUS3):
    r"""Proxy of C++ itkImageToImageFilterISI3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUS3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUS3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUS3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUS3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUS3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUS3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUS3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUS3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUS3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUS3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISI3IUS3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUS3_cast)

# Register itkImageToImageFilterISI3IUS3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISI3IUS3_swigregister(itkImageToImageFilterISI3IUS3)
itkImageToImageFilterISI3IUS3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISI3IUS3_cast

class itkImageToImageFilterISI4ID4(itk.itkImageSourcePython.itkImageSourceID4):
    r"""Proxy of C++ itkImageToImageFilterISI4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4ID4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4ID4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4ID4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4ID4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4ID4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4ID4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4ID4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4ID4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4ID4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4ID4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISI4ID4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4ID4_cast)

# Register itkImageToImageFilterISI4ID4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISI4ID4_swigregister(itkImageToImageFilterISI4ID4)
itkImageToImageFilterISI4ID4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISI4ID4_cast

class itkImageToImageFilterISI4IF4(itk.itkImageSourcePython.itkImageSourceIF4):
    r"""Proxy of C++ itkImageToImageFilterISI4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IF4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IF4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IF4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IF4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IF4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IF4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IF4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IF4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IF4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IF4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISI4IF4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IF4_cast)

# Register itkImageToImageFilterISI4IF4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISI4IF4_swigregister(itkImageToImageFilterISI4IF4)
itkImageToImageFilterISI4IF4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISI4IF4_cast

class itkImageToImageFilterISI4ISI4(itk.itkImageSourcePython.itkImageSourceISI4):
    r"""Proxy of C++ itkImageToImageFilterISI4ISI4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4ISI4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4ISI4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4ISI4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4ISI4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4ISI4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4ISI4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4ISI4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4ISI4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4ISI4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4ISI4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISI4ISI4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4ISI4_cast)

# Register itkImageToImageFilterISI4ISI4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISI4ISI4_swigregister(itkImageToImageFilterISI4ISI4)
itkImageToImageFilterISI4ISI4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISI4ISI4_cast

class itkImageToImageFilterISI4ISS4(itk.itkImageSourcePython.itkImageSourceISS4):
    r"""Proxy of C++ itkImageToImageFilterISI4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4ISS4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4ISS4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4ISS4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4ISS4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4ISS4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4ISS4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4ISS4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4ISS4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4ISS4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4ISS4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISI4ISS4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4ISS4_cast)

# Register itkImageToImageFilterISI4ISS4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISI4ISS4_swigregister(itkImageToImageFilterISI4ISS4)
itkImageToImageFilterISI4ISS4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISI4ISS4_cast

class itkImageToImageFilterISI4IUC4(itk.itkImageSourcePython.itkImageSourceIUC4):
    r"""Proxy of C++ itkImageToImageFilterISI4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUC4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUC4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUC4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUC4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUC4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUC4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUC4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUC4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUC4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUC4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISI4IUC4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUC4_cast)

# Register itkImageToImageFilterISI4IUC4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUC4_swigregister(itkImageToImageFilterISI4IUC4)
itkImageToImageFilterISI4IUC4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISI4IUC4_cast

class itkImageToImageFilterISI4IUI4(itk.itkImageSourcePython.itkImageSourceIUI4):
    r"""Proxy of C++ itkImageToImageFilterISI4IUI4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUI4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUI4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUI4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUI4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUI4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUI4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUI4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUI4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUI4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUI4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISI4IUI4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUI4_cast)

# Register itkImageToImageFilterISI4IUI4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUI4_swigregister(itkImageToImageFilterISI4IUI4)
itkImageToImageFilterISI4IUI4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISI4IUI4_cast

class itkImageToImageFilterISI4IUL4(itk.itkImageSourcePython.itkImageSourceIUL4):
    r"""Proxy of C++ itkImageToImageFilterISI4IUL4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUL4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUL4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUL4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUL4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUL4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUL4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUL4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUL4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUL4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUL4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISI4IUL4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUL4_cast)

# Register itkImageToImageFilterISI4IUL4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUL4_swigregister(itkImageToImageFilterISI4IUL4)
itkImageToImageFilterISI4IUL4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISI4IUL4_cast

class itkImageToImageFilterISI4IUS4(itk.itkImageSourcePython.itkImageSourceIUS4):
    r"""Proxy of C++ itkImageToImageFilterISI4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUS4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUS4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUS4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUS4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUS4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUS4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUS4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUS4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUS4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUS4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISI4IUS4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUS4_cast)

# Register itkImageToImageFilterISI4IUS4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISI4IUS4_swigregister(itkImageToImageFilterISI4IUS4)
itkImageToImageFilterISI4IUS4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISI4IUS4_cast

class itkImageToImageFilterISS2ID2(itk.itkImageSourcePython.itkImageSourceID2):
    r"""Proxy of C++ itkImageToImageFilterISS2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2ID2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2ID2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2ID2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2ID2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2ID2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2ID2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2ID2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2ID2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2ID2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2ID2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISS2ID2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2ID2_cast)

# Register itkImageToImageFilterISS2ID2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISS2ID2_swigregister(itkImageToImageFilterISS2ID2)
itkImageToImageFilterISS2ID2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISS2ID2_cast

class itkImageToImageFilterISS2IF2(itk.itkImageSourcePython.itkImageSourceIF2):
    r"""Proxy of C++ itkImageToImageFilterISS2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IF2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IF2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IF2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IF2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IF2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IF2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IF2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IF2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IF2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IF2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISS2IF2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IF2_cast)

# Register itkImageToImageFilterISS2IF2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISS2IF2_swigregister(itkImageToImageFilterISS2IF2)
itkImageToImageFilterISS2IF2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISS2IF2_cast

class itkImageToImageFilterISS2ISI2(itk.itkImageSourcePython.itkImageSourceISI2):
    r"""Proxy of C++ itkImageToImageFilterISS2ISI2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2ISI2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2ISI2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2ISI2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2ISI2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2ISI2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2ISI2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2ISI2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2ISI2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2ISI2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2ISI2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISS2ISI2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2ISI2_cast)

# Register itkImageToImageFilterISS2ISI2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISS2ISI2_swigregister(itkImageToImageFilterISS2ISI2)
itkImageToImageFilterISS2ISI2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISS2ISI2_cast

class itkImageToImageFilterISS2ISS2(itk.itkImageSourcePython.itkImageSourceISS2):
    r"""Proxy of C++ itkImageToImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2_cast)

# Register itkImageToImageFilterISS2ISS2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2_swigregister(itkImageToImageFilterISS2ISS2)
itkImageToImageFilterISS2ISS2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2_cast

class itkImageToImageFilterISS2IUC2(itk.itkImageSourcePython.itkImageSourceIUC2):
    r"""Proxy of C++ itkImageToImageFilterISS2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUC2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUC2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUC2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUC2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUC2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUC2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUC2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUC2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUC2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUC2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISS2IUC2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUC2_cast)

# Register itkImageToImageFilterISS2IUC2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUC2_swigregister(itkImageToImageFilterISS2IUC2)
itkImageToImageFilterISS2IUC2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISS2IUC2_cast

class itkImageToImageFilterISS2IUI2(itk.itkImageSourcePython.itkImageSourceIUI2):
    r"""Proxy of C++ itkImageToImageFilterISS2IUI2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUI2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUI2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUI2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUI2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUI2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUI2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUI2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUI2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUI2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUI2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISS2IUI2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUI2_cast)

# Register itkImageToImageFilterISS2IUI2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUI2_swigregister(itkImageToImageFilterISS2IUI2)
itkImageToImageFilterISS2IUI2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISS2IUI2_cast

class itkImageToImageFilterISS2IUL2(itk.itkImageSourcePython.itkImageSourceIUL2):
    r"""Proxy of C++ itkImageToImageFilterISS2IUL2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUL2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUL2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUL2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUL2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUL2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUL2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUL2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUL2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUL2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUL2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISS2IUL2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUL2_cast)

# Register itkImageToImageFilterISS2IUL2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUL2_swigregister(itkImageToImageFilterISS2IUL2)
itkImageToImageFilterISS2IUL2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISS2IUL2_cast

class itkImageToImageFilterISS2IUS2(itk.itkImageSourcePython.itkImageSourceIUS2):
    r"""Proxy of C++ itkImageToImageFilterISS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUS2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUS2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUS2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUS2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUS2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUS2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUS2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUS2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUS2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUS2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISS2IUS2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUS2_cast)

# Register itkImageToImageFilterISS2IUS2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISS2IUS2_swigregister(itkImageToImageFilterISS2IUS2)
itkImageToImageFilterISS2IUS2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISS2IUS2_cast

class itkImageToImageFilterISS3ID3(itk.itkImageSourcePython.itkImageSourceID3):
    r"""Proxy of C++ itkImageToImageFilterISS3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3ID3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3ID3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3ID3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3ID3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3ID3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3ID3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3ID3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3ID3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3ID3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3ID3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISS3ID3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3ID3_cast)

# Register itkImageToImageFilterISS3ID3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISS3ID3_swigregister(itkImageToImageFilterISS3ID3)
itkImageToImageFilterISS3ID3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISS3ID3_cast

class itkImageToImageFilterISS3IF3(itk.itkImageSourcePython.itkImageSourceIF3):
    r"""Proxy of C++ itkImageToImageFilterISS3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IF3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IF3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IF3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IF3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IF3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IF3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IF3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IF3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IF3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IF3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISS3IF3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IF3_cast)

# Register itkImageToImageFilterISS3IF3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISS3IF3_swigregister(itkImageToImageFilterISS3IF3)
itkImageToImageFilterISS3IF3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISS3IF3_cast

class itkImageToImageFilterISS3ISI3(itk.itkImageSourcePython.itkImageSourceISI3):
    r"""Proxy of C++ itkImageToImageFilterISS3ISI3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3ISI3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3ISI3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3ISI3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3ISI3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3ISI3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3ISI3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3ISI3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3ISI3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3ISI3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3ISI3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISS3ISI3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3ISI3_cast)

# Register itkImageToImageFilterISS3ISI3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISS3ISI3_swigregister(itkImageToImageFilterISS3ISI3)
itkImageToImageFilterISS3ISI3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISS3ISI3_cast

class itkImageToImageFilterISS3ISS3(itk.itkImageSourcePython.itkImageSourceISS3):
    r"""Proxy of C++ itkImageToImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3_cast)

# Register itkImageToImageFilterISS3ISS3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3_swigregister(itkImageToImageFilterISS3ISS3)
itkImageToImageFilterISS3ISS3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3_cast

class itkImageToImageFilterISS3IUC3(itk.itkImageSourcePython.itkImageSourceIUC3):
    r"""Proxy of C++ itkImageToImageFilterISS3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUC3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUC3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUC3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUC3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUC3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUC3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUC3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUC3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUC3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUC3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISS3IUC3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUC3_cast)

# Register itkImageToImageFilterISS3IUC3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUC3_swigregister(itkImageToImageFilterISS3IUC3)
itkImageToImageFilterISS3IUC3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISS3IUC3_cast

class itkImageToImageFilterISS3IUI3(itk.itkImageSourcePython.itkImageSourceIUI3):
    r"""Proxy of C++ itkImageToImageFilterISS3IUI3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUI3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUI3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUI3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUI3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUI3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUI3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUI3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUI3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUI3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUI3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISS3IUI3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUI3_cast)

# Register itkImageToImageFilterISS3IUI3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUI3_swigregister(itkImageToImageFilterISS3IUI3)
itkImageToImageFilterISS3IUI3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISS3IUI3_cast

class itkImageToImageFilterISS3IUL3(itk.itkImageSourcePython.itkImageSourceIUL3):
    r"""Proxy of C++ itkImageToImageFilterISS3IUL3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUL3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUL3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUL3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUL3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUL3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUL3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUL3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUL3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUL3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUL3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISS3IUL3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUL3_cast)

# Register itkImageToImageFilterISS3IUL3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUL3_swigregister(itkImageToImageFilterISS3IUL3)
itkImageToImageFilterISS3IUL3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISS3IUL3_cast

class itkImageToImageFilterISS3IUS3(itk.itkImageSourcePython.itkImageSourceIUS3):
    r"""Proxy of C++ itkImageToImageFilterISS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUS3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUS3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUS3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUS3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUS3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUS3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUS3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUS3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUS3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUS3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISS3IUS3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUS3_cast)

# Register itkImageToImageFilterISS3IUS3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISS3IUS3_swigregister(itkImageToImageFilterISS3IUS3)
itkImageToImageFilterISS3IUS3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISS3IUS3_cast

class itkImageToImageFilterISS4ID4(itk.itkImageSourcePython.itkImageSourceID4):
    r"""Proxy of C++ itkImageToImageFilterISS4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4ID4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4ID4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4ID4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4ID4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4ID4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4ID4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4ID4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4ID4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4ID4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4ID4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISS4ID4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4ID4_cast)

# Register itkImageToImageFilterISS4ID4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISS4ID4_swigregister(itkImageToImageFilterISS4ID4)
itkImageToImageFilterISS4ID4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISS4ID4_cast

class itkImageToImageFilterISS4IF4(itk.itkImageSourcePython.itkImageSourceIF4):
    r"""Proxy of C++ itkImageToImageFilterISS4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IF4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IF4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IF4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IF4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IF4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IF4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IF4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IF4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IF4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IF4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISS4IF4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IF4_cast)

# Register itkImageToImageFilterISS4IF4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISS4IF4_swigregister(itkImageToImageFilterISS4IF4)
itkImageToImageFilterISS4IF4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISS4IF4_cast

class itkImageToImageFilterISS4ISI4(itk.itkImageSourcePython.itkImageSourceISI4):
    r"""Proxy of C++ itkImageToImageFilterISS4ISI4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4ISI4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4ISI4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4ISI4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4ISI4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4ISI4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4ISI4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4ISI4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4ISI4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4ISI4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4ISI4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISS4ISI4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4ISI4_cast)

# Register itkImageToImageFilterISS4ISI4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISS4ISI4_swigregister(itkImageToImageFilterISS4ISI4)
itkImageToImageFilterISS4ISI4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISS4ISI4_cast

class itkImageToImageFilterISS4ISS4(itk.itkImageSourcePython.itkImageSourceISS4):
    r"""Proxy of C++ itkImageToImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISS4ISS4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4_cast)

# Register itkImageToImageFilterISS4ISS4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4_swigregister(itkImageToImageFilterISS4ISS4)
itkImageToImageFilterISS4ISS4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4_cast

class itkImageToImageFilterISS4IUC4(itk.itkImageSourcePython.itkImageSourceIUC4):
    r"""Proxy of C++ itkImageToImageFilterISS4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUC4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUC4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUC4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUC4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUC4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUC4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUC4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUC4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUC4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUC4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISS4IUC4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUC4_cast)

# Register itkImageToImageFilterISS4IUC4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUC4_swigregister(itkImageToImageFilterISS4IUC4)
itkImageToImageFilterISS4IUC4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISS4IUC4_cast

class itkImageToImageFilterISS4IUI4(itk.itkImageSourcePython.itkImageSourceIUI4):
    r"""Proxy of C++ itkImageToImageFilterISS4IUI4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUI4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUI4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUI4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUI4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUI4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUI4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUI4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUI4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUI4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUI4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISS4IUI4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUI4_cast)

# Register itkImageToImageFilterISS4IUI4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUI4_swigregister(itkImageToImageFilterISS4IUI4)
itkImageToImageFilterISS4IUI4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISS4IUI4_cast

class itkImageToImageFilterISS4IUL4(itk.itkImageSourcePython.itkImageSourceIUL4):
    r"""Proxy of C++ itkImageToImageFilterISS4IUL4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUL4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUL4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUL4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUL4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUL4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUL4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUL4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUL4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUL4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUL4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISS4IUL4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUL4_cast)

# Register itkImageToImageFilterISS4IUL4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUL4_swigregister(itkImageToImageFilterISS4IUL4)
itkImageToImageFilterISS4IUL4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISS4IUL4_cast

class itkImageToImageFilterISS4IUS4(itk.itkImageSourcePython.itkImageSourceIUS4):
    r"""Proxy of C++ itkImageToImageFilterISS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUS4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUS4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUS4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUS4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUS4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUS4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUS4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUS4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUS4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUS4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterISS4IUS4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUS4_cast)

# Register itkImageToImageFilterISS4IUS4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterISS4IUS4_swigregister(itkImageToImageFilterISS4IUS4)
itkImageToImageFilterISS4IUS4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterISS4IUS4_cast

class itkImageToImageFilterIUC2ID2(itk.itkImageSourcePython.itkImageSourceID2):
    r"""Proxy of C++ itkImageToImageFilterIUC2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUC2ID2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2_cast)

# Register itkImageToImageFilterIUC2ID2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2_swigregister(itkImageToImageFilterIUC2ID2)
itkImageToImageFilterIUC2ID2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2_cast

class itkImageToImageFilterIUC2IF2(itk.itkImageSourcePython.itkImageSourceIF2):
    r"""Proxy of C++ itkImageToImageFilterIUC2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUC2IF2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2_cast)

# Register itkImageToImageFilterIUC2IF2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2_swigregister(itkImageToImageFilterIUC2IF2)
itkImageToImageFilterIUC2IF2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2_cast

class itkImageToImageFilterIUC2ISI2(itk.itkImageSourcePython.itkImageSourceISI2):
    r"""Proxy of C++ itkImageToImageFilterIUC2ISI2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ISI2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ISI2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ISI2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ISI2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ISI2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ISI2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ISI2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ISI2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ISI2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ISI2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUC2ISI2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ISI2_cast)

# Register itkImageToImageFilterIUC2ISI2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ISI2_swigregister(itkImageToImageFilterIUC2ISI2)
itkImageToImageFilterIUC2ISI2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUC2ISI2_cast

class itkImageToImageFilterIUC2ISS2(itk.itkImageSourcePython.itkImageSourceISS2):
    r"""Proxy of C++ itkImageToImageFilterIUC2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ISS2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ISS2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ISS2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ISS2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ISS2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ISS2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ISS2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ISS2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ISS2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ISS2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUC2ISS2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ISS2_cast)

# Register itkImageToImageFilterIUC2ISS2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUC2ISS2_swigregister(itkImageToImageFilterIUC2ISS2)
itkImageToImageFilterIUC2ISS2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUC2ISS2_cast

class itkImageToImageFilterIUC2IUC2(itk.itkImageSourcePython.itkImageSourceIUC2):
    r"""Proxy of C++ itkImageToImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2_cast)

# Register itkImageToImageFilterIUC2IUC2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2_swigregister(itkImageToImageFilterIUC2IUC2)
itkImageToImageFilterIUC2IUC2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2_cast

class itkImageToImageFilterIUC2IUI2(itk.itkImageSourcePython.itkImageSourceIUI2):
    r"""Proxy of C++ itkImageToImageFilterIUC2IUI2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUI2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUI2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUI2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUI2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUI2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUI2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUI2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUI2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUI2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUI2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUC2IUI2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUI2_cast)

# Register itkImageToImageFilterIUC2IUI2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUI2_swigregister(itkImageToImageFilterIUC2IUI2)
itkImageToImageFilterIUC2IUI2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUI2_cast

class itkImageToImageFilterIUC2IUL2(itk.itkImageSourcePython.itkImageSourceIUL2):
    r"""Proxy of C++ itkImageToImageFilterIUC2IUL2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUC2IUL2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2_cast)

# Register itkImageToImageFilterIUC2IUL2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2_swigregister(itkImageToImageFilterIUC2IUL2)
itkImageToImageFilterIUC2IUL2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUL2_cast

class itkImageToImageFilterIUC2IUS2(itk.itkImageSourcePython.itkImageSourceIUS2):
    r"""Proxy of C++ itkImageToImageFilterIUC2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUC2IUS2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2_cast)

# Register itkImageToImageFilterIUC2IUS2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2_swigregister(itkImageToImageFilterIUC2IUS2)
itkImageToImageFilterIUC2IUS2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUS2_cast

class itkImageToImageFilterIUC3ID3(itk.itkImageSourcePython.itkImageSourceID3):
    r"""Proxy of C++ itkImageToImageFilterIUC3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUC3ID3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3_cast)

# Register itkImageToImageFilterIUC3ID3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3_swigregister(itkImageToImageFilterIUC3ID3)
itkImageToImageFilterIUC3ID3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3_cast

class itkImageToImageFilterIUC3IF3(itk.itkImageSourcePython.itkImageSourceIF3):
    r"""Proxy of C++ itkImageToImageFilterIUC3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUC3IF3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3_cast)

# Register itkImageToImageFilterIUC3IF3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3_swigregister(itkImageToImageFilterIUC3IF3)
itkImageToImageFilterIUC3IF3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3_cast

class itkImageToImageFilterIUC3ISI3(itk.itkImageSourcePython.itkImageSourceISI3):
    r"""Proxy of C++ itkImageToImageFilterIUC3ISI3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ISI3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ISI3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ISI3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ISI3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ISI3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ISI3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ISI3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ISI3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ISI3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ISI3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUC3ISI3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ISI3_cast)

# Register itkImageToImageFilterIUC3ISI3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ISI3_swigregister(itkImageToImageFilterIUC3ISI3)
itkImageToImageFilterIUC3ISI3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUC3ISI3_cast

class itkImageToImageFilterIUC3ISS3(itk.itkImageSourcePython.itkImageSourceISS3):
    r"""Proxy of C++ itkImageToImageFilterIUC3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ISS3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ISS3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ISS3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ISS3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ISS3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ISS3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ISS3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ISS3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ISS3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ISS3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUC3ISS3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ISS3_cast)

# Register itkImageToImageFilterIUC3ISS3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUC3ISS3_swigregister(itkImageToImageFilterIUC3ISS3)
itkImageToImageFilterIUC3ISS3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUC3ISS3_cast

class itkImageToImageFilterIUC3IUC3(itk.itkImageSourcePython.itkImageSourceIUC3):
    r"""Proxy of C++ itkImageToImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3_cast)

# Register itkImageToImageFilterIUC3IUC3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3_swigregister(itkImageToImageFilterIUC3IUC3)
itkImageToImageFilterIUC3IUC3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3_cast

class itkImageToImageFilterIUC3IUI3(itk.itkImageSourcePython.itkImageSourceIUI3):
    r"""Proxy of C++ itkImageToImageFilterIUC3IUI3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUI3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUI3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUI3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUI3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUI3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUI3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUI3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUI3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUI3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUI3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUC3IUI3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUI3_cast)

# Register itkImageToImageFilterIUC3IUI3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUI3_swigregister(itkImageToImageFilterIUC3IUI3)
itkImageToImageFilterIUC3IUI3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUI3_cast

class itkImageToImageFilterIUC3IUL3(itk.itkImageSourcePython.itkImageSourceIUL3):
    r"""Proxy of C++ itkImageToImageFilterIUC3IUL3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUC3IUL3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3_cast)

# Register itkImageToImageFilterIUC3IUL3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3_swigregister(itkImageToImageFilterIUC3IUL3)
itkImageToImageFilterIUC3IUL3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUL3_cast

class itkImageToImageFilterIUC3IUS3(itk.itkImageSourcePython.itkImageSourceIUS3):
    r"""Proxy of C++ itkImageToImageFilterIUC3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUC3IUS3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3_cast)

# Register itkImageToImageFilterIUC3IUS3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3_swigregister(itkImageToImageFilterIUC3IUS3)
itkImageToImageFilterIUC3IUS3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUS3_cast

class itkImageToImageFilterIUC4ID4(itk.itkImageSourcePython.itkImageSourceID4):
    r"""Proxy of C++ itkImageToImageFilterIUC4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4ID4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4ID4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4ID4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4ID4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4ID4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4ID4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4ID4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4ID4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4ID4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4ID4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUC4ID4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4ID4_cast)

# Register itkImageToImageFilterIUC4ID4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUC4ID4_swigregister(itkImageToImageFilterIUC4ID4)
itkImageToImageFilterIUC4ID4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUC4ID4_cast

class itkImageToImageFilterIUC4IF4(itk.itkImageSourcePython.itkImageSourceIF4):
    r"""Proxy of C++ itkImageToImageFilterIUC4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IF4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IF4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IF4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IF4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IF4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IF4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IF4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IF4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IF4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IF4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUC4IF4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IF4_cast)

# Register itkImageToImageFilterIUC4IF4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IF4_swigregister(itkImageToImageFilterIUC4IF4)
itkImageToImageFilterIUC4IF4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUC4IF4_cast

class itkImageToImageFilterIUC4ISI4(itk.itkImageSourcePython.itkImageSourceISI4):
    r"""Proxy of C++ itkImageToImageFilterIUC4ISI4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4ISI4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4ISI4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4ISI4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4ISI4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4ISI4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4ISI4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4ISI4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4ISI4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4ISI4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4ISI4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUC4ISI4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4ISI4_cast)

# Register itkImageToImageFilterIUC4ISI4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUC4ISI4_swigregister(itkImageToImageFilterIUC4ISI4)
itkImageToImageFilterIUC4ISI4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUC4ISI4_cast

class itkImageToImageFilterIUC4ISS4(itk.itkImageSourcePython.itkImageSourceISS4):
    r"""Proxy of C++ itkImageToImageFilterIUC4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4ISS4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4ISS4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4ISS4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4ISS4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4ISS4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4ISS4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4ISS4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4ISS4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4ISS4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4ISS4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUC4ISS4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4ISS4_cast)

# Register itkImageToImageFilterIUC4ISS4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUC4ISS4_swigregister(itkImageToImageFilterIUC4ISS4)
itkImageToImageFilterIUC4ISS4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUC4ISS4_cast

class itkImageToImageFilterIUC4IUC4(itk.itkImageSourcePython.itkImageSourceIUC4):
    r"""Proxy of C++ itkImageToImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUC4IUC4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4_cast)

# Register itkImageToImageFilterIUC4IUC4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4_swigregister(itkImageToImageFilterIUC4IUC4)
itkImageToImageFilterIUC4IUC4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4_cast

class itkImageToImageFilterIUC4IUI4(itk.itkImageSourcePython.itkImageSourceIUI4):
    r"""Proxy of C++ itkImageToImageFilterIUC4IUI4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUI4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUI4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUI4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUI4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUI4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUI4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUI4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUI4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUI4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUI4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUC4IUI4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUI4_cast)

# Register itkImageToImageFilterIUC4IUI4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUI4_swigregister(itkImageToImageFilterIUC4IUI4)
itkImageToImageFilterIUC4IUI4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUI4_cast

class itkImageToImageFilterIUC4IUL4(itk.itkImageSourcePython.itkImageSourceIUL4):
    r"""Proxy of C++ itkImageToImageFilterIUC4IUL4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUL4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUL4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUL4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUL4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUL4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUL4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUL4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUL4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUL4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUL4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUC4IUL4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUL4_cast)

# Register itkImageToImageFilterIUC4IUL4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUL4_swigregister(itkImageToImageFilterIUC4IUL4)
itkImageToImageFilterIUC4IUL4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUL4_cast

class itkImageToImageFilterIUC4IUS4(itk.itkImageSourcePython.itkImageSourceIUS4):
    r"""Proxy of C++ itkImageToImageFilterIUC4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUS4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUS4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUS4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUS4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUS4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUS4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUS4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUS4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUS4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUS4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUC4IUS4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUS4_cast)

# Register itkImageToImageFilterIUC4IUS4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUS4_swigregister(itkImageToImageFilterIUC4IUS4)
itkImageToImageFilterIUC4IUS4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUS4_cast

class itkImageToImageFilterIUI2ID2(itk.itkImageSourcePython.itkImageSourceID2):
    r"""Proxy of C++ itkImageToImageFilterIUI2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2ID2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2ID2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2ID2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2ID2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2ID2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2ID2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2ID2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2ID2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2ID2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2ID2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUI2ID2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2ID2_cast)

# Register itkImageToImageFilterIUI2ID2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUI2ID2_swigregister(itkImageToImageFilterIUI2ID2)
itkImageToImageFilterIUI2ID2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUI2ID2_cast

class itkImageToImageFilterIUI2IF2(itk.itkImageSourcePython.itkImageSourceIF2):
    r"""Proxy of C++ itkImageToImageFilterIUI2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IF2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IF2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IF2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IF2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IF2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IF2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IF2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IF2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IF2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IF2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUI2IF2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IF2_cast)

# Register itkImageToImageFilterIUI2IF2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IF2_swigregister(itkImageToImageFilterIUI2IF2)
itkImageToImageFilterIUI2IF2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUI2IF2_cast

class itkImageToImageFilterIUI2ISI2(itk.itkImageSourcePython.itkImageSourceISI2):
    r"""Proxy of C++ itkImageToImageFilterIUI2ISI2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2ISI2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2ISI2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2ISI2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2ISI2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2ISI2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2ISI2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2ISI2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2ISI2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2ISI2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2ISI2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUI2ISI2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2ISI2_cast)

# Register itkImageToImageFilterIUI2ISI2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUI2ISI2_swigregister(itkImageToImageFilterIUI2ISI2)
itkImageToImageFilterIUI2ISI2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUI2ISI2_cast

class itkImageToImageFilterIUI2ISS2(itk.itkImageSourcePython.itkImageSourceISS2):
    r"""Proxy of C++ itkImageToImageFilterIUI2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2ISS2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2ISS2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2ISS2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2ISS2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2ISS2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2ISS2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2ISS2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2ISS2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2ISS2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2ISS2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUI2ISS2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2ISS2_cast)

# Register itkImageToImageFilterIUI2ISS2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUI2ISS2_swigregister(itkImageToImageFilterIUI2ISS2)
itkImageToImageFilterIUI2ISS2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUI2ISS2_cast

class itkImageToImageFilterIUI2IUC2(itk.itkImageSourcePython.itkImageSourceIUC2):
    r"""Proxy of C++ itkImageToImageFilterIUI2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUC2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUC2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUC2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUC2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUC2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUC2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUC2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUC2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUC2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUC2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUI2IUC2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUC2_cast)

# Register itkImageToImageFilterIUI2IUC2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUC2_swigregister(itkImageToImageFilterIUI2IUC2)
itkImageToImageFilterIUI2IUC2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUC2_cast

class itkImageToImageFilterIUI2IUI2(itk.itkImageSourcePython.itkImageSourceIUI2):
    r"""Proxy of C++ itkImageToImageFilterIUI2IUI2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUI2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUI2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUI2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUI2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUI2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUI2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUI2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUI2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUI2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUI2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUI2IUI2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUI2_cast)

# Register itkImageToImageFilterIUI2IUI2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUI2_swigregister(itkImageToImageFilterIUI2IUI2)
itkImageToImageFilterIUI2IUI2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUI2_cast

class itkImageToImageFilterIUI2IUL2(itk.itkImageSourcePython.itkImageSourceIUL2):
    r"""Proxy of C++ itkImageToImageFilterIUI2IUL2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUL2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUL2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUL2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUL2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUL2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUL2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUL2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUL2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUL2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUL2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUI2IUL2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUL2_cast)

# Register itkImageToImageFilterIUI2IUL2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUL2_swigregister(itkImageToImageFilterIUI2IUL2)
itkImageToImageFilterIUI2IUL2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUL2_cast

class itkImageToImageFilterIUI2IUS2(itk.itkImageSourcePython.itkImageSourceIUS2):
    r"""Proxy of C++ itkImageToImageFilterIUI2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUS2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUS2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUS2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUS2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUS2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUS2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUS2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUS2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUS2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUS2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUI2IUS2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUS2_cast)

# Register itkImageToImageFilterIUI2IUS2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUS2_swigregister(itkImageToImageFilterIUI2IUS2)
itkImageToImageFilterIUI2IUS2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUI2IUS2_cast

class itkImageToImageFilterIUI3ID3(itk.itkImageSourcePython.itkImageSourceID3):
    r"""Proxy of C++ itkImageToImageFilterIUI3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3ID3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3ID3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3ID3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3ID3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3ID3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3ID3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3ID3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3ID3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3ID3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3ID3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUI3ID3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3ID3_cast)

# Register itkImageToImageFilterIUI3ID3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUI3ID3_swigregister(itkImageToImageFilterIUI3ID3)
itkImageToImageFilterIUI3ID3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUI3ID3_cast

class itkImageToImageFilterIUI3IF3(itk.itkImageSourcePython.itkImageSourceIF3):
    r"""Proxy of C++ itkImageToImageFilterIUI3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IF3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IF3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IF3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IF3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IF3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IF3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IF3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IF3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IF3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IF3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUI3IF3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IF3_cast)

# Register itkImageToImageFilterIUI3IF3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IF3_swigregister(itkImageToImageFilterIUI3IF3)
itkImageToImageFilterIUI3IF3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUI3IF3_cast

class itkImageToImageFilterIUI3ISI3(itk.itkImageSourcePython.itkImageSourceISI3):
    r"""Proxy of C++ itkImageToImageFilterIUI3ISI3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3ISI3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3ISI3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3ISI3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3ISI3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3ISI3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3ISI3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3ISI3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3ISI3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3ISI3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3ISI3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUI3ISI3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3ISI3_cast)

# Register itkImageToImageFilterIUI3ISI3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUI3ISI3_swigregister(itkImageToImageFilterIUI3ISI3)
itkImageToImageFilterIUI3ISI3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUI3ISI3_cast

class itkImageToImageFilterIUI3ISS3(itk.itkImageSourcePython.itkImageSourceISS3):
    r"""Proxy of C++ itkImageToImageFilterIUI3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3ISS3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3ISS3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3ISS3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3ISS3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3ISS3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3ISS3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3ISS3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3ISS3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3ISS3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3ISS3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUI3ISS3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3ISS3_cast)

# Register itkImageToImageFilterIUI3ISS3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUI3ISS3_swigregister(itkImageToImageFilterIUI3ISS3)
itkImageToImageFilterIUI3ISS3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUI3ISS3_cast

class itkImageToImageFilterIUI3IUC3(itk.itkImageSourcePython.itkImageSourceIUC3):
    r"""Proxy of C++ itkImageToImageFilterIUI3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUC3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUC3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUC3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUC3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUC3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUC3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUC3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUC3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUC3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUC3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUI3IUC3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUC3_cast)

# Register itkImageToImageFilterIUI3IUC3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUC3_swigregister(itkImageToImageFilterIUI3IUC3)
itkImageToImageFilterIUI3IUC3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUC3_cast

class itkImageToImageFilterIUI3IUI3(itk.itkImageSourcePython.itkImageSourceIUI3):
    r"""Proxy of C++ itkImageToImageFilterIUI3IUI3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUI3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUI3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUI3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUI3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUI3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUI3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUI3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUI3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUI3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUI3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUI3IUI3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUI3_cast)

# Register itkImageToImageFilterIUI3IUI3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUI3_swigregister(itkImageToImageFilterIUI3IUI3)
itkImageToImageFilterIUI3IUI3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUI3_cast

class itkImageToImageFilterIUI3IUL3(itk.itkImageSourcePython.itkImageSourceIUL3):
    r"""Proxy of C++ itkImageToImageFilterIUI3IUL3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUL3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUL3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUL3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUL3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUL3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUL3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUL3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUL3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUL3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUL3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUI3IUL3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUL3_cast)

# Register itkImageToImageFilterIUI3IUL3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUL3_swigregister(itkImageToImageFilterIUI3IUL3)
itkImageToImageFilterIUI3IUL3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUL3_cast

class itkImageToImageFilterIUI3IUS3(itk.itkImageSourcePython.itkImageSourceIUS3):
    r"""Proxy of C++ itkImageToImageFilterIUI3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUS3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUS3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUS3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUS3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUS3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUS3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUS3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUS3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUS3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUS3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUI3IUS3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUS3_cast)

# Register itkImageToImageFilterIUI3IUS3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUS3_swigregister(itkImageToImageFilterIUI3IUS3)
itkImageToImageFilterIUI3IUS3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUI3IUS3_cast

class itkImageToImageFilterIUI4ID4(itk.itkImageSourcePython.itkImageSourceID4):
    r"""Proxy of C++ itkImageToImageFilterIUI4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4ID4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4ID4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4ID4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4ID4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4ID4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4ID4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4ID4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4ID4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4ID4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4ID4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUI4ID4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4ID4_cast)

# Register itkImageToImageFilterIUI4ID4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUI4ID4_swigregister(itkImageToImageFilterIUI4ID4)
itkImageToImageFilterIUI4ID4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUI4ID4_cast

class itkImageToImageFilterIUI4IF4(itk.itkImageSourcePython.itkImageSourceIF4):
    r"""Proxy of C++ itkImageToImageFilterIUI4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IF4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IF4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IF4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IF4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IF4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IF4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IF4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IF4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IF4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IF4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUI4IF4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IF4_cast)

# Register itkImageToImageFilterIUI4IF4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IF4_swigregister(itkImageToImageFilterIUI4IF4)
itkImageToImageFilterIUI4IF4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUI4IF4_cast

class itkImageToImageFilterIUI4ISI4(itk.itkImageSourcePython.itkImageSourceISI4):
    r"""Proxy of C++ itkImageToImageFilterIUI4ISI4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4ISI4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4ISI4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4ISI4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4ISI4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4ISI4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4ISI4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4ISI4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4ISI4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4ISI4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4ISI4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUI4ISI4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4ISI4_cast)

# Register itkImageToImageFilterIUI4ISI4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUI4ISI4_swigregister(itkImageToImageFilterIUI4ISI4)
itkImageToImageFilterIUI4ISI4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUI4ISI4_cast

class itkImageToImageFilterIUI4ISS4(itk.itkImageSourcePython.itkImageSourceISS4):
    r"""Proxy of C++ itkImageToImageFilterIUI4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4ISS4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4ISS4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4ISS4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4ISS4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4ISS4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4ISS4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4ISS4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4ISS4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4ISS4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4ISS4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUI4ISS4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4ISS4_cast)

# Register itkImageToImageFilterIUI4ISS4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUI4ISS4_swigregister(itkImageToImageFilterIUI4ISS4)
itkImageToImageFilterIUI4ISS4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUI4ISS4_cast

class itkImageToImageFilterIUI4IUC4(itk.itkImageSourcePython.itkImageSourceIUC4):
    r"""Proxy of C++ itkImageToImageFilterIUI4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUC4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUC4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUC4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUC4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUC4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUC4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUC4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUC4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUC4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUC4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUI4IUC4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUC4_cast)

# Register itkImageToImageFilterIUI4IUC4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUC4_swigregister(itkImageToImageFilterIUI4IUC4)
itkImageToImageFilterIUI4IUC4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUC4_cast

class itkImageToImageFilterIUI4IUI4(itk.itkImageSourcePython.itkImageSourceIUI4):
    r"""Proxy of C++ itkImageToImageFilterIUI4IUI4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUI4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUI4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUI4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUI4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUI4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUI4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUI4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUI4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUI4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUI4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUI4IUI4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUI4_cast)

# Register itkImageToImageFilterIUI4IUI4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUI4_swigregister(itkImageToImageFilterIUI4IUI4)
itkImageToImageFilterIUI4IUI4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUI4_cast

class itkImageToImageFilterIUI4IUL4(itk.itkImageSourcePython.itkImageSourceIUL4):
    r"""Proxy of C++ itkImageToImageFilterIUI4IUL4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUL4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUL4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUL4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUL4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUL4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUL4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUL4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUL4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUL4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUL4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUI4IUL4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUL4_cast)

# Register itkImageToImageFilterIUI4IUL4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUL4_swigregister(itkImageToImageFilterIUI4IUL4)
itkImageToImageFilterIUI4IUL4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUL4_cast

class itkImageToImageFilterIUI4IUS4(itk.itkImageSourcePython.itkImageSourceIUS4):
    r"""Proxy of C++ itkImageToImageFilterIUI4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUS4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUS4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUS4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUS4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUS4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUS4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUS4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUS4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUS4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUS4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUI4IUS4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUS4_cast)

# Register itkImageToImageFilterIUI4IUS4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUS4_swigregister(itkImageToImageFilterIUI4IUS4)
itkImageToImageFilterIUI4IUS4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUI4IUS4_cast

class itkImageToImageFilterIUL2ID2(itk.itkImageSourcePython.itkImageSourceID2):
    r"""Proxy of C++ itkImageToImageFilterIUL2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ID2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ID2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ID2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ID2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ID2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ID2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ID2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ID2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ID2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ID2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUL2ID2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ID2_cast)

# Register itkImageToImageFilterIUL2ID2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ID2_swigregister(itkImageToImageFilterIUL2ID2)
itkImageToImageFilterIUL2ID2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUL2ID2_cast

class itkImageToImageFilterIUL2IF2(itk.itkImageSourcePython.itkImageSourceIF2):
    r"""Proxy of C++ itkImageToImageFilterIUL2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IF2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IF2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IF2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IF2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IF2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IF2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IF2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IF2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IF2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IF2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUL2IF2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IF2_cast)

# Register itkImageToImageFilterIUL2IF2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IF2_swigregister(itkImageToImageFilterIUL2IF2)
itkImageToImageFilterIUL2IF2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IF2_cast

class itkImageToImageFilterIUL2ISI2(itk.itkImageSourcePython.itkImageSourceISI2):
    r"""Proxy of C++ itkImageToImageFilterIUL2ISI2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ISI2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ISI2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ISI2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ISI2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ISI2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ISI2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ISI2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ISI2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ISI2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ISI2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUL2ISI2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ISI2_cast)

# Register itkImageToImageFilterIUL2ISI2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ISI2_swigregister(itkImageToImageFilterIUL2ISI2)
itkImageToImageFilterIUL2ISI2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUL2ISI2_cast

class itkImageToImageFilterIUL2ISS2(itk.itkImageSourcePython.itkImageSourceISS2):
    r"""Proxy of C++ itkImageToImageFilterIUL2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ISS2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ISS2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ISS2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ISS2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ISS2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ISS2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ISS2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ISS2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ISS2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ISS2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUL2ISS2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ISS2_cast)

# Register itkImageToImageFilterIUL2ISS2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUL2ISS2_swigregister(itkImageToImageFilterIUL2ISS2)
itkImageToImageFilterIUL2ISS2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUL2ISS2_cast

class itkImageToImageFilterIUL2IUC2(itk.itkImageSourcePython.itkImageSourceIUC2):
    r"""Proxy of C++ itkImageToImageFilterIUL2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUC2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUC2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUC2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUC2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUC2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUC2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUC2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUC2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUC2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUC2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUL2IUC2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUC2_cast)

# Register itkImageToImageFilterIUL2IUC2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUC2_swigregister(itkImageToImageFilterIUL2IUC2)
itkImageToImageFilterIUL2IUC2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUC2_cast

class itkImageToImageFilterIUL2IUI2(itk.itkImageSourcePython.itkImageSourceIUI2):
    r"""Proxy of C++ itkImageToImageFilterIUL2IUI2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUI2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUI2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUI2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUI2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUI2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUI2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUI2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUI2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUI2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUI2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUL2IUI2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUI2_cast)

# Register itkImageToImageFilterIUL2IUI2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUI2_swigregister(itkImageToImageFilterIUL2IUI2)
itkImageToImageFilterIUL2IUI2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUI2_cast

class itkImageToImageFilterIUL2IUL2(itk.itkImageSourcePython.itkImageSourceIUL2):
    r"""Proxy of C++ itkImageToImageFilterIUL2IUL2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUL2IUL2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2_cast)

# Register itkImageToImageFilterIUL2IUL2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2_swigregister(itkImageToImageFilterIUL2IUL2)
itkImageToImageFilterIUL2IUL2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUL2_cast

class itkImageToImageFilterIUL2IUS2(itk.itkImageSourcePython.itkImageSourceIUS2):
    r"""Proxy of C++ itkImageToImageFilterIUL2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUS2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUS2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUS2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUS2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUS2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUS2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUS2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUS2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUS2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUS2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUL2IUS2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUS2_cast)

# Register itkImageToImageFilterIUL2IUS2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUS2_swigregister(itkImageToImageFilterIUL2IUS2)
itkImageToImageFilterIUL2IUS2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUL2IUS2_cast

class itkImageToImageFilterIUL3ID3(itk.itkImageSourcePython.itkImageSourceID3):
    r"""Proxy of C++ itkImageToImageFilterIUL3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ID3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ID3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ID3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ID3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ID3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ID3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ID3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ID3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ID3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ID3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUL3ID3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ID3_cast)

# Register itkImageToImageFilterIUL3ID3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ID3_swigregister(itkImageToImageFilterIUL3ID3)
itkImageToImageFilterIUL3ID3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUL3ID3_cast

class itkImageToImageFilterIUL3IF3(itk.itkImageSourcePython.itkImageSourceIF3):
    r"""Proxy of C++ itkImageToImageFilterIUL3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IF3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IF3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IF3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IF3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IF3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IF3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IF3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IF3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IF3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IF3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUL3IF3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IF3_cast)

# Register itkImageToImageFilterIUL3IF3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IF3_swigregister(itkImageToImageFilterIUL3IF3)
itkImageToImageFilterIUL3IF3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IF3_cast

class itkImageToImageFilterIUL3ISI3(itk.itkImageSourcePython.itkImageSourceISI3):
    r"""Proxy of C++ itkImageToImageFilterIUL3ISI3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ISI3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ISI3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ISI3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ISI3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ISI3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ISI3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ISI3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ISI3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ISI3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ISI3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUL3ISI3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ISI3_cast)

# Register itkImageToImageFilterIUL3ISI3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ISI3_swigregister(itkImageToImageFilterIUL3ISI3)
itkImageToImageFilterIUL3ISI3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUL3ISI3_cast

class itkImageToImageFilterIUL3ISS3(itk.itkImageSourcePython.itkImageSourceISS3):
    r"""Proxy of C++ itkImageToImageFilterIUL3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ISS3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ISS3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ISS3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ISS3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ISS3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ISS3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ISS3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ISS3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ISS3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ISS3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUL3ISS3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ISS3_cast)

# Register itkImageToImageFilterIUL3ISS3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUL3ISS3_swigregister(itkImageToImageFilterIUL3ISS3)
itkImageToImageFilterIUL3ISS3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUL3ISS3_cast

class itkImageToImageFilterIUL3IUC3(itk.itkImageSourcePython.itkImageSourceIUC3):
    r"""Proxy of C++ itkImageToImageFilterIUL3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUC3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUC3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUC3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUC3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUC3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUC3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUC3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUC3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUC3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUC3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUL3IUC3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUC3_cast)

# Register itkImageToImageFilterIUL3IUC3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUC3_swigregister(itkImageToImageFilterIUL3IUC3)
itkImageToImageFilterIUL3IUC3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUC3_cast

class itkImageToImageFilterIUL3IUI3(itk.itkImageSourcePython.itkImageSourceIUI3):
    r"""Proxy of C++ itkImageToImageFilterIUL3IUI3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUI3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUI3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUI3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUI3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUI3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUI3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUI3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUI3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUI3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUI3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUL3IUI3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUI3_cast)

# Register itkImageToImageFilterIUL3IUI3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUI3_swigregister(itkImageToImageFilterIUL3IUI3)
itkImageToImageFilterIUL3IUI3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUI3_cast

class itkImageToImageFilterIUL3IUL3(itk.itkImageSourcePython.itkImageSourceIUL3):
    r"""Proxy of C++ itkImageToImageFilterIUL3IUL3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUL3IUL3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3_cast)

# Register itkImageToImageFilterIUL3IUL3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3_swigregister(itkImageToImageFilterIUL3IUL3)
itkImageToImageFilterIUL3IUL3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUL3_cast

class itkImageToImageFilterIUL3IUS3(itk.itkImageSourcePython.itkImageSourceIUS3):
    r"""Proxy of C++ itkImageToImageFilterIUL3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUS3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUS3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUS3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUS3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUS3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUS3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUS3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUS3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUS3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUS3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUL3IUS3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUS3_cast)

# Register itkImageToImageFilterIUL3IUS3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUS3_swigregister(itkImageToImageFilterIUL3IUS3)
itkImageToImageFilterIUL3IUS3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUL3IUS3_cast

class itkImageToImageFilterIUL4ID4(itk.itkImageSourcePython.itkImageSourceID4):
    r"""Proxy of C++ itkImageToImageFilterIUL4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4ID4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4ID4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4ID4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4ID4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4ID4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4ID4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4ID4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4ID4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4ID4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4ID4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUL4ID4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4ID4_cast)

# Register itkImageToImageFilterIUL4ID4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUL4ID4_swigregister(itkImageToImageFilterIUL4ID4)
itkImageToImageFilterIUL4ID4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUL4ID4_cast

class itkImageToImageFilterIUL4IF4(itk.itkImageSourcePython.itkImageSourceIF4):
    r"""Proxy of C++ itkImageToImageFilterIUL4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IF4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IF4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IF4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IF4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IF4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IF4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IF4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IF4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IF4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IF4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUL4IF4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IF4_cast)

# Register itkImageToImageFilterIUL4IF4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IF4_swigregister(itkImageToImageFilterIUL4IF4)
itkImageToImageFilterIUL4IF4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUL4IF4_cast

class itkImageToImageFilterIUL4ISI4(itk.itkImageSourcePython.itkImageSourceISI4):
    r"""Proxy of C++ itkImageToImageFilterIUL4ISI4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4ISI4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4ISI4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4ISI4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4ISI4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4ISI4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4ISI4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4ISI4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4ISI4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4ISI4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4ISI4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUL4ISI4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4ISI4_cast)

# Register itkImageToImageFilterIUL4ISI4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUL4ISI4_swigregister(itkImageToImageFilterIUL4ISI4)
itkImageToImageFilterIUL4ISI4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUL4ISI4_cast

class itkImageToImageFilterIUL4ISS4(itk.itkImageSourcePython.itkImageSourceISS4):
    r"""Proxy of C++ itkImageToImageFilterIUL4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4ISS4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4ISS4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4ISS4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4ISS4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4ISS4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4ISS4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4ISS4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4ISS4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4ISS4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4ISS4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUL4ISS4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4ISS4_cast)

# Register itkImageToImageFilterIUL4ISS4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUL4ISS4_swigregister(itkImageToImageFilterIUL4ISS4)
itkImageToImageFilterIUL4ISS4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUL4ISS4_cast

class itkImageToImageFilterIUL4IUC4(itk.itkImageSourcePython.itkImageSourceIUC4):
    r"""Proxy of C++ itkImageToImageFilterIUL4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUC4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUC4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUC4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUC4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUC4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUC4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUC4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUC4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUC4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUC4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUL4IUC4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUC4_cast)

# Register itkImageToImageFilterIUL4IUC4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUC4_swigregister(itkImageToImageFilterIUL4IUC4)
itkImageToImageFilterIUL4IUC4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUC4_cast

class itkImageToImageFilterIUL4IUI4(itk.itkImageSourcePython.itkImageSourceIUI4):
    r"""Proxy of C++ itkImageToImageFilterIUL4IUI4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUI4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUI4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUI4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUI4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUI4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUI4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUI4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUI4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUI4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUI4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUL4IUI4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUI4_cast)

# Register itkImageToImageFilterIUL4IUI4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUI4_swigregister(itkImageToImageFilterIUL4IUI4)
itkImageToImageFilterIUL4IUI4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUI4_cast

class itkImageToImageFilterIUL4IUL4(itk.itkImageSourcePython.itkImageSourceIUL4):
    r"""Proxy of C++ itkImageToImageFilterIUL4IUL4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUL4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUL4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUL4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUL4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUL4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUL4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUL4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUL4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUL4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUL4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUL4IUL4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUL4_cast)

# Register itkImageToImageFilterIUL4IUL4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUL4_swigregister(itkImageToImageFilterIUL4IUL4)
itkImageToImageFilterIUL4IUL4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUL4_cast

class itkImageToImageFilterIUL4IUS4(itk.itkImageSourcePython.itkImageSourceIUS4):
    r"""Proxy of C++ itkImageToImageFilterIUL4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUS4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUS4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUS4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUS4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUS4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUS4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUS4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUS4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUS4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUS4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUL4IUS4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUS4_cast)

# Register itkImageToImageFilterIUL4IUS4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUS4_swigregister(itkImageToImageFilterIUL4IUS4)
itkImageToImageFilterIUL4IUS4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUL4IUS4_cast

class itkImageToImageFilterIULL2ID2(itk.itkImageSourcePython.itkImageSourceID2):
    r"""Proxy of C++ itkImageToImageFilterIULL2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2ID2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2ID2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2ID2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2ID2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2ID2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2ID2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2ID2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2ID2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2ID2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2ID2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIULL2ID2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2ID2_cast)

# Register itkImageToImageFilterIULL2ID2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIULL2ID2_swigregister(itkImageToImageFilterIULL2ID2)
itkImageToImageFilterIULL2ID2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIULL2ID2_cast

class itkImageToImageFilterIULL2IF2(itk.itkImageSourcePython.itkImageSourceIF2):
    r"""Proxy of C++ itkImageToImageFilterIULL2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IF2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IF2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IF2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IF2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IF2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IF2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IF2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IF2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IF2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IF2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIULL2IF2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IF2_cast)

# Register itkImageToImageFilterIULL2IF2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IF2_swigregister(itkImageToImageFilterIULL2IF2)
itkImageToImageFilterIULL2IF2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIULL2IF2_cast

class itkImageToImageFilterIULL2ISI2(itk.itkImageSourcePython.itkImageSourceISI2):
    r"""Proxy of C++ itkImageToImageFilterIULL2ISI2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2ISI2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2ISI2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2ISI2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2ISI2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2ISI2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2ISI2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2ISI2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2ISI2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2ISI2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2ISI2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIULL2ISI2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2ISI2_cast)

# Register itkImageToImageFilterIULL2ISI2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIULL2ISI2_swigregister(itkImageToImageFilterIULL2ISI2)
itkImageToImageFilterIULL2ISI2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIULL2ISI2_cast

class itkImageToImageFilterIULL2ISS2(itk.itkImageSourcePython.itkImageSourceISS2):
    r"""Proxy of C++ itkImageToImageFilterIULL2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2ISS2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2ISS2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2ISS2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2ISS2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2ISS2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2ISS2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2ISS2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2ISS2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2ISS2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2ISS2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIULL2ISS2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2ISS2_cast)

# Register itkImageToImageFilterIULL2ISS2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIULL2ISS2_swigregister(itkImageToImageFilterIULL2ISS2)
itkImageToImageFilterIULL2ISS2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIULL2ISS2_cast

class itkImageToImageFilterIULL2IUC2(itk.itkImageSourcePython.itkImageSourceIUC2):
    r"""Proxy of C++ itkImageToImageFilterIULL2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUC2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUC2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUC2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUC2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUC2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUC2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUC2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUC2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUC2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUC2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIULL2IUC2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUC2_cast)

# Register itkImageToImageFilterIULL2IUC2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUC2_swigregister(itkImageToImageFilterIULL2IUC2)
itkImageToImageFilterIULL2IUC2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUC2_cast

class itkImageToImageFilterIULL2IUI2(itk.itkImageSourcePython.itkImageSourceIUI2):
    r"""Proxy of C++ itkImageToImageFilterIULL2IUI2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUI2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUI2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUI2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUI2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUI2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUI2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUI2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUI2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUI2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUI2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIULL2IUI2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUI2_cast)

# Register itkImageToImageFilterIULL2IUI2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUI2_swigregister(itkImageToImageFilterIULL2IUI2)
itkImageToImageFilterIULL2IUI2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUI2_cast

class itkImageToImageFilterIULL2IUL2(itk.itkImageSourcePython.itkImageSourceIUL2):
    r"""Proxy of C++ itkImageToImageFilterIULL2IUL2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUL2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUL2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUL2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUL2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUL2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUL2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUL2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUL2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUL2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUL2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIULL2IUL2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUL2_cast)

# Register itkImageToImageFilterIULL2IUL2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUL2_swigregister(itkImageToImageFilterIULL2IUL2)
itkImageToImageFilterIULL2IUL2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUL2_cast

class itkImageToImageFilterIULL2IUS2(itk.itkImageSourcePython.itkImageSourceIUS2):
    r"""Proxy of C++ itkImageToImageFilterIULL2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUS2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUS2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUS2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUS2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUS2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUS2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUS2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUS2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUS2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUS2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIULL2IUS2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUS2_cast)

# Register itkImageToImageFilterIULL2IUS2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUS2_swigregister(itkImageToImageFilterIULL2IUS2)
itkImageToImageFilterIULL2IUS2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIULL2IUS2_cast

class itkImageToImageFilterIULL3ID3(itk.itkImageSourcePython.itkImageSourceID3):
    r"""Proxy of C++ itkImageToImageFilterIULL3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3ID3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3ID3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3ID3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3ID3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3ID3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3ID3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3ID3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3ID3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3ID3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3ID3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIULL3ID3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3ID3_cast)

# Register itkImageToImageFilterIULL3ID3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIULL3ID3_swigregister(itkImageToImageFilterIULL3ID3)
itkImageToImageFilterIULL3ID3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIULL3ID3_cast

class itkImageToImageFilterIULL3IF3(itk.itkImageSourcePython.itkImageSourceIF3):
    r"""Proxy of C++ itkImageToImageFilterIULL3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IF3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IF3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IF3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IF3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IF3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IF3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IF3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IF3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IF3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IF3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIULL3IF3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IF3_cast)

# Register itkImageToImageFilterIULL3IF3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IF3_swigregister(itkImageToImageFilterIULL3IF3)
itkImageToImageFilterIULL3IF3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIULL3IF3_cast

class itkImageToImageFilterIULL3ISI3(itk.itkImageSourcePython.itkImageSourceISI3):
    r"""Proxy of C++ itkImageToImageFilterIULL3ISI3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3ISI3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3ISI3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3ISI3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3ISI3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3ISI3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3ISI3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3ISI3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3ISI3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3ISI3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3ISI3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIULL3ISI3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3ISI3_cast)

# Register itkImageToImageFilterIULL3ISI3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIULL3ISI3_swigregister(itkImageToImageFilterIULL3ISI3)
itkImageToImageFilterIULL3ISI3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIULL3ISI3_cast

class itkImageToImageFilterIULL3ISS3(itk.itkImageSourcePython.itkImageSourceISS3):
    r"""Proxy of C++ itkImageToImageFilterIULL3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3ISS3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3ISS3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3ISS3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3ISS3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3ISS3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3ISS3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3ISS3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3ISS3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3ISS3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3ISS3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIULL3ISS3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3ISS3_cast)

# Register itkImageToImageFilterIULL3ISS3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIULL3ISS3_swigregister(itkImageToImageFilterIULL3ISS3)
itkImageToImageFilterIULL3ISS3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIULL3ISS3_cast

class itkImageToImageFilterIULL3IUC3(itk.itkImageSourcePython.itkImageSourceIUC3):
    r"""Proxy of C++ itkImageToImageFilterIULL3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUC3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUC3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUC3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUC3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUC3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUC3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUC3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUC3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUC3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUC3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIULL3IUC3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUC3_cast)

# Register itkImageToImageFilterIULL3IUC3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUC3_swigregister(itkImageToImageFilterIULL3IUC3)
itkImageToImageFilterIULL3IUC3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUC3_cast

class itkImageToImageFilterIULL3IUI3(itk.itkImageSourcePython.itkImageSourceIUI3):
    r"""Proxy of C++ itkImageToImageFilterIULL3IUI3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUI3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUI3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUI3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUI3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUI3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUI3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUI3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUI3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUI3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUI3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIULL3IUI3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUI3_cast)

# Register itkImageToImageFilterIULL3IUI3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUI3_swigregister(itkImageToImageFilterIULL3IUI3)
itkImageToImageFilterIULL3IUI3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUI3_cast

class itkImageToImageFilterIULL3IUL3(itk.itkImageSourcePython.itkImageSourceIUL3):
    r"""Proxy of C++ itkImageToImageFilterIULL3IUL3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUL3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUL3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUL3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUL3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUL3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUL3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUL3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUL3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUL3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUL3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIULL3IUL3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUL3_cast)

# Register itkImageToImageFilterIULL3IUL3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUL3_swigregister(itkImageToImageFilterIULL3IUL3)
itkImageToImageFilterIULL3IUL3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUL3_cast

class itkImageToImageFilterIULL3IUS3(itk.itkImageSourcePython.itkImageSourceIUS3):
    r"""Proxy of C++ itkImageToImageFilterIULL3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUS3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUS3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUS3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUS3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUS3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUS3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUS3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUS3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUS3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUS3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIULL3IUS3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUS3_cast)

# Register itkImageToImageFilterIULL3IUS3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUS3_swigregister(itkImageToImageFilterIULL3IUS3)
itkImageToImageFilterIULL3IUS3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIULL3IUS3_cast

class itkImageToImageFilterIULL4ID4(itk.itkImageSourcePython.itkImageSourceID4):
    r"""Proxy of C++ itkImageToImageFilterIULL4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4ID4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4ID4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4ID4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4ID4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4ID4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4ID4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4ID4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4ID4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4ID4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4ID4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIULL4ID4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4ID4_cast)

# Register itkImageToImageFilterIULL4ID4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIULL4ID4_swigregister(itkImageToImageFilterIULL4ID4)
itkImageToImageFilterIULL4ID4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIULL4ID4_cast

class itkImageToImageFilterIULL4IF4(itk.itkImageSourcePython.itkImageSourceIF4):
    r"""Proxy of C++ itkImageToImageFilterIULL4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IF4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IF4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IF4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IF4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IF4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IF4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IF4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IF4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IF4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IF4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIULL4IF4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IF4_cast)

# Register itkImageToImageFilterIULL4IF4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IF4_swigregister(itkImageToImageFilterIULL4IF4)
itkImageToImageFilterIULL4IF4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIULL4IF4_cast

class itkImageToImageFilterIULL4ISI4(itk.itkImageSourcePython.itkImageSourceISI4):
    r"""Proxy of C++ itkImageToImageFilterIULL4ISI4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4ISI4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4ISI4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4ISI4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4ISI4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4ISI4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4ISI4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4ISI4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4ISI4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4ISI4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4ISI4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIULL4ISI4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4ISI4_cast)

# Register itkImageToImageFilterIULL4ISI4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIULL4ISI4_swigregister(itkImageToImageFilterIULL4ISI4)
itkImageToImageFilterIULL4ISI4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIULL4ISI4_cast

class itkImageToImageFilterIULL4ISS4(itk.itkImageSourcePython.itkImageSourceISS4):
    r"""Proxy of C++ itkImageToImageFilterIULL4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4ISS4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4ISS4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4ISS4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4ISS4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4ISS4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4ISS4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4ISS4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4ISS4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4ISS4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4ISS4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIULL4ISS4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4ISS4_cast)

# Register itkImageToImageFilterIULL4ISS4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIULL4ISS4_swigregister(itkImageToImageFilterIULL4ISS4)
itkImageToImageFilterIULL4ISS4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIULL4ISS4_cast

class itkImageToImageFilterIULL4IUC4(itk.itkImageSourcePython.itkImageSourceIUC4):
    r"""Proxy of C++ itkImageToImageFilterIULL4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUC4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUC4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUC4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUC4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUC4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUC4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUC4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUC4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUC4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUC4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIULL4IUC4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUC4_cast)

# Register itkImageToImageFilterIULL4IUC4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUC4_swigregister(itkImageToImageFilterIULL4IUC4)
itkImageToImageFilterIULL4IUC4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUC4_cast

class itkImageToImageFilterIULL4IUI4(itk.itkImageSourcePython.itkImageSourceIUI4):
    r"""Proxy of C++ itkImageToImageFilterIULL4IUI4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUI4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUI4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUI4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUI4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUI4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUI4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUI4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUI4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUI4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUI4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIULL4IUI4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUI4_cast)

# Register itkImageToImageFilterIULL4IUI4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUI4_swigregister(itkImageToImageFilterIULL4IUI4)
itkImageToImageFilterIULL4IUI4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUI4_cast

class itkImageToImageFilterIULL4IUL4(itk.itkImageSourcePython.itkImageSourceIUL4):
    r"""Proxy of C++ itkImageToImageFilterIULL4IUL4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUL4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUL4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUL4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUL4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUL4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUL4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUL4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUL4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUL4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUL4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIULL4IUL4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUL4_cast)

# Register itkImageToImageFilterIULL4IUL4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUL4_swigregister(itkImageToImageFilterIULL4IUL4)
itkImageToImageFilterIULL4IUL4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUL4_cast

class itkImageToImageFilterIULL4IUS4(itk.itkImageSourcePython.itkImageSourceIUS4):
    r"""Proxy of C++ itkImageToImageFilterIULL4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUS4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUS4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUS4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUS4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUS4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUS4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUS4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUS4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUS4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUS4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIULL4IUS4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUS4_cast)

# Register itkImageToImageFilterIULL4IUS4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUS4_swigregister(itkImageToImageFilterIULL4IUS4)
itkImageToImageFilterIULL4IUS4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIULL4IUS4_cast

class itkImageToImageFilterIUS2ID2(itk.itkImageSourcePython.itkImageSourceID2):
    r"""Proxy of C++ itkImageToImageFilterIUS2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUS2ID2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2_cast)

# Register itkImageToImageFilterIUS2ID2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2_swigregister(itkImageToImageFilterIUS2ID2)
itkImageToImageFilterIUS2ID2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2_cast

class itkImageToImageFilterIUS2IF2(itk.itkImageSourcePython.itkImageSourceIF2):
    r"""Proxy of C++ itkImageToImageFilterIUS2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUS2IF2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2_cast)

# Register itkImageToImageFilterIUS2IF2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2_swigregister(itkImageToImageFilterIUS2IF2)
itkImageToImageFilterIUS2IF2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2_cast

class itkImageToImageFilterIUS2ISI2(itk.itkImageSourcePython.itkImageSourceISI2):
    r"""Proxy of C++ itkImageToImageFilterIUS2ISI2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ISI2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ISI2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ISI2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ISI2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ISI2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ISI2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ISI2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ISI2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ISI2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ISI2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUS2ISI2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ISI2_cast)

# Register itkImageToImageFilterIUS2ISI2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ISI2_swigregister(itkImageToImageFilterIUS2ISI2)
itkImageToImageFilterIUS2ISI2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUS2ISI2_cast

class itkImageToImageFilterIUS2ISS2(itk.itkImageSourcePython.itkImageSourceISS2):
    r"""Proxy of C++ itkImageToImageFilterIUS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ISS2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ISS2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ISS2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ISS2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ISS2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ISS2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ISS2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ISS2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ISS2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ISS2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUS2ISS2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ISS2_cast)

# Register itkImageToImageFilterIUS2ISS2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUS2ISS2_swigregister(itkImageToImageFilterIUS2ISS2)
itkImageToImageFilterIUS2ISS2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUS2ISS2_cast

class itkImageToImageFilterIUS2IUC2(itk.itkImageSourcePython.itkImageSourceIUC2):
    r"""Proxy of C++ itkImageToImageFilterIUS2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUS2IUC2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2_cast)

# Register itkImageToImageFilterIUS2IUC2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2_swigregister(itkImageToImageFilterIUS2IUC2)
itkImageToImageFilterIUS2IUC2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUC2_cast

class itkImageToImageFilterIUS2IUI2(itk.itkImageSourcePython.itkImageSourceIUI2):
    r"""Proxy of C++ itkImageToImageFilterIUS2IUI2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUI2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUI2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUI2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUI2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUI2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUI2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUI2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUI2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUI2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUI2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUS2IUI2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUI2_cast)

# Register itkImageToImageFilterIUS2IUI2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUI2_swigregister(itkImageToImageFilterIUS2IUI2)
itkImageToImageFilterIUS2IUI2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUI2_cast

class itkImageToImageFilterIUS2IUL2(itk.itkImageSourcePython.itkImageSourceIUL2):
    r"""Proxy of C++ itkImageToImageFilterIUS2IUL2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUS2IUL2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2_cast)

# Register itkImageToImageFilterIUS2IUL2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2_swigregister(itkImageToImageFilterIUS2IUL2)
itkImageToImageFilterIUS2IUL2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUL2_cast

class itkImageToImageFilterIUS2IUS2(itk.itkImageSourcePython.itkImageSourceIUS2):
    r"""Proxy of C++ itkImageToImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2_cast)

# Register itkImageToImageFilterIUS2IUS2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2_swigregister(itkImageToImageFilterIUS2IUS2)
itkImageToImageFilterIUS2IUS2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2_cast

class itkImageToImageFilterIUS3ID3(itk.itkImageSourcePython.itkImageSourceID3):
    r"""Proxy of C++ itkImageToImageFilterIUS3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUS3ID3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3_cast)

# Register itkImageToImageFilterIUS3ID3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3_swigregister(itkImageToImageFilterIUS3ID3)
itkImageToImageFilterIUS3ID3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3_cast

class itkImageToImageFilterIUS3IF3(itk.itkImageSourcePython.itkImageSourceIF3):
    r"""Proxy of C++ itkImageToImageFilterIUS3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUS3IF3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3_cast)

# Register itkImageToImageFilterIUS3IF3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3_swigregister(itkImageToImageFilterIUS3IF3)
itkImageToImageFilterIUS3IF3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3_cast

class itkImageToImageFilterIUS3ISI3(itk.itkImageSourcePython.itkImageSourceISI3):
    r"""Proxy of C++ itkImageToImageFilterIUS3ISI3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ISI3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ISI3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ISI3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ISI3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ISI3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ISI3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ISI3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ISI3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ISI3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ISI3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUS3ISI3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ISI3_cast)

# Register itkImageToImageFilterIUS3ISI3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ISI3_swigregister(itkImageToImageFilterIUS3ISI3)
itkImageToImageFilterIUS3ISI3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUS3ISI3_cast

class itkImageToImageFilterIUS3ISS3(itk.itkImageSourcePython.itkImageSourceISS3):
    r"""Proxy of C++ itkImageToImageFilterIUS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ISS3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ISS3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ISS3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ISS3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ISS3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ISS3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ISS3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ISS3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ISS3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ISS3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUS3ISS3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ISS3_cast)

# Register itkImageToImageFilterIUS3ISS3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUS3ISS3_swigregister(itkImageToImageFilterIUS3ISS3)
itkImageToImageFilterIUS3ISS3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUS3ISS3_cast

class itkImageToImageFilterIUS3IUC3(itk.itkImageSourcePython.itkImageSourceIUC3):
    r"""Proxy of C++ itkImageToImageFilterIUS3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUS3IUC3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3_cast)

# Register itkImageToImageFilterIUS3IUC3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3_swigregister(itkImageToImageFilterIUS3IUC3)
itkImageToImageFilterIUS3IUC3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUC3_cast

class itkImageToImageFilterIUS3IUI3(itk.itkImageSourcePython.itkImageSourceIUI3):
    r"""Proxy of C++ itkImageToImageFilterIUS3IUI3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUI3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUI3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUI3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUI3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUI3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUI3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUI3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUI3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUI3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUI3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUS3IUI3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUI3_cast)

# Register itkImageToImageFilterIUS3IUI3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUI3_swigregister(itkImageToImageFilterIUS3IUI3)
itkImageToImageFilterIUS3IUI3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUI3_cast

class itkImageToImageFilterIUS3IUL3(itk.itkImageSourcePython.itkImageSourceIUL3):
    r"""Proxy of C++ itkImageToImageFilterIUS3IUL3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUS3IUL3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3_cast)

# Register itkImageToImageFilterIUS3IUL3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3_swigregister(itkImageToImageFilterIUS3IUL3)
itkImageToImageFilterIUS3IUL3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUL3_cast

class itkImageToImageFilterIUS3IUS3(itk.itkImageSourcePython.itkImageSourceIUS3):
    r"""Proxy of C++ itkImageToImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3_cast)

# Register itkImageToImageFilterIUS3IUS3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3_swigregister(itkImageToImageFilterIUS3IUS3)
itkImageToImageFilterIUS3IUS3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3_cast

class itkImageToImageFilterIUS4ID4(itk.itkImageSourcePython.itkImageSourceID4):
    r"""Proxy of C++ itkImageToImageFilterIUS4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4ID4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4ID4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4ID4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4ID4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4ID4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4ID4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4ID4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4ID4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4ID4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4ID4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUS4ID4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4ID4_cast)

# Register itkImageToImageFilterIUS4ID4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUS4ID4_swigregister(itkImageToImageFilterIUS4ID4)
itkImageToImageFilterIUS4ID4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUS4ID4_cast

class itkImageToImageFilterIUS4IF4(itk.itkImageSourcePython.itkImageSourceIF4):
    r"""Proxy of C++ itkImageToImageFilterIUS4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IF4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IF4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IF4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IF4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IF4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IF4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IF4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IF4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IF4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IF4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUS4IF4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IF4_cast)

# Register itkImageToImageFilterIUS4IF4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IF4_swigregister(itkImageToImageFilterIUS4IF4)
itkImageToImageFilterIUS4IF4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUS4IF4_cast

class itkImageToImageFilterIUS4ISI4(itk.itkImageSourcePython.itkImageSourceISI4):
    r"""Proxy of C++ itkImageToImageFilterIUS4ISI4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4ISI4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4ISI4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4ISI4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4ISI4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4ISI4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4ISI4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4ISI4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4ISI4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4ISI4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4ISI4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUS4ISI4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4ISI4_cast)

# Register itkImageToImageFilterIUS4ISI4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUS4ISI4_swigregister(itkImageToImageFilterIUS4ISI4)
itkImageToImageFilterIUS4ISI4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUS4ISI4_cast

class itkImageToImageFilterIUS4ISS4(itk.itkImageSourcePython.itkImageSourceISS4):
    r"""Proxy of C++ itkImageToImageFilterIUS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4ISS4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4ISS4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4ISS4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4ISS4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4ISS4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4ISS4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4ISS4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4ISS4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4ISS4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4ISS4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUS4ISS4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4ISS4_cast)

# Register itkImageToImageFilterIUS4ISS4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUS4ISS4_swigregister(itkImageToImageFilterIUS4ISS4)
itkImageToImageFilterIUS4ISS4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUS4ISS4_cast

class itkImageToImageFilterIUS4IUC4(itk.itkImageSourcePython.itkImageSourceIUC4):
    r"""Proxy of C++ itkImageToImageFilterIUS4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUC4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUC4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUC4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUC4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUC4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUC4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUC4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUC4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUC4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUC4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUS4IUC4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUC4_cast)

# Register itkImageToImageFilterIUS4IUC4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUC4_swigregister(itkImageToImageFilterIUS4IUC4)
itkImageToImageFilterIUS4IUC4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUC4_cast

class itkImageToImageFilterIUS4IUI4(itk.itkImageSourcePython.itkImageSourceIUI4):
    r"""Proxy of C++ itkImageToImageFilterIUS4IUI4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUI4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUI4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUI4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUI4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUI4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUI4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUI4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUI4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUI4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUI4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUS4IUI4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUI4_cast)

# Register itkImageToImageFilterIUS4IUI4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUI4_swigregister(itkImageToImageFilterIUS4IUI4)
itkImageToImageFilterIUS4IUI4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUI4_cast

class itkImageToImageFilterIUS4IUL4(itk.itkImageSourcePython.itkImageSourceIUL4):
    r"""Proxy of C++ itkImageToImageFilterIUS4IUL4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUL4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUL4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUL4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUL4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUL4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUL4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUL4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUL4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUL4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUL4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUS4IUL4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUL4_cast)

# Register itkImageToImageFilterIUS4IUL4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUL4_swigregister(itkImageToImageFilterIUS4IUL4)
itkImageToImageFilterIUS4IUL4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUL4_cast

class itkImageToImageFilterIUS4IUS4(itk.itkImageSourcePython.itkImageSourceIUS4):
    r"""Proxy of C++ itkImageToImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIUS4IUS4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4_cast)

# Register itkImageToImageFilterIUS4IUS4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4_swigregister(itkImageToImageFilterIUS4IUS4)
itkImageToImageFilterIUS4IUS4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4_cast

class itkImageToImageFilterIVF22ICVF22(itk.itkImageSourcePython.itkImageSourceICVF22):
    r"""Proxy of C++ itkImageToImageFilterIVF22ICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF22_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF22_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF22_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF22_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF22_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF22_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF22_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF22_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF22_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF22_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIVF22ICVF22
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF22_cast)

# Register itkImageToImageFilterIVF22ICVF22 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF22_swigregister(itkImageToImageFilterIVF22ICVF22)
itkImageToImageFilterIVF22ICVF22_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF22_cast

class itkImageToImageFilterIVF22ICVF42(itk.itkImageSourcePython.itkImageSourceICVF42):
    r"""Proxy of C++ itkImageToImageFilterIVF22ICVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF42_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF42_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF42_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF42_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF42_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF42_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF42_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF42_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF42_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF42_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIVF22ICVF42
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF42_cast)

# Register itkImageToImageFilterIVF22ICVF42 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF42_swigregister(itkImageToImageFilterIVF22ICVF42)
itkImageToImageFilterIVF22ICVF42_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF42_cast

class itkImageToImageFilterIVF22IVF22(itk.itkImageSourcePython.itkImageSourceIVF22):
    r"""Proxy of C++ itkImageToImageFilterIVF22IVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIVF22IVF22
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22_cast)

# Register itkImageToImageFilterIVF22IVF22 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22_swigregister(itkImageToImageFilterIVF22IVF22)
itkImageToImageFilterIVF22IVF22_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22_cast

class itkImageToImageFilterIVF22VIF2(itk.itkImageSourcePython.itkImageSourceVIF2):
    r"""Proxy of C++ itkImageToImageFilterIVF22VIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22VIF2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22VIF2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22VIF2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22VIF2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22VIF2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22VIF2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22VIF2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22VIF2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22VIF2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22VIF2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIVF22VIF2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF22VIF2_cast)

# Register itkImageToImageFilterIVF22VIF2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIVF22VIF2_swigregister(itkImageToImageFilterIVF22VIF2)
itkImageToImageFilterIVF22VIF2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIVF22VIF2_cast

class itkImageToImageFilterIVF23ICVF23(itk.itkImageSourcePython.itkImageSourceICVF23):
    r"""Proxy of C++ itkImageToImageFilterIVF23ICVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23ICVF23_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23ICVF23_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23ICVF23_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23ICVF23_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23ICVF23_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23ICVF23_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23ICVF23_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23ICVF23_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23ICVF23_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23ICVF23_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIVF23ICVF23
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23ICVF23_cast)

# Register itkImageToImageFilterIVF23ICVF23 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIVF23ICVF23_swigregister(itkImageToImageFilterIVF23ICVF23)
itkImageToImageFilterIVF23ICVF23_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIVF23ICVF23_cast

class itkImageToImageFilterIVF23ICVF43(itk.itkImageSourcePython.itkImageSourceICVF43):
    r"""Proxy of C++ itkImageToImageFilterIVF23ICVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23ICVF43_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23ICVF43_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23ICVF43_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23ICVF43_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23ICVF43_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23ICVF43_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23ICVF43_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23ICVF43_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23ICVF43_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23ICVF43_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIVF23ICVF43
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23ICVF43_cast)

# Register itkImageToImageFilterIVF23ICVF43 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIVF23ICVF43_swigregister(itkImageToImageFilterIVF23ICVF43)
itkImageToImageFilterIVF23ICVF43_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIVF23ICVF43_cast

class itkImageToImageFilterIVF23IVF23(itk.itkImageSourcePython.itkImageSourceIVF23):
    r"""Proxy of C++ itkImageToImageFilterIVF23IVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23IVF23_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23IVF23_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23IVF23_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23IVF23_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23IVF23_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23IVF23_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23IVF23_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23IVF23_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23IVF23_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23IVF23_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIVF23IVF23
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23IVF23_cast)

# Register itkImageToImageFilterIVF23IVF23 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIVF23IVF23_swigregister(itkImageToImageFilterIVF23IVF23)
itkImageToImageFilterIVF23IVF23_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIVF23IVF23_cast

class itkImageToImageFilterIVF23VIF3(itk.itkImageSourcePython.itkImageSourceVIF3):
    r"""Proxy of C++ itkImageToImageFilterIVF23VIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23VIF3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23VIF3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23VIF3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23VIF3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23VIF3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23VIF3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23VIF3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23VIF3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23VIF3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23VIF3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIVF23VIF3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF23VIF3_cast)

# Register itkImageToImageFilterIVF23VIF3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIVF23VIF3_swigregister(itkImageToImageFilterIVF23VIF3)
itkImageToImageFilterIVF23VIF3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIVF23VIF3_cast

class itkImageToImageFilterIVF24ICVF24(itk.itkImageSourcePython.itkImageSourceICVF24):
    r"""Proxy of C++ itkImageToImageFilterIVF24ICVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24ICVF24_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24ICVF24_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24ICVF24_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24ICVF24_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24ICVF24_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24ICVF24_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24ICVF24_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24ICVF24_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24ICVF24_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24ICVF24_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIVF24ICVF24
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24ICVF24_cast)

# Register itkImageToImageFilterIVF24ICVF24 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIVF24ICVF24_swigregister(itkImageToImageFilterIVF24ICVF24)
itkImageToImageFilterIVF24ICVF24_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIVF24ICVF24_cast

class itkImageToImageFilterIVF24ICVF44(itk.itkImageSourcePython.itkImageSourceICVF44):
    r"""Proxy of C++ itkImageToImageFilterIVF24ICVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24ICVF44_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24ICVF44_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24ICVF44_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24ICVF44_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24ICVF44_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24ICVF44_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24ICVF44_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24ICVF44_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24ICVF44_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24ICVF44_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIVF24ICVF44
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24ICVF44_cast)

# Register itkImageToImageFilterIVF24ICVF44 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIVF24ICVF44_swigregister(itkImageToImageFilterIVF24ICVF44)
itkImageToImageFilterIVF24ICVF44_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIVF24ICVF44_cast

class itkImageToImageFilterIVF24IVF24(itk.itkImageSourcePython.itkImageSourceIVF24):
    r"""Proxy of C++ itkImageToImageFilterIVF24IVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24IVF24_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24IVF24_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24IVF24_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24IVF24_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24IVF24_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24IVF24_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24IVF24_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24IVF24_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24IVF24_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24IVF24_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIVF24IVF24
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24IVF24_cast)

# Register itkImageToImageFilterIVF24IVF24 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIVF24IVF24_swigregister(itkImageToImageFilterIVF24IVF24)
itkImageToImageFilterIVF24IVF24_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIVF24IVF24_cast

class itkImageToImageFilterIVF24VIF4(itk.itkImageSourcePython.itkImageSourceVIF4):
    r"""Proxy of C++ itkImageToImageFilterIVF24VIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24VIF4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24VIF4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24VIF4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24VIF4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24VIF4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24VIF4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24VIF4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24VIF4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24VIF4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24VIF4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIVF24VIF4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF24VIF4_cast)

# Register itkImageToImageFilterIVF24VIF4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIVF24VIF4_swigregister(itkImageToImageFilterIVF24VIF4)
itkImageToImageFilterIVF24VIF4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIVF24VIF4_cast

class itkImageToImageFilterIVF32ICVF32(itk.itkImageSourcePython.itkImageSourceICVF32):
    r"""Proxy of C++ itkImageToImageFilterIVF32ICVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF32ICVF32_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF32ICVF32_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF32ICVF32_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF32ICVF32_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF32ICVF32_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF32ICVF32_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF32ICVF32_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF32ICVF32_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF32ICVF32_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF32ICVF32_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIVF32ICVF32
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF32ICVF32_cast)

# Register itkImageToImageFilterIVF32ICVF32 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIVF32ICVF32_swigregister(itkImageToImageFilterIVF32ICVF32)
itkImageToImageFilterIVF32ICVF32_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIVF32ICVF32_cast

class itkImageToImageFilterIVF32IVF32(itk.itkImageSourcePython.itkImageSourceIVF32):
    r"""Proxy of C++ itkImageToImageFilterIVF32IVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF32IVF32_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF32IVF32_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF32IVF32_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF32IVF32_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF32IVF32_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF32IVF32_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF32IVF32_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF32IVF32_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF32IVF32_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF32IVF32_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIVF32IVF32
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF32IVF32_cast)

# Register itkImageToImageFilterIVF32IVF32 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIVF32IVF32_swigregister(itkImageToImageFilterIVF32IVF32)
itkImageToImageFilterIVF32IVF32_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIVF32IVF32_cast

class itkImageToImageFilterIVF32VIF2(itk.itkImageSourcePython.itkImageSourceVIF2):
    r"""Proxy of C++ itkImageToImageFilterIVF32VIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF32VIF2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF32VIF2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF32VIF2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF32VIF2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF32VIF2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF32VIF2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF32VIF2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF32VIF2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF32VIF2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF32VIF2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIVF32VIF2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF32VIF2_cast)

# Register itkImageToImageFilterIVF32VIF2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIVF32VIF2_swigregister(itkImageToImageFilterIVF32VIF2)
itkImageToImageFilterIVF32VIF2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIVF32VIF2_cast

class itkImageToImageFilterIVF33ICVF33(itk.itkImageSourcePython.itkImageSourceICVF33):
    r"""Proxy of C++ itkImageToImageFilterIVF33ICVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33ICVF33_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33ICVF33_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33ICVF33_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33ICVF33_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33ICVF33_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33ICVF33_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33ICVF33_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33ICVF33_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33ICVF33_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33ICVF33_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIVF33ICVF33
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33ICVF33_cast)

# Register itkImageToImageFilterIVF33ICVF33 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIVF33ICVF33_swigregister(itkImageToImageFilterIVF33ICVF33)
itkImageToImageFilterIVF33ICVF33_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIVF33ICVF33_cast

class itkImageToImageFilterIVF33IVF33(itk.itkImageSourcePython.itkImageSourceIVF33):
    r"""Proxy of C++ itkImageToImageFilterIVF33IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIVF33IVF33
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33_cast)

# Register itkImageToImageFilterIVF33IVF33 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33_swigregister(itkImageToImageFilterIVF33IVF33)
itkImageToImageFilterIVF33IVF33_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33_cast

class itkImageToImageFilterIVF33VIF3(itk.itkImageSourcePython.itkImageSourceVIF3):
    r"""Proxy of C++ itkImageToImageFilterIVF33VIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33VIF3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33VIF3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33VIF3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33VIF3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33VIF3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33VIF3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33VIF3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33VIF3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33VIF3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33VIF3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIVF33VIF3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF33VIF3_cast)

# Register itkImageToImageFilterIVF33VIF3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIVF33VIF3_swigregister(itkImageToImageFilterIVF33VIF3)
itkImageToImageFilterIVF33VIF3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIVF33VIF3_cast

class itkImageToImageFilterIVF34ICVF34(itk.itkImageSourcePython.itkImageSourceICVF34):
    r"""Proxy of C++ itkImageToImageFilterIVF34ICVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF34ICVF34_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF34ICVF34_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF34ICVF34_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF34ICVF34_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF34ICVF34_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF34ICVF34_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF34ICVF34_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF34ICVF34_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF34ICVF34_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF34ICVF34_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIVF34ICVF34
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF34ICVF34_cast)

# Register itkImageToImageFilterIVF34ICVF34 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIVF34ICVF34_swigregister(itkImageToImageFilterIVF34ICVF34)
itkImageToImageFilterIVF34ICVF34_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIVF34ICVF34_cast

class itkImageToImageFilterIVF34IVF34(itk.itkImageSourcePython.itkImageSourceIVF34):
    r"""Proxy of C++ itkImageToImageFilterIVF34IVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF34IVF34_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF34IVF34_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF34IVF34_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF34IVF34_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF34IVF34_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF34IVF34_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF34IVF34_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF34IVF34_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF34IVF34_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF34IVF34_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIVF34IVF34
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF34IVF34_cast)

# Register itkImageToImageFilterIVF34IVF34 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIVF34IVF34_swigregister(itkImageToImageFilterIVF34IVF34)
itkImageToImageFilterIVF34IVF34_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIVF34IVF34_cast

class itkImageToImageFilterIVF34VIF4(itk.itkImageSourcePython.itkImageSourceVIF4):
    r"""Proxy of C++ itkImageToImageFilterIVF34VIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF34VIF4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF34VIF4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF34VIF4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF34VIF4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF34VIF4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF34VIF4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF34VIF4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF34VIF4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF34VIF4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF34VIF4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIVF34VIF4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF34VIF4_cast)

# Register itkImageToImageFilterIVF34VIF4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIVF34VIF4_swigregister(itkImageToImageFilterIVF34VIF4)
itkImageToImageFilterIVF34VIF4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIVF34VIF4_cast

class itkImageToImageFilterIVF42ICVF42(itk.itkImageSourcePython.itkImageSourceICVF42):
    r"""Proxy of C++ itkImageToImageFilterIVF42ICVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF42ICVF42_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF42ICVF42_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF42ICVF42_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF42ICVF42_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF42ICVF42_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF42ICVF42_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF42ICVF42_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF42ICVF42_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF42ICVF42_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF42ICVF42_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIVF42ICVF42
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF42ICVF42_cast)

# Register itkImageToImageFilterIVF42ICVF42 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIVF42ICVF42_swigregister(itkImageToImageFilterIVF42ICVF42)
itkImageToImageFilterIVF42ICVF42_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIVF42ICVF42_cast

class itkImageToImageFilterIVF42IVF42(itk.itkImageSourcePython.itkImageSourceIVF42):
    r"""Proxy of C++ itkImageToImageFilterIVF42IVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF42IVF42_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF42IVF42_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF42IVF42_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF42IVF42_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF42IVF42_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF42IVF42_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF42IVF42_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF42IVF42_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF42IVF42_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF42IVF42_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIVF42IVF42
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF42IVF42_cast)

# Register itkImageToImageFilterIVF42IVF42 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIVF42IVF42_swigregister(itkImageToImageFilterIVF42IVF42)
itkImageToImageFilterIVF42IVF42_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIVF42IVF42_cast

class itkImageToImageFilterIVF42VIF2(itk.itkImageSourcePython.itkImageSourceVIF2):
    r"""Proxy of C++ itkImageToImageFilterIVF42VIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF42VIF2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF42VIF2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF42VIF2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF42VIF2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF42VIF2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF42VIF2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF42VIF2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF42VIF2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF42VIF2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF42VIF2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIVF42VIF2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF42VIF2_cast)

# Register itkImageToImageFilterIVF42VIF2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIVF42VIF2_swigregister(itkImageToImageFilterIVF42VIF2)
itkImageToImageFilterIVF42VIF2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIVF42VIF2_cast

class itkImageToImageFilterIVF43ICVF43(itk.itkImageSourcePython.itkImageSourceICVF43):
    r"""Proxy of C++ itkImageToImageFilterIVF43ICVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF43ICVF43_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF43ICVF43_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF43ICVF43_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF43ICVF43_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF43ICVF43_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF43ICVF43_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF43ICVF43_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF43ICVF43_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF43ICVF43_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF43ICVF43_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIVF43ICVF43
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF43ICVF43_cast)

# Register itkImageToImageFilterIVF43ICVF43 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIVF43ICVF43_swigregister(itkImageToImageFilterIVF43ICVF43)
itkImageToImageFilterIVF43ICVF43_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIVF43ICVF43_cast

class itkImageToImageFilterIVF43IVF43(itk.itkImageSourcePython.itkImageSourceIVF43):
    r"""Proxy of C++ itkImageToImageFilterIVF43IVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF43IVF43_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF43IVF43_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF43IVF43_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF43IVF43_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF43IVF43_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF43IVF43_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF43IVF43_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF43IVF43_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF43IVF43_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF43IVF43_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIVF43IVF43
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF43IVF43_cast)

# Register itkImageToImageFilterIVF43IVF43 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIVF43IVF43_swigregister(itkImageToImageFilterIVF43IVF43)
itkImageToImageFilterIVF43IVF43_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIVF43IVF43_cast

class itkImageToImageFilterIVF43VIF3(itk.itkImageSourcePython.itkImageSourceVIF3):
    r"""Proxy of C++ itkImageToImageFilterIVF43VIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF43VIF3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF43VIF3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF43VIF3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF43VIF3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF43VIF3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF43VIF3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF43VIF3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF43VIF3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF43VIF3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF43VIF3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIVF43VIF3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF43VIF3_cast)

# Register itkImageToImageFilterIVF43VIF3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIVF43VIF3_swigregister(itkImageToImageFilterIVF43VIF3)
itkImageToImageFilterIVF43VIF3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIVF43VIF3_cast

class itkImageToImageFilterIVF44ICVF44(itk.itkImageSourcePython.itkImageSourceICVF44):
    r"""Proxy of C++ itkImageToImageFilterIVF44ICVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF44ICVF44_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF44ICVF44_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF44ICVF44_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF44ICVF44_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF44ICVF44_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF44ICVF44_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF44ICVF44_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF44ICVF44_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF44ICVF44_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF44ICVF44_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIVF44ICVF44
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF44ICVF44_cast)

# Register itkImageToImageFilterIVF44ICVF44 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIVF44ICVF44_swigregister(itkImageToImageFilterIVF44ICVF44)
itkImageToImageFilterIVF44ICVF44_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIVF44ICVF44_cast

class itkImageToImageFilterIVF44IVF44(itk.itkImageSourcePython.itkImageSourceIVF44):
    r"""Proxy of C++ itkImageToImageFilterIVF44IVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF44IVF44_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF44IVF44_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF44IVF44_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF44IVF44_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF44IVF44_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF44IVF44_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF44IVF44_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF44IVF44_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF44IVF44_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF44IVF44_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIVF44IVF44
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF44IVF44_cast)

# Register itkImageToImageFilterIVF44IVF44 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIVF44IVF44_swigregister(itkImageToImageFilterIVF44IVF44)
itkImageToImageFilterIVF44IVF44_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIVF44IVF44_cast

class itkImageToImageFilterIVF44VIF4(itk.itkImageSourcePython.itkImageSourceVIF4):
    r"""Proxy of C++ itkImageToImageFilterIVF44VIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF44VIF4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF44VIF4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF44VIF4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF44VIF4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF44VIF4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF44VIF4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF44VIF4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF44VIF4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF44VIF4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF44VIF4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterIVF44VIF4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterIVF44VIF4_cast)

# Register itkImageToImageFilterIVF44VIF4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterIVF44VIF4_swigregister(itkImageToImageFilterIVF44VIF4)
itkImageToImageFilterIVF44VIF4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterIVF44VIF4_cast

class itkImageToImageFilterVID2VID2(itk.itkImageSourcePython.itkImageSourceVID2):
    r"""Proxy of C++ itkImageToImageFilterVID2VID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVID2VID2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVID2VID2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVID2VID2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVID2VID2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVID2VID2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVID2VID2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVID2VID2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVID2VID2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVID2VID2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVID2VID2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterVID2VID2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterVID2VID2_cast)

# Register itkImageToImageFilterVID2VID2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterVID2VID2_swigregister(itkImageToImageFilterVID2VID2)
itkImageToImageFilterVID2VID2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterVID2VID2_cast

class itkImageToImageFilterVID3VID3(itk.itkImageSourcePython.itkImageSourceVID3):
    r"""Proxy of C++ itkImageToImageFilterVID3VID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVID3VID3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVID3VID3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVID3VID3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVID3VID3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVID3VID3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVID3VID3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVID3VID3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVID3VID3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVID3VID3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVID3VID3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterVID3VID3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterVID3VID3_cast)

# Register itkImageToImageFilterVID3VID3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterVID3VID3_swigregister(itkImageToImageFilterVID3VID3)
itkImageToImageFilterVID3VID3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterVID3VID3_cast

class itkImageToImageFilterVID4VID4(itk.itkImageSourcePython.itkImageSourceVID4):
    r"""Proxy of C++ itkImageToImageFilterVID4VID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVID4VID4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVID4VID4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVID4VID4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVID4VID4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVID4VID4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVID4VID4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVID4VID4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVID4VID4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVID4VID4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVID4VID4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterVID4VID4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterVID4VID4_cast)

# Register itkImageToImageFilterVID4VID4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterVID4VID4_swigregister(itkImageToImageFilterVID4VID4)
itkImageToImageFilterVID4VID4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterVID4VID4_cast

class itkImageToImageFilterVIF2ICVF22(itk.itkImageSourcePython.itkImageSourceICVF22):
    r"""Proxy of C++ itkImageToImageFilterVIF2ICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF22_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF22_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF22_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF22_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF22_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF22_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF22_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF22_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF22_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF22_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterVIF2ICVF22
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF22_cast)

# Register itkImageToImageFilterVIF2ICVF22 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF22_swigregister(itkImageToImageFilterVIF2ICVF22)
itkImageToImageFilterVIF2ICVF22_cast = _itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF22_cast

class itkImageToImageFilterVIF2ICVF32(itk.itkImageSourcePython.itkImageSourceICVF32):
    r"""Proxy of C++ itkImageToImageFilterVIF2ICVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF32_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF32_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF32_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF32_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF32_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF32_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF32_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF32_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF32_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF32_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterVIF2ICVF32
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF32_cast)

# Register itkImageToImageFilterVIF2ICVF32 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF32_swigregister(itkImageToImageFilterVIF2ICVF32)
itkImageToImageFilterVIF2ICVF32_cast = _itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF32_cast

class itkImageToImageFilterVIF2ICVF42(itk.itkImageSourcePython.itkImageSourceICVF42):
    r"""Proxy of C++ itkImageToImageFilterVIF2ICVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF42_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF42_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF42_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF42_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF42_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF42_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF42_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF42_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF42_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF42_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterVIF2ICVF42
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF42_cast)

# Register itkImageToImageFilterVIF2ICVF42 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF42_swigregister(itkImageToImageFilterVIF2ICVF42)
itkImageToImageFilterVIF2ICVF42_cast = _itkImageToImageFilterAPython.itkImageToImageFilterVIF2ICVF42_cast

class itkImageToImageFilterVIF2IVF22(itk.itkImageSourcePython.itkImageSourceIVF22):
    r"""Proxy of C++ itkImageToImageFilterVIF2IVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF22_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF22_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF22_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF22_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF22_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF22_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF22_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF22_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF22_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF22_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterVIF2IVF22
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF22_cast)

# Register itkImageToImageFilterVIF2IVF22 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF22_swigregister(itkImageToImageFilterVIF2IVF22)
itkImageToImageFilterVIF2IVF22_cast = _itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF22_cast

class itkImageToImageFilterVIF2IVF32(itk.itkImageSourcePython.itkImageSourceIVF32):
    r"""Proxy of C++ itkImageToImageFilterVIF2IVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF32_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF32_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF32_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF32_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF32_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF32_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF32_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF32_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF32_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF32_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterVIF2IVF32
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF32_cast)

# Register itkImageToImageFilterVIF2IVF32 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF32_swigregister(itkImageToImageFilterVIF2IVF32)
itkImageToImageFilterVIF2IVF32_cast = _itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF32_cast

class itkImageToImageFilterVIF2IVF42(itk.itkImageSourcePython.itkImageSourceIVF42):
    r"""Proxy of C++ itkImageToImageFilterVIF2IVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF42_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF42_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF42_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF42_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF42_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF42_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF42_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF42_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF42_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF42_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterVIF2IVF42
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF42_cast)

# Register itkImageToImageFilterVIF2IVF42 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF42_swigregister(itkImageToImageFilterVIF2IVF42)
itkImageToImageFilterVIF2IVF42_cast = _itkImageToImageFilterAPython.itkImageToImageFilterVIF2IVF42_cast

class itkImageToImageFilterVIF2VIF2(itk.itkImageSourcePython.itkImageSourceVIF2):
    r"""Proxy of C++ itkImageToImageFilterVIF2VIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2VIF2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2VIF2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2VIF2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2VIF2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2VIF2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2VIF2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2VIF2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2VIF2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2VIF2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2VIF2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterVIF2VIF2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF2VIF2_cast)

# Register itkImageToImageFilterVIF2VIF2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterVIF2VIF2_swigregister(itkImageToImageFilterVIF2VIF2)
itkImageToImageFilterVIF2VIF2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterVIF2VIF2_cast

class itkImageToImageFilterVIF3ICVF23(itk.itkImageSourcePython.itkImageSourceICVF23):
    r"""Proxy of C++ itkImageToImageFilterVIF3ICVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF23_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF23_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF23_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF23_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF23_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF23_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF23_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF23_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF23_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF23_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterVIF3ICVF23
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF23_cast)

# Register itkImageToImageFilterVIF3ICVF23 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF23_swigregister(itkImageToImageFilterVIF3ICVF23)
itkImageToImageFilterVIF3ICVF23_cast = _itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF23_cast

class itkImageToImageFilterVIF3ICVF33(itk.itkImageSourcePython.itkImageSourceICVF33):
    r"""Proxy of C++ itkImageToImageFilterVIF3ICVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF33_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF33_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF33_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF33_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF33_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF33_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF33_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF33_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF33_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF33_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterVIF3ICVF33
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF33_cast)

# Register itkImageToImageFilterVIF3ICVF33 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF33_swigregister(itkImageToImageFilterVIF3ICVF33)
itkImageToImageFilterVIF3ICVF33_cast = _itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF33_cast

class itkImageToImageFilterVIF3ICVF43(itk.itkImageSourcePython.itkImageSourceICVF43):
    r"""Proxy of C++ itkImageToImageFilterVIF3ICVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF43_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF43_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF43_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF43_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF43_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF43_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF43_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF43_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF43_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF43_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterVIF3ICVF43
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF43_cast)

# Register itkImageToImageFilterVIF3ICVF43 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF43_swigregister(itkImageToImageFilterVIF3ICVF43)
itkImageToImageFilterVIF3ICVF43_cast = _itkImageToImageFilterAPython.itkImageToImageFilterVIF3ICVF43_cast

class itkImageToImageFilterVIF3IVF23(itk.itkImageSourcePython.itkImageSourceIVF23):
    r"""Proxy of C++ itkImageToImageFilterVIF3IVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF23_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF23_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF23_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF23_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF23_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF23_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF23_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF23_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF23_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF23_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterVIF3IVF23
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF23_cast)

# Register itkImageToImageFilterVIF3IVF23 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF23_swigregister(itkImageToImageFilterVIF3IVF23)
itkImageToImageFilterVIF3IVF23_cast = _itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF23_cast

class itkImageToImageFilterVIF3IVF33(itk.itkImageSourcePython.itkImageSourceIVF33):
    r"""Proxy of C++ itkImageToImageFilterVIF3IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF33_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF33_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF33_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF33_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF33_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF33_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF33_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF33_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF33_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF33_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterVIF3IVF33
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF33_cast)

# Register itkImageToImageFilterVIF3IVF33 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF33_swigregister(itkImageToImageFilterVIF3IVF33)
itkImageToImageFilterVIF3IVF33_cast = _itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF33_cast

class itkImageToImageFilterVIF3IVF43(itk.itkImageSourcePython.itkImageSourceIVF43):
    r"""Proxy of C++ itkImageToImageFilterVIF3IVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF43_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF43_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF43_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF43_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF43_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF43_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF43_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF43_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF43_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF43_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterVIF3IVF43
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF43_cast)

# Register itkImageToImageFilterVIF3IVF43 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF43_swigregister(itkImageToImageFilterVIF3IVF43)
itkImageToImageFilterVIF3IVF43_cast = _itkImageToImageFilterAPython.itkImageToImageFilterVIF3IVF43_cast

class itkImageToImageFilterVIF3VIF3(itk.itkImageSourcePython.itkImageSourceVIF3):
    r"""Proxy of C++ itkImageToImageFilterVIF3VIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3VIF3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3VIF3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3VIF3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3VIF3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3VIF3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3VIF3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3VIF3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3VIF3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3VIF3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3VIF3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterVIF3VIF3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF3VIF3_cast)

# Register itkImageToImageFilterVIF3VIF3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterVIF3VIF3_swigregister(itkImageToImageFilterVIF3VIF3)
itkImageToImageFilterVIF3VIF3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterVIF3VIF3_cast

class itkImageToImageFilterVIF4ICVF24(itk.itkImageSourcePython.itkImageSourceICVF24):
    r"""Proxy of C++ itkImageToImageFilterVIF4ICVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF24_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF24_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF24_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF24_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF24_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF24_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF24_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF24_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF24_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF24_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterVIF4ICVF24
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF24_cast)

# Register itkImageToImageFilterVIF4ICVF24 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF24_swigregister(itkImageToImageFilterVIF4ICVF24)
itkImageToImageFilterVIF4ICVF24_cast = _itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF24_cast

class itkImageToImageFilterVIF4ICVF34(itk.itkImageSourcePython.itkImageSourceICVF34):
    r"""Proxy of C++ itkImageToImageFilterVIF4ICVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF34_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF34_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF34_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF34_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF34_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF34_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF34_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF34_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF34_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF34_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterVIF4ICVF34
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF34_cast)

# Register itkImageToImageFilterVIF4ICVF34 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF34_swigregister(itkImageToImageFilterVIF4ICVF34)
itkImageToImageFilterVIF4ICVF34_cast = _itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF34_cast

class itkImageToImageFilterVIF4ICVF44(itk.itkImageSourcePython.itkImageSourceICVF44):
    r"""Proxy of C++ itkImageToImageFilterVIF4ICVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF44_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF44_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF44_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF44_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF44_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF44_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF44_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF44_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF44_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF44_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterVIF4ICVF44
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF44_cast)

# Register itkImageToImageFilterVIF4ICVF44 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF44_swigregister(itkImageToImageFilterVIF4ICVF44)
itkImageToImageFilterVIF4ICVF44_cast = _itkImageToImageFilterAPython.itkImageToImageFilterVIF4ICVF44_cast

class itkImageToImageFilterVIF4IVF24(itk.itkImageSourcePython.itkImageSourceIVF24):
    r"""Proxy of C++ itkImageToImageFilterVIF4IVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF24_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF24_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF24_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF24_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF24_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF24_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF24_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF24_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF24_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF24_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterVIF4IVF24
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF24_cast)

# Register itkImageToImageFilterVIF4IVF24 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF24_swigregister(itkImageToImageFilterVIF4IVF24)
itkImageToImageFilterVIF4IVF24_cast = _itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF24_cast

class itkImageToImageFilterVIF4IVF34(itk.itkImageSourcePython.itkImageSourceIVF34):
    r"""Proxy of C++ itkImageToImageFilterVIF4IVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF34_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF34_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF34_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF34_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF34_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF34_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF34_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF34_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF34_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF34_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterVIF4IVF34
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF34_cast)

# Register itkImageToImageFilterVIF4IVF34 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF34_swigregister(itkImageToImageFilterVIF4IVF34)
itkImageToImageFilterVIF4IVF34_cast = _itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF34_cast

class itkImageToImageFilterVIF4IVF44(itk.itkImageSourcePython.itkImageSourceIVF44):
    r"""Proxy of C++ itkImageToImageFilterVIF4IVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF44_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF44_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF44_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF44_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF44_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF44_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF44_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF44_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF44_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF44_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterVIF4IVF44
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF44_cast)

# Register itkImageToImageFilterVIF4IVF44 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF44_swigregister(itkImageToImageFilterVIF4IVF44)
itkImageToImageFilterVIF4IVF44_cast = _itkImageToImageFilterAPython.itkImageToImageFilterVIF4IVF44_cast

class itkImageToImageFilterVIF4VIF4(itk.itkImageSourcePython.itkImageSourceVIF4):
    r"""Proxy of C++ itkImageToImageFilterVIF4VIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4VIF4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4VIF4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4VIF4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4VIF4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4VIF4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4VIF4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4VIF4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4VIF4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4VIF4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4VIF4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterVIF4VIF4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIF4VIF4_cast)

# Register itkImageToImageFilterVIF4VIF4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterVIF4VIF4_swigregister(itkImageToImageFilterVIF4VIF4)
itkImageToImageFilterVIF4VIF4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterVIF4VIF4_cast

class itkImageToImageFilterVISS2VISS2(itk.itkImageSourcePython.itkImageSourceVISS2):
    r"""Proxy of C++ itkImageToImageFilterVISS2VISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVISS2VISS2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVISS2VISS2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVISS2VISS2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVISS2VISS2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVISS2VISS2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVISS2VISS2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVISS2VISS2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVISS2VISS2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVISS2VISS2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVISS2VISS2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterVISS2VISS2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterVISS2VISS2_cast)

# Register itkImageToImageFilterVISS2VISS2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterVISS2VISS2_swigregister(itkImageToImageFilterVISS2VISS2)
itkImageToImageFilterVISS2VISS2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterVISS2VISS2_cast

class itkImageToImageFilterVISS3VISS3(itk.itkImageSourcePython.itkImageSourceVISS3):
    r"""Proxy of C++ itkImageToImageFilterVISS3VISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVISS3VISS3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVISS3VISS3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVISS3VISS3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVISS3VISS3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVISS3VISS3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVISS3VISS3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVISS3VISS3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVISS3VISS3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVISS3VISS3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVISS3VISS3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterVISS3VISS3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterVISS3VISS3_cast)

# Register itkImageToImageFilterVISS3VISS3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterVISS3VISS3_swigregister(itkImageToImageFilterVISS3VISS3)
itkImageToImageFilterVISS3VISS3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterVISS3VISS3_cast

class itkImageToImageFilterVISS4VISS4(itk.itkImageSourcePython.itkImageSourceVISS4):
    r"""Proxy of C++ itkImageToImageFilterVISS4VISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVISS4VISS4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVISS4VISS4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVISS4VISS4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVISS4VISS4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVISS4VISS4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVISS4VISS4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVISS4VISS4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVISS4VISS4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVISS4VISS4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVISS4VISS4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterVISS4VISS4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterVISS4VISS4_cast)

# Register itkImageToImageFilterVISS4VISS4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterVISS4VISS4_swigregister(itkImageToImageFilterVISS4VISS4)
itkImageToImageFilterVISS4VISS4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterVISS4VISS4_cast

class itkImageToImageFilterVIUC2VIUC2(itk.itkImageSourcePython.itkImageSourceVIUC2):
    r"""Proxy of C++ itkImageToImageFilterVIUC2VIUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUC2VIUC2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUC2VIUC2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUC2VIUC2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUC2VIUC2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUC2VIUC2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUC2VIUC2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUC2VIUC2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUC2VIUC2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUC2VIUC2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUC2VIUC2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterVIUC2VIUC2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUC2VIUC2_cast)

# Register itkImageToImageFilterVIUC2VIUC2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterVIUC2VIUC2_swigregister(itkImageToImageFilterVIUC2VIUC2)
itkImageToImageFilterVIUC2VIUC2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterVIUC2VIUC2_cast

class itkImageToImageFilterVIUC3VIUC3(itk.itkImageSourcePython.itkImageSourceVIUC3):
    r"""Proxy of C++ itkImageToImageFilterVIUC3VIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUC3VIUC3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUC3VIUC3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUC3VIUC3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUC3VIUC3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUC3VIUC3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUC3VIUC3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUC3VIUC3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUC3VIUC3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUC3VIUC3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUC3VIUC3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterVIUC3VIUC3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUC3VIUC3_cast)

# Register itkImageToImageFilterVIUC3VIUC3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterVIUC3VIUC3_swigregister(itkImageToImageFilterVIUC3VIUC3)
itkImageToImageFilterVIUC3VIUC3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterVIUC3VIUC3_cast

class itkImageToImageFilterVIUC4VIUC4(itk.itkImageSourcePython.itkImageSourceVIUC4):
    r"""Proxy of C++ itkImageToImageFilterVIUC4VIUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUC4VIUC4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUC4VIUC4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUC4VIUC4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUC4VIUC4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUC4VIUC4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUC4VIUC4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUC4VIUC4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUC4VIUC4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUC4VIUC4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUC4VIUC4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterVIUC4VIUC4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUC4VIUC4_cast)

# Register itkImageToImageFilterVIUC4VIUC4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterVIUC4VIUC4_swigregister(itkImageToImageFilterVIUC4VIUC4)
itkImageToImageFilterVIUC4VIUC4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterVIUC4VIUC4_cast

class itkImageToImageFilterVIUS2VIUS2(itk.itkImageSourcePython.itkImageSourceVIUS2):
    r"""Proxy of C++ itkImageToImageFilterVIUS2VIUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUS2VIUS2_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUS2VIUS2_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUS2VIUS2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUS2VIUS2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUS2VIUS2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUS2VIUS2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUS2VIUS2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUS2VIUS2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUS2VIUS2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUS2VIUS2_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterVIUS2VIUS2
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUS2VIUS2_cast)

# Register itkImageToImageFilterVIUS2VIUS2 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterVIUS2VIUS2_swigregister(itkImageToImageFilterVIUS2VIUS2)
itkImageToImageFilterVIUS2VIUS2_cast = _itkImageToImageFilterAPython.itkImageToImageFilterVIUS2VIUS2_cast

class itkImageToImageFilterVIUS3VIUS3(itk.itkImageSourcePython.itkImageSourceVIUS3):
    r"""Proxy of C++ itkImageToImageFilterVIUS3VIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUS3VIUS3_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUS3VIUS3_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUS3VIUS3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUS3VIUS3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUS3VIUS3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUS3VIUS3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUS3VIUS3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUS3VIUS3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUS3VIUS3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUS3VIUS3_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterVIUS3VIUS3
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUS3VIUS3_cast)

# Register itkImageToImageFilterVIUS3VIUS3 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterVIUS3VIUS3_swigregister(itkImageToImageFilterVIUS3VIUS3)
itkImageToImageFilterVIUS3VIUS3_cast = _itkImageToImageFilterAPython.itkImageToImageFilterVIUS3VIUS3_cast

class itkImageToImageFilterVIUS4VIUS4(itk.itkImageSourcePython.itkImageSourceVIUS4):
    r"""Proxy of C++ itkImageToImageFilterVIUS4VIUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUS4VIUS4_SetInput)
    GetInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUS4VIUS4_GetInput)
    PushBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUS4VIUS4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUS4VIUS4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUS4VIUS4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUS4VIUS4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUS4VIUS4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUS4VIUS4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUS4VIUS4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUS4VIUS4_GetDirectionTolerance)
    __swig_destroy__ = _itkImageToImageFilterAPython.delete_itkImageToImageFilterVIUS4VIUS4
    cast = _swig_new_static_method(_itkImageToImageFilterAPython.itkImageToImageFilterVIUS4VIUS4_cast)

# Register itkImageToImageFilterVIUS4VIUS4 in _itkImageToImageFilterAPython:
_itkImageToImageFilterAPython.itkImageToImageFilterVIUS4VIUS4_swigregister(itkImageToImageFilterVIUS4VIUS4)
itkImageToImageFilterVIUS4VIUS4_cast = _itkImageToImageFilterAPython.itkImageToImageFilterVIUS4VIUS4_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def image_to_image_filter(*args: itkt.ImageLike, **kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ImageToImageFilter"""
    import itk

    kwarg_typehints = {  }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ImageToImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def image_to_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKCommon.ImageToImageFilter
    image_to_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    image_to_image_filter.__doc__ = filter_object.__doc__




