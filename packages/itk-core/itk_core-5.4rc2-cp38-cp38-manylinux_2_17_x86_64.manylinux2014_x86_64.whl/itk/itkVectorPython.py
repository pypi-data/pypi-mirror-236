# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKCommonPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkVectorPython
else:
    import _itkVectorPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkVectorPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkVectorPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
class itkVectorD1(itk.itkFixedArrayPython.itkFixedArrayD1):
    r"""Proxy of C++ itkVectorD1 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    GetVectorDimension = _swig_new_static_method(_itkVectorPython.itkVectorD1_GetVectorDimension)
    SetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorD1_SetVnlVector)
    GetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorD1_GetVnlVector)
    __iadd__ = _swig_new_instance_method(_itkVectorPython.itkVectorD1___iadd__)
    __isub__ = _swig_new_instance_method(_itkVectorPython.itkVectorD1___isub__)
    __neg__ = _swig_new_instance_method(_itkVectorPython.itkVectorD1___neg__)
    __add__ = _swig_new_instance_method(_itkVectorPython.itkVectorD1___add__)
    __sub__ = _swig_new_instance_method(_itkVectorPython.itkVectorD1___sub__)
    __mul__ = _swig_new_instance_method(_itkVectorPython.itkVectorD1___mul__)
    __eq__ = _swig_new_instance_method(_itkVectorPython.itkVectorD1___eq__)
    __ne__ = _swig_new_instance_method(_itkVectorPython.itkVectorD1___ne__)
    GetNorm = _swig_new_instance_method(_itkVectorPython.itkVectorD1_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVectorPython.itkVectorD1_GetSquaredNorm)
    GetNumberOfComponents = _swig_new_static_method(_itkVectorPython.itkVectorD1_GetNumberOfComponents)
    Normalize = _swig_new_instance_method(_itkVectorPython.itkVectorD1_Normalize)
    SetNthComponent = _swig_new_instance_method(_itkVectorPython.itkVectorD1_SetNthComponent)

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVectorD1
        __init__(self, r) -> itkVectorD1

        Parameters
        ----------
        r: double const &

        __init__(self, r) -> itkVectorD1

        Parameters
        ----------
        r: double const *

        __init__(self, stdArray) -> itkVectorD1

        Parameters
        ----------
        stdArray: std::array< double,1 > const &

        __init__(self, arg0) -> itkVectorD1

        Parameters
        ----------
        arg0: itkVectorD1 const &

        """
        _itkVectorPython.itkVectorD1_swiginit(self, _itkVectorPython.new_itkVectorD1(*args))
    __swig_destroy__ = _itkVectorPython.delete_itkVectorD1
    __getitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorD1___getitem__)
    __setitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorD1___setitem__)
    __len__ = _swig_new_static_method(_itkVectorPython.itkVectorD1___len__)
    __repr__ = _swig_new_instance_method(_itkVectorPython.itkVectorD1___repr__)

# Register itkVectorD1 in _itkVectorPython:
_itkVectorPython.itkVectorD1_swigregister(itkVectorD1)
itkVectorD1_GetVectorDimension = _itkVectorPython.itkVectorD1_GetVectorDimension
itkVectorD1_GetNumberOfComponents = _itkVectorPython.itkVectorD1_GetNumberOfComponents
itkVectorD1___len__ = _itkVectorPython.itkVectorD1___len__

class itkVectorD2(itk.itkFixedArrayPython.itkFixedArrayD2):
    r"""Proxy of C++ itkVectorD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    GetVectorDimension = _swig_new_static_method(_itkVectorPython.itkVectorD2_GetVectorDimension)
    SetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorD2_SetVnlVector)
    GetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorD2_GetVnlVector)
    __iadd__ = _swig_new_instance_method(_itkVectorPython.itkVectorD2___iadd__)
    __isub__ = _swig_new_instance_method(_itkVectorPython.itkVectorD2___isub__)
    __neg__ = _swig_new_instance_method(_itkVectorPython.itkVectorD2___neg__)
    __add__ = _swig_new_instance_method(_itkVectorPython.itkVectorD2___add__)
    __sub__ = _swig_new_instance_method(_itkVectorPython.itkVectorD2___sub__)
    __mul__ = _swig_new_instance_method(_itkVectorPython.itkVectorD2___mul__)
    __eq__ = _swig_new_instance_method(_itkVectorPython.itkVectorD2___eq__)
    __ne__ = _swig_new_instance_method(_itkVectorPython.itkVectorD2___ne__)
    GetNorm = _swig_new_instance_method(_itkVectorPython.itkVectorD2_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVectorPython.itkVectorD2_GetSquaredNorm)
    GetNumberOfComponents = _swig_new_static_method(_itkVectorPython.itkVectorD2_GetNumberOfComponents)
    Normalize = _swig_new_instance_method(_itkVectorPython.itkVectorD2_Normalize)
    SetNthComponent = _swig_new_instance_method(_itkVectorPython.itkVectorD2_SetNthComponent)

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVectorD2
        __init__(self, r) -> itkVectorD2

        Parameters
        ----------
        r: double const &

        __init__(self, r) -> itkVectorD2

        Parameters
        ----------
        r: double const *

        __init__(self, stdArray) -> itkVectorD2

        Parameters
        ----------
        stdArray: std::array< double,2 > const &

        __init__(self, arg0) -> itkVectorD2

        Parameters
        ----------
        arg0: itkVectorD2 const &

        """
        _itkVectorPython.itkVectorD2_swiginit(self, _itkVectorPython.new_itkVectorD2(*args))
    __swig_destroy__ = _itkVectorPython.delete_itkVectorD2
    __getitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorD2___getitem__)
    __setitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorD2___setitem__)
    __len__ = _swig_new_static_method(_itkVectorPython.itkVectorD2___len__)
    __repr__ = _swig_new_instance_method(_itkVectorPython.itkVectorD2___repr__)

# Register itkVectorD2 in _itkVectorPython:
_itkVectorPython.itkVectorD2_swigregister(itkVectorD2)
itkVectorD2_GetVectorDimension = _itkVectorPython.itkVectorD2_GetVectorDimension
itkVectorD2_GetNumberOfComponents = _itkVectorPython.itkVectorD2_GetNumberOfComponents
itkVectorD2___len__ = _itkVectorPython.itkVectorD2___len__

class itkVectorD3(itk.itkFixedArrayPython.itkFixedArrayD3):
    r"""Proxy of C++ itkVectorD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    GetVectorDimension = _swig_new_static_method(_itkVectorPython.itkVectorD3_GetVectorDimension)
    SetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorD3_SetVnlVector)
    GetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorD3_GetVnlVector)
    __iadd__ = _swig_new_instance_method(_itkVectorPython.itkVectorD3___iadd__)
    __isub__ = _swig_new_instance_method(_itkVectorPython.itkVectorD3___isub__)
    __neg__ = _swig_new_instance_method(_itkVectorPython.itkVectorD3___neg__)
    __add__ = _swig_new_instance_method(_itkVectorPython.itkVectorD3___add__)
    __sub__ = _swig_new_instance_method(_itkVectorPython.itkVectorD3___sub__)
    __mul__ = _swig_new_instance_method(_itkVectorPython.itkVectorD3___mul__)
    __eq__ = _swig_new_instance_method(_itkVectorPython.itkVectorD3___eq__)
    __ne__ = _swig_new_instance_method(_itkVectorPython.itkVectorD3___ne__)
    GetNorm = _swig_new_instance_method(_itkVectorPython.itkVectorD3_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVectorPython.itkVectorD3_GetSquaredNorm)
    GetNumberOfComponents = _swig_new_static_method(_itkVectorPython.itkVectorD3_GetNumberOfComponents)
    Normalize = _swig_new_instance_method(_itkVectorPython.itkVectorD3_Normalize)
    SetNthComponent = _swig_new_instance_method(_itkVectorPython.itkVectorD3_SetNthComponent)

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVectorD3
        __init__(self, r) -> itkVectorD3

        Parameters
        ----------
        r: double const &

        __init__(self, r) -> itkVectorD3

        Parameters
        ----------
        r: double const *

        __init__(self, stdArray) -> itkVectorD3

        Parameters
        ----------
        stdArray: std::array< double,3 > const &

        __init__(self, arg0) -> itkVectorD3

        Parameters
        ----------
        arg0: itkVectorD3 const &

        """
        _itkVectorPython.itkVectorD3_swiginit(self, _itkVectorPython.new_itkVectorD3(*args))
    __swig_destroy__ = _itkVectorPython.delete_itkVectorD3
    __getitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorD3___getitem__)
    __setitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorD3___setitem__)
    __len__ = _swig_new_static_method(_itkVectorPython.itkVectorD3___len__)
    __repr__ = _swig_new_instance_method(_itkVectorPython.itkVectorD3___repr__)

# Register itkVectorD3 in _itkVectorPython:
_itkVectorPython.itkVectorD3_swigregister(itkVectorD3)
itkVectorD3_GetVectorDimension = _itkVectorPython.itkVectorD3_GetVectorDimension
itkVectorD3_GetNumberOfComponents = _itkVectorPython.itkVectorD3_GetNumberOfComponents
itkVectorD3___len__ = _itkVectorPython.itkVectorD3___len__

class itkVectorD4(itk.itkFixedArrayPython.itkFixedArrayD4):
    r"""Proxy of C++ itkVectorD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    GetVectorDimension = _swig_new_static_method(_itkVectorPython.itkVectorD4_GetVectorDimension)
    SetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorD4_SetVnlVector)
    GetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorD4_GetVnlVector)
    __iadd__ = _swig_new_instance_method(_itkVectorPython.itkVectorD4___iadd__)
    __isub__ = _swig_new_instance_method(_itkVectorPython.itkVectorD4___isub__)
    __neg__ = _swig_new_instance_method(_itkVectorPython.itkVectorD4___neg__)
    __add__ = _swig_new_instance_method(_itkVectorPython.itkVectorD4___add__)
    __sub__ = _swig_new_instance_method(_itkVectorPython.itkVectorD4___sub__)
    __mul__ = _swig_new_instance_method(_itkVectorPython.itkVectorD4___mul__)
    __eq__ = _swig_new_instance_method(_itkVectorPython.itkVectorD4___eq__)
    __ne__ = _swig_new_instance_method(_itkVectorPython.itkVectorD4___ne__)
    GetNorm = _swig_new_instance_method(_itkVectorPython.itkVectorD4_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVectorPython.itkVectorD4_GetSquaredNorm)
    GetNumberOfComponents = _swig_new_static_method(_itkVectorPython.itkVectorD4_GetNumberOfComponents)
    Normalize = _swig_new_instance_method(_itkVectorPython.itkVectorD4_Normalize)
    SetNthComponent = _swig_new_instance_method(_itkVectorPython.itkVectorD4_SetNthComponent)

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVectorD4
        __init__(self, r) -> itkVectorD4

        Parameters
        ----------
        r: double const &

        __init__(self, r) -> itkVectorD4

        Parameters
        ----------
        r: double const *

        __init__(self, stdArray) -> itkVectorD4

        Parameters
        ----------
        stdArray: std::array< double,4 > const &

        __init__(self, arg0) -> itkVectorD4

        Parameters
        ----------
        arg0: itkVectorD4 const &

        """
        _itkVectorPython.itkVectorD4_swiginit(self, _itkVectorPython.new_itkVectorD4(*args))
    __swig_destroy__ = _itkVectorPython.delete_itkVectorD4
    __getitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorD4___getitem__)
    __setitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorD4___setitem__)
    __len__ = _swig_new_static_method(_itkVectorPython.itkVectorD4___len__)
    __repr__ = _swig_new_instance_method(_itkVectorPython.itkVectorD4___repr__)

# Register itkVectorD4 in _itkVectorPython:
_itkVectorPython.itkVectorD4_swigregister(itkVectorD4)
itkVectorD4_GetVectorDimension = _itkVectorPython.itkVectorD4_GetVectorDimension
itkVectorD4_GetNumberOfComponents = _itkVectorPython.itkVectorD4_GetNumberOfComponents
itkVectorD4___len__ = _itkVectorPython.itkVectorD4___len__

class itkVectorD5(itk.itkFixedArrayPython.itkFixedArrayD5):
    r"""Proxy of C++ itkVectorD5 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    GetVectorDimension = _swig_new_static_method(_itkVectorPython.itkVectorD5_GetVectorDimension)
    SetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorD5_SetVnlVector)
    GetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorD5_GetVnlVector)
    __iadd__ = _swig_new_instance_method(_itkVectorPython.itkVectorD5___iadd__)
    __isub__ = _swig_new_instance_method(_itkVectorPython.itkVectorD5___isub__)
    __neg__ = _swig_new_instance_method(_itkVectorPython.itkVectorD5___neg__)
    __add__ = _swig_new_instance_method(_itkVectorPython.itkVectorD5___add__)
    __sub__ = _swig_new_instance_method(_itkVectorPython.itkVectorD5___sub__)
    __mul__ = _swig_new_instance_method(_itkVectorPython.itkVectorD5___mul__)
    __eq__ = _swig_new_instance_method(_itkVectorPython.itkVectorD5___eq__)
    __ne__ = _swig_new_instance_method(_itkVectorPython.itkVectorD5___ne__)
    GetNorm = _swig_new_instance_method(_itkVectorPython.itkVectorD5_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVectorPython.itkVectorD5_GetSquaredNorm)
    GetNumberOfComponents = _swig_new_static_method(_itkVectorPython.itkVectorD5_GetNumberOfComponents)
    Normalize = _swig_new_instance_method(_itkVectorPython.itkVectorD5_Normalize)
    SetNthComponent = _swig_new_instance_method(_itkVectorPython.itkVectorD5_SetNthComponent)

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVectorD5
        __init__(self, r) -> itkVectorD5

        Parameters
        ----------
        r: double const &

        __init__(self, r) -> itkVectorD5

        Parameters
        ----------
        r: double const *

        __init__(self, stdArray) -> itkVectorD5

        Parameters
        ----------
        stdArray: std::array< double,5 > const &

        __init__(self, arg0) -> itkVectorD5

        Parameters
        ----------
        arg0: itkVectorD5 const &

        """
        _itkVectorPython.itkVectorD5_swiginit(self, _itkVectorPython.new_itkVectorD5(*args))
    __swig_destroy__ = _itkVectorPython.delete_itkVectorD5
    __getitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorD5___getitem__)
    __setitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorD5___setitem__)
    __len__ = _swig_new_static_method(_itkVectorPython.itkVectorD5___len__)
    __repr__ = _swig_new_instance_method(_itkVectorPython.itkVectorD5___repr__)

# Register itkVectorD5 in _itkVectorPython:
_itkVectorPython.itkVectorD5_swigregister(itkVectorD5)
itkVectorD5_GetVectorDimension = _itkVectorPython.itkVectorD5_GetVectorDimension
itkVectorD5_GetNumberOfComponents = _itkVectorPython.itkVectorD5_GetNumberOfComponents
itkVectorD5___len__ = _itkVectorPython.itkVectorD5___len__

class itkVectorD6(itk.itkFixedArrayPython.itkFixedArrayD6):
    r"""Proxy of C++ itkVectorD6 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    GetVectorDimension = _swig_new_static_method(_itkVectorPython.itkVectorD6_GetVectorDimension)
    SetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorD6_SetVnlVector)
    GetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorD6_GetVnlVector)
    __iadd__ = _swig_new_instance_method(_itkVectorPython.itkVectorD6___iadd__)
    __isub__ = _swig_new_instance_method(_itkVectorPython.itkVectorD6___isub__)
    __neg__ = _swig_new_instance_method(_itkVectorPython.itkVectorD6___neg__)
    __add__ = _swig_new_instance_method(_itkVectorPython.itkVectorD6___add__)
    __sub__ = _swig_new_instance_method(_itkVectorPython.itkVectorD6___sub__)
    __mul__ = _swig_new_instance_method(_itkVectorPython.itkVectorD6___mul__)
    __eq__ = _swig_new_instance_method(_itkVectorPython.itkVectorD6___eq__)
    __ne__ = _swig_new_instance_method(_itkVectorPython.itkVectorD6___ne__)
    GetNorm = _swig_new_instance_method(_itkVectorPython.itkVectorD6_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVectorPython.itkVectorD6_GetSquaredNorm)
    GetNumberOfComponents = _swig_new_static_method(_itkVectorPython.itkVectorD6_GetNumberOfComponents)
    Normalize = _swig_new_instance_method(_itkVectorPython.itkVectorD6_Normalize)
    SetNthComponent = _swig_new_instance_method(_itkVectorPython.itkVectorD6_SetNthComponent)

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVectorD6
        __init__(self, r) -> itkVectorD6

        Parameters
        ----------
        r: double const &

        __init__(self, r) -> itkVectorD6

        Parameters
        ----------
        r: double const *

        __init__(self, stdArray) -> itkVectorD6

        Parameters
        ----------
        stdArray: std::array< double,6 > const &

        __init__(self, arg0) -> itkVectorD6

        Parameters
        ----------
        arg0: itkVectorD6 const &

        """
        _itkVectorPython.itkVectorD6_swiginit(self, _itkVectorPython.new_itkVectorD6(*args))
    __swig_destroy__ = _itkVectorPython.delete_itkVectorD6
    __getitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorD6___getitem__)
    __setitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorD6___setitem__)
    __len__ = _swig_new_static_method(_itkVectorPython.itkVectorD6___len__)
    __repr__ = _swig_new_instance_method(_itkVectorPython.itkVectorD6___repr__)

# Register itkVectorD6 in _itkVectorPython:
_itkVectorPython.itkVectorD6_swigregister(itkVectorD6)
itkVectorD6_GetVectorDimension = _itkVectorPython.itkVectorD6_GetVectorDimension
itkVectorD6_GetNumberOfComponents = _itkVectorPython.itkVectorD6_GetNumberOfComponents
itkVectorD6___len__ = _itkVectorPython.itkVectorD6___len__

class itkVectorF1(itk.itkFixedArrayPython.itkFixedArrayF1):
    r"""Proxy of C++ itkVectorF1 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    GetVectorDimension = _swig_new_static_method(_itkVectorPython.itkVectorF1_GetVectorDimension)
    SetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorF1_SetVnlVector)
    GetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorF1_GetVnlVector)
    __iadd__ = _swig_new_instance_method(_itkVectorPython.itkVectorF1___iadd__)
    __isub__ = _swig_new_instance_method(_itkVectorPython.itkVectorF1___isub__)
    __neg__ = _swig_new_instance_method(_itkVectorPython.itkVectorF1___neg__)
    __add__ = _swig_new_instance_method(_itkVectorPython.itkVectorF1___add__)
    __sub__ = _swig_new_instance_method(_itkVectorPython.itkVectorF1___sub__)
    __mul__ = _swig_new_instance_method(_itkVectorPython.itkVectorF1___mul__)
    __eq__ = _swig_new_instance_method(_itkVectorPython.itkVectorF1___eq__)
    __ne__ = _swig_new_instance_method(_itkVectorPython.itkVectorF1___ne__)
    GetNorm = _swig_new_instance_method(_itkVectorPython.itkVectorF1_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVectorPython.itkVectorF1_GetSquaredNorm)
    GetNumberOfComponents = _swig_new_static_method(_itkVectorPython.itkVectorF1_GetNumberOfComponents)
    Normalize = _swig_new_instance_method(_itkVectorPython.itkVectorF1_Normalize)
    SetNthComponent = _swig_new_instance_method(_itkVectorPython.itkVectorF1_SetNthComponent)

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVectorF1
        __init__(self, r) -> itkVectorF1

        Parameters
        ----------
        r: float const &

        __init__(self, r) -> itkVectorF1

        Parameters
        ----------
        r: float const *

        __init__(self, stdArray) -> itkVectorF1

        Parameters
        ----------
        stdArray: std::array< float,1 > const &

        __init__(self, arg0) -> itkVectorF1

        Parameters
        ----------
        arg0: itkVectorF1 const &

        """
        _itkVectorPython.itkVectorF1_swiginit(self, _itkVectorPython.new_itkVectorF1(*args))
    __swig_destroy__ = _itkVectorPython.delete_itkVectorF1
    __getitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorF1___getitem__)
    __setitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorF1___setitem__)
    __len__ = _swig_new_static_method(_itkVectorPython.itkVectorF1___len__)
    __repr__ = _swig_new_instance_method(_itkVectorPython.itkVectorF1___repr__)

# Register itkVectorF1 in _itkVectorPython:
_itkVectorPython.itkVectorF1_swigregister(itkVectorF1)
itkVectorF1_GetVectorDimension = _itkVectorPython.itkVectorF1_GetVectorDimension
itkVectorF1_GetNumberOfComponents = _itkVectorPython.itkVectorF1_GetNumberOfComponents
itkVectorF1___len__ = _itkVectorPython.itkVectorF1___len__

class itkVectorF2(itk.itkFixedArrayPython.itkFixedArrayF2):
    r"""Proxy of C++ itkVectorF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    GetVectorDimension = _swig_new_static_method(_itkVectorPython.itkVectorF2_GetVectorDimension)
    SetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorF2_SetVnlVector)
    GetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorF2_GetVnlVector)
    __iadd__ = _swig_new_instance_method(_itkVectorPython.itkVectorF2___iadd__)
    __isub__ = _swig_new_instance_method(_itkVectorPython.itkVectorF2___isub__)
    __neg__ = _swig_new_instance_method(_itkVectorPython.itkVectorF2___neg__)
    __add__ = _swig_new_instance_method(_itkVectorPython.itkVectorF2___add__)
    __sub__ = _swig_new_instance_method(_itkVectorPython.itkVectorF2___sub__)
    __mul__ = _swig_new_instance_method(_itkVectorPython.itkVectorF2___mul__)
    __eq__ = _swig_new_instance_method(_itkVectorPython.itkVectorF2___eq__)
    __ne__ = _swig_new_instance_method(_itkVectorPython.itkVectorF2___ne__)
    GetNorm = _swig_new_instance_method(_itkVectorPython.itkVectorF2_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVectorPython.itkVectorF2_GetSquaredNorm)
    GetNumberOfComponents = _swig_new_static_method(_itkVectorPython.itkVectorF2_GetNumberOfComponents)
    Normalize = _swig_new_instance_method(_itkVectorPython.itkVectorF2_Normalize)
    SetNthComponent = _swig_new_instance_method(_itkVectorPython.itkVectorF2_SetNthComponent)

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVectorF2
        __init__(self, r) -> itkVectorF2

        Parameters
        ----------
        r: float const &

        __init__(self, r) -> itkVectorF2

        Parameters
        ----------
        r: float const *

        __init__(self, stdArray) -> itkVectorF2

        Parameters
        ----------
        stdArray: std::array< float,2 > const &

        __init__(self, arg0) -> itkVectorF2

        Parameters
        ----------
        arg0: itkVectorF2 const &

        """
        _itkVectorPython.itkVectorF2_swiginit(self, _itkVectorPython.new_itkVectorF2(*args))
    __swig_destroy__ = _itkVectorPython.delete_itkVectorF2
    __getitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorF2___getitem__)
    __setitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorF2___setitem__)
    __len__ = _swig_new_static_method(_itkVectorPython.itkVectorF2___len__)
    __repr__ = _swig_new_instance_method(_itkVectorPython.itkVectorF2___repr__)

# Register itkVectorF2 in _itkVectorPython:
_itkVectorPython.itkVectorF2_swigregister(itkVectorF2)
itkVectorF2_GetVectorDimension = _itkVectorPython.itkVectorF2_GetVectorDimension
itkVectorF2_GetNumberOfComponents = _itkVectorPython.itkVectorF2_GetNumberOfComponents
itkVectorF2___len__ = _itkVectorPython.itkVectorF2___len__

class itkVectorF3(itk.itkFixedArrayPython.itkFixedArrayF3):
    r"""Proxy of C++ itkVectorF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    GetVectorDimension = _swig_new_static_method(_itkVectorPython.itkVectorF3_GetVectorDimension)
    SetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorF3_SetVnlVector)
    GetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorF3_GetVnlVector)
    __iadd__ = _swig_new_instance_method(_itkVectorPython.itkVectorF3___iadd__)
    __isub__ = _swig_new_instance_method(_itkVectorPython.itkVectorF3___isub__)
    __neg__ = _swig_new_instance_method(_itkVectorPython.itkVectorF3___neg__)
    __add__ = _swig_new_instance_method(_itkVectorPython.itkVectorF3___add__)
    __sub__ = _swig_new_instance_method(_itkVectorPython.itkVectorF3___sub__)
    __mul__ = _swig_new_instance_method(_itkVectorPython.itkVectorF3___mul__)
    __eq__ = _swig_new_instance_method(_itkVectorPython.itkVectorF3___eq__)
    __ne__ = _swig_new_instance_method(_itkVectorPython.itkVectorF3___ne__)
    GetNorm = _swig_new_instance_method(_itkVectorPython.itkVectorF3_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVectorPython.itkVectorF3_GetSquaredNorm)
    GetNumberOfComponents = _swig_new_static_method(_itkVectorPython.itkVectorF3_GetNumberOfComponents)
    Normalize = _swig_new_instance_method(_itkVectorPython.itkVectorF3_Normalize)
    SetNthComponent = _swig_new_instance_method(_itkVectorPython.itkVectorF3_SetNthComponent)

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVectorF3
        __init__(self, r) -> itkVectorF3

        Parameters
        ----------
        r: float const &

        __init__(self, r) -> itkVectorF3

        Parameters
        ----------
        r: float const *

        __init__(self, stdArray) -> itkVectorF3

        Parameters
        ----------
        stdArray: std::array< float,3 > const &

        __init__(self, arg0) -> itkVectorF3

        Parameters
        ----------
        arg0: itkVectorF3 const &

        """
        _itkVectorPython.itkVectorF3_swiginit(self, _itkVectorPython.new_itkVectorF3(*args))
    __swig_destroy__ = _itkVectorPython.delete_itkVectorF3
    __getitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorF3___getitem__)
    __setitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorF3___setitem__)
    __len__ = _swig_new_static_method(_itkVectorPython.itkVectorF3___len__)
    __repr__ = _swig_new_instance_method(_itkVectorPython.itkVectorF3___repr__)

# Register itkVectorF3 in _itkVectorPython:
_itkVectorPython.itkVectorF3_swigregister(itkVectorF3)
itkVectorF3_GetVectorDimension = _itkVectorPython.itkVectorF3_GetVectorDimension
itkVectorF3_GetNumberOfComponents = _itkVectorPython.itkVectorF3_GetNumberOfComponents
itkVectorF3___len__ = _itkVectorPython.itkVectorF3___len__

class itkVectorF4(itk.itkFixedArrayPython.itkFixedArrayF4):
    r"""Proxy of C++ itkVectorF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    GetVectorDimension = _swig_new_static_method(_itkVectorPython.itkVectorF4_GetVectorDimension)
    SetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorF4_SetVnlVector)
    GetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorF4_GetVnlVector)
    __iadd__ = _swig_new_instance_method(_itkVectorPython.itkVectorF4___iadd__)
    __isub__ = _swig_new_instance_method(_itkVectorPython.itkVectorF4___isub__)
    __neg__ = _swig_new_instance_method(_itkVectorPython.itkVectorF4___neg__)
    __add__ = _swig_new_instance_method(_itkVectorPython.itkVectorF4___add__)
    __sub__ = _swig_new_instance_method(_itkVectorPython.itkVectorF4___sub__)
    __mul__ = _swig_new_instance_method(_itkVectorPython.itkVectorF4___mul__)
    __eq__ = _swig_new_instance_method(_itkVectorPython.itkVectorF4___eq__)
    __ne__ = _swig_new_instance_method(_itkVectorPython.itkVectorF4___ne__)
    GetNorm = _swig_new_instance_method(_itkVectorPython.itkVectorF4_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVectorPython.itkVectorF4_GetSquaredNorm)
    GetNumberOfComponents = _swig_new_static_method(_itkVectorPython.itkVectorF4_GetNumberOfComponents)
    Normalize = _swig_new_instance_method(_itkVectorPython.itkVectorF4_Normalize)
    SetNthComponent = _swig_new_instance_method(_itkVectorPython.itkVectorF4_SetNthComponent)

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVectorF4
        __init__(self, r) -> itkVectorF4

        Parameters
        ----------
        r: float const &

        __init__(self, r) -> itkVectorF4

        Parameters
        ----------
        r: float const *

        __init__(self, stdArray) -> itkVectorF4

        Parameters
        ----------
        stdArray: std::array< float,4 > const &

        __init__(self, arg0) -> itkVectorF4

        Parameters
        ----------
        arg0: itkVectorF4 const &

        """
        _itkVectorPython.itkVectorF4_swiginit(self, _itkVectorPython.new_itkVectorF4(*args))
    __swig_destroy__ = _itkVectorPython.delete_itkVectorF4
    __getitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorF4___getitem__)
    __setitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorF4___setitem__)
    __len__ = _swig_new_static_method(_itkVectorPython.itkVectorF4___len__)
    __repr__ = _swig_new_instance_method(_itkVectorPython.itkVectorF4___repr__)

# Register itkVectorF4 in _itkVectorPython:
_itkVectorPython.itkVectorF4_swigregister(itkVectorF4)
itkVectorF4_GetVectorDimension = _itkVectorPython.itkVectorF4_GetVectorDimension
itkVectorF4_GetNumberOfComponents = _itkVectorPython.itkVectorF4_GetNumberOfComponents
itkVectorF4___len__ = _itkVectorPython.itkVectorF4___len__

class itkVectorF5(itk.itkFixedArrayPython.itkFixedArrayF5):
    r"""Proxy of C++ itkVectorF5 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    GetVectorDimension = _swig_new_static_method(_itkVectorPython.itkVectorF5_GetVectorDimension)
    SetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorF5_SetVnlVector)
    GetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorF5_GetVnlVector)
    __iadd__ = _swig_new_instance_method(_itkVectorPython.itkVectorF5___iadd__)
    __isub__ = _swig_new_instance_method(_itkVectorPython.itkVectorF5___isub__)
    __neg__ = _swig_new_instance_method(_itkVectorPython.itkVectorF5___neg__)
    __add__ = _swig_new_instance_method(_itkVectorPython.itkVectorF5___add__)
    __sub__ = _swig_new_instance_method(_itkVectorPython.itkVectorF5___sub__)
    __mul__ = _swig_new_instance_method(_itkVectorPython.itkVectorF5___mul__)
    __eq__ = _swig_new_instance_method(_itkVectorPython.itkVectorF5___eq__)
    __ne__ = _swig_new_instance_method(_itkVectorPython.itkVectorF5___ne__)
    GetNorm = _swig_new_instance_method(_itkVectorPython.itkVectorF5_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVectorPython.itkVectorF5_GetSquaredNorm)
    GetNumberOfComponents = _swig_new_static_method(_itkVectorPython.itkVectorF5_GetNumberOfComponents)
    Normalize = _swig_new_instance_method(_itkVectorPython.itkVectorF5_Normalize)
    SetNthComponent = _swig_new_instance_method(_itkVectorPython.itkVectorF5_SetNthComponent)

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVectorF5
        __init__(self, r) -> itkVectorF5

        Parameters
        ----------
        r: float const &

        __init__(self, r) -> itkVectorF5

        Parameters
        ----------
        r: float const *

        __init__(self, stdArray) -> itkVectorF5

        Parameters
        ----------
        stdArray: std::array< float,5 > const &

        __init__(self, arg0) -> itkVectorF5

        Parameters
        ----------
        arg0: itkVectorF5 const &

        """
        _itkVectorPython.itkVectorF5_swiginit(self, _itkVectorPython.new_itkVectorF5(*args))
    __swig_destroy__ = _itkVectorPython.delete_itkVectorF5
    __getitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorF5___getitem__)
    __setitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorF5___setitem__)
    __len__ = _swig_new_static_method(_itkVectorPython.itkVectorF5___len__)
    __repr__ = _swig_new_instance_method(_itkVectorPython.itkVectorF5___repr__)

# Register itkVectorF5 in _itkVectorPython:
_itkVectorPython.itkVectorF5_swigregister(itkVectorF5)
itkVectorF5_GetVectorDimension = _itkVectorPython.itkVectorF5_GetVectorDimension
itkVectorF5_GetNumberOfComponents = _itkVectorPython.itkVectorF5_GetNumberOfComponents
itkVectorF5___len__ = _itkVectorPython.itkVectorF5___len__

class itkVectorF6(itk.itkFixedArrayPython.itkFixedArrayF6):
    r"""Proxy of C++ itkVectorF6 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    GetVectorDimension = _swig_new_static_method(_itkVectorPython.itkVectorF6_GetVectorDimension)
    SetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorF6_SetVnlVector)
    GetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorF6_GetVnlVector)
    __iadd__ = _swig_new_instance_method(_itkVectorPython.itkVectorF6___iadd__)
    __isub__ = _swig_new_instance_method(_itkVectorPython.itkVectorF6___isub__)
    __neg__ = _swig_new_instance_method(_itkVectorPython.itkVectorF6___neg__)
    __add__ = _swig_new_instance_method(_itkVectorPython.itkVectorF6___add__)
    __sub__ = _swig_new_instance_method(_itkVectorPython.itkVectorF6___sub__)
    __mul__ = _swig_new_instance_method(_itkVectorPython.itkVectorF6___mul__)
    __eq__ = _swig_new_instance_method(_itkVectorPython.itkVectorF6___eq__)
    __ne__ = _swig_new_instance_method(_itkVectorPython.itkVectorF6___ne__)
    GetNorm = _swig_new_instance_method(_itkVectorPython.itkVectorF6_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVectorPython.itkVectorF6_GetSquaredNorm)
    GetNumberOfComponents = _swig_new_static_method(_itkVectorPython.itkVectorF6_GetNumberOfComponents)
    Normalize = _swig_new_instance_method(_itkVectorPython.itkVectorF6_Normalize)
    SetNthComponent = _swig_new_instance_method(_itkVectorPython.itkVectorF6_SetNthComponent)

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVectorF6
        __init__(self, r) -> itkVectorF6

        Parameters
        ----------
        r: float const &

        __init__(self, r) -> itkVectorF6

        Parameters
        ----------
        r: float const *

        __init__(self, stdArray) -> itkVectorF6

        Parameters
        ----------
        stdArray: std::array< float,6 > const &

        __init__(self, arg0) -> itkVectorF6

        Parameters
        ----------
        arg0: itkVectorF6 const &

        """
        _itkVectorPython.itkVectorF6_swiginit(self, _itkVectorPython.new_itkVectorF6(*args))
    __swig_destroy__ = _itkVectorPython.delete_itkVectorF6
    __getitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorF6___getitem__)
    __setitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorF6___setitem__)
    __len__ = _swig_new_static_method(_itkVectorPython.itkVectorF6___len__)
    __repr__ = _swig_new_instance_method(_itkVectorPython.itkVectorF6___repr__)

# Register itkVectorF6 in _itkVectorPython:
_itkVectorPython.itkVectorF6_swigregister(itkVectorF6)
itkVectorF6_GetVectorDimension = _itkVectorPython.itkVectorF6_GetVectorDimension
itkVectorF6_GetNumberOfComponents = _itkVectorPython.itkVectorF6_GetNumberOfComponents
itkVectorF6___len__ = _itkVectorPython.itkVectorF6___len__

class itkVectorSS1(itk.itkFixedArrayPython.itkFixedArraySS1):
    r"""Proxy of C++ itkVectorSS1 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    GetVectorDimension = _swig_new_static_method(_itkVectorPython.itkVectorSS1_GetVectorDimension)
    SetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorSS1_SetVnlVector)
    GetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorSS1_GetVnlVector)
    __iadd__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS1___iadd__)
    __isub__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS1___isub__)
    __neg__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS1___neg__)
    __add__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS1___add__)
    __sub__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS1___sub__)
    __mul__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS1___mul__)
    __eq__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS1___eq__)
    __ne__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS1___ne__)
    GetNorm = _swig_new_instance_method(_itkVectorPython.itkVectorSS1_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVectorPython.itkVectorSS1_GetSquaredNorm)
    GetNumberOfComponents = _swig_new_static_method(_itkVectorPython.itkVectorSS1_GetNumberOfComponents)
    Normalize = _swig_new_instance_method(_itkVectorPython.itkVectorSS1_Normalize)
    SetNthComponent = _swig_new_instance_method(_itkVectorPython.itkVectorSS1_SetNthComponent)

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVectorSS1
        __init__(self, r) -> itkVectorSS1

        Parameters
        ----------
        r: short const &

        __init__(self, r) -> itkVectorSS1

        Parameters
        ----------
        r: short const *

        __init__(self, stdArray) -> itkVectorSS1

        Parameters
        ----------
        stdArray: std::array< short,1 > const &

        __init__(self, arg0) -> itkVectorSS1

        Parameters
        ----------
        arg0: itkVectorSS1 const &

        """
        _itkVectorPython.itkVectorSS1_swiginit(self, _itkVectorPython.new_itkVectorSS1(*args))
    __swig_destroy__ = _itkVectorPython.delete_itkVectorSS1
    __getitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS1___getitem__)
    __setitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS1___setitem__)
    __len__ = _swig_new_static_method(_itkVectorPython.itkVectorSS1___len__)
    __repr__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS1___repr__)

# Register itkVectorSS1 in _itkVectorPython:
_itkVectorPython.itkVectorSS1_swigregister(itkVectorSS1)
itkVectorSS1_GetVectorDimension = _itkVectorPython.itkVectorSS1_GetVectorDimension
itkVectorSS1_GetNumberOfComponents = _itkVectorPython.itkVectorSS1_GetNumberOfComponents
itkVectorSS1___len__ = _itkVectorPython.itkVectorSS1___len__

class itkVectorSS2(itk.itkFixedArrayPython.itkFixedArraySS2):
    r"""Proxy of C++ itkVectorSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    GetVectorDimension = _swig_new_static_method(_itkVectorPython.itkVectorSS2_GetVectorDimension)
    SetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorSS2_SetVnlVector)
    GetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorSS2_GetVnlVector)
    __iadd__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS2___iadd__)
    __isub__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS2___isub__)
    __neg__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS2___neg__)
    __add__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS2___add__)
    __sub__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS2___sub__)
    __mul__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS2___mul__)
    __eq__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS2___eq__)
    __ne__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS2___ne__)
    GetNorm = _swig_new_instance_method(_itkVectorPython.itkVectorSS2_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVectorPython.itkVectorSS2_GetSquaredNorm)
    GetNumberOfComponents = _swig_new_static_method(_itkVectorPython.itkVectorSS2_GetNumberOfComponents)
    Normalize = _swig_new_instance_method(_itkVectorPython.itkVectorSS2_Normalize)
    SetNthComponent = _swig_new_instance_method(_itkVectorPython.itkVectorSS2_SetNthComponent)

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVectorSS2
        __init__(self, r) -> itkVectorSS2

        Parameters
        ----------
        r: short const &

        __init__(self, r) -> itkVectorSS2

        Parameters
        ----------
        r: short const *

        __init__(self, stdArray) -> itkVectorSS2

        Parameters
        ----------
        stdArray: std::array< short,2 > const &

        __init__(self, arg0) -> itkVectorSS2

        Parameters
        ----------
        arg0: itkVectorSS2 const &

        """
        _itkVectorPython.itkVectorSS2_swiginit(self, _itkVectorPython.new_itkVectorSS2(*args))
    __swig_destroy__ = _itkVectorPython.delete_itkVectorSS2
    __getitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS2___getitem__)
    __setitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS2___setitem__)
    __len__ = _swig_new_static_method(_itkVectorPython.itkVectorSS2___len__)
    __repr__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS2___repr__)

# Register itkVectorSS2 in _itkVectorPython:
_itkVectorPython.itkVectorSS2_swigregister(itkVectorSS2)
itkVectorSS2_GetVectorDimension = _itkVectorPython.itkVectorSS2_GetVectorDimension
itkVectorSS2_GetNumberOfComponents = _itkVectorPython.itkVectorSS2_GetNumberOfComponents
itkVectorSS2___len__ = _itkVectorPython.itkVectorSS2___len__

class itkVectorSS3(itk.itkFixedArrayPython.itkFixedArraySS3):
    r"""Proxy of C++ itkVectorSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    GetVectorDimension = _swig_new_static_method(_itkVectorPython.itkVectorSS3_GetVectorDimension)
    SetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorSS3_SetVnlVector)
    GetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorSS3_GetVnlVector)
    __iadd__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS3___iadd__)
    __isub__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS3___isub__)
    __neg__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS3___neg__)
    __add__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS3___add__)
    __sub__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS3___sub__)
    __mul__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS3___mul__)
    __eq__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS3___eq__)
    __ne__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS3___ne__)
    GetNorm = _swig_new_instance_method(_itkVectorPython.itkVectorSS3_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVectorPython.itkVectorSS3_GetSquaredNorm)
    GetNumberOfComponents = _swig_new_static_method(_itkVectorPython.itkVectorSS3_GetNumberOfComponents)
    Normalize = _swig_new_instance_method(_itkVectorPython.itkVectorSS3_Normalize)
    SetNthComponent = _swig_new_instance_method(_itkVectorPython.itkVectorSS3_SetNthComponent)

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVectorSS3
        __init__(self, r) -> itkVectorSS3

        Parameters
        ----------
        r: short const &

        __init__(self, r) -> itkVectorSS3

        Parameters
        ----------
        r: short const *

        __init__(self, stdArray) -> itkVectorSS3

        Parameters
        ----------
        stdArray: std::array< short,3 > const &

        __init__(self, arg0) -> itkVectorSS3

        Parameters
        ----------
        arg0: itkVectorSS3 const &

        """
        _itkVectorPython.itkVectorSS3_swiginit(self, _itkVectorPython.new_itkVectorSS3(*args))
    __swig_destroy__ = _itkVectorPython.delete_itkVectorSS3
    __getitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS3___getitem__)
    __setitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS3___setitem__)
    __len__ = _swig_new_static_method(_itkVectorPython.itkVectorSS3___len__)
    __repr__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS3___repr__)

# Register itkVectorSS3 in _itkVectorPython:
_itkVectorPython.itkVectorSS3_swigregister(itkVectorSS3)
itkVectorSS3_GetVectorDimension = _itkVectorPython.itkVectorSS3_GetVectorDimension
itkVectorSS3_GetNumberOfComponents = _itkVectorPython.itkVectorSS3_GetNumberOfComponents
itkVectorSS3___len__ = _itkVectorPython.itkVectorSS3___len__

class itkVectorSS4(itk.itkFixedArrayPython.itkFixedArraySS4):
    r"""Proxy of C++ itkVectorSS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    GetVectorDimension = _swig_new_static_method(_itkVectorPython.itkVectorSS4_GetVectorDimension)
    SetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorSS4_SetVnlVector)
    GetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorSS4_GetVnlVector)
    __iadd__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS4___iadd__)
    __isub__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS4___isub__)
    __neg__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS4___neg__)
    __add__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS4___add__)
    __sub__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS4___sub__)
    __mul__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS4___mul__)
    __eq__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS4___eq__)
    __ne__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS4___ne__)
    GetNorm = _swig_new_instance_method(_itkVectorPython.itkVectorSS4_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVectorPython.itkVectorSS4_GetSquaredNorm)
    GetNumberOfComponents = _swig_new_static_method(_itkVectorPython.itkVectorSS4_GetNumberOfComponents)
    Normalize = _swig_new_instance_method(_itkVectorPython.itkVectorSS4_Normalize)
    SetNthComponent = _swig_new_instance_method(_itkVectorPython.itkVectorSS4_SetNthComponent)

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVectorSS4
        __init__(self, r) -> itkVectorSS4

        Parameters
        ----------
        r: short const &

        __init__(self, r) -> itkVectorSS4

        Parameters
        ----------
        r: short const *

        __init__(self, stdArray) -> itkVectorSS4

        Parameters
        ----------
        stdArray: std::array< short,4 > const &

        __init__(self, arg0) -> itkVectorSS4

        Parameters
        ----------
        arg0: itkVectorSS4 const &

        """
        _itkVectorPython.itkVectorSS4_swiginit(self, _itkVectorPython.new_itkVectorSS4(*args))
    __swig_destroy__ = _itkVectorPython.delete_itkVectorSS4
    __getitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS4___getitem__)
    __setitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS4___setitem__)
    __len__ = _swig_new_static_method(_itkVectorPython.itkVectorSS4___len__)
    __repr__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS4___repr__)

# Register itkVectorSS4 in _itkVectorPython:
_itkVectorPython.itkVectorSS4_swigregister(itkVectorSS4)
itkVectorSS4_GetVectorDimension = _itkVectorPython.itkVectorSS4_GetVectorDimension
itkVectorSS4_GetNumberOfComponents = _itkVectorPython.itkVectorSS4_GetNumberOfComponents
itkVectorSS4___len__ = _itkVectorPython.itkVectorSS4___len__

class itkVectorSS5(itk.itkFixedArrayPython.itkFixedArraySS5):
    r"""Proxy of C++ itkVectorSS5 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    GetVectorDimension = _swig_new_static_method(_itkVectorPython.itkVectorSS5_GetVectorDimension)
    SetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorSS5_SetVnlVector)
    GetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorSS5_GetVnlVector)
    __iadd__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS5___iadd__)
    __isub__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS5___isub__)
    __neg__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS5___neg__)
    __add__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS5___add__)
    __sub__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS5___sub__)
    __mul__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS5___mul__)
    __eq__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS5___eq__)
    __ne__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS5___ne__)
    GetNorm = _swig_new_instance_method(_itkVectorPython.itkVectorSS5_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVectorPython.itkVectorSS5_GetSquaredNorm)
    GetNumberOfComponents = _swig_new_static_method(_itkVectorPython.itkVectorSS5_GetNumberOfComponents)
    Normalize = _swig_new_instance_method(_itkVectorPython.itkVectorSS5_Normalize)
    SetNthComponent = _swig_new_instance_method(_itkVectorPython.itkVectorSS5_SetNthComponent)

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVectorSS5
        __init__(self, r) -> itkVectorSS5

        Parameters
        ----------
        r: short const &

        __init__(self, r) -> itkVectorSS5

        Parameters
        ----------
        r: short const *

        __init__(self, stdArray) -> itkVectorSS5

        Parameters
        ----------
        stdArray: std::array< short,5 > const &

        __init__(self, arg0) -> itkVectorSS5

        Parameters
        ----------
        arg0: itkVectorSS5 const &

        """
        _itkVectorPython.itkVectorSS5_swiginit(self, _itkVectorPython.new_itkVectorSS5(*args))
    __swig_destroy__ = _itkVectorPython.delete_itkVectorSS5
    __getitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS5___getitem__)
    __setitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS5___setitem__)
    __len__ = _swig_new_static_method(_itkVectorPython.itkVectorSS5___len__)
    __repr__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS5___repr__)

# Register itkVectorSS5 in _itkVectorPython:
_itkVectorPython.itkVectorSS5_swigregister(itkVectorSS5)
itkVectorSS5_GetVectorDimension = _itkVectorPython.itkVectorSS5_GetVectorDimension
itkVectorSS5_GetNumberOfComponents = _itkVectorPython.itkVectorSS5_GetNumberOfComponents
itkVectorSS5___len__ = _itkVectorPython.itkVectorSS5___len__

class itkVectorSS6(itk.itkFixedArrayPython.itkFixedArraySS6):
    r"""Proxy of C++ itkVectorSS6 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    GetVectorDimension = _swig_new_static_method(_itkVectorPython.itkVectorSS6_GetVectorDimension)
    SetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorSS6_SetVnlVector)
    GetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorSS6_GetVnlVector)
    __iadd__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS6___iadd__)
    __isub__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS6___isub__)
    __neg__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS6___neg__)
    __add__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS6___add__)
    __sub__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS6___sub__)
    __mul__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS6___mul__)
    __eq__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS6___eq__)
    __ne__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS6___ne__)
    GetNorm = _swig_new_instance_method(_itkVectorPython.itkVectorSS6_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVectorPython.itkVectorSS6_GetSquaredNorm)
    GetNumberOfComponents = _swig_new_static_method(_itkVectorPython.itkVectorSS6_GetNumberOfComponents)
    Normalize = _swig_new_instance_method(_itkVectorPython.itkVectorSS6_Normalize)
    SetNthComponent = _swig_new_instance_method(_itkVectorPython.itkVectorSS6_SetNthComponent)

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVectorSS6
        __init__(self, r) -> itkVectorSS6

        Parameters
        ----------
        r: short const &

        __init__(self, r) -> itkVectorSS6

        Parameters
        ----------
        r: short const *

        __init__(self, stdArray) -> itkVectorSS6

        Parameters
        ----------
        stdArray: std::array< short,6 > const &

        __init__(self, arg0) -> itkVectorSS6

        Parameters
        ----------
        arg0: itkVectorSS6 const &

        """
        _itkVectorPython.itkVectorSS6_swiginit(self, _itkVectorPython.new_itkVectorSS6(*args))
    __swig_destroy__ = _itkVectorPython.delete_itkVectorSS6
    __getitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS6___getitem__)
    __setitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS6___setitem__)
    __len__ = _swig_new_static_method(_itkVectorPython.itkVectorSS6___len__)
    __repr__ = _swig_new_instance_method(_itkVectorPython.itkVectorSS6___repr__)

# Register itkVectorSS6 in _itkVectorPython:
_itkVectorPython.itkVectorSS6_swigregister(itkVectorSS6)
itkVectorSS6_GetVectorDimension = _itkVectorPython.itkVectorSS6_GetVectorDimension
itkVectorSS6_GetNumberOfComponents = _itkVectorPython.itkVectorSS6_GetNumberOfComponents
itkVectorSS6___len__ = _itkVectorPython.itkVectorSS6___len__

class itkVectorUC1(itk.itkFixedArrayPython.itkFixedArrayUC1):
    r"""Proxy of C++ itkVectorUC1 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    GetVectorDimension = _swig_new_static_method(_itkVectorPython.itkVectorUC1_GetVectorDimension)
    SetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorUC1_SetVnlVector)
    GetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorUC1_GetVnlVector)
    __iadd__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC1___iadd__)
    __isub__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC1___isub__)
    __neg__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC1___neg__)
    __add__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC1___add__)
    __sub__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC1___sub__)
    __mul__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC1___mul__)
    __eq__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC1___eq__)
    __ne__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC1___ne__)
    GetNorm = _swig_new_instance_method(_itkVectorPython.itkVectorUC1_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVectorPython.itkVectorUC1_GetSquaredNorm)
    GetNumberOfComponents = _swig_new_static_method(_itkVectorPython.itkVectorUC1_GetNumberOfComponents)
    Normalize = _swig_new_instance_method(_itkVectorPython.itkVectorUC1_Normalize)
    SetNthComponent = _swig_new_instance_method(_itkVectorPython.itkVectorUC1_SetNthComponent)

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVectorUC1
        __init__(self, r) -> itkVectorUC1

        Parameters
        ----------
        r: unsigned char const &

        __init__(self, r) -> itkVectorUC1

        Parameters
        ----------
        r: unsigned char const *

        __init__(self, stdArray) -> itkVectorUC1

        Parameters
        ----------
        stdArray: std::array< unsigned char,1 > const &

        __init__(self, arg0) -> itkVectorUC1

        Parameters
        ----------
        arg0: itkVectorUC1 const &

        """
        _itkVectorPython.itkVectorUC1_swiginit(self, _itkVectorPython.new_itkVectorUC1(*args))
    __swig_destroy__ = _itkVectorPython.delete_itkVectorUC1
    __getitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC1___getitem__)
    __setitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC1___setitem__)
    __len__ = _swig_new_static_method(_itkVectorPython.itkVectorUC1___len__)
    __repr__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC1___repr__)

# Register itkVectorUC1 in _itkVectorPython:
_itkVectorPython.itkVectorUC1_swigregister(itkVectorUC1)
itkVectorUC1_GetVectorDimension = _itkVectorPython.itkVectorUC1_GetVectorDimension
itkVectorUC1_GetNumberOfComponents = _itkVectorPython.itkVectorUC1_GetNumberOfComponents
itkVectorUC1___len__ = _itkVectorPython.itkVectorUC1___len__

class itkVectorUC2(itk.itkFixedArrayPython.itkFixedArrayUC2):
    r"""Proxy of C++ itkVectorUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    GetVectorDimension = _swig_new_static_method(_itkVectorPython.itkVectorUC2_GetVectorDimension)
    SetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorUC2_SetVnlVector)
    GetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorUC2_GetVnlVector)
    __iadd__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC2___iadd__)
    __isub__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC2___isub__)
    __neg__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC2___neg__)
    __add__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC2___add__)
    __sub__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC2___sub__)
    __mul__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC2___mul__)
    __eq__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC2___eq__)
    __ne__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC2___ne__)
    GetNorm = _swig_new_instance_method(_itkVectorPython.itkVectorUC2_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVectorPython.itkVectorUC2_GetSquaredNorm)
    GetNumberOfComponents = _swig_new_static_method(_itkVectorPython.itkVectorUC2_GetNumberOfComponents)
    Normalize = _swig_new_instance_method(_itkVectorPython.itkVectorUC2_Normalize)
    SetNthComponent = _swig_new_instance_method(_itkVectorPython.itkVectorUC2_SetNthComponent)

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVectorUC2
        __init__(self, r) -> itkVectorUC2

        Parameters
        ----------
        r: unsigned char const &

        __init__(self, r) -> itkVectorUC2

        Parameters
        ----------
        r: unsigned char const *

        __init__(self, stdArray) -> itkVectorUC2

        Parameters
        ----------
        stdArray: std::array< unsigned char,2 > const &

        __init__(self, arg0) -> itkVectorUC2

        Parameters
        ----------
        arg0: itkVectorUC2 const &

        """
        _itkVectorPython.itkVectorUC2_swiginit(self, _itkVectorPython.new_itkVectorUC2(*args))
    __swig_destroy__ = _itkVectorPython.delete_itkVectorUC2
    __getitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC2___getitem__)
    __setitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC2___setitem__)
    __len__ = _swig_new_static_method(_itkVectorPython.itkVectorUC2___len__)
    __repr__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC2___repr__)

# Register itkVectorUC2 in _itkVectorPython:
_itkVectorPython.itkVectorUC2_swigregister(itkVectorUC2)
itkVectorUC2_GetVectorDimension = _itkVectorPython.itkVectorUC2_GetVectorDimension
itkVectorUC2_GetNumberOfComponents = _itkVectorPython.itkVectorUC2_GetNumberOfComponents
itkVectorUC2___len__ = _itkVectorPython.itkVectorUC2___len__

class itkVectorUC3(itk.itkFixedArrayPython.itkFixedArrayUC3):
    r"""Proxy of C++ itkVectorUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    GetVectorDimension = _swig_new_static_method(_itkVectorPython.itkVectorUC3_GetVectorDimension)
    SetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorUC3_SetVnlVector)
    GetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorUC3_GetVnlVector)
    __iadd__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC3___iadd__)
    __isub__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC3___isub__)
    __neg__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC3___neg__)
    __add__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC3___add__)
    __sub__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC3___sub__)
    __mul__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC3___mul__)
    __eq__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC3___eq__)
    __ne__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC3___ne__)
    GetNorm = _swig_new_instance_method(_itkVectorPython.itkVectorUC3_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVectorPython.itkVectorUC3_GetSquaredNorm)
    GetNumberOfComponents = _swig_new_static_method(_itkVectorPython.itkVectorUC3_GetNumberOfComponents)
    Normalize = _swig_new_instance_method(_itkVectorPython.itkVectorUC3_Normalize)
    SetNthComponent = _swig_new_instance_method(_itkVectorPython.itkVectorUC3_SetNthComponent)

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVectorUC3
        __init__(self, r) -> itkVectorUC3

        Parameters
        ----------
        r: unsigned char const &

        __init__(self, r) -> itkVectorUC3

        Parameters
        ----------
        r: unsigned char const *

        __init__(self, stdArray) -> itkVectorUC3

        Parameters
        ----------
        stdArray: std::array< unsigned char,3 > const &

        __init__(self, arg0) -> itkVectorUC3

        Parameters
        ----------
        arg0: itkVectorUC3 const &

        """
        _itkVectorPython.itkVectorUC3_swiginit(self, _itkVectorPython.new_itkVectorUC3(*args))
    __swig_destroy__ = _itkVectorPython.delete_itkVectorUC3
    __getitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC3___getitem__)
    __setitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC3___setitem__)
    __len__ = _swig_new_static_method(_itkVectorPython.itkVectorUC3___len__)
    __repr__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC3___repr__)

# Register itkVectorUC3 in _itkVectorPython:
_itkVectorPython.itkVectorUC3_swigregister(itkVectorUC3)
itkVectorUC3_GetVectorDimension = _itkVectorPython.itkVectorUC3_GetVectorDimension
itkVectorUC3_GetNumberOfComponents = _itkVectorPython.itkVectorUC3_GetNumberOfComponents
itkVectorUC3___len__ = _itkVectorPython.itkVectorUC3___len__

class itkVectorUC4(itk.itkFixedArrayPython.itkFixedArrayUC4):
    r"""Proxy of C++ itkVectorUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    GetVectorDimension = _swig_new_static_method(_itkVectorPython.itkVectorUC4_GetVectorDimension)
    SetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorUC4_SetVnlVector)
    GetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorUC4_GetVnlVector)
    __iadd__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC4___iadd__)
    __isub__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC4___isub__)
    __neg__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC4___neg__)
    __add__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC4___add__)
    __sub__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC4___sub__)
    __mul__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC4___mul__)
    __eq__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC4___eq__)
    __ne__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC4___ne__)
    GetNorm = _swig_new_instance_method(_itkVectorPython.itkVectorUC4_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVectorPython.itkVectorUC4_GetSquaredNorm)
    GetNumberOfComponents = _swig_new_static_method(_itkVectorPython.itkVectorUC4_GetNumberOfComponents)
    Normalize = _swig_new_instance_method(_itkVectorPython.itkVectorUC4_Normalize)
    SetNthComponent = _swig_new_instance_method(_itkVectorPython.itkVectorUC4_SetNthComponent)

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVectorUC4
        __init__(self, r) -> itkVectorUC4

        Parameters
        ----------
        r: unsigned char const &

        __init__(self, r) -> itkVectorUC4

        Parameters
        ----------
        r: unsigned char const *

        __init__(self, stdArray) -> itkVectorUC4

        Parameters
        ----------
        stdArray: std::array< unsigned char,4 > const &

        __init__(self, arg0) -> itkVectorUC4

        Parameters
        ----------
        arg0: itkVectorUC4 const &

        """
        _itkVectorPython.itkVectorUC4_swiginit(self, _itkVectorPython.new_itkVectorUC4(*args))
    __swig_destroy__ = _itkVectorPython.delete_itkVectorUC4
    __getitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC4___getitem__)
    __setitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC4___setitem__)
    __len__ = _swig_new_static_method(_itkVectorPython.itkVectorUC4___len__)
    __repr__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC4___repr__)

# Register itkVectorUC4 in _itkVectorPython:
_itkVectorPython.itkVectorUC4_swigregister(itkVectorUC4)
itkVectorUC4_GetVectorDimension = _itkVectorPython.itkVectorUC4_GetVectorDimension
itkVectorUC4_GetNumberOfComponents = _itkVectorPython.itkVectorUC4_GetNumberOfComponents
itkVectorUC4___len__ = _itkVectorPython.itkVectorUC4___len__

class itkVectorUC5(itk.itkFixedArrayPython.itkFixedArrayUC5):
    r"""Proxy of C++ itkVectorUC5 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    GetVectorDimension = _swig_new_static_method(_itkVectorPython.itkVectorUC5_GetVectorDimension)
    SetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorUC5_SetVnlVector)
    GetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorUC5_GetVnlVector)
    __iadd__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC5___iadd__)
    __isub__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC5___isub__)
    __neg__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC5___neg__)
    __add__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC5___add__)
    __sub__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC5___sub__)
    __mul__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC5___mul__)
    __eq__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC5___eq__)
    __ne__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC5___ne__)
    GetNorm = _swig_new_instance_method(_itkVectorPython.itkVectorUC5_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVectorPython.itkVectorUC5_GetSquaredNorm)
    GetNumberOfComponents = _swig_new_static_method(_itkVectorPython.itkVectorUC5_GetNumberOfComponents)
    Normalize = _swig_new_instance_method(_itkVectorPython.itkVectorUC5_Normalize)
    SetNthComponent = _swig_new_instance_method(_itkVectorPython.itkVectorUC5_SetNthComponent)

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVectorUC5
        __init__(self, r) -> itkVectorUC5

        Parameters
        ----------
        r: unsigned char const &

        __init__(self, r) -> itkVectorUC5

        Parameters
        ----------
        r: unsigned char const *

        __init__(self, stdArray) -> itkVectorUC5

        Parameters
        ----------
        stdArray: std::array< unsigned char,5 > const &

        __init__(self, arg0) -> itkVectorUC5

        Parameters
        ----------
        arg0: itkVectorUC5 const &

        """
        _itkVectorPython.itkVectorUC5_swiginit(self, _itkVectorPython.new_itkVectorUC5(*args))
    __swig_destroy__ = _itkVectorPython.delete_itkVectorUC5
    __getitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC5___getitem__)
    __setitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC5___setitem__)
    __len__ = _swig_new_static_method(_itkVectorPython.itkVectorUC5___len__)
    __repr__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC5___repr__)

# Register itkVectorUC5 in _itkVectorPython:
_itkVectorPython.itkVectorUC5_swigregister(itkVectorUC5)
itkVectorUC5_GetVectorDimension = _itkVectorPython.itkVectorUC5_GetVectorDimension
itkVectorUC5_GetNumberOfComponents = _itkVectorPython.itkVectorUC5_GetNumberOfComponents
itkVectorUC5___len__ = _itkVectorPython.itkVectorUC5___len__

class itkVectorUC6(itk.itkFixedArrayPython.itkFixedArrayUC6):
    r"""Proxy of C++ itkVectorUC6 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    GetVectorDimension = _swig_new_static_method(_itkVectorPython.itkVectorUC6_GetVectorDimension)
    SetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorUC6_SetVnlVector)
    GetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorUC6_GetVnlVector)
    __iadd__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC6___iadd__)
    __isub__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC6___isub__)
    __neg__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC6___neg__)
    __add__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC6___add__)
    __sub__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC6___sub__)
    __mul__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC6___mul__)
    __eq__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC6___eq__)
    __ne__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC6___ne__)
    GetNorm = _swig_new_instance_method(_itkVectorPython.itkVectorUC6_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVectorPython.itkVectorUC6_GetSquaredNorm)
    GetNumberOfComponents = _swig_new_static_method(_itkVectorPython.itkVectorUC6_GetNumberOfComponents)
    Normalize = _swig_new_instance_method(_itkVectorPython.itkVectorUC6_Normalize)
    SetNthComponent = _swig_new_instance_method(_itkVectorPython.itkVectorUC6_SetNthComponent)

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVectorUC6
        __init__(self, r) -> itkVectorUC6

        Parameters
        ----------
        r: unsigned char const &

        __init__(self, r) -> itkVectorUC6

        Parameters
        ----------
        r: unsigned char const *

        __init__(self, stdArray) -> itkVectorUC6

        Parameters
        ----------
        stdArray: std::array< unsigned char,6 > const &

        __init__(self, arg0) -> itkVectorUC6

        Parameters
        ----------
        arg0: itkVectorUC6 const &

        """
        _itkVectorPython.itkVectorUC6_swiginit(self, _itkVectorPython.new_itkVectorUC6(*args))
    __swig_destroy__ = _itkVectorPython.delete_itkVectorUC6
    __getitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC6___getitem__)
    __setitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC6___setitem__)
    __len__ = _swig_new_static_method(_itkVectorPython.itkVectorUC6___len__)
    __repr__ = _swig_new_instance_method(_itkVectorPython.itkVectorUC6___repr__)

# Register itkVectorUC6 in _itkVectorPython:
_itkVectorPython.itkVectorUC6_swigregister(itkVectorUC6)
itkVectorUC6_GetVectorDimension = _itkVectorPython.itkVectorUC6_GetVectorDimension
itkVectorUC6_GetNumberOfComponents = _itkVectorPython.itkVectorUC6_GetNumberOfComponents
itkVectorUC6___len__ = _itkVectorPython.itkVectorUC6___len__

class itkVectorUS1(itk.itkFixedArrayPython.itkFixedArrayUS1):
    r"""Proxy of C++ itkVectorUS1 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    GetVectorDimension = _swig_new_static_method(_itkVectorPython.itkVectorUS1_GetVectorDimension)
    SetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorUS1_SetVnlVector)
    GetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorUS1_GetVnlVector)
    __iadd__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS1___iadd__)
    __isub__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS1___isub__)
    __neg__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS1___neg__)
    __add__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS1___add__)
    __sub__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS1___sub__)
    __mul__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS1___mul__)
    __eq__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS1___eq__)
    __ne__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS1___ne__)
    GetNorm = _swig_new_instance_method(_itkVectorPython.itkVectorUS1_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVectorPython.itkVectorUS1_GetSquaredNorm)
    GetNumberOfComponents = _swig_new_static_method(_itkVectorPython.itkVectorUS1_GetNumberOfComponents)
    Normalize = _swig_new_instance_method(_itkVectorPython.itkVectorUS1_Normalize)
    SetNthComponent = _swig_new_instance_method(_itkVectorPython.itkVectorUS1_SetNthComponent)

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVectorUS1
        __init__(self, r) -> itkVectorUS1

        Parameters
        ----------
        r: unsigned short const &

        __init__(self, r) -> itkVectorUS1

        Parameters
        ----------
        r: unsigned short const *

        __init__(self, stdArray) -> itkVectorUS1

        Parameters
        ----------
        stdArray: std::array< unsigned short,1 > const &

        __init__(self, arg0) -> itkVectorUS1

        Parameters
        ----------
        arg0: itkVectorUS1 const &

        """
        _itkVectorPython.itkVectorUS1_swiginit(self, _itkVectorPython.new_itkVectorUS1(*args))
    __swig_destroy__ = _itkVectorPython.delete_itkVectorUS1
    __getitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS1___getitem__)
    __setitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS1___setitem__)
    __len__ = _swig_new_static_method(_itkVectorPython.itkVectorUS1___len__)
    __repr__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS1___repr__)

# Register itkVectorUS1 in _itkVectorPython:
_itkVectorPython.itkVectorUS1_swigregister(itkVectorUS1)
itkVectorUS1_GetVectorDimension = _itkVectorPython.itkVectorUS1_GetVectorDimension
itkVectorUS1_GetNumberOfComponents = _itkVectorPython.itkVectorUS1_GetNumberOfComponents
itkVectorUS1___len__ = _itkVectorPython.itkVectorUS1___len__

class itkVectorUS2(itk.itkFixedArrayPython.itkFixedArrayUS2):
    r"""Proxy of C++ itkVectorUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    GetVectorDimension = _swig_new_static_method(_itkVectorPython.itkVectorUS2_GetVectorDimension)
    SetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorUS2_SetVnlVector)
    GetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorUS2_GetVnlVector)
    __iadd__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS2___iadd__)
    __isub__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS2___isub__)
    __neg__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS2___neg__)
    __add__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS2___add__)
    __sub__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS2___sub__)
    __mul__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS2___mul__)
    __eq__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS2___eq__)
    __ne__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS2___ne__)
    GetNorm = _swig_new_instance_method(_itkVectorPython.itkVectorUS2_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVectorPython.itkVectorUS2_GetSquaredNorm)
    GetNumberOfComponents = _swig_new_static_method(_itkVectorPython.itkVectorUS2_GetNumberOfComponents)
    Normalize = _swig_new_instance_method(_itkVectorPython.itkVectorUS2_Normalize)
    SetNthComponent = _swig_new_instance_method(_itkVectorPython.itkVectorUS2_SetNthComponent)

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVectorUS2
        __init__(self, r) -> itkVectorUS2

        Parameters
        ----------
        r: unsigned short const &

        __init__(self, r) -> itkVectorUS2

        Parameters
        ----------
        r: unsigned short const *

        __init__(self, stdArray) -> itkVectorUS2

        Parameters
        ----------
        stdArray: std::array< unsigned short,2 > const &

        __init__(self, arg0) -> itkVectorUS2

        Parameters
        ----------
        arg0: itkVectorUS2 const &

        """
        _itkVectorPython.itkVectorUS2_swiginit(self, _itkVectorPython.new_itkVectorUS2(*args))
    __swig_destroy__ = _itkVectorPython.delete_itkVectorUS2
    __getitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS2___getitem__)
    __setitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS2___setitem__)
    __len__ = _swig_new_static_method(_itkVectorPython.itkVectorUS2___len__)
    __repr__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS2___repr__)

# Register itkVectorUS2 in _itkVectorPython:
_itkVectorPython.itkVectorUS2_swigregister(itkVectorUS2)
itkVectorUS2_GetVectorDimension = _itkVectorPython.itkVectorUS2_GetVectorDimension
itkVectorUS2_GetNumberOfComponents = _itkVectorPython.itkVectorUS2_GetNumberOfComponents
itkVectorUS2___len__ = _itkVectorPython.itkVectorUS2___len__

class itkVectorUS3(itk.itkFixedArrayPython.itkFixedArrayUS3):
    r"""Proxy of C++ itkVectorUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    GetVectorDimension = _swig_new_static_method(_itkVectorPython.itkVectorUS3_GetVectorDimension)
    SetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorUS3_SetVnlVector)
    GetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorUS3_GetVnlVector)
    __iadd__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS3___iadd__)
    __isub__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS3___isub__)
    __neg__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS3___neg__)
    __add__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS3___add__)
    __sub__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS3___sub__)
    __mul__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS3___mul__)
    __eq__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS3___eq__)
    __ne__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS3___ne__)
    GetNorm = _swig_new_instance_method(_itkVectorPython.itkVectorUS3_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVectorPython.itkVectorUS3_GetSquaredNorm)
    GetNumberOfComponents = _swig_new_static_method(_itkVectorPython.itkVectorUS3_GetNumberOfComponents)
    Normalize = _swig_new_instance_method(_itkVectorPython.itkVectorUS3_Normalize)
    SetNthComponent = _swig_new_instance_method(_itkVectorPython.itkVectorUS3_SetNthComponent)

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVectorUS3
        __init__(self, r) -> itkVectorUS3

        Parameters
        ----------
        r: unsigned short const &

        __init__(self, r) -> itkVectorUS3

        Parameters
        ----------
        r: unsigned short const *

        __init__(self, stdArray) -> itkVectorUS3

        Parameters
        ----------
        stdArray: std::array< unsigned short,3 > const &

        __init__(self, arg0) -> itkVectorUS3

        Parameters
        ----------
        arg0: itkVectorUS3 const &

        """
        _itkVectorPython.itkVectorUS3_swiginit(self, _itkVectorPython.new_itkVectorUS3(*args))
    __swig_destroy__ = _itkVectorPython.delete_itkVectorUS3
    __getitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS3___getitem__)
    __setitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS3___setitem__)
    __len__ = _swig_new_static_method(_itkVectorPython.itkVectorUS3___len__)
    __repr__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS3___repr__)

# Register itkVectorUS3 in _itkVectorPython:
_itkVectorPython.itkVectorUS3_swigregister(itkVectorUS3)
itkVectorUS3_GetVectorDimension = _itkVectorPython.itkVectorUS3_GetVectorDimension
itkVectorUS3_GetNumberOfComponents = _itkVectorPython.itkVectorUS3_GetNumberOfComponents
itkVectorUS3___len__ = _itkVectorPython.itkVectorUS3___len__

class itkVectorUS4(itk.itkFixedArrayPython.itkFixedArrayUS4):
    r"""Proxy of C++ itkVectorUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    GetVectorDimension = _swig_new_static_method(_itkVectorPython.itkVectorUS4_GetVectorDimension)
    SetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorUS4_SetVnlVector)
    GetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorUS4_GetVnlVector)
    __iadd__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS4___iadd__)
    __isub__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS4___isub__)
    __neg__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS4___neg__)
    __add__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS4___add__)
    __sub__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS4___sub__)
    __mul__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS4___mul__)
    __eq__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS4___eq__)
    __ne__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS4___ne__)
    GetNorm = _swig_new_instance_method(_itkVectorPython.itkVectorUS4_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVectorPython.itkVectorUS4_GetSquaredNorm)
    GetNumberOfComponents = _swig_new_static_method(_itkVectorPython.itkVectorUS4_GetNumberOfComponents)
    Normalize = _swig_new_instance_method(_itkVectorPython.itkVectorUS4_Normalize)
    SetNthComponent = _swig_new_instance_method(_itkVectorPython.itkVectorUS4_SetNthComponent)

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVectorUS4
        __init__(self, r) -> itkVectorUS4

        Parameters
        ----------
        r: unsigned short const &

        __init__(self, r) -> itkVectorUS4

        Parameters
        ----------
        r: unsigned short const *

        __init__(self, stdArray) -> itkVectorUS4

        Parameters
        ----------
        stdArray: std::array< unsigned short,4 > const &

        __init__(self, arg0) -> itkVectorUS4

        Parameters
        ----------
        arg0: itkVectorUS4 const &

        """
        _itkVectorPython.itkVectorUS4_swiginit(self, _itkVectorPython.new_itkVectorUS4(*args))
    __swig_destroy__ = _itkVectorPython.delete_itkVectorUS4
    __getitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS4___getitem__)
    __setitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS4___setitem__)
    __len__ = _swig_new_static_method(_itkVectorPython.itkVectorUS4___len__)
    __repr__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS4___repr__)

# Register itkVectorUS4 in _itkVectorPython:
_itkVectorPython.itkVectorUS4_swigregister(itkVectorUS4)
itkVectorUS4_GetVectorDimension = _itkVectorPython.itkVectorUS4_GetVectorDimension
itkVectorUS4_GetNumberOfComponents = _itkVectorPython.itkVectorUS4_GetNumberOfComponents
itkVectorUS4___len__ = _itkVectorPython.itkVectorUS4___len__

class itkVectorUS5(itk.itkFixedArrayPython.itkFixedArrayUS5):
    r"""Proxy of C++ itkVectorUS5 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    GetVectorDimension = _swig_new_static_method(_itkVectorPython.itkVectorUS5_GetVectorDimension)
    SetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorUS5_SetVnlVector)
    GetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorUS5_GetVnlVector)
    __iadd__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS5___iadd__)
    __isub__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS5___isub__)
    __neg__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS5___neg__)
    __add__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS5___add__)
    __sub__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS5___sub__)
    __mul__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS5___mul__)
    __eq__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS5___eq__)
    __ne__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS5___ne__)
    GetNorm = _swig_new_instance_method(_itkVectorPython.itkVectorUS5_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVectorPython.itkVectorUS5_GetSquaredNorm)
    GetNumberOfComponents = _swig_new_static_method(_itkVectorPython.itkVectorUS5_GetNumberOfComponents)
    Normalize = _swig_new_instance_method(_itkVectorPython.itkVectorUS5_Normalize)
    SetNthComponent = _swig_new_instance_method(_itkVectorPython.itkVectorUS5_SetNthComponent)

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVectorUS5
        __init__(self, r) -> itkVectorUS5

        Parameters
        ----------
        r: unsigned short const &

        __init__(self, r) -> itkVectorUS5

        Parameters
        ----------
        r: unsigned short const *

        __init__(self, stdArray) -> itkVectorUS5

        Parameters
        ----------
        stdArray: std::array< unsigned short,5 > const &

        __init__(self, arg0) -> itkVectorUS5

        Parameters
        ----------
        arg0: itkVectorUS5 const &

        """
        _itkVectorPython.itkVectorUS5_swiginit(self, _itkVectorPython.new_itkVectorUS5(*args))
    __swig_destroy__ = _itkVectorPython.delete_itkVectorUS5
    __getitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS5___getitem__)
    __setitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS5___setitem__)
    __len__ = _swig_new_static_method(_itkVectorPython.itkVectorUS5___len__)
    __repr__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS5___repr__)

# Register itkVectorUS5 in _itkVectorPython:
_itkVectorPython.itkVectorUS5_swigregister(itkVectorUS5)
itkVectorUS5_GetVectorDimension = _itkVectorPython.itkVectorUS5_GetVectorDimension
itkVectorUS5_GetNumberOfComponents = _itkVectorPython.itkVectorUS5_GetNumberOfComponents
itkVectorUS5___len__ = _itkVectorPython.itkVectorUS5___len__

class itkVectorUS6(itk.itkFixedArrayPython.itkFixedArrayUS6):
    r"""Proxy of C++ itkVectorUS6 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    GetVectorDimension = _swig_new_static_method(_itkVectorPython.itkVectorUS6_GetVectorDimension)
    SetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorUS6_SetVnlVector)
    GetVnlVector = _swig_new_instance_method(_itkVectorPython.itkVectorUS6_GetVnlVector)
    __iadd__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS6___iadd__)
    __isub__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS6___isub__)
    __neg__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS6___neg__)
    __add__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS6___add__)
    __sub__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS6___sub__)
    __mul__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS6___mul__)
    __eq__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS6___eq__)
    __ne__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS6___ne__)
    GetNorm = _swig_new_instance_method(_itkVectorPython.itkVectorUS6_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVectorPython.itkVectorUS6_GetSquaredNorm)
    GetNumberOfComponents = _swig_new_static_method(_itkVectorPython.itkVectorUS6_GetNumberOfComponents)
    Normalize = _swig_new_instance_method(_itkVectorPython.itkVectorUS6_Normalize)
    SetNthComponent = _swig_new_instance_method(_itkVectorPython.itkVectorUS6_SetNthComponent)

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVectorUS6
        __init__(self, r) -> itkVectorUS6

        Parameters
        ----------
        r: unsigned short const &

        __init__(self, r) -> itkVectorUS6

        Parameters
        ----------
        r: unsigned short const *

        __init__(self, stdArray) -> itkVectorUS6

        Parameters
        ----------
        stdArray: std::array< unsigned short,6 > const &

        __init__(self, arg0) -> itkVectorUS6

        Parameters
        ----------
        arg0: itkVectorUS6 const &

        """
        _itkVectorPython.itkVectorUS6_swiginit(self, _itkVectorPython.new_itkVectorUS6(*args))
    __swig_destroy__ = _itkVectorPython.delete_itkVectorUS6
    __getitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS6___getitem__)
    __setitem__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS6___setitem__)
    __len__ = _swig_new_static_method(_itkVectorPython.itkVectorUS6___len__)
    __repr__ = _swig_new_instance_method(_itkVectorPython.itkVectorUS6___repr__)

# Register itkVectorUS6 in _itkVectorPython:
_itkVectorPython.itkVectorUS6_swigregister(itkVectorUS6)
itkVectorUS6_GetVectorDimension = _itkVectorPython.itkVectorUS6_GetVectorDimension
itkVectorUS6_GetNumberOfComponents = _itkVectorPython.itkVectorUS6_GetNumberOfComponents
itkVectorUS6___len__ = _itkVectorPython.itkVectorUS6___len__



