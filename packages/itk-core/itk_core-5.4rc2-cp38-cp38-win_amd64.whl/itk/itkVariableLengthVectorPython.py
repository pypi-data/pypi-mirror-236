# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKCommonPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkVariableLengthVectorPython
else:
    import _itkVariableLengthVectorPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkVariableLengthVectorPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkVariableLengthVectorPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.stdcomplexPython
import itk.pyBasePython
class itkVariableLengthVectorCD(object):
    r"""Proxy of C++ itkVariableLengthVectorCD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVariableLengthVectorCD
        __init__(self, length) -> itkVariableLengthVectorCD

        Parameters
        ----------
        length: unsigned int

        __init__(self, datain, sz, LetArrayManageMemory=False) -> itkVariableLengthVectorCD

        Parameters
        ----------
        datain: stdcomplexD *
        sz: unsigned int
        LetArrayManageMemory: bool

        __init__(self, datain, sz, LetArrayManageMemory=False) -> itkVariableLengthVectorCD

        Parameters
        ----------
        datain: stdcomplexD const *
        sz: unsigned int
        LetArrayManageMemory: bool

        __init__(self, v) -> itkVariableLengthVectorCD

        Parameters
        ----------
        v: itkVariableLengthVectorCD const &

        """
        _itkVariableLengthVectorPython.itkVariableLengthVectorCD_swiginit(self, _itkVariableLengthVectorPython.new_itkVariableLengthVectorCD(*args))
    Swap = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCD_Swap)
    Fill = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCD_Fill)
    FastAssign = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCD_FastAssign)
    Size = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCD_Size)
    GetSize = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCD_GetSize)
    GetNumberOfElements = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCD_GetNumberOfElements)
    GetElement = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCD_GetElement)
    SetElement = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCD_SetElement)
    SetSize = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCD_SetSize)
    DestroyExistingData = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCD_DestroyExistingData)
    SetData = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCD_SetData)
    __swig_destroy__ = _itkVariableLengthVectorPython.delete_itkVariableLengthVectorCD
    Reserve = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCD_Reserve)
    AllocateElements = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCD_AllocateElements)
    GetDataPointer = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCD_GetDataPointer)
    __isub__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCD___isub__)
    __iadd__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCD___iadd__)
    __imul__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCD___imul__)
    __neg__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCD___neg__)
    __eq__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCD___eq__)
    __ne__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCD___ne__)
    GetNorm = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCD_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCD_GetSquaredNorm)
    IsAProxy = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCD_IsAProxy)

# Register itkVariableLengthVectorCD in _itkVariableLengthVectorPython:
_itkVariableLengthVectorPython.itkVariableLengthVectorCD_swigregister(itkVariableLengthVectorCD)

class itkVariableLengthVectorCF(object):
    r"""Proxy of C++ itkVariableLengthVectorCF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVariableLengthVectorCF
        __init__(self, length) -> itkVariableLengthVectorCF

        Parameters
        ----------
        length: unsigned int

        __init__(self, datain, sz, LetArrayManageMemory=False) -> itkVariableLengthVectorCF

        Parameters
        ----------
        datain: stdcomplexF *
        sz: unsigned int
        LetArrayManageMemory: bool

        __init__(self, datain, sz, LetArrayManageMemory=False) -> itkVariableLengthVectorCF

        Parameters
        ----------
        datain: stdcomplexF const *
        sz: unsigned int
        LetArrayManageMemory: bool

        __init__(self, v) -> itkVariableLengthVectorCF

        Parameters
        ----------
        v: itkVariableLengthVectorCF const &

        """
        _itkVariableLengthVectorPython.itkVariableLengthVectorCF_swiginit(self, _itkVariableLengthVectorPython.new_itkVariableLengthVectorCF(*args))
    Swap = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCF_Swap)
    Fill = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCF_Fill)
    FastAssign = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCF_FastAssign)
    Size = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCF_Size)
    GetSize = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCF_GetSize)
    GetNumberOfElements = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCF_GetNumberOfElements)
    GetElement = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCF_GetElement)
    SetElement = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCF_SetElement)
    SetSize = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCF_SetSize)
    DestroyExistingData = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCF_DestroyExistingData)
    SetData = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCF_SetData)
    __swig_destroy__ = _itkVariableLengthVectorPython.delete_itkVariableLengthVectorCF
    Reserve = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCF_Reserve)
    AllocateElements = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCF_AllocateElements)
    GetDataPointer = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCF_GetDataPointer)
    __isub__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCF___isub__)
    __iadd__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCF___iadd__)
    __imul__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCF___imul__)
    __neg__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCF___neg__)
    __eq__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCF___eq__)
    __ne__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCF___ne__)
    GetNorm = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCF_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCF_GetSquaredNorm)
    IsAProxy = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorCF_IsAProxy)

# Register itkVariableLengthVectorCF in _itkVariableLengthVectorPython:
_itkVariableLengthVectorPython.itkVariableLengthVectorCF_swigregister(itkVariableLengthVectorCF)

class itkVariableLengthVectorD(object):
    r"""Proxy of C++ itkVariableLengthVectorD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVariableLengthVectorD
        __init__(self, length) -> itkVariableLengthVectorD

        Parameters
        ----------
        length: unsigned int

        __init__(self, datain, sz, LetArrayManageMemory=False) -> itkVariableLengthVectorD

        Parameters
        ----------
        datain: double *
        sz: unsigned int
        LetArrayManageMemory: bool

        __init__(self, datain, sz, LetArrayManageMemory=False) -> itkVariableLengthVectorD

        Parameters
        ----------
        datain: double const *
        sz: unsigned int
        LetArrayManageMemory: bool

        __init__(self, v) -> itkVariableLengthVectorD

        Parameters
        ----------
        v: itkVariableLengthVectorD const &

        """
        _itkVariableLengthVectorPython.itkVariableLengthVectorD_swiginit(self, _itkVariableLengthVectorPython.new_itkVariableLengthVectorD(*args))
    Swap = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorD_Swap)
    Fill = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorD_Fill)
    FastAssign = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorD_FastAssign)
    Size = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorD_Size)
    GetSize = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorD_GetSize)
    GetNumberOfElements = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorD_GetNumberOfElements)
    GetElement = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorD_GetElement)
    SetElement = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorD_SetElement)
    SetSize = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorD_SetSize)
    DestroyExistingData = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorD_DestroyExistingData)
    SetData = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorD_SetData)
    __swig_destroy__ = _itkVariableLengthVectorPython.delete_itkVariableLengthVectorD
    Reserve = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorD_Reserve)
    AllocateElements = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorD_AllocateElements)
    GetDataPointer = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorD_GetDataPointer)
    __isub__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorD___isub__)
    __iadd__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorD___iadd__)
    __imul__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorD___imul__)
    __neg__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorD___neg__)
    __eq__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorD___eq__)
    __ne__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorD___ne__)
    GetNorm = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorD_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorD_GetSquaredNorm)
    IsAProxy = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorD_IsAProxy)
    __add__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorD___add__)
    __sub__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorD___sub__)
    __getitem__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorD___getitem__)
    __setitem__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorD___setitem__)
    __len__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorD___len__)
    __repr__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorD___repr__)

# Register itkVariableLengthVectorD in _itkVariableLengthVectorPython:
_itkVariableLengthVectorPython.itkVariableLengthVectorD_swigregister(itkVariableLengthVectorD)

class itkVariableLengthVectorF(object):
    r"""Proxy of C++ itkVariableLengthVectorF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVariableLengthVectorF
        __init__(self, length) -> itkVariableLengthVectorF

        Parameters
        ----------
        length: unsigned int

        __init__(self, datain, sz, LetArrayManageMemory=False) -> itkVariableLengthVectorF

        Parameters
        ----------
        datain: float *
        sz: unsigned int
        LetArrayManageMemory: bool

        __init__(self, datain, sz, LetArrayManageMemory=False) -> itkVariableLengthVectorF

        Parameters
        ----------
        datain: float const *
        sz: unsigned int
        LetArrayManageMemory: bool

        __init__(self, v) -> itkVariableLengthVectorF

        Parameters
        ----------
        v: itkVariableLengthVectorF const &

        """
        _itkVariableLengthVectorPython.itkVariableLengthVectorF_swiginit(self, _itkVariableLengthVectorPython.new_itkVariableLengthVectorF(*args))
    Swap = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorF_Swap)
    Fill = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorF_Fill)
    FastAssign = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorF_FastAssign)
    Size = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorF_Size)
    GetSize = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorF_GetSize)
    GetNumberOfElements = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorF_GetNumberOfElements)
    GetElement = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorF_GetElement)
    SetElement = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorF_SetElement)
    SetSize = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorF_SetSize)
    DestroyExistingData = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorF_DestroyExistingData)
    SetData = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorF_SetData)
    __swig_destroy__ = _itkVariableLengthVectorPython.delete_itkVariableLengthVectorF
    Reserve = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorF_Reserve)
    AllocateElements = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorF_AllocateElements)
    GetDataPointer = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorF_GetDataPointer)
    __isub__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorF___isub__)
    __iadd__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorF___iadd__)
    __imul__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorF___imul__)
    __neg__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorF___neg__)
    __eq__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorF___eq__)
    __ne__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorF___ne__)
    GetNorm = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorF_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorF_GetSquaredNorm)
    IsAProxy = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorF_IsAProxy)
    __add__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorF___add__)
    __sub__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorF___sub__)
    __getitem__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorF___getitem__)
    __setitem__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorF___setitem__)
    __len__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorF___len__)
    __repr__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorF___repr__)

# Register itkVariableLengthVectorF in _itkVariableLengthVectorPython:
_itkVariableLengthVectorPython.itkVariableLengthVectorF_swigregister(itkVariableLengthVectorF)

class itkVariableLengthVectorSS(object):
    r"""Proxy of C++ itkVariableLengthVectorSS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVariableLengthVectorSS
        __init__(self, length) -> itkVariableLengthVectorSS

        Parameters
        ----------
        length: unsigned int

        __init__(self, datain, sz, LetArrayManageMemory=False) -> itkVariableLengthVectorSS

        Parameters
        ----------
        datain: short *
        sz: unsigned int
        LetArrayManageMemory: bool

        __init__(self, datain, sz, LetArrayManageMemory=False) -> itkVariableLengthVectorSS

        Parameters
        ----------
        datain: short const *
        sz: unsigned int
        LetArrayManageMemory: bool

        __init__(self, v) -> itkVariableLengthVectorSS

        Parameters
        ----------
        v: itkVariableLengthVectorSS const &

        """
        _itkVariableLengthVectorPython.itkVariableLengthVectorSS_swiginit(self, _itkVariableLengthVectorPython.new_itkVariableLengthVectorSS(*args))
    Swap = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorSS_Swap)
    Fill = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorSS_Fill)
    FastAssign = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorSS_FastAssign)
    Size = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorSS_Size)
    GetSize = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorSS_GetSize)
    GetNumberOfElements = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorSS_GetNumberOfElements)
    GetElement = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorSS_GetElement)
    SetElement = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorSS_SetElement)
    SetSize = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorSS_SetSize)
    DestroyExistingData = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorSS_DestroyExistingData)
    SetData = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorSS_SetData)
    __swig_destroy__ = _itkVariableLengthVectorPython.delete_itkVariableLengthVectorSS
    Reserve = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorSS_Reserve)
    AllocateElements = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorSS_AllocateElements)
    GetDataPointer = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorSS_GetDataPointer)
    __isub__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorSS___isub__)
    __iadd__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorSS___iadd__)
    __imul__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorSS___imul__)
    __neg__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorSS___neg__)
    __eq__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorSS___eq__)
    __ne__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorSS___ne__)
    GetNorm = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorSS_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorSS_GetSquaredNorm)
    IsAProxy = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorSS_IsAProxy)
    __add__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorSS___add__)
    __sub__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorSS___sub__)
    __getitem__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorSS___getitem__)
    __setitem__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorSS___setitem__)
    __len__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorSS___len__)
    __repr__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorSS___repr__)

# Register itkVariableLengthVectorSS in _itkVariableLengthVectorPython:
_itkVariableLengthVectorPython.itkVariableLengthVectorSS_swigregister(itkVariableLengthVectorSS)

class itkVariableLengthVectorUC(object):
    r"""Proxy of C++ itkVariableLengthVectorUC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVariableLengthVectorUC
        __init__(self, length) -> itkVariableLengthVectorUC

        Parameters
        ----------
        length: unsigned int

        __init__(self, datain, sz, LetArrayManageMemory=False) -> itkVariableLengthVectorUC

        Parameters
        ----------
        datain: unsigned char *
        sz: unsigned int
        LetArrayManageMemory: bool

        __init__(self, datain, sz, LetArrayManageMemory=False) -> itkVariableLengthVectorUC

        Parameters
        ----------
        datain: unsigned char const *
        sz: unsigned int
        LetArrayManageMemory: bool

        __init__(self, v) -> itkVariableLengthVectorUC

        Parameters
        ----------
        v: itkVariableLengthVectorUC const &

        """
        _itkVariableLengthVectorPython.itkVariableLengthVectorUC_swiginit(self, _itkVariableLengthVectorPython.new_itkVariableLengthVectorUC(*args))
    Swap = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUC_Swap)
    Fill = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUC_Fill)
    FastAssign = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUC_FastAssign)
    Size = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUC_Size)
    GetSize = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUC_GetSize)
    GetNumberOfElements = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUC_GetNumberOfElements)
    GetElement = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUC_GetElement)
    SetElement = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUC_SetElement)
    SetSize = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUC_SetSize)
    DestroyExistingData = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUC_DestroyExistingData)
    SetData = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUC_SetData)
    __swig_destroy__ = _itkVariableLengthVectorPython.delete_itkVariableLengthVectorUC
    Reserve = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUC_Reserve)
    AllocateElements = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUC_AllocateElements)
    GetDataPointer = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUC_GetDataPointer)
    __isub__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUC___isub__)
    __iadd__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUC___iadd__)
    __imul__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUC___imul__)
    __neg__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUC___neg__)
    __eq__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUC___eq__)
    __ne__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUC___ne__)
    GetNorm = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUC_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUC_GetSquaredNorm)
    IsAProxy = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUC_IsAProxy)
    __add__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUC___add__)
    __sub__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUC___sub__)
    __getitem__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUC___getitem__)
    __setitem__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUC___setitem__)
    __len__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUC___len__)
    __repr__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUC___repr__)

# Register itkVariableLengthVectorUC in _itkVariableLengthVectorPython:
_itkVariableLengthVectorPython.itkVariableLengthVectorUC_swigregister(itkVariableLengthVectorUC)

class itkVariableLengthVectorUS(object):
    r"""Proxy of C++ itkVariableLengthVectorUS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args):
        r"""
        __init__(self) -> itkVariableLengthVectorUS
        __init__(self, length) -> itkVariableLengthVectorUS

        Parameters
        ----------
        length: unsigned int

        __init__(self, datain, sz, LetArrayManageMemory=False) -> itkVariableLengthVectorUS

        Parameters
        ----------
        datain: unsigned short *
        sz: unsigned int
        LetArrayManageMemory: bool

        __init__(self, datain, sz, LetArrayManageMemory=False) -> itkVariableLengthVectorUS

        Parameters
        ----------
        datain: unsigned short const *
        sz: unsigned int
        LetArrayManageMemory: bool

        __init__(self, v) -> itkVariableLengthVectorUS

        Parameters
        ----------
        v: itkVariableLengthVectorUS const &

        """
        _itkVariableLengthVectorPython.itkVariableLengthVectorUS_swiginit(self, _itkVariableLengthVectorPython.new_itkVariableLengthVectorUS(*args))
    Swap = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUS_Swap)
    Fill = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUS_Fill)
    FastAssign = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUS_FastAssign)
    Size = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUS_Size)
    GetSize = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUS_GetSize)
    GetNumberOfElements = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUS_GetNumberOfElements)
    GetElement = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUS_GetElement)
    SetElement = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUS_SetElement)
    SetSize = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUS_SetSize)
    DestroyExistingData = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUS_DestroyExistingData)
    SetData = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUS_SetData)
    __swig_destroy__ = _itkVariableLengthVectorPython.delete_itkVariableLengthVectorUS
    Reserve = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUS_Reserve)
    AllocateElements = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUS_AllocateElements)
    GetDataPointer = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUS_GetDataPointer)
    __isub__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUS___isub__)
    __iadd__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUS___iadd__)
    __imul__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUS___imul__)
    __neg__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUS___neg__)
    __eq__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUS___eq__)
    __ne__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUS___ne__)
    GetNorm = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUS_GetNorm)
    GetSquaredNorm = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUS_GetSquaredNorm)
    IsAProxy = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUS_IsAProxy)
    __add__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUS___add__)
    __sub__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUS___sub__)
    __getitem__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUS___getitem__)
    __setitem__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUS___setitem__)
    __len__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUS___len__)
    __repr__ = _swig_new_instance_method(_itkVariableLengthVectorPython.itkVariableLengthVectorUS___repr__)

# Register itkVariableLengthVectorUS in _itkVariableLengthVectorPython:
_itkVariableLengthVectorPython.itkVariableLengthVectorUS_swigregister(itkVariableLengthVectorUS)



