# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKQuadEdgeMeshPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkQuadEdgeMeshBasePython
else:
    import _itkQuadEdgeMeshBasePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkQuadEdgeMeshBasePython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkQuadEdgeMeshBasePython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkVectorContainerPython
import itk.itkArrayPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkContinuousIndexPython
import itk.itkIndexPython
import itk.itkMapContainerPython
import itk.itkQuadEdgeCellTraitsInfoPython
import itk.itkQuadEdgeMeshPointPython
import itk.itkGeometricalQuadEdgePython
import itk.itkQuadEdgePython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkQuadEdgeMeshLineCellPython

def itkBoundingBoxUL2FMCULQEMPF2_New():
    return itkBoundingBoxUL2FMCULQEMPF2.New()

class itkBoundingBoxUL2FMCULQEMPF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkBoundingBoxUL2FMCULQEMPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2___New_orig__)
    Clone = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_Clone)
    SetPoints = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_SetPoints)
    GetPoints = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_GetPoints)
    ComputeCorners = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_ComputeCorners)
    ComputeBoundingBox = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_ComputeBoundingBox)
    GetBounds = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_GetBounds)
    GetCenter = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_GetCenter)
    GetMinimum = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_GetMinimum)
    SetMinimum = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_SetMinimum)
    GetMaximum = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_GetMaximum)
    SetMaximum = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_SetMaximum)
    ConsiderPoint = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_ConsiderPoint)
    GetDiagonalLength2 = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_GetDiagonalLength2)
    IsInside = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_IsInside)
    DeepCopy = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_DeepCopy)
    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkBoundingBoxUL2FMCULQEMPF2
    cast = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_cast)

    def New(*args, **kargs):
        """New() -> itkBoundingBoxUL2FMCULQEMPF2

        Create a new object of the class itkBoundingBoxUL2FMCULQEMPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoundingBoxUL2FMCULQEMPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoundingBoxUL2FMCULQEMPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoundingBoxUL2FMCULQEMPF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoundingBoxUL2FMCULQEMPF2 in _itkQuadEdgeMeshBasePython:
_itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_swigregister(itkBoundingBoxUL2FMCULQEMPF2)
itkBoundingBoxUL2FMCULQEMPF2___New_orig__ = _itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2___New_orig__
itkBoundingBoxUL2FMCULQEMPF2_cast = _itkQuadEdgeMeshBasePython.itkBoundingBoxUL2FMCULQEMPF2_cast


def itkBoundingBoxUL3FMCULQEMPF3_New():
    return itkBoundingBoxUL3FMCULQEMPF3.New()

class itkBoundingBoxUL3FMCULQEMPF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkBoundingBoxUL3FMCULQEMPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3___New_orig__)
    Clone = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_Clone)
    SetPoints = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_SetPoints)
    GetPoints = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_GetPoints)
    ComputeCorners = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_ComputeCorners)
    ComputeBoundingBox = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_ComputeBoundingBox)
    GetBounds = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_GetBounds)
    GetCenter = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_GetCenter)
    GetMinimum = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_GetMinimum)
    SetMinimum = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_SetMinimum)
    GetMaximum = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_GetMaximum)
    SetMaximum = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_SetMaximum)
    ConsiderPoint = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_ConsiderPoint)
    GetDiagonalLength2 = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_GetDiagonalLength2)
    IsInside = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_IsInside)
    DeepCopy = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_DeepCopy)
    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkBoundingBoxUL3FMCULQEMPF3
    cast = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_cast)

    def New(*args, **kargs):
        """New() -> itkBoundingBoxUL3FMCULQEMPF3

        Create a new object of the class itkBoundingBoxUL3FMCULQEMPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoundingBoxUL3FMCULQEMPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoundingBoxUL3FMCULQEMPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoundingBoxUL3FMCULQEMPF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoundingBoxUL3FMCULQEMPF3 in _itkQuadEdgeMeshBasePython:
_itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_swigregister(itkBoundingBoxUL3FMCULQEMPF3)
itkBoundingBoxUL3FMCULQEMPF3___New_orig__ = _itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3___New_orig__
itkBoundingBoxUL3FMCULQEMPF3_cast = _itkQuadEdgeMeshBasePython.itkBoundingBoxUL3FMCULQEMPF3_cast


def itkBoundingBoxUL4FMCULQEMPF4_New():
    return itkBoundingBoxUL4FMCULQEMPF4.New()

class itkBoundingBoxUL4FMCULQEMPF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkBoundingBoxUL4FMCULQEMPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL4FMCULQEMPF4___New_orig__)
    Clone = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL4FMCULQEMPF4_Clone)
    SetPoints = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL4FMCULQEMPF4_SetPoints)
    GetPoints = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL4FMCULQEMPF4_GetPoints)
    ComputeCorners = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL4FMCULQEMPF4_ComputeCorners)
    ComputeBoundingBox = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL4FMCULQEMPF4_ComputeBoundingBox)
    GetBounds = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL4FMCULQEMPF4_GetBounds)
    GetCenter = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL4FMCULQEMPF4_GetCenter)
    GetMinimum = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL4FMCULQEMPF4_GetMinimum)
    SetMinimum = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL4FMCULQEMPF4_SetMinimum)
    GetMaximum = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL4FMCULQEMPF4_GetMaximum)
    SetMaximum = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL4FMCULQEMPF4_SetMaximum)
    ConsiderPoint = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL4FMCULQEMPF4_ConsiderPoint)
    GetDiagonalLength2 = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL4FMCULQEMPF4_GetDiagonalLength2)
    IsInside = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL4FMCULQEMPF4_IsInside)
    DeepCopy = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL4FMCULQEMPF4_DeepCopy)
    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkBoundingBoxUL4FMCULQEMPF4
    cast = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkBoundingBoxUL4FMCULQEMPF4_cast)

    def New(*args, **kargs):
        """New() -> itkBoundingBoxUL4FMCULQEMPF4

        Create a new object of the class itkBoundingBoxUL4FMCULQEMPF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBoundingBoxUL4FMCULQEMPF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBoundingBoxUL4FMCULQEMPF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBoundingBoxUL4FMCULQEMPF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBoundingBoxUL4FMCULQEMPF4 in _itkQuadEdgeMeshBasePython:
_itkQuadEdgeMeshBasePython.itkBoundingBoxUL4FMCULQEMPF4_swigregister(itkBoundingBoxUL4FMCULQEMPF4)
itkBoundingBoxUL4FMCULQEMPF4___New_orig__ = _itkQuadEdgeMeshBasePython.itkBoundingBoxUL4FMCULQEMPF4___New_orig__
itkBoundingBoxUL4FMCULQEMPF4_cast = _itkQuadEdgeMeshBasePython.itkBoundingBoxUL4FMCULQEMPF4_cast


def itkMapContainerULCIDQEMCTI2_New():
    return itkMapContainerULCIDQEMCTI2.New()

class itkMapContainerULCIDQEMCTI2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULCIDQEMCTI2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULCIDQEMCTI2
        __init__(self, comp) -> itkMapContainerULCIDQEMCTI2

        Parameters
        ----------
        comp: std::less< unsigned long > const &

        """
        _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_swiginit(self, _itkQuadEdgeMeshBasePython.new_itkMapContainerULCIDQEMCTI2(*args))
    __New_orig__ = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2___New_orig__)
    Clone = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_GetElement)
    SetElement = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_SetElement)
    InsertElement = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_InsertElement)
    IndexExists = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_DeleteIndex)
    Size = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_Size)
    Reserve = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_Reserve)
    Squeeze = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_Squeeze)
    Initialize = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_Initialize)
    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkMapContainerULCIDQEMCTI2
    cast = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_cast)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIDQEMCTI2

        Create a new object of the class itkMapContainerULCIDQEMCTI2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCIDQEMCTI2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCIDQEMCTI2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCIDQEMCTI2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCIDQEMCTI2 in _itkQuadEdgeMeshBasePython:
_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_swigregister(itkMapContainerULCIDQEMCTI2)
itkMapContainerULCIDQEMCTI2___New_orig__ = _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2___New_orig__
itkMapContainerULCIDQEMCTI2_cast = _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI2_cast


def itkMapContainerULCIDQEMCTI3_New():
    return itkMapContainerULCIDQEMCTI3.New()

class itkMapContainerULCIDQEMCTI3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULCIDQEMCTI3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULCIDQEMCTI3
        __init__(self, comp) -> itkMapContainerULCIDQEMCTI3

        Parameters
        ----------
        comp: std::less< unsigned long > const &

        """
        _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_swiginit(self, _itkQuadEdgeMeshBasePython.new_itkMapContainerULCIDQEMCTI3(*args))
    __New_orig__ = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3___New_orig__)
    Clone = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_GetElement)
    SetElement = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_SetElement)
    InsertElement = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_InsertElement)
    IndexExists = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_DeleteIndex)
    Size = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_Size)
    Reserve = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_Reserve)
    Squeeze = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_Squeeze)
    Initialize = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_Initialize)
    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkMapContainerULCIDQEMCTI3
    cast = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_cast)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIDQEMCTI3

        Create a new object of the class itkMapContainerULCIDQEMCTI3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCIDQEMCTI3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCIDQEMCTI3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCIDQEMCTI3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCIDQEMCTI3 in _itkQuadEdgeMeshBasePython:
_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_swigregister(itkMapContainerULCIDQEMCTI3)
itkMapContainerULCIDQEMCTI3___New_orig__ = _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3___New_orig__
itkMapContainerULCIDQEMCTI3_cast = _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI3_cast


def itkMapContainerULCIDQEMCTI4_New():
    return itkMapContainerULCIDQEMCTI4.New()

class itkMapContainerULCIDQEMCTI4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULCIDQEMCTI4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULCIDQEMCTI4
        __init__(self, comp) -> itkMapContainerULCIDQEMCTI4

        Parameters
        ----------
        comp: std::less< unsigned long > const &

        """
        _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI4_swiginit(self, _itkQuadEdgeMeshBasePython.new_itkMapContainerULCIDQEMCTI4(*args))
    __New_orig__ = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI4___New_orig__)
    Clone = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI4_Clone)
    CastToSTLContainer = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI4_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI4_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI4_ElementAt)
    CreateElementAt = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI4_CreateElementAt)
    GetElement = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI4_GetElement)
    SetElement = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI4_SetElement)
    InsertElement = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI4_InsertElement)
    IndexExists = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI4_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI4_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI4_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI4_DeleteIndex)
    Size = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI4_Size)
    Reserve = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI4_Reserve)
    Squeeze = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI4_Squeeze)
    Initialize = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI4_Initialize)
    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkMapContainerULCIDQEMCTI4
    cast = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI4_cast)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIDQEMCTI4

        Create a new object of the class itkMapContainerULCIDQEMCTI4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCIDQEMCTI4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCIDQEMCTI4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCIDQEMCTI4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCIDQEMCTI4 in _itkQuadEdgeMeshBasePython:
_itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI4_swigregister(itkMapContainerULCIDQEMCTI4)
itkMapContainerULCIDQEMCTI4___New_orig__ = _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI4___New_orig__
itkMapContainerULCIDQEMCTI4_cast = _itkQuadEdgeMeshBasePython.itkMapContainerULCIDQEMCTI4_cast


def itkMeshSourceMD2QEMTD2BBFF_New():
    return itkMeshSourceMD2QEMTD2BBFF.New()

class itkMeshSourceMD2QEMTD2BBFF(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshSourceMD2QEMTD2BBFF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkMeshSourceMD2QEMTD2BBFF___New_orig__)
    Clone = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshSourceMD2QEMTD2BBFF_Clone)
    GetOutput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshSourceMD2QEMTD2BBFF_GetOutput)
    SetOutput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshSourceMD2QEMTD2BBFF_SetOutput)
    GraftOutput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshSourceMD2QEMTD2BBFF_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshSourceMD2QEMTD2BBFF_GraftNthOutput)
    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkMeshSourceMD2QEMTD2BBFF
    cast = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkMeshSourceMD2QEMTD2BBFF_cast)

    def New(*args, **kargs):
        """New() -> itkMeshSourceMD2QEMTD2BBFF

        Create a new object of the class itkMeshSourceMD2QEMTD2BBFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshSourceMD2QEMTD2BBFF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshSourceMD2QEMTD2BBFF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshSourceMD2QEMTD2BBFF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshSourceMD2QEMTD2BBFF in _itkQuadEdgeMeshBasePython:
_itkQuadEdgeMeshBasePython.itkMeshSourceMD2QEMTD2BBFF_swigregister(itkMeshSourceMD2QEMTD2BBFF)
itkMeshSourceMD2QEMTD2BBFF___New_orig__ = _itkQuadEdgeMeshBasePython.itkMeshSourceMD2QEMTD2BBFF___New_orig__
itkMeshSourceMD2QEMTD2BBFF_cast = _itkQuadEdgeMeshBasePython.itkMeshSourceMD2QEMTD2BBFF_cast


def itkMeshSourceMD3QEMTD3BBFF_New():
    return itkMeshSourceMD3QEMTD3BBFF.New()

class itkMeshSourceMD3QEMTD3BBFF(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshSourceMD3QEMTD3BBFF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkMeshSourceMD3QEMTD3BBFF___New_orig__)
    Clone = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshSourceMD3QEMTD3BBFF_Clone)
    GetOutput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshSourceMD3QEMTD3BBFF_GetOutput)
    SetOutput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshSourceMD3QEMTD3BBFF_SetOutput)
    GraftOutput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshSourceMD3QEMTD3BBFF_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshSourceMD3QEMTD3BBFF_GraftNthOutput)
    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkMeshSourceMD3QEMTD3BBFF
    cast = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkMeshSourceMD3QEMTD3BBFF_cast)

    def New(*args, **kargs):
        """New() -> itkMeshSourceMD3QEMTD3BBFF

        Create a new object of the class itkMeshSourceMD3QEMTD3BBFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshSourceMD3QEMTD3BBFF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshSourceMD3QEMTD3BBFF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshSourceMD3QEMTD3BBFF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshSourceMD3QEMTD3BBFF in _itkQuadEdgeMeshBasePython:
_itkQuadEdgeMeshBasePython.itkMeshSourceMD3QEMTD3BBFF_swigregister(itkMeshSourceMD3QEMTD3BBFF)
itkMeshSourceMD3QEMTD3BBFF___New_orig__ = _itkQuadEdgeMeshBasePython.itkMeshSourceMD3QEMTD3BBFF___New_orig__
itkMeshSourceMD3QEMTD3BBFF_cast = _itkQuadEdgeMeshBasePython.itkMeshSourceMD3QEMTD3BBFF_cast


def itkMeshSourceMD4QEMTD4BBFF_New():
    return itkMeshSourceMD4QEMTD4BBFF.New()

class itkMeshSourceMD4QEMTD4BBFF(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshSourceMD4QEMTD4BBFF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkMeshSourceMD4QEMTD4BBFF___New_orig__)
    Clone = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshSourceMD4QEMTD4BBFF_Clone)
    GetOutput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshSourceMD4QEMTD4BBFF_GetOutput)
    SetOutput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshSourceMD4QEMTD4BBFF_SetOutput)
    GraftOutput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshSourceMD4QEMTD4BBFF_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshSourceMD4QEMTD4BBFF_GraftNthOutput)
    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkMeshSourceMD4QEMTD4BBFF
    cast = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkMeshSourceMD4QEMTD4BBFF_cast)

    def New(*args, **kargs):
        """New() -> itkMeshSourceMD4QEMTD4BBFF

        Create a new object of the class itkMeshSourceMD4QEMTD4BBFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshSourceMD4QEMTD4BBFF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshSourceMD4QEMTD4BBFF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshSourceMD4QEMTD4BBFF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshSourceMD4QEMTD4BBFF in _itkQuadEdgeMeshBasePython:
_itkQuadEdgeMeshBasePython.itkMeshSourceMD4QEMTD4BBFF_swigregister(itkMeshSourceMD4QEMTD4BBFF)
itkMeshSourceMD4QEMTD4BBFF___New_orig__ = _itkQuadEdgeMeshBasePython.itkMeshSourceMD4QEMTD4BBFF___New_orig__
itkMeshSourceMD4QEMTD4BBFF_cast = _itkQuadEdgeMeshBasePython.itkMeshSourceMD4QEMTD4BBFF_cast


def itkMeshSourceQEMD2_New():
    return itkMeshSourceQEMD2.New()

class itkMeshSourceQEMD2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshSourceQEMD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkMeshSourceQEMD2___New_orig__)
    Clone = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshSourceQEMD2_Clone)
    GetOutput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshSourceQEMD2_GetOutput)
    SetOutput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshSourceQEMD2_SetOutput)
    GraftOutput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshSourceQEMD2_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshSourceQEMD2_GraftNthOutput)
    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkMeshSourceQEMD2
    cast = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkMeshSourceQEMD2_cast)

    def New(*args, **kargs):
        """New() -> itkMeshSourceQEMD2

        Create a new object of the class itkMeshSourceQEMD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshSourceQEMD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshSourceQEMD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshSourceQEMD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshSourceQEMD2 in _itkQuadEdgeMeshBasePython:
_itkQuadEdgeMeshBasePython.itkMeshSourceQEMD2_swigregister(itkMeshSourceQEMD2)
itkMeshSourceQEMD2___New_orig__ = _itkQuadEdgeMeshBasePython.itkMeshSourceQEMD2___New_orig__
itkMeshSourceQEMD2_cast = _itkQuadEdgeMeshBasePython.itkMeshSourceQEMD2_cast


def itkMeshSourceQEMD3_New():
    return itkMeshSourceQEMD3.New()

class itkMeshSourceQEMD3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshSourceQEMD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkMeshSourceQEMD3___New_orig__)
    Clone = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshSourceQEMD3_Clone)
    GetOutput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshSourceQEMD3_GetOutput)
    SetOutput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshSourceQEMD3_SetOutput)
    GraftOutput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshSourceQEMD3_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshSourceQEMD3_GraftNthOutput)
    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkMeshSourceQEMD3
    cast = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkMeshSourceQEMD3_cast)

    def New(*args, **kargs):
        """New() -> itkMeshSourceQEMD3

        Create a new object of the class itkMeshSourceQEMD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshSourceQEMD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshSourceQEMD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshSourceQEMD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshSourceQEMD3 in _itkQuadEdgeMeshBasePython:
_itkQuadEdgeMeshBasePython.itkMeshSourceQEMD3_swigregister(itkMeshSourceQEMD3)
itkMeshSourceQEMD3___New_orig__ = _itkQuadEdgeMeshBasePython.itkMeshSourceQEMD3___New_orig__
itkMeshSourceQEMD3_cast = _itkQuadEdgeMeshBasePython.itkMeshSourceQEMD3_cast


def itkMeshSourceQEMD4_New():
    return itkMeshSourceQEMD4.New()

class itkMeshSourceQEMD4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshSourceQEMD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkMeshSourceQEMD4___New_orig__)
    Clone = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshSourceQEMD4_Clone)
    GetOutput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshSourceQEMD4_GetOutput)
    SetOutput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshSourceQEMD4_SetOutput)
    GraftOutput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshSourceQEMD4_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshSourceQEMD4_GraftNthOutput)
    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkMeshSourceQEMD4
    cast = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkMeshSourceQEMD4_cast)

    def New(*args, **kargs):
        """New() -> itkMeshSourceQEMD4

        Create a new object of the class itkMeshSourceQEMD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshSourceQEMD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshSourceQEMD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshSourceQEMD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshSourceQEMD4 in _itkQuadEdgeMeshBasePython:
_itkQuadEdgeMeshBasePython.itkMeshSourceQEMD4_swigregister(itkMeshSourceQEMD4)
itkMeshSourceQEMD4___New_orig__ = _itkQuadEdgeMeshBasePython.itkMeshSourceQEMD4___New_orig__
itkMeshSourceQEMD4_cast = _itkQuadEdgeMeshBasePython.itkMeshSourceQEMD4_cast


def itkMeshToMeshFilterQEMD2QEMD2_New():
    return itkMeshToMeshFilterQEMD2QEMD2.New()

class itkMeshToMeshFilterQEMD2QEMD2(itkMeshSourceQEMD2):
    r"""Proxy of C++ itkMeshToMeshFilterQEMD2QEMD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkMeshToMeshFilterQEMD2QEMD2___New_orig__)
    Clone = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshToMeshFilterQEMD2QEMD2_Clone)
    SetInput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshToMeshFilterQEMD2QEMD2_SetInput)
    GetInput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshToMeshFilterQEMD2QEMD2_GetInput)
    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkMeshToMeshFilterQEMD2QEMD2
    cast = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkMeshToMeshFilterQEMD2QEMD2_cast)

    def New(*args, **kargs):
        """New() -> itkMeshToMeshFilterQEMD2QEMD2

        Create a new object of the class itkMeshToMeshFilterQEMD2QEMD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToMeshFilterQEMD2QEMD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToMeshFilterQEMD2QEMD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToMeshFilterQEMD2QEMD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToMeshFilterQEMD2QEMD2 in _itkQuadEdgeMeshBasePython:
_itkQuadEdgeMeshBasePython.itkMeshToMeshFilterQEMD2QEMD2_swigregister(itkMeshToMeshFilterQEMD2QEMD2)
itkMeshToMeshFilterQEMD2QEMD2___New_orig__ = _itkQuadEdgeMeshBasePython.itkMeshToMeshFilterQEMD2QEMD2___New_orig__
itkMeshToMeshFilterQEMD2QEMD2_cast = _itkQuadEdgeMeshBasePython.itkMeshToMeshFilterQEMD2QEMD2_cast


def itkMeshToMeshFilterQEMD3QEMD3_New():
    return itkMeshToMeshFilterQEMD3QEMD3.New()

class itkMeshToMeshFilterQEMD3QEMD3(itkMeshSourceQEMD3):
    r"""Proxy of C++ itkMeshToMeshFilterQEMD3QEMD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkMeshToMeshFilterQEMD3QEMD3___New_orig__)
    Clone = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshToMeshFilterQEMD3QEMD3_Clone)
    SetInput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshToMeshFilterQEMD3QEMD3_SetInput)
    GetInput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshToMeshFilterQEMD3QEMD3_GetInput)
    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkMeshToMeshFilterQEMD3QEMD3
    cast = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkMeshToMeshFilterQEMD3QEMD3_cast)

    def New(*args, **kargs):
        """New() -> itkMeshToMeshFilterQEMD3QEMD3

        Create a new object of the class itkMeshToMeshFilterQEMD3QEMD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToMeshFilterQEMD3QEMD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToMeshFilterQEMD3QEMD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToMeshFilterQEMD3QEMD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToMeshFilterQEMD3QEMD3 in _itkQuadEdgeMeshBasePython:
_itkQuadEdgeMeshBasePython.itkMeshToMeshFilterQEMD3QEMD3_swigregister(itkMeshToMeshFilterQEMD3QEMD3)
itkMeshToMeshFilterQEMD3QEMD3___New_orig__ = _itkQuadEdgeMeshBasePython.itkMeshToMeshFilterQEMD3QEMD3___New_orig__
itkMeshToMeshFilterQEMD3QEMD3_cast = _itkQuadEdgeMeshBasePython.itkMeshToMeshFilterQEMD3QEMD3_cast


def itkMeshToMeshFilterQEMD4QEMD4_New():
    return itkMeshToMeshFilterQEMD4QEMD4.New()

class itkMeshToMeshFilterQEMD4QEMD4(itkMeshSourceQEMD4):
    r"""Proxy of C++ itkMeshToMeshFilterQEMD4QEMD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkMeshToMeshFilterQEMD4QEMD4___New_orig__)
    Clone = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshToMeshFilterQEMD4QEMD4_Clone)
    SetInput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshToMeshFilterQEMD4QEMD4_SetInput)
    GetInput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshToMeshFilterQEMD4QEMD4_GetInput)
    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkMeshToMeshFilterQEMD4QEMD4
    cast = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkMeshToMeshFilterQEMD4QEMD4_cast)

    def New(*args, **kargs):
        """New() -> itkMeshToMeshFilterQEMD4QEMD4

        Create a new object of the class itkMeshToMeshFilterQEMD4QEMD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshToMeshFilterQEMD4QEMD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshToMeshFilterQEMD4QEMD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshToMeshFilterQEMD4QEMD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshToMeshFilterQEMD4QEMD4 in _itkQuadEdgeMeshBasePython:
_itkQuadEdgeMeshBasePython.itkMeshToMeshFilterQEMD4QEMD4_swigregister(itkMeshToMeshFilterQEMD4QEMD4)
itkMeshToMeshFilterQEMD4QEMD4___New_orig__ = _itkQuadEdgeMeshBasePython.itkMeshToMeshFilterQEMD4QEMD4___New_orig__
itkMeshToMeshFilterQEMD4QEMD4_cast = _itkQuadEdgeMeshBasePython.itkMeshToMeshFilterQEMD4QEMD4_cast


def itkPointSetD2QEMTD2BBFF_New():
    return itkPointSetD2QEMTD2BBFF.New()

class itkPointSetD2QEMTD2BBFF(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkPointSetD2QEMTD2BBFF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkPointSetD2QEMTD2BBFF___New_orig__)
    Clone = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD2QEMTD2BBFF_Clone)
    GetMaximumNumberOfRegions = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD2QEMTD2BBFF_GetMaximumNumberOfRegions)
    PassStructure = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD2QEMTD2BBFF_PassStructure)
    GetNumberOfPoints = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD2QEMTD2BBFF_GetNumberOfPoints)
    SetPoints = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD2QEMTD2BBFF_SetPoints)
    GetPoints = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD2QEMTD2BBFF_GetPoints)
    SetPoint = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD2QEMTD2BBFF_SetPoint)
    GetPoint = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD2QEMTD2BBFF_GetPoint)
    SetPointData = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD2QEMTD2BBFF_SetPointData)
    GetPointData = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD2QEMTD2BBFF_GetPointData)
    SetRequestedRegion = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD2QEMTD2BBFF_SetRequestedRegion)
    GetRequestedRegion = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD2QEMTD2BBFF_GetRequestedRegion)
    SetBufferedRegion = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD2QEMTD2BBFF_SetBufferedRegion)
    GetBufferedRegion = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD2QEMTD2BBFF_GetBufferedRegion)
    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkPointSetD2QEMTD2BBFF
    cast = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkPointSetD2QEMTD2BBFF_cast)

    def keys(self):
        """
        Return keys related to the pointset's metadata.
        These keys are used in the dictionary resulting from dict(pointset).
        """
        result = ['name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(pointset.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_pointset(self)
            return state[key]

    def __setitem__(self, key, value):
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_pointset(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.pointset_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkPointSetD2QEMTD2BBFF

        Create a new object of the class itkPointSetD2QEMTD2BBFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPointSetD2QEMTD2BBFF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPointSetD2QEMTD2BBFF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPointSetD2QEMTD2BBFF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPointSetD2QEMTD2BBFF in _itkQuadEdgeMeshBasePython:
_itkQuadEdgeMeshBasePython.itkPointSetD2QEMTD2BBFF_swigregister(itkPointSetD2QEMTD2BBFF)
itkPointSetD2QEMTD2BBFF___New_orig__ = _itkQuadEdgeMeshBasePython.itkPointSetD2QEMTD2BBFF___New_orig__
itkPointSetD2QEMTD2BBFF_cast = _itkQuadEdgeMeshBasePython.itkPointSetD2QEMTD2BBFF_cast


def itkPointSetD3QEMTD3BBFF_New():
    return itkPointSetD3QEMTD3BBFF.New()

class itkPointSetD3QEMTD3BBFF(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkPointSetD3QEMTD3BBFF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkPointSetD3QEMTD3BBFF___New_orig__)
    Clone = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD3QEMTD3BBFF_Clone)
    GetMaximumNumberOfRegions = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD3QEMTD3BBFF_GetMaximumNumberOfRegions)
    PassStructure = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD3QEMTD3BBFF_PassStructure)
    GetNumberOfPoints = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD3QEMTD3BBFF_GetNumberOfPoints)
    SetPoints = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD3QEMTD3BBFF_SetPoints)
    GetPoints = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD3QEMTD3BBFF_GetPoints)
    SetPoint = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD3QEMTD3BBFF_SetPoint)
    GetPoint = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD3QEMTD3BBFF_GetPoint)
    SetPointData = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD3QEMTD3BBFF_SetPointData)
    GetPointData = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD3QEMTD3BBFF_GetPointData)
    SetRequestedRegion = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD3QEMTD3BBFF_SetRequestedRegion)
    GetRequestedRegion = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD3QEMTD3BBFF_GetRequestedRegion)
    SetBufferedRegion = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD3QEMTD3BBFF_SetBufferedRegion)
    GetBufferedRegion = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD3QEMTD3BBFF_GetBufferedRegion)
    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkPointSetD3QEMTD3BBFF
    cast = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkPointSetD3QEMTD3BBFF_cast)

    def keys(self):
        """
        Return keys related to the pointset's metadata.
        These keys are used in the dictionary resulting from dict(pointset).
        """
        result = ['name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(pointset.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_pointset(self)
            return state[key]

    def __setitem__(self, key, value):
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_pointset(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.pointset_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkPointSetD3QEMTD3BBFF

        Create a new object of the class itkPointSetD3QEMTD3BBFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPointSetD3QEMTD3BBFF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPointSetD3QEMTD3BBFF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPointSetD3QEMTD3BBFF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPointSetD3QEMTD3BBFF in _itkQuadEdgeMeshBasePython:
_itkQuadEdgeMeshBasePython.itkPointSetD3QEMTD3BBFF_swigregister(itkPointSetD3QEMTD3BBFF)
itkPointSetD3QEMTD3BBFF___New_orig__ = _itkQuadEdgeMeshBasePython.itkPointSetD3QEMTD3BBFF___New_orig__
itkPointSetD3QEMTD3BBFF_cast = _itkQuadEdgeMeshBasePython.itkPointSetD3QEMTD3BBFF_cast


def itkPointSetD4QEMTD4BBFF_New():
    return itkPointSetD4QEMTD4BBFF.New()

class itkPointSetD4QEMTD4BBFF(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkPointSetD4QEMTD4BBFF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkPointSetD4QEMTD4BBFF___New_orig__)
    Clone = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD4QEMTD4BBFF_Clone)
    GetMaximumNumberOfRegions = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD4QEMTD4BBFF_GetMaximumNumberOfRegions)
    PassStructure = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD4QEMTD4BBFF_PassStructure)
    GetNumberOfPoints = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD4QEMTD4BBFF_GetNumberOfPoints)
    SetPoints = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD4QEMTD4BBFF_SetPoints)
    GetPoints = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD4QEMTD4BBFF_GetPoints)
    SetPoint = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD4QEMTD4BBFF_SetPoint)
    GetPoint = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD4QEMTD4BBFF_GetPoint)
    SetPointData = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD4QEMTD4BBFF_SetPointData)
    GetPointData = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD4QEMTD4BBFF_GetPointData)
    SetRequestedRegion = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD4QEMTD4BBFF_SetRequestedRegion)
    GetRequestedRegion = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD4QEMTD4BBFF_GetRequestedRegion)
    SetBufferedRegion = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD4QEMTD4BBFF_SetBufferedRegion)
    GetBufferedRegion = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkPointSetD4QEMTD4BBFF_GetBufferedRegion)
    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkPointSetD4QEMTD4BBFF
    cast = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkPointSetD4QEMTD4BBFF_cast)

    def keys(self):
        """
        Return keys related to the pointset's metadata.
        These keys are used in the dictionary resulting from dict(pointset).
        """
        result = ['name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(pointset.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_pointset(self)
            return state[key]

    def __setitem__(self, key, value):
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_pointset(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.pointset_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkPointSetD4QEMTD4BBFF

        Create a new object of the class itkPointSetD4QEMTD4BBFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPointSetD4QEMTD4BBFF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPointSetD4QEMTD4BBFF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPointSetD4QEMTD4BBFF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPointSetD4QEMTD4BBFF in _itkQuadEdgeMeshBasePython:
_itkQuadEdgeMeshBasePython.itkPointSetD4QEMTD4BBFF_swigregister(itkPointSetD4QEMTD4BBFF)
itkPointSetD4QEMTD4BBFF___New_orig__ = _itkQuadEdgeMeshBasePython.itkPointSetD4QEMTD4BBFF___New_orig__
itkPointSetD4QEMTD4BBFF_cast = _itkQuadEdgeMeshBasePython.itkPointSetD4QEMTD4BBFF_cast

class itkImageToMeshFilterISS2MD2QEMTD2BBFF(itkMeshSourceMD2QEMTD2BBFF):
    r"""Proxy of C++ itkImageToMeshFilterISS2MD2QEMTD2BBFF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterISS2MD2QEMTD2BBFF_SetInput)
    GetInput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterISS2MD2QEMTD2BBFF_GetInput)
    GetOutput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterISS2MD2QEMTD2BBFF_GetOutput)
    GenerateOutputInformation = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterISS2MD2QEMTD2BBFF_GenerateOutputInformation)
    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkImageToMeshFilterISS2MD2QEMTD2BBFF
    cast = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterISS2MD2QEMTD2BBFF_cast)

# Register itkImageToMeshFilterISS2MD2QEMTD2BBFF in _itkQuadEdgeMeshBasePython:
_itkQuadEdgeMeshBasePython.itkImageToMeshFilterISS2MD2QEMTD2BBFF_swigregister(itkImageToMeshFilterISS2MD2QEMTD2BBFF)
itkImageToMeshFilterISS2MD2QEMTD2BBFF_cast = _itkQuadEdgeMeshBasePython.itkImageToMeshFilterISS2MD2QEMTD2BBFF_cast

class itkImageToMeshFilterISS3MD3QEMTD3BBFF(itkMeshSourceMD3QEMTD3BBFF):
    r"""Proxy of C++ itkImageToMeshFilterISS3MD3QEMTD3BBFF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterISS3MD3QEMTD3BBFF_SetInput)
    GetInput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterISS3MD3QEMTD3BBFF_GetInput)
    GetOutput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterISS3MD3QEMTD3BBFF_GetOutput)
    GenerateOutputInformation = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterISS3MD3QEMTD3BBFF_GenerateOutputInformation)
    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkImageToMeshFilterISS3MD3QEMTD3BBFF
    cast = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterISS3MD3QEMTD3BBFF_cast)

# Register itkImageToMeshFilterISS3MD3QEMTD3BBFF in _itkQuadEdgeMeshBasePython:
_itkQuadEdgeMeshBasePython.itkImageToMeshFilterISS3MD3QEMTD3BBFF_swigregister(itkImageToMeshFilterISS3MD3QEMTD3BBFF)
itkImageToMeshFilterISS3MD3QEMTD3BBFF_cast = _itkQuadEdgeMeshBasePython.itkImageToMeshFilterISS3MD3QEMTD3BBFF_cast

class itkImageToMeshFilterISS4MD4QEMTD4BBFF(itkMeshSourceMD4QEMTD4BBFF):
    r"""Proxy of C++ itkImageToMeshFilterISS4MD4QEMTD4BBFF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterISS4MD4QEMTD4BBFF_SetInput)
    GetInput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterISS4MD4QEMTD4BBFF_GetInput)
    GetOutput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterISS4MD4QEMTD4BBFF_GetOutput)
    GenerateOutputInformation = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterISS4MD4QEMTD4BBFF_GenerateOutputInformation)
    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkImageToMeshFilterISS4MD4QEMTD4BBFF
    cast = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterISS4MD4QEMTD4BBFF_cast)

# Register itkImageToMeshFilterISS4MD4QEMTD4BBFF in _itkQuadEdgeMeshBasePython:
_itkQuadEdgeMeshBasePython.itkImageToMeshFilterISS4MD4QEMTD4BBFF_swigregister(itkImageToMeshFilterISS4MD4QEMTD4BBFF)
itkImageToMeshFilterISS4MD4QEMTD4BBFF_cast = _itkQuadEdgeMeshBasePython.itkImageToMeshFilterISS4MD4QEMTD4BBFF_cast

class itkImageToMeshFilterIUC2MD2QEMTD2BBFF(itkMeshSourceMD2QEMTD2BBFF):
    r"""Proxy of C++ itkImageToMeshFilterIUC2MD2QEMTD2BBFF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUC2MD2QEMTD2BBFF_SetInput)
    GetInput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUC2MD2QEMTD2BBFF_GetInput)
    GetOutput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUC2MD2QEMTD2BBFF_GetOutput)
    GenerateOutputInformation = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUC2MD2QEMTD2BBFF_GenerateOutputInformation)
    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkImageToMeshFilterIUC2MD2QEMTD2BBFF
    cast = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUC2MD2QEMTD2BBFF_cast)

# Register itkImageToMeshFilterIUC2MD2QEMTD2BBFF in _itkQuadEdgeMeshBasePython:
_itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUC2MD2QEMTD2BBFF_swigregister(itkImageToMeshFilterIUC2MD2QEMTD2BBFF)
itkImageToMeshFilterIUC2MD2QEMTD2BBFF_cast = _itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUC2MD2QEMTD2BBFF_cast

class itkImageToMeshFilterIUC3MD3QEMTD3BBFF(itkMeshSourceMD3QEMTD3BBFF):
    r"""Proxy of C++ itkImageToMeshFilterIUC3MD3QEMTD3BBFF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUC3MD3QEMTD3BBFF_SetInput)
    GetInput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUC3MD3QEMTD3BBFF_GetInput)
    GetOutput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUC3MD3QEMTD3BBFF_GetOutput)
    GenerateOutputInformation = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUC3MD3QEMTD3BBFF_GenerateOutputInformation)
    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkImageToMeshFilterIUC3MD3QEMTD3BBFF
    cast = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUC3MD3QEMTD3BBFF_cast)

# Register itkImageToMeshFilterIUC3MD3QEMTD3BBFF in _itkQuadEdgeMeshBasePython:
_itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUC3MD3QEMTD3BBFF_swigregister(itkImageToMeshFilterIUC3MD3QEMTD3BBFF)
itkImageToMeshFilterIUC3MD3QEMTD3BBFF_cast = _itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUC3MD3QEMTD3BBFF_cast

class itkImageToMeshFilterIUC4MD4QEMTD4BBFF(itkMeshSourceMD4QEMTD4BBFF):
    r"""Proxy of C++ itkImageToMeshFilterIUC4MD4QEMTD4BBFF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUC4MD4QEMTD4BBFF_SetInput)
    GetInput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUC4MD4QEMTD4BBFF_GetInput)
    GetOutput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUC4MD4QEMTD4BBFF_GetOutput)
    GenerateOutputInformation = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUC4MD4QEMTD4BBFF_GenerateOutputInformation)
    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkImageToMeshFilterIUC4MD4QEMTD4BBFF
    cast = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUC4MD4QEMTD4BBFF_cast)

# Register itkImageToMeshFilterIUC4MD4QEMTD4BBFF in _itkQuadEdgeMeshBasePython:
_itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUC4MD4QEMTD4BBFF_swigregister(itkImageToMeshFilterIUC4MD4QEMTD4BBFF)
itkImageToMeshFilterIUC4MD4QEMTD4BBFF_cast = _itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUC4MD4QEMTD4BBFF_cast

class itkImageToMeshFilterIUS2MD2QEMTD2BBFF(itkMeshSourceMD2QEMTD2BBFF):
    r"""Proxy of C++ itkImageToMeshFilterIUS2MD2QEMTD2BBFF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUS2MD2QEMTD2BBFF_SetInput)
    GetInput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUS2MD2QEMTD2BBFF_GetInput)
    GetOutput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUS2MD2QEMTD2BBFF_GetOutput)
    GenerateOutputInformation = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUS2MD2QEMTD2BBFF_GenerateOutputInformation)
    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkImageToMeshFilterIUS2MD2QEMTD2BBFF
    cast = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUS2MD2QEMTD2BBFF_cast)

# Register itkImageToMeshFilterIUS2MD2QEMTD2BBFF in _itkQuadEdgeMeshBasePython:
_itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUS2MD2QEMTD2BBFF_swigregister(itkImageToMeshFilterIUS2MD2QEMTD2BBFF)
itkImageToMeshFilterIUS2MD2QEMTD2BBFF_cast = _itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUS2MD2QEMTD2BBFF_cast

class itkImageToMeshFilterIUS3MD3QEMTD3BBFF(itkMeshSourceMD3QEMTD3BBFF):
    r"""Proxy of C++ itkImageToMeshFilterIUS3MD3QEMTD3BBFF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUS3MD3QEMTD3BBFF_SetInput)
    GetInput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUS3MD3QEMTD3BBFF_GetInput)
    GetOutput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUS3MD3QEMTD3BBFF_GetOutput)
    GenerateOutputInformation = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUS3MD3QEMTD3BBFF_GenerateOutputInformation)
    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkImageToMeshFilterIUS3MD3QEMTD3BBFF
    cast = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUS3MD3QEMTD3BBFF_cast)

# Register itkImageToMeshFilterIUS3MD3QEMTD3BBFF in _itkQuadEdgeMeshBasePython:
_itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUS3MD3QEMTD3BBFF_swigregister(itkImageToMeshFilterIUS3MD3QEMTD3BBFF)
itkImageToMeshFilterIUS3MD3QEMTD3BBFF_cast = _itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUS3MD3QEMTD3BBFF_cast

class itkImageToMeshFilterIUS4MD4QEMTD4BBFF(itkMeshSourceMD4QEMTD4BBFF):
    r"""Proxy of C++ itkImageToMeshFilterIUS4MD4QEMTD4BBFF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUS4MD4QEMTD4BBFF_SetInput)
    GetInput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUS4MD4QEMTD4BBFF_GetInput)
    GetOutput = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUS4MD4QEMTD4BBFF_GetOutput)
    GenerateOutputInformation = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUS4MD4QEMTD4BBFF_GenerateOutputInformation)
    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkImageToMeshFilterIUS4MD4QEMTD4BBFF
    cast = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUS4MD4QEMTD4BBFF_cast)

# Register itkImageToMeshFilterIUS4MD4QEMTD4BBFF in _itkQuadEdgeMeshBasePython:
_itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUS4MD4QEMTD4BBFF_swigregister(itkImageToMeshFilterIUS4MD4QEMTD4BBFF)
itkImageToMeshFilterIUS4MD4QEMTD4BBFF_cast = _itkQuadEdgeMeshBasePython.itkImageToMeshFilterIUS4MD4QEMTD4BBFF_cast


def itkMeshD2QEMTD2BBFF_New():
    return itkMeshD2QEMTD2BBFF.New()

class itkMeshD2QEMTD2BBFF(itkPointSetD2QEMTD2BBFF):
    r"""Proxy of C++ itkMeshD2QEMTD2BBFF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkMeshD2QEMTD2BBFF___New_orig__)
    Clone = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD2QEMTD2BBFF_Clone)
    GetNumberOfCells = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD2QEMTD2BBFF_GetNumberOfCells)
    PassStructure = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD2QEMTD2BBFF_PassStructure)
    GetBoundingBox = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD2QEMTD2BBFF_GetBoundingBox)
    SetCellLinks = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD2QEMTD2BBFF_SetCellLinks)
    GetCellLinks = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD2QEMTD2BBFF_GetCellLinks)
    SetCells = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD2QEMTD2BBFF_SetCells)
    SetCellsArray = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD2QEMTD2BBFF_SetCellsArray)
    GetCellsArray = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD2QEMTD2BBFF_GetCellsArray)
    GetCells = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD2QEMTD2BBFF_GetCells)
    DeleteUnusedCellData = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD2QEMTD2BBFF_DeleteUnusedCellData)
    SetCell = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD2QEMTD2BBFF_SetCell)
    GetCell = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD2QEMTD2BBFF_GetCell)
    SetCellData = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD2QEMTD2BBFF_SetCellData)
    GetCellData = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD2QEMTD2BBFF_GetCellData)
    SetBoundaryAssignment = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD2QEMTD2BBFF_SetBoundaryAssignment)
    GetBoundaryAssignment = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD2QEMTD2BBFF_GetBoundaryAssignment)
    RemoveBoundaryAssignment = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD2QEMTD2BBFF_RemoveBoundaryAssignment)
    GetNumberOfCellBoundaryFeatures = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD2QEMTD2BBFF_GetNumberOfCellBoundaryFeatures)
    GetCellBoundaryFeature = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD2QEMTD2BBFF_GetCellBoundaryFeature)
    GetCellBoundaryFeatureNeighbors = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD2QEMTD2BBFF_GetCellBoundaryFeatureNeighbors)
    GetCellNeighbors = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD2QEMTD2BBFF_GetCellNeighbors)
    GetAssignedCellBoundaryIfOneExists = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD2QEMTD2BBFF_GetAssignedCellBoundaryIfOneExists)
    BuildCellLinks = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD2QEMTD2BBFF_BuildCellLinks)
    Accept = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD2QEMTD2BBFF_Accept)
    SetCellsAllocationMethod = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD2QEMTD2BBFF_SetCellsAllocationMethod)
    GetCellsAllocationMethod = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD2QEMTD2BBFF_GetCellsAllocationMethod)
    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkMeshD2QEMTD2BBFF
    cast = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkMeshD2QEMTD2BBFF_cast)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshD2QEMTD2BBFF

        Create a new object of the class itkMeshD2QEMTD2BBFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshD2QEMTD2BBFF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshD2QEMTD2BBFF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshD2QEMTD2BBFF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshD2QEMTD2BBFF in _itkQuadEdgeMeshBasePython:
_itkQuadEdgeMeshBasePython.itkMeshD2QEMTD2BBFF_swigregister(itkMeshD2QEMTD2BBFF)
itkMeshD2QEMTD2BBFF___New_orig__ = _itkQuadEdgeMeshBasePython.itkMeshD2QEMTD2BBFF___New_orig__
itkMeshD2QEMTD2BBFF_cast = _itkQuadEdgeMeshBasePython.itkMeshD2QEMTD2BBFF_cast


def itkMeshD3QEMTD3BBFF_New():
    return itkMeshD3QEMTD3BBFF.New()

class itkMeshD3QEMTD3BBFF(itkPointSetD3QEMTD3BBFF):
    r"""Proxy of C++ itkMeshD3QEMTD3BBFF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkMeshD3QEMTD3BBFF___New_orig__)
    Clone = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD3QEMTD3BBFF_Clone)
    GetNumberOfCells = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD3QEMTD3BBFF_GetNumberOfCells)
    PassStructure = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD3QEMTD3BBFF_PassStructure)
    GetBoundingBox = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD3QEMTD3BBFF_GetBoundingBox)
    SetCellLinks = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD3QEMTD3BBFF_SetCellLinks)
    GetCellLinks = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD3QEMTD3BBFF_GetCellLinks)
    SetCells = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD3QEMTD3BBFF_SetCells)
    SetCellsArray = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD3QEMTD3BBFF_SetCellsArray)
    GetCellsArray = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD3QEMTD3BBFF_GetCellsArray)
    GetCells = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD3QEMTD3BBFF_GetCells)
    DeleteUnusedCellData = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD3QEMTD3BBFF_DeleteUnusedCellData)
    SetCell = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD3QEMTD3BBFF_SetCell)
    GetCell = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD3QEMTD3BBFF_GetCell)
    SetCellData = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD3QEMTD3BBFF_SetCellData)
    GetCellData = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD3QEMTD3BBFF_GetCellData)
    SetBoundaryAssignment = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD3QEMTD3BBFF_SetBoundaryAssignment)
    GetBoundaryAssignment = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD3QEMTD3BBFF_GetBoundaryAssignment)
    RemoveBoundaryAssignment = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD3QEMTD3BBFF_RemoveBoundaryAssignment)
    GetNumberOfCellBoundaryFeatures = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD3QEMTD3BBFF_GetNumberOfCellBoundaryFeatures)
    GetCellBoundaryFeature = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD3QEMTD3BBFF_GetCellBoundaryFeature)
    GetCellBoundaryFeatureNeighbors = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD3QEMTD3BBFF_GetCellBoundaryFeatureNeighbors)
    GetCellNeighbors = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD3QEMTD3BBFF_GetCellNeighbors)
    GetAssignedCellBoundaryIfOneExists = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD3QEMTD3BBFF_GetAssignedCellBoundaryIfOneExists)
    BuildCellLinks = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD3QEMTD3BBFF_BuildCellLinks)
    Accept = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD3QEMTD3BBFF_Accept)
    SetCellsAllocationMethod = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD3QEMTD3BBFF_SetCellsAllocationMethod)
    GetCellsAllocationMethod = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD3QEMTD3BBFF_GetCellsAllocationMethod)
    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkMeshD3QEMTD3BBFF
    cast = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkMeshD3QEMTD3BBFF_cast)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshD3QEMTD3BBFF

        Create a new object of the class itkMeshD3QEMTD3BBFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshD3QEMTD3BBFF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshD3QEMTD3BBFF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshD3QEMTD3BBFF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshD3QEMTD3BBFF in _itkQuadEdgeMeshBasePython:
_itkQuadEdgeMeshBasePython.itkMeshD3QEMTD3BBFF_swigregister(itkMeshD3QEMTD3BBFF)
itkMeshD3QEMTD3BBFF___New_orig__ = _itkQuadEdgeMeshBasePython.itkMeshD3QEMTD3BBFF___New_orig__
itkMeshD3QEMTD3BBFF_cast = _itkQuadEdgeMeshBasePython.itkMeshD3QEMTD3BBFF_cast


def itkMeshD4QEMTD4BBFF_New():
    return itkMeshD4QEMTD4BBFF.New()

class itkMeshD4QEMTD4BBFF(itkPointSetD4QEMTD4BBFF):
    r"""Proxy of C++ itkMeshD4QEMTD4BBFF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkMeshD4QEMTD4BBFF___New_orig__)
    Clone = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD4QEMTD4BBFF_Clone)
    GetNumberOfCells = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD4QEMTD4BBFF_GetNumberOfCells)
    PassStructure = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD4QEMTD4BBFF_PassStructure)
    GetBoundingBox = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD4QEMTD4BBFF_GetBoundingBox)
    SetCellLinks = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD4QEMTD4BBFF_SetCellLinks)
    GetCellLinks = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD4QEMTD4BBFF_GetCellLinks)
    SetCells = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD4QEMTD4BBFF_SetCells)
    SetCellsArray = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD4QEMTD4BBFF_SetCellsArray)
    GetCellsArray = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD4QEMTD4BBFF_GetCellsArray)
    GetCells = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD4QEMTD4BBFF_GetCells)
    DeleteUnusedCellData = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD4QEMTD4BBFF_DeleteUnusedCellData)
    SetCell = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD4QEMTD4BBFF_SetCell)
    GetCell = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD4QEMTD4BBFF_GetCell)
    SetCellData = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD4QEMTD4BBFF_SetCellData)
    GetCellData = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD4QEMTD4BBFF_GetCellData)
    SetBoundaryAssignment = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD4QEMTD4BBFF_SetBoundaryAssignment)
    GetBoundaryAssignment = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD4QEMTD4BBFF_GetBoundaryAssignment)
    RemoveBoundaryAssignment = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD4QEMTD4BBFF_RemoveBoundaryAssignment)
    GetNumberOfCellBoundaryFeatures = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD4QEMTD4BBFF_GetNumberOfCellBoundaryFeatures)
    GetCellBoundaryFeature = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD4QEMTD4BBFF_GetCellBoundaryFeature)
    GetCellBoundaryFeatureNeighbors = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD4QEMTD4BBFF_GetCellBoundaryFeatureNeighbors)
    GetCellNeighbors = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD4QEMTD4BBFF_GetCellNeighbors)
    GetAssignedCellBoundaryIfOneExists = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD4QEMTD4BBFF_GetAssignedCellBoundaryIfOneExists)
    BuildCellLinks = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD4QEMTD4BBFF_BuildCellLinks)
    Accept = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD4QEMTD4BBFF_Accept)
    SetCellsAllocationMethod = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD4QEMTD4BBFF_SetCellsAllocationMethod)
    GetCellsAllocationMethod = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkMeshD4QEMTD4BBFF_GetCellsAllocationMethod)
    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkMeshD4QEMTD4BBFF
    cast = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkMeshD4QEMTD4BBFF_cast)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshD4QEMTD4BBFF

        Create a new object of the class itkMeshD4QEMTD4BBFF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshD4QEMTD4BBFF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshD4QEMTD4BBFF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshD4QEMTD4BBFF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshD4QEMTD4BBFF in _itkQuadEdgeMeshBasePython:
_itkQuadEdgeMeshBasePython.itkMeshD4QEMTD4BBFF_swigregister(itkMeshD4QEMTD4BBFF)
itkMeshD4QEMTD4BBFF___New_orig__ = _itkQuadEdgeMeshBasePython.itkMeshD4QEMTD4BBFF___New_orig__
itkMeshD4QEMTD4BBFF_cast = _itkQuadEdgeMeshBasePython.itkMeshD4QEMTD4BBFF_cast


def itkQuadEdgeMeshD2_New():
    return itkQuadEdgeMeshD2.New()

class itkQuadEdgeMeshD2(itkMeshD2QEMTD2BBFF):
    r"""Proxy of C++ itkQuadEdgeMeshD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2___New_orig__)
    Clone = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_Clone)
    Clear = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_Clear)
    GetEdgeCells = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_GetEdgeCells)
    SetEdgeCells = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_SetEdgeCells)
    SetEdgeCell = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_SetEdgeCell)
    SqueezePointsIds = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_SqueezePointsIds)
    BuildCellLinks = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_BuildCellLinks)
    SetBoundaryAssignment = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_SetBoundaryAssignment)
    GetBoundaryAssignment = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_GetBoundaryAssignment)
    RemoveBoundaryAssignment = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_RemoveBoundaryAssignment)
    GetCellBoundaryFeature = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_GetCellBoundaryFeature)
    GetCellBoundaryFeatureNeighbors = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_GetCellBoundaryFeatureNeighbors)
    GetCellNeighbors = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_GetCellNeighbors)
    GetAssignedCellBoundaryIfOneExists = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_GetAssignedCellBoundaryIfOneExists)
    SetCell = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_SetCell)
    FindFirstUnusedPointIndex = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_FindFirstUnusedPointIndex)
    FindFirstUnusedCellIndex = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_FindFirstUnusedCellIndex)
    PushOnContainer = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_PushOnContainer)
    AddPoint = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_AddPoint)
    AddEdge = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_AddEdge)
    AddEdgeWithSecurePointList = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_AddEdgeWithSecurePointList)
    AddFace = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_AddFace)
    AddFaceWithSecurePointList = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_AddFaceWithSecurePointList)
    AddFaceTriangle = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_AddFaceTriangle)
    DeletePoint = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_DeletePoint)
    DeleteEdge = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_DeleteEdge)
    LightWeightDeleteEdge = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_LightWeightDeleteEdge)
    DeleteFace = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_DeleteFace)
    GetPoint = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_GetPoint)
    GetVector = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_GetVector)
    GetEdge = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_GetEdge)
    FindEdge = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_FindEdge)
    FindEdgeCell = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_FindEdgeCell)
    ComputeEdgeLength = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_ComputeEdgeLength)
    ComputeNumberOfPoints = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_ComputeNumberOfPoints)
    ComputeNumberOfFaces = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_ComputeNumberOfFaces)
    ComputeNumberOfEdges = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_ComputeNumberOfEdges)
    Splice = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_Splice)
    ClearFreePointAndCellIndexesLists = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_ClearFreePointAndCellIndexesLists)
    GetNumberOfFaces = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_GetNumberOfFaces)
    GetNumberOfEdges = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_GetNumberOfEdges)
    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkQuadEdgeMeshD2
    cast = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_cast)

    def New(*args, **kargs):
        """New() -> itkQuadEdgeMeshD2

        Create a new object of the class itkQuadEdgeMeshD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkQuadEdgeMeshD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkQuadEdgeMeshD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkQuadEdgeMeshD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkQuadEdgeMeshD2 in _itkQuadEdgeMeshBasePython:
_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_swigregister(itkQuadEdgeMeshD2)
itkQuadEdgeMeshD2___New_orig__ = _itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2___New_orig__
itkQuadEdgeMeshD2_cast = _itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD2_cast


def itkQuadEdgeMeshD3_New():
    return itkQuadEdgeMeshD3.New()

class itkQuadEdgeMeshD3(itkMeshD3QEMTD3BBFF):
    r"""Proxy of C++ itkQuadEdgeMeshD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3___New_orig__)
    Clone = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_Clone)
    Clear = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_Clear)
    GetEdgeCells = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_GetEdgeCells)
    SetEdgeCells = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_SetEdgeCells)
    SetEdgeCell = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_SetEdgeCell)
    SqueezePointsIds = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_SqueezePointsIds)
    BuildCellLinks = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_BuildCellLinks)
    SetBoundaryAssignment = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_SetBoundaryAssignment)
    GetBoundaryAssignment = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_GetBoundaryAssignment)
    RemoveBoundaryAssignment = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_RemoveBoundaryAssignment)
    GetCellBoundaryFeature = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_GetCellBoundaryFeature)
    GetCellBoundaryFeatureNeighbors = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_GetCellBoundaryFeatureNeighbors)
    GetCellNeighbors = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_GetCellNeighbors)
    GetAssignedCellBoundaryIfOneExists = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_GetAssignedCellBoundaryIfOneExists)
    SetCell = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_SetCell)
    FindFirstUnusedPointIndex = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_FindFirstUnusedPointIndex)
    FindFirstUnusedCellIndex = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_FindFirstUnusedCellIndex)
    PushOnContainer = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_PushOnContainer)
    AddPoint = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_AddPoint)
    AddEdge = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_AddEdge)
    AddEdgeWithSecurePointList = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_AddEdgeWithSecurePointList)
    AddFace = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_AddFace)
    AddFaceWithSecurePointList = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_AddFaceWithSecurePointList)
    AddFaceTriangle = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_AddFaceTriangle)
    DeletePoint = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_DeletePoint)
    DeleteEdge = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_DeleteEdge)
    LightWeightDeleteEdge = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_LightWeightDeleteEdge)
    DeleteFace = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_DeleteFace)
    GetPoint = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_GetPoint)
    GetVector = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_GetVector)
    GetEdge = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_GetEdge)
    FindEdge = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_FindEdge)
    FindEdgeCell = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_FindEdgeCell)
    ComputeEdgeLength = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_ComputeEdgeLength)
    ComputeNumberOfPoints = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_ComputeNumberOfPoints)
    ComputeNumberOfFaces = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_ComputeNumberOfFaces)
    ComputeNumberOfEdges = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_ComputeNumberOfEdges)
    Splice = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_Splice)
    ClearFreePointAndCellIndexesLists = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_ClearFreePointAndCellIndexesLists)
    GetNumberOfFaces = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_GetNumberOfFaces)
    GetNumberOfEdges = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_GetNumberOfEdges)
    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkQuadEdgeMeshD3
    cast = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_cast)

    def New(*args, **kargs):
        """New() -> itkQuadEdgeMeshD3

        Create a new object of the class itkQuadEdgeMeshD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkQuadEdgeMeshD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkQuadEdgeMeshD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkQuadEdgeMeshD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkQuadEdgeMeshD3 in _itkQuadEdgeMeshBasePython:
_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_swigregister(itkQuadEdgeMeshD3)
itkQuadEdgeMeshD3___New_orig__ = _itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3___New_orig__
itkQuadEdgeMeshD3_cast = _itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD3_cast


def itkQuadEdgeMeshD4_New():
    return itkQuadEdgeMeshD4.New()

class itkQuadEdgeMeshD4(itkMeshD4QEMTD4BBFF):
    r"""Proxy of C++ itkQuadEdgeMeshD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4___New_orig__)
    Clone = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_Clone)
    Clear = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_Clear)
    GetEdgeCells = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_GetEdgeCells)
    SetEdgeCells = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_SetEdgeCells)
    SetEdgeCell = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_SetEdgeCell)
    SqueezePointsIds = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_SqueezePointsIds)
    BuildCellLinks = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_BuildCellLinks)
    SetBoundaryAssignment = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_SetBoundaryAssignment)
    GetBoundaryAssignment = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_GetBoundaryAssignment)
    RemoveBoundaryAssignment = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_RemoveBoundaryAssignment)
    GetCellBoundaryFeature = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_GetCellBoundaryFeature)
    GetCellBoundaryFeatureNeighbors = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_GetCellBoundaryFeatureNeighbors)
    GetCellNeighbors = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_GetCellNeighbors)
    GetAssignedCellBoundaryIfOneExists = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_GetAssignedCellBoundaryIfOneExists)
    SetCell = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_SetCell)
    FindFirstUnusedPointIndex = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_FindFirstUnusedPointIndex)
    FindFirstUnusedCellIndex = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_FindFirstUnusedCellIndex)
    PushOnContainer = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_PushOnContainer)
    AddPoint = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_AddPoint)
    AddEdge = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_AddEdge)
    AddEdgeWithSecurePointList = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_AddEdgeWithSecurePointList)
    AddFace = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_AddFace)
    AddFaceWithSecurePointList = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_AddFaceWithSecurePointList)
    AddFaceTriangle = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_AddFaceTriangle)
    DeletePoint = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_DeletePoint)
    DeleteEdge = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_DeleteEdge)
    LightWeightDeleteEdge = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_LightWeightDeleteEdge)
    DeleteFace = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_DeleteFace)
    GetPoint = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_GetPoint)
    GetVector = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_GetVector)
    GetEdge = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_GetEdge)
    FindEdge = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_FindEdge)
    FindEdgeCell = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_FindEdgeCell)
    ComputeEdgeLength = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_ComputeEdgeLength)
    ComputeNumberOfPoints = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_ComputeNumberOfPoints)
    ComputeNumberOfFaces = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_ComputeNumberOfFaces)
    ComputeNumberOfEdges = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_ComputeNumberOfEdges)
    Splice = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_Splice)
    ClearFreePointAndCellIndexesLists = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_ClearFreePointAndCellIndexesLists)
    GetNumberOfFaces = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_GetNumberOfFaces)
    GetNumberOfEdges = _swig_new_instance_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_GetNumberOfEdges)
    __swig_destroy__ = _itkQuadEdgeMeshBasePython.delete_itkQuadEdgeMeshD4
    cast = _swig_new_static_method(_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_cast)

    def New(*args, **kargs):
        """New() -> itkQuadEdgeMeshD4

        Create a new object of the class itkQuadEdgeMeshD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkQuadEdgeMeshD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkQuadEdgeMeshD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkQuadEdgeMeshD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkQuadEdgeMeshD4 in _itkQuadEdgeMeshBasePython:
_itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_swigregister(itkQuadEdgeMeshD4)
itkQuadEdgeMeshD4___New_orig__ = _itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4___New_orig__
itkQuadEdgeMeshD4_cast = _itkQuadEdgeMeshBasePython.itkQuadEdgeMeshD4_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def mesh_source(*args,  output: itkt.Mesh=...,**kwargs):
    """Functional interface for MeshSource"""
    import itk

    kwarg_typehints = { 'output':output }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.MeshSource.New(*args, **kwargs)

    return instance.__internal_call__()

def mesh_source_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKQuadEdgeMesh.MeshSource
    mesh_source.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    mesh_source.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def mesh_to_mesh_filter(*args,  output: itkt.QuadEdgeMesh=...,**kwargs)-> itkt.MeshSourceReturn:
    """Functional interface for MeshToMeshFilter"""
    import itk

    kwarg_typehints = { 'output':output }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.MeshToMeshFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def mesh_to_mesh_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKQuadEdgeMesh.MeshToMeshFilter
    mesh_to_mesh_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    mesh_to_mesh_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def image_to_mesh_filter(*args,  output: itkt.Mesh=...,**kwargs)-> itkt.MeshSourceReturn:
    """Functional interface for ImageToMeshFilter"""
    import itk

    kwarg_typehints = { 'output':output }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ImageToMeshFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def image_to_mesh_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKQuadEdgeMesh.ImageToMeshFilter
    image_to_mesh_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    image_to_mesh_filter.__doc__ = filter_object.__doc__




