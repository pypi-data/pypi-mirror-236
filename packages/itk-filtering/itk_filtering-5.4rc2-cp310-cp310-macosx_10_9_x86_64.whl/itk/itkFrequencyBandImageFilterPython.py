# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageFrequencyPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkFrequencyBandImageFilterPython
else:
    import _itkFrequencyBandImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkFrequencyBandImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkFrequencyBandImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkUnaryFrequencyDomainFilterPython
import itk.itkImageRegionPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkInPlaceImageFilterBPython
import itk.itkImageToImageFilterBPython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython

def itkFrequencyBandImageFilterICD2_New():
    return itkFrequencyBandImageFilterICD2.New()

class itkFrequencyBandImageFilterICD2(itk.itkUnaryFrequencyDomainFilterPython.itkUnaryFrequencyDomainFilterICD2):
    r"""Proxy of C++ itkFrequencyBandImageFilterICD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2___New_orig__)
    Clone = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_Clone)
    GetLowFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_GetLowFrequencyThreshold)
    SetLowFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_SetLowFrequencyThreshold)
    SetLowFrequencyThresholdInRadians = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_SetLowFrequencyThresholdInRadians)
    GetHighFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_GetHighFrequencyThreshold)
    SetHighFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_SetHighFrequencyThreshold)
    SetHighFrequencyThresholdInRadians = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_SetHighFrequencyThresholdInRadians)
    SetFrequencyThresholds = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_SetFrequencyThresholds)
    SetFrequencyThresholdsInRadians = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_SetFrequencyThresholdsInRadians)
    SetPassLowFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_SetPassLowFrequencyThreshold)
    GetPassLowFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_GetPassLowFrequencyThreshold)
    PassLowFrequencyThresholdOn = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_PassLowFrequencyThresholdOn)
    PassLowFrequencyThresholdOff = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_PassLowFrequencyThresholdOff)
    SetPassHighFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_SetPassHighFrequencyThreshold)
    GetPassHighFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_GetPassHighFrequencyThreshold)
    PassHighFrequencyThresholdOn = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_PassHighFrequencyThresholdOn)
    PassHighFrequencyThresholdOff = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_PassHighFrequencyThresholdOff)
    GetPassBand = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_GetPassBand)
    PassBandOn = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_PassBandOn)
    PassBandOff = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_PassBandOff)
    SetPassBand = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_SetPassBand)
    SetStopBand = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_SetStopBand)
    SetRadialBand = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_SetRadialBand)
    GetRadialBand = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_GetRadialBand)
    RadialBandOn = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_RadialBandOn)
    RadialBandOff = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_RadialBandOff)
    SetPassNegativeLowFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_SetPassNegativeLowFrequencyThreshold)
    GetPassNegativeLowFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_GetPassNegativeLowFrequencyThreshold)
    PassNegativeLowFrequencyThresholdOn = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_PassNegativeLowFrequencyThresholdOn)
    PassNegativeLowFrequencyThresholdOff = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_PassNegativeLowFrequencyThresholdOff)
    SetPassNegativeHighFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_SetPassNegativeHighFrequencyThreshold)
    GetPassNegativeHighFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_GetPassNegativeHighFrequencyThreshold)
    PassNegativeHighFrequencyThresholdOn = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_PassNegativeHighFrequencyThresholdOn)
    PassNegativeHighFrequencyThresholdOff = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_PassNegativeHighFrequencyThresholdOff)
    __swig_destroy__ = _itkFrequencyBandImageFilterPython.delete_itkFrequencyBandImageFilterICD2
    cast = _swig_new_static_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_cast)

    def New(*args, **kargs):
        """New() -> itkFrequencyBandImageFilterICD2

        Create a new object of the class itkFrequencyBandImageFilterICD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFrequencyBandImageFilterICD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFrequencyBandImageFilterICD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFrequencyBandImageFilterICD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFrequencyBandImageFilterICD2 in _itkFrequencyBandImageFilterPython:
_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_swigregister(itkFrequencyBandImageFilterICD2)
itkFrequencyBandImageFilterICD2___New_orig__ = _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2___New_orig__
itkFrequencyBandImageFilterICD2_cast = _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD2_cast


def itkFrequencyBandImageFilterICD3_New():
    return itkFrequencyBandImageFilterICD3.New()

class itkFrequencyBandImageFilterICD3(itk.itkUnaryFrequencyDomainFilterPython.itkUnaryFrequencyDomainFilterICD3):
    r"""Proxy of C++ itkFrequencyBandImageFilterICD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3___New_orig__)
    Clone = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_Clone)
    GetLowFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_GetLowFrequencyThreshold)
    SetLowFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_SetLowFrequencyThreshold)
    SetLowFrequencyThresholdInRadians = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_SetLowFrequencyThresholdInRadians)
    GetHighFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_GetHighFrequencyThreshold)
    SetHighFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_SetHighFrequencyThreshold)
    SetHighFrequencyThresholdInRadians = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_SetHighFrequencyThresholdInRadians)
    SetFrequencyThresholds = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_SetFrequencyThresholds)
    SetFrequencyThresholdsInRadians = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_SetFrequencyThresholdsInRadians)
    SetPassLowFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_SetPassLowFrequencyThreshold)
    GetPassLowFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_GetPassLowFrequencyThreshold)
    PassLowFrequencyThresholdOn = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_PassLowFrequencyThresholdOn)
    PassLowFrequencyThresholdOff = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_PassLowFrequencyThresholdOff)
    SetPassHighFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_SetPassHighFrequencyThreshold)
    GetPassHighFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_GetPassHighFrequencyThreshold)
    PassHighFrequencyThresholdOn = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_PassHighFrequencyThresholdOn)
    PassHighFrequencyThresholdOff = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_PassHighFrequencyThresholdOff)
    GetPassBand = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_GetPassBand)
    PassBandOn = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_PassBandOn)
    PassBandOff = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_PassBandOff)
    SetPassBand = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_SetPassBand)
    SetStopBand = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_SetStopBand)
    SetRadialBand = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_SetRadialBand)
    GetRadialBand = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_GetRadialBand)
    RadialBandOn = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_RadialBandOn)
    RadialBandOff = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_RadialBandOff)
    SetPassNegativeLowFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_SetPassNegativeLowFrequencyThreshold)
    GetPassNegativeLowFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_GetPassNegativeLowFrequencyThreshold)
    PassNegativeLowFrequencyThresholdOn = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_PassNegativeLowFrequencyThresholdOn)
    PassNegativeLowFrequencyThresholdOff = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_PassNegativeLowFrequencyThresholdOff)
    SetPassNegativeHighFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_SetPassNegativeHighFrequencyThreshold)
    GetPassNegativeHighFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_GetPassNegativeHighFrequencyThreshold)
    PassNegativeHighFrequencyThresholdOn = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_PassNegativeHighFrequencyThresholdOn)
    PassNegativeHighFrequencyThresholdOff = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_PassNegativeHighFrequencyThresholdOff)
    __swig_destroy__ = _itkFrequencyBandImageFilterPython.delete_itkFrequencyBandImageFilterICD3
    cast = _swig_new_static_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_cast)

    def New(*args, **kargs):
        """New() -> itkFrequencyBandImageFilterICD3

        Create a new object of the class itkFrequencyBandImageFilterICD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFrequencyBandImageFilterICD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFrequencyBandImageFilterICD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFrequencyBandImageFilterICD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFrequencyBandImageFilterICD3 in _itkFrequencyBandImageFilterPython:
_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_swigregister(itkFrequencyBandImageFilterICD3)
itkFrequencyBandImageFilterICD3___New_orig__ = _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3___New_orig__
itkFrequencyBandImageFilterICD3_cast = _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD3_cast


def itkFrequencyBandImageFilterICD4_New():
    return itkFrequencyBandImageFilterICD4.New()

class itkFrequencyBandImageFilterICD4(itk.itkUnaryFrequencyDomainFilterPython.itkUnaryFrequencyDomainFilterICD4):
    r"""Proxy of C++ itkFrequencyBandImageFilterICD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4___New_orig__)
    Clone = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_Clone)
    GetLowFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_GetLowFrequencyThreshold)
    SetLowFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_SetLowFrequencyThreshold)
    SetLowFrequencyThresholdInRadians = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_SetLowFrequencyThresholdInRadians)
    GetHighFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_GetHighFrequencyThreshold)
    SetHighFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_SetHighFrequencyThreshold)
    SetHighFrequencyThresholdInRadians = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_SetHighFrequencyThresholdInRadians)
    SetFrequencyThresholds = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_SetFrequencyThresholds)
    SetFrequencyThresholdsInRadians = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_SetFrequencyThresholdsInRadians)
    SetPassLowFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_SetPassLowFrequencyThreshold)
    GetPassLowFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_GetPassLowFrequencyThreshold)
    PassLowFrequencyThresholdOn = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_PassLowFrequencyThresholdOn)
    PassLowFrequencyThresholdOff = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_PassLowFrequencyThresholdOff)
    SetPassHighFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_SetPassHighFrequencyThreshold)
    GetPassHighFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_GetPassHighFrequencyThreshold)
    PassHighFrequencyThresholdOn = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_PassHighFrequencyThresholdOn)
    PassHighFrequencyThresholdOff = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_PassHighFrequencyThresholdOff)
    GetPassBand = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_GetPassBand)
    PassBandOn = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_PassBandOn)
    PassBandOff = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_PassBandOff)
    SetPassBand = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_SetPassBand)
    SetStopBand = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_SetStopBand)
    SetRadialBand = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_SetRadialBand)
    GetRadialBand = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_GetRadialBand)
    RadialBandOn = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_RadialBandOn)
    RadialBandOff = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_RadialBandOff)
    SetPassNegativeLowFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_SetPassNegativeLowFrequencyThreshold)
    GetPassNegativeLowFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_GetPassNegativeLowFrequencyThreshold)
    PassNegativeLowFrequencyThresholdOn = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_PassNegativeLowFrequencyThresholdOn)
    PassNegativeLowFrequencyThresholdOff = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_PassNegativeLowFrequencyThresholdOff)
    SetPassNegativeHighFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_SetPassNegativeHighFrequencyThreshold)
    GetPassNegativeHighFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_GetPassNegativeHighFrequencyThreshold)
    PassNegativeHighFrequencyThresholdOn = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_PassNegativeHighFrequencyThresholdOn)
    PassNegativeHighFrequencyThresholdOff = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_PassNegativeHighFrequencyThresholdOff)
    __swig_destroy__ = _itkFrequencyBandImageFilterPython.delete_itkFrequencyBandImageFilterICD4
    cast = _swig_new_static_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_cast)

    def New(*args, **kargs):
        """New() -> itkFrequencyBandImageFilterICD4

        Create a new object of the class itkFrequencyBandImageFilterICD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFrequencyBandImageFilterICD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFrequencyBandImageFilterICD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFrequencyBandImageFilterICD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFrequencyBandImageFilterICD4 in _itkFrequencyBandImageFilterPython:
_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_swigregister(itkFrequencyBandImageFilterICD4)
itkFrequencyBandImageFilterICD4___New_orig__ = _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4___New_orig__
itkFrequencyBandImageFilterICD4_cast = _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICD4_cast


def itkFrequencyBandImageFilterICF2_New():
    return itkFrequencyBandImageFilterICF2.New()

class itkFrequencyBandImageFilterICF2(itk.itkUnaryFrequencyDomainFilterPython.itkUnaryFrequencyDomainFilterICF2):
    r"""Proxy of C++ itkFrequencyBandImageFilterICF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2___New_orig__)
    Clone = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_Clone)
    GetLowFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_GetLowFrequencyThreshold)
    SetLowFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetLowFrequencyThreshold)
    SetLowFrequencyThresholdInRadians = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetLowFrequencyThresholdInRadians)
    GetHighFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_GetHighFrequencyThreshold)
    SetHighFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetHighFrequencyThreshold)
    SetHighFrequencyThresholdInRadians = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetHighFrequencyThresholdInRadians)
    SetFrequencyThresholds = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetFrequencyThresholds)
    SetFrequencyThresholdsInRadians = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetFrequencyThresholdsInRadians)
    SetPassLowFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetPassLowFrequencyThreshold)
    GetPassLowFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_GetPassLowFrequencyThreshold)
    PassLowFrequencyThresholdOn = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_PassLowFrequencyThresholdOn)
    PassLowFrequencyThresholdOff = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_PassLowFrequencyThresholdOff)
    SetPassHighFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetPassHighFrequencyThreshold)
    GetPassHighFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_GetPassHighFrequencyThreshold)
    PassHighFrequencyThresholdOn = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_PassHighFrequencyThresholdOn)
    PassHighFrequencyThresholdOff = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_PassHighFrequencyThresholdOff)
    GetPassBand = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_GetPassBand)
    PassBandOn = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_PassBandOn)
    PassBandOff = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_PassBandOff)
    SetPassBand = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetPassBand)
    SetStopBand = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetStopBand)
    SetRadialBand = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetRadialBand)
    GetRadialBand = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_GetRadialBand)
    RadialBandOn = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_RadialBandOn)
    RadialBandOff = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_RadialBandOff)
    SetPassNegativeLowFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetPassNegativeLowFrequencyThreshold)
    GetPassNegativeLowFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_GetPassNegativeLowFrequencyThreshold)
    PassNegativeLowFrequencyThresholdOn = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_PassNegativeLowFrequencyThresholdOn)
    PassNegativeLowFrequencyThresholdOff = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_PassNegativeLowFrequencyThresholdOff)
    SetPassNegativeHighFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_SetPassNegativeHighFrequencyThreshold)
    GetPassNegativeHighFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_GetPassNegativeHighFrequencyThreshold)
    PassNegativeHighFrequencyThresholdOn = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_PassNegativeHighFrequencyThresholdOn)
    PassNegativeHighFrequencyThresholdOff = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_PassNegativeHighFrequencyThresholdOff)
    __swig_destroy__ = _itkFrequencyBandImageFilterPython.delete_itkFrequencyBandImageFilterICF2
    cast = _swig_new_static_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_cast)

    def New(*args, **kargs):
        """New() -> itkFrequencyBandImageFilterICF2

        Create a new object of the class itkFrequencyBandImageFilterICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFrequencyBandImageFilterICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFrequencyBandImageFilterICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFrequencyBandImageFilterICF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFrequencyBandImageFilterICF2 in _itkFrequencyBandImageFilterPython:
_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_swigregister(itkFrequencyBandImageFilterICF2)
itkFrequencyBandImageFilterICF2___New_orig__ = _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2___New_orig__
itkFrequencyBandImageFilterICF2_cast = _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF2_cast


def itkFrequencyBandImageFilterICF3_New():
    return itkFrequencyBandImageFilterICF3.New()

class itkFrequencyBandImageFilterICF3(itk.itkUnaryFrequencyDomainFilterPython.itkUnaryFrequencyDomainFilterICF3):
    r"""Proxy of C++ itkFrequencyBandImageFilterICF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3___New_orig__)
    Clone = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_Clone)
    GetLowFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_GetLowFrequencyThreshold)
    SetLowFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetLowFrequencyThreshold)
    SetLowFrequencyThresholdInRadians = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetLowFrequencyThresholdInRadians)
    GetHighFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_GetHighFrequencyThreshold)
    SetHighFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetHighFrequencyThreshold)
    SetHighFrequencyThresholdInRadians = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetHighFrequencyThresholdInRadians)
    SetFrequencyThresholds = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetFrequencyThresholds)
    SetFrequencyThresholdsInRadians = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetFrequencyThresholdsInRadians)
    SetPassLowFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetPassLowFrequencyThreshold)
    GetPassLowFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_GetPassLowFrequencyThreshold)
    PassLowFrequencyThresholdOn = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_PassLowFrequencyThresholdOn)
    PassLowFrequencyThresholdOff = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_PassLowFrequencyThresholdOff)
    SetPassHighFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetPassHighFrequencyThreshold)
    GetPassHighFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_GetPassHighFrequencyThreshold)
    PassHighFrequencyThresholdOn = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_PassHighFrequencyThresholdOn)
    PassHighFrequencyThresholdOff = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_PassHighFrequencyThresholdOff)
    GetPassBand = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_GetPassBand)
    PassBandOn = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_PassBandOn)
    PassBandOff = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_PassBandOff)
    SetPassBand = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetPassBand)
    SetStopBand = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetStopBand)
    SetRadialBand = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetRadialBand)
    GetRadialBand = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_GetRadialBand)
    RadialBandOn = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_RadialBandOn)
    RadialBandOff = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_RadialBandOff)
    SetPassNegativeLowFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetPassNegativeLowFrequencyThreshold)
    GetPassNegativeLowFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_GetPassNegativeLowFrequencyThreshold)
    PassNegativeLowFrequencyThresholdOn = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_PassNegativeLowFrequencyThresholdOn)
    PassNegativeLowFrequencyThresholdOff = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_PassNegativeLowFrequencyThresholdOff)
    SetPassNegativeHighFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_SetPassNegativeHighFrequencyThreshold)
    GetPassNegativeHighFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_GetPassNegativeHighFrequencyThreshold)
    PassNegativeHighFrequencyThresholdOn = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_PassNegativeHighFrequencyThresholdOn)
    PassNegativeHighFrequencyThresholdOff = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_PassNegativeHighFrequencyThresholdOff)
    __swig_destroy__ = _itkFrequencyBandImageFilterPython.delete_itkFrequencyBandImageFilterICF3
    cast = _swig_new_static_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_cast)

    def New(*args, **kargs):
        """New() -> itkFrequencyBandImageFilterICF3

        Create a new object of the class itkFrequencyBandImageFilterICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFrequencyBandImageFilterICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFrequencyBandImageFilterICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFrequencyBandImageFilterICF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFrequencyBandImageFilterICF3 in _itkFrequencyBandImageFilterPython:
_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_swigregister(itkFrequencyBandImageFilterICF3)
itkFrequencyBandImageFilterICF3___New_orig__ = _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3___New_orig__
itkFrequencyBandImageFilterICF3_cast = _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF3_cast


def itkFrequencyBandImageFilterICF4_New():
    return itkFrequencyBandImageFilterICF4.New()

class itkFrequencyBandImageFilterICF4(itk.itkUnaryFrequencyDomainFilterPython.itkUnaryFrequencyDomainFilterICF4):
    r"""Proxy of C++ itkFrequencyBandImageFilterICF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4___New_orig__)
    Clone = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_Clone)
    GetLowFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_GetLowFrequencyThreshold)
    SetLowFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_SetLowFrequencyThreshold)
    SetLowFrequencyThresholdInRadians = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_SetLowFrequencyThresholdInRadians)
    GetHighFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_GetHighFrequencyThreshold)
    SetHighFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_SetHighFrequencyThreshold)
    SetHighFrequencyThresholdInRadians = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_SetHighFrequencyThresholdInRadians)
    SetFrequencyThresholds = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_SetFrequencyThresholds)
    SetFrequencyThresholdsInRadians = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_SetFrequencyThresholdsInRadians)
    SetPassLowFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_SetPassLowFrequencyThreshold)
    GetPassLowFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_GetPassLowFrequencyThreshold)
    PassLowFrequencyThresholdOn = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_PassLowFrequencyThresholdOn)
    PassLowFrequencyThresholdOff = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_PassLowFrequencyThresholdOff)
    SetPassHighFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_SetPassHighFrequencyThreshold)
    GetPassHighFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_GetPassHighFrequencyThreshold)
    PassHighFrequencyThresholdOn = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_PassHighFrequencyThresholdOn)
    PassHighFrequencyThresholdOff = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_PassHighFrequencyThresholdOff)
    GetPassBand = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_GetPassBand)
    PassBandOn = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_PassBandOn)
    PassBandOff = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_PassBandOff)
    SetPassBand = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_SetPassBand)
    SetStopBand = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_SetStopBand)
    SetRadialBand = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_SetRadialBand)
    GetRadialBand = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_GetRadialBand)
    RadialBandOn = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_RadialBandOn)
    RadialBandOff = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_RadialBandOff)
    SetPassNegativeLowFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_SetPassNegativeLowFrequencyThreshold)
    GetPassNegativeLowFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_GetPassNegativeLowFrequencyThreshold)
    PassNegativeLowFrequencyThresholdOn = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_PassNegativeLowFrequencyThresholdOn)
    PassNegativeLowFrequencyThresholdOff = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_PassNegativeLowFrequencyThresholdOff)
    SetPassNegativeHighFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_SetPassNegativeHighFrequencyThreshold)
    GetPassNegativeHighFrequencyThreshold = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_GetPassNegativeHighFrequencyThreshold)
    PassNegativeHighFrequencyThresholdOn = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_PassNegativeHighFrequencyThresholdOn)
    PassNegativeHighFrequencyThresholdOff = _swig_new_instance_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_PassNegativeHighFrequencyThresholdOff)
    __swig_destroy__ = _itkFrequencyBandImageFilterPython.delete_itkFrequencyBandImageFilterICF4
    cast = _swig_new_static_method(_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_cast)

    def New(*args, **kargs):
        """New() -> itkFrequencyBandImageFilterICF4

        Create a new object of the class itkFrequencyBandImageFilterICF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFrequencyBandImageFilterICF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFrequencyBandImageFilterICF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFrequencyBandImageFilterICF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFrequencyBandImageFilterICF4 in _itkFrequencyBandImageFilterPython:
_itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_swigregister(itkFrequencyBandImageFilterICF4)
itkFrequencyBandImageFilterICF4___New_orig__ = _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4___New_orig__
itkFrequencyBandImageFilterICF4_cast = _itkFrequencyBandImageFilterPython.itkFrequencyBandImageFilterICF4_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def frequency_band_image_filter(*args: itkt.ImageLike,  low_frequency_threshold: float=..., low_frequency_threshold_in_radians: float=..., high_frequency_threshold: float=..., high_frequency_threshold_in_radians: float=..., frequency_thresholds: float=..., frequency_thresholds_in_radians: float=..., pass_low_frequency_threshold: bool=..., pass_high_frequency_threshold: bool=..., pass_band: Union[bool, bool]=..., stop_band: bool=..., radial_band: bool=..., pass_negative_low_frequency_threshold: bool=..., pass_negative_high_frequency_threshold: bool=..., actual_x_dimension_is_odd: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for FrequencyBandImageFilter"""
    import itk

    kwarg_typehints = { 'low_frequency_threshold':low_frequency_threshold,'low_frequency_threshold_in_radians':low_frequency_threshold_in_radians,'high_frequency_threshold':high_frequency_threshold,'high_frequency_threshold_in_radians':high_frequency_threshold_in_radians,'frequency_thresholds':frequency_thresholds,'frequency_thresholds_in_radians':frequency_thresholds_in_radians,'pass_low_frequency_threshold':pass_low_frequency_threshold,'pass_high_frequency_threshold':pass_high_frequency_threshold,'pass_band':pass_band,'stop_band':stop_band,'radial_band':radial_band,'pass_negative_low_frequency_threshold':pass_negative_low_frequency_threshold,'pass_negative_high_frequency_threshold':pass_negative_high_frequency_threshold,'actual_x_dimension_is_odd':actual_x_dimension_is_odd }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.FrequencyBandImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def frequency_band_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageFrequency.FrequencyBandImageFilter
    frequency_band_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    frequency_band_image_filter.__doc__ = filter_object.__doc__




