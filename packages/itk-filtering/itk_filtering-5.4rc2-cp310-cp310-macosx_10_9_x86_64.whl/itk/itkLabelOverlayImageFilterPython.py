# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageFusionPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkLabelOverlayImageFilterPython
else:
    import _itkLabelOverlayImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkLabelOverlayImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkLabelOverlayImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkBinaryGeneratorImageFilterPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterBPython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.itkPointPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkRGBAPixelPython
import itk.ITKCommonBasePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageRegionPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterAPython
import itk.itkInPlaceImageFilterBPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkArrayPython

def itkLabelOverlayImageFilterIUC2ISS2IRGBUC2_New():
    return itkLabelOverlayImageFilterIUC2ISS2IRGBUC2.New()

class itkLabelOverlayImageFilterIUC2ISS2IRGBUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2ISS2IRGBUC2):
    r"""Proxy of C++ itkLabelOverlayImageFilterIUC2ISS2IRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2ISS2IRGBUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2ISS2IRGBUC2_Clone)
    SetLabelImage = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2ISS2IRGBUC2_SetLabelImage)
    GetLabelImage = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2ISS2IRGBUC2_GetLabelImage)
    SetOpacity = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2ISS2IRGBUC2_SetOpacity)
    GetOpacity = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2ISS2IRGBUC2_GetOpacity)
    SetBackgroundValue = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2ISS2IRGBUC2_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2ISS2IRGBUC2_GetBackgroundValue)
    OutputPixelShouldHaveValueType = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2ISS2IRGBUC2_OutputPixelShouldHaveValueType
    
    OutputPixelShouldHaveBracketOperator = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2ISS2IRGBUC2_OutputPixelShouldHaveBracketOperator
    
    ResetColors = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2ISS2IRGBUC2_ResetColors)
    GetNumberOfColors = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2ISS2IRGBUC2_GetNumberOfColors)
    AddColor = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2ISS2IRGBUC2_AddColor)
    GetFunctor = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2ISS2IRGBUC2_GetFunctor)
    __swig_destroy__ = _itkLabelOverlayImageFilterPython.delete_itkLabelOverlayImageFilterIUC2ISS2IRGBUC2
    cast = _swig_new_static_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2ISS2IRGBUC2_cast)

    def New(*args, **kargs):
        """New() -> itkLabelOverlayImageFilterIUC2ISS2IRGBUC2

        Create a new object of the class itkLabelOverlayImageFilterIUC2ISS2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelOverlayImageFilterIUC2ISS2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelOverlayImageFilterIUC2ISS2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelOverlayImageFilterIUC2ISS2IRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelOverlayImageFilterIUC2ISS2IRGBUC2 in _itkLabelOverlayImageFilterPython:
_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2ISS2IRGBUC2_swigregister(itkLabelOverlayImageFilterIUC2ISS2IRGBUC2)
itkLabelOverlayImageFilterIUC2ISS2IRGBUC2___New_orig__ = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2ISS2IRGBUC2___New_orig__
itkLabelOverlayImageFilterIUC2ISS2IRGBUC2_cast = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2ISS2IRGBUC2_cast


def itkLabelOverlayImageFilterIUC2IUC2IRGBUC2_New():
    return itkLabelOverlayImageFilterIUC2IUC2IRGBUC2.New()

class itkLabelOverlayImageFilterIUC2IUC2IRGBUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUC2IRGBUC2):
    r"""Proxy of C++ itkLabelOverlayImageFilterIUC2IUC2IRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUC2IRGBUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUC2IRGBUC2_Clone)
    SetLabelImage = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUC2IRGBUC2_SetLabelImage)
    GetLabelImage = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUC2IRGBUC2_GetLabelImage)
    SetOpacity = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUC2IRGBUC2_SetOpacity)
    GetOpacity = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUC2IRGBUC2_GetOpacity)
    SetBackgroundValue = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUC2IRGBUC2_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUC2IRGBUC2_GetBackgroundValue)
    OutputPixelShouldHaveValueType = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUC2IRGBUC2_OutputPixelShouldHaveValueType
    
    OutputPixelShouldHaveBracketOperator = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUC2IRGBUC2_OutputPixelShouldHaveBracketOperator
    
    ResetColors = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUC2IRGBUC2_ResetColors)
    GetNumberOfColors = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUC2IRGBUC2_GetNumberOfColors)
    AddColor = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUC2IRGBUC2_AddColor)
    GetFunctor = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUC2IRGBUC2_GetFunctor)
    __swig_destroy__ = _itkLabelOverlayImageFilterPython.delete_itkLabelOverlayImageFilterIUC2IUC2IRGBUC2
    cast = _swig_new_static_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUC2IRGBUC2_cast)

    def New(*args, **kargs):
        """New() -> itkLabelOverlayImageFilterIUC2IUC2IRGBUC2

        Create a new object of the class itkLabelOverlayImageFilterIUC2IUC2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelOverlayImageFilterIUC2IUC2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelOverlayImageFilterIUC2IUC2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelOverlayImageFilterIUC2IUC2IRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelOverlayImageFilterIUC2IUC2IRGBUC2 in _itkLabelOverlayImageFilterPython:
_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUC2IRGBUC2_swigregister(itkLabelOverlayImageFilterIUC2IUC2IRGBUC2)
itkLabelOverlayImageFilterIUC2IUC2IRGBUC2___New_orig__ = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUC2IRGBUC2___New_orig__
itkLabelOverlayImageFilterIUC2IUC2IRGBUC2_cast = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUC2IRGBUC2_cast


def itkLabelOverlayImageFilterIUC2IUL2IRGBUC2_New():
    return itkLabelOverlayImageFilterIUC2IUL2IRGBUC2.New()

class itkLabelOverlayImageFilterIUC2IUL2IRGBUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUL2IRGBUC2):
    r"""Proxy of C++ itkLabelOverlayImageFilterIUC2IUL2IRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUL2IRGBUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUL2IRGBUC2_Clone)
    SetLabelImage = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUL2IRGBUC2_SetLabelImage)
    GetLabelImage = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUL2IRGBUC2_GetLabelImage)
    SetOpacity = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUL2IRGBUC2_SetOpacity)
    GetOpacity = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUL2IRGBUC2_GetOpacity)
    SetBackgroundValue = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUL2IRGBUC2_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUL2IRGBUC2_GetBackgroundValue)
    OutputPixelShouldHaveValueType = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUL2IRGBUC2_OutputPixelShouldHaveValueType
    
    OutputPixelShouldHaveBracketOperator = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUL2IRGBUC2_OutputPixelShouldHaveBracketOperator
    
    ResetColors = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUL2IRGBUC2_ResetColors)
    GetNumberOfColors = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUL2IRGBUC2_GetNumberOfColors)
    AddColor = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUL2IRGBUC2_AddColor)
    GetFunctor = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUL2IRGBUC2_GetFunctor)
    __swig_destroy__ = _itkLabelOverlayImageFilterPython.delete_itkLabelOverlayImageFilterIUC2IUL2IRGBUC2
    cast = _swig_new_static_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUL2IRGBUC2_cast)

    def New(*args, **kargs):
        """New() -> itkLabelOverlayImageFilterIUC2IUL2IRGBUC2

        Create a new object of the class itkLabelOverlayImageFilterIUC2IUL2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelOverlayImageFilterIUC2IUL2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelOverlayImageFilterIUC2IUL2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelOverlayImageFilterIUC2IUL2IRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelOverlayImageFilterIUC2IUL2IRGBUC2 in _itkLabelOverlayImageFilterPython:
_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUL2IRGBUC2_swigregister(itkLabelOverlayImageFilterIUC2IUL2IRGBUC2)
itkLabelOverlayImageFilterIUC2IUL2IRGBUC2___New_orig__ = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUL2IRGBUC2___New_orig__
itkLabelOverlayImageFilterIUC2IUL2IRGBUC2_cast = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUL2IRGBUC2_cast


def itkLabelOverlayImageFilterIUC2IUS2IRGBUC2_New():
    return itkLabelOverlayImageFilterIUC2IUS2IRGBUC2.New()

class itkLabelOverlayImageFilterIUC2IUS2IRGBUC2(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC2IUS2IRGBUC2):
    r"""Proxy of C++ itkLabelOverlayImageFilterIUC2IUS2IRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUS2IRGBUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUS2IRGBUC2_Clone)
    SetLabelImage = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUS2IRGBUC2_SetLabelImage)
    GetLabelImage = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUS2IRGBUC2_GetLabelImage)
    SetOpacity = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUS2IRGBUC2_SetOpacity)
    GetOpacity = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUS2IRGBUC2_GetOpacity)
    SetBackgroundValue = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUS2IRGBUC2_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUS2IRGBUC2_GetBackgroundValue)
    OutputPixelShouldHaveValueType = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUS2IRGBUC2_OutputPixelShouldHaveValueType
    
    OutputPixelShouldHaveBracketOperator = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUS2IRGBUC2_OutputPixelShouldHaveBracketOperator
    
    ResetColors = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUS2IRGBUC2_ResetColors)
    GetNumberOfColors = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUS2IRGBUC2_GetNumberOfColors)
    AddColor = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUS2IRGBUC2_AddColor)
    GetFunctor = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUS2IRGBUC2_GetFunctor)
    __swig_destroy__ = _itkLabelOverlayImageFilterPython.delete_itkLabelOverlayImageFilterIUC2IUS2IRGBUC2
    cast = _swig_new_static_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUS2IRGBUC2_cast)

    def New(*args, **kargs):
        """New() -> itkLabelOverlayImageFilterIUC2IUS2IRGBUC2

        Create a new object of the class itkLabelOverlayImageFilterIUC2IUS2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelOverlayImageFilterIUC2IUS2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelOverlayImageFilterIUC2IUS2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelOverlayImageFilterIUC2IUS2IRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelOverlayImageFilterIUC2IUS2IRGBUC2 in _itkLabelOverlayImageFilterPython:
_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUS2IRGBUC2_swigregister(itkLabelOverlayImageFilterIUC2IUS2IRGBUC2)
itkLabelOverlayImageFilterIUC2IUS2IRGBUC2___New_orig__ = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUS2IRGBUC2___New_orig__
itkLabelOverlayImageFilterIUC2IUS2IRGBUC2_cast = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC2IUS2IRGBUC2_cast


def itkLabelOverlayImageFilterIUC3ISS3IRGBUC3_New():
    return itkLabelOverlayImageFilterIUC3ISS3IRGBUC3.New()

class itkLabelOverlayImageFilterIUC3ISS3IRGBUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3ISS3IRGBUC3):
    r"""Proxy of C++ itkLabelOverlayImageFilterIUC3ISS3IRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3ISS3IRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3ISS3IRGBUC3_Clone)
    SetLabelImage = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3ISS3IRGBUC3_SetLabelImage)
    GetLabelImage = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3ISS3IRGBUC3_GetLabelImage)
    SetOpacity = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3ISS3IRGBUC3_SetOpacity)
    GetOpacity = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3ISS3IRGBUC3_GetOpacity)
    SetBackgroundValue = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3ISS3IRGBUC3_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3ISS3IRGBUC3_GetBackgroundValue)
    OutputPixelShouldHaveValueType = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3ISS3IRGBUC3_OutputPixelShouldHaveValueType
    
    OutputPixelShouldHaveBracketOperator = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3ISS3IRGBUC3_OutputPixelShouldHaveBracketOperator
    
    ResetColors = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3ISS3IRGBUC3_ResetColors)
    GetNumberOfColors = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3ISS3IRGBUC3_GetNumberOfColors)
    AddColor = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3ISS3IRGBUC3_AddColor)
    GetFunctor = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3ISS3IRGBUC3_GetFunctor)
    __swig_destroy__ = _itkLabelOverlayImageFilterPython.delete_itkLabelOverlayImageFilterIUC3ISS3IRGBUC3
    cast = _swig_new_static_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3ISS3IRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> itkLabelOverlayImageFilterIUC3ISS3IRGBUC3

        Create a new object of the class itkLabelOverlayImageFilterIUC3ISS3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelOverlayImageFilterIUC3ISS3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelOverlayImageFilterIUC3ISS3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelOverlayImageFilterIUC3ISS3IRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelOverlayImageFilterIUC3ISS3IRGBUC3 in _itkLabelOverlayImageFilterPython:
_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3ISS3IRGBUC3_swigregister(itkLabelOverlayImageFilterIUC3ISS3IRGBUC3)
itkLabelOverlayImageFilterIUC3ISS3IRGBUC3___New_orig__ = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3ISS3IRGBUC3___New_orig__
itkLabelOverlayImageFilterIUC3ISS3IRGBUC3_cast = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3ISS3IRGBUC3_cast


def itkLabelOverlayImageFilterIUC3IUC3IRGBUC3_New():
    return itkLabelOverlayImageFilterIUC3IUC3IRGBUC3.New()

class itkLabelOverlayImageFilterIUC3IUC3IRGBUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUC3IRGBUC3):
    r"""Proxy of C++ itkLabelOverlayImageFilterIUC3IUC3IRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUC3IRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUC3IRGBUC3_Clone)
    SetLabelImage = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUC3IRGBUC3_SetLabelImage)
    GetLabelImage = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUC3IRGBUC3_GetLabelImage)
    SetOpacity = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUC3IRGBUC3_SetOpacity)
    GetOpacity = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUC3IRGBUC3_GetOpacity)
    SetBackgroundValue = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUC3IRGBUC3_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUC3IRGBUC3_GetBackgroundValue)
    OutputPixelShouldHaveValueType = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUC3IRGBUC3_OutputPixelShouldHaveValueType
    
    OutputPixelShouldHaveBracketOperator = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUC3IRGBUC3_OutputPixelShouldHaveBracketOperator
    
    ResetColors = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUC3IRGBUC3_ResetColors)
    GetNumberOfColors = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUC3IRGBUC3_GetNumberOfColors)
    AddColor = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUC3IRGBUC3_AddColor)
    GetFunctor = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUC3IRGBUC3_GetFunctor)
    __swig_destroy__ = _itkLabelOverlayImageFilterPython.delete_itkLabelOverlayImageFilterIUC3IUC3IRGBUC3
    cast = _swig_new_static_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUC3IRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> itkLabelOverlayImageFilterIUC3IUC3IRGBUC3

        Create a new object of the class itkLabelOverlayImageFilterIUC3IUC3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelOverlayImageFilterIUC3IUC3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelOverlayImageFilterIUC3IUC3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelOverlayImageFilterIUC3IUC3IRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelOverlayImageFilterIUC3IUC3IRGBUC3 in _itkLabelOverlayImageFilterPython:
_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUC3IRGBUC3_swigregister(itkLabelOverlayImageFilterIUC3IUC3IRGBUC3)
itkLabelOverlayImageFilterIUC3IUC3IRGBUC3___New_orig__ = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUC3IRGBUC3___New_orig__
itkLabelOverlayImageFilterIUC3IUC3IRGBUC3_cast = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUC3IRGBUC3_cast


def itkLabelOverlayImageFilterIUC3IUL3IRGBUC3_New():
    return itkLabelOverlayImageFilterIUC3IUL3IRGBUC3.New()

class itkLabelOverlayImageFilterIUC3IUL3IRGBUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUL3IRGBUC3):
    r"""Proxy of C++ itkLabelOverlayImageFilterIUC3IUL3IRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUL3IRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUL3IRGBUC3_Clone)
    SetLabelImage = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUL3IRGBUC3_SetLabelImage)
    GetLabelImage = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUL3IRGBUC3_GetLabelImage)
    SetOpacity = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUL3IRGBUC3_SetOpacity)
    GetOpacity = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUL3IRGBUC3_GetOpacity)
    SetBackgroundValue = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUL3IRGBUC3_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUL3IRGBUC3_GetBackgroundValue)
    OutputPixelShouldHaveValueType = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUL3IRGBUC3_OutputPixelShouldHaveValueType
    
    OutputPixelShouldHaveBracketOperator = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUL3IRGBUC3_OutputPixelShouldHaveBracketOperator
    
    ResetColors = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUL3IRGBUC3_ResetColors)
    GetNumberOfColors = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUL3IRGBUC3_GetNumberOfColors)
    AddColor = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUL3IRGBUC3_AddColor)
    GetFunctor = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUL3IRGBUC3_GetFunctor)
    __swig_destroy__ = _itkLabelOverlayImageFilterPython.delete_itkLabelOverlayImageFilterIUC3IUL3IRGBUC3
    cast = _swig_new_static_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUL3IRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> itkLabelOverlayImageFilterIUC3IUL3IRGBUC3

        Create a new object of the class itkLabelOverlayImageFilterIUC3IUL3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelOverlayImageFilterIUC3IUL3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelOverlayImageFilterIUC3IUL3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelOverlayImageFilterIUC3IUL3IRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelOverlayImageFilterIUC3IUL3IRGBUC3 in _itkLabelOverlayImageFilterPython:
_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUL3IRGBUC3_swigregister(itkLabelOverlayImageFilterIUC3IUL3IRGBUC3)
itkLabelOverlayImageFilterIUC3IUL3IRGBUC3___New_orig__ = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUL3IRGBUC3___New_orig__
itkLabelOverlayImageFilterIUC3IUL3IRGBUC3_cast = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUL3IRGBUC3_cast


def itkLabelOverlayImageFilterIUC3IUS3IRGBUC3_New():
    return itkLabelOverlayImageFilterIUC3IUS3IRGBUC3.New()

class itkLabelOverlayImageFilterIUC3IUS3IRGBUC3(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC3IUS3IRGBUC3):
    r"""Proxy of C++ itkLabelOverlayImageFilterIUC3IUS3IRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUS3IRGBUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUS3IRGBUC3_Clone)
    SetLabelImage = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUS3IRGBUC3_SetLabelImage)
    GetLabelImage = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUS3IRGBUC3_GetLabelImage)
    SetOpacity = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUS3IRGBUC3_SetOpacity)
    GetOpacity = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUS3IRGBUC3_GetOpacity)
    SetBackgroundValue = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUS3IRGBUC3_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUS3IRGBUC3_GetBackgroundValue)
    OutputPixelShouldHaveValueType = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUS3IRGBUC3_OutputPixelShouldHaveValueType
    
    OutputPixelShouldHaveBracketOperator = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUS3IRGBUC3_OutputPixelShouldHaveBracketOperator
    
    ResetColors = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUS3IRGBUC3_ResetColors)
    GetNumberOfColors = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUS3IRGBUC3_GetNumberOfColors)
    AddColor = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUS3IRGBUC3_AddColor)
    GetFunctor = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUS3IRGBUC3_GetFunctor)
    __swig_destroy__ = _itkLabelOverlayImageFilterPython.delete_itkLabelOverlayImageFilterIUC3IUS3IRGBUC3
    cast = _swig_new_static_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUS3IRGBUC3_cast)

    def New(*args, **kargs):
        """New() -> itkLabelOverlayImageFilterIUC3IUS3IRGBUC3

        Create a new object of the class itkLabelOverlayImageFilterIUC3IUS3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelOverlayImageFilterIUC3IUS3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelOverlayImageFilterIUC3IUS3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelOverlayImageFilterIUC3IUS3IRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelOverlayImageFilterIUC3IUS3IRGBUC3 in _itkLabelOverlayImageFilterPython:
_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUS3IRGBUC3_swigregister(itkLabelOverlayImageFilterIUC3IUS3IRGBUC3)
itkLabelOverlayImageFilterIUC3IUS3IRGBUC3___New_orig__ = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUS3IRGBUC3___New_orig__
itkLabelOverlayImageFilterIUC3IUS3IRGBUC3_cast = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC3IUS3IRGBUC3_cast


def itkLabelOverlayImageFilterIUC4ISS4IRGBUC4_New():
    return itkLabelOverlayImageFilterIUC4ISS4IRGBUC4.New()

class itkLabelOverlayImageFilterIUC4ISS4IRGBUC4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC4ISS4IRGBUC4):
    r"""Proxy of C++ itkLabelOverlayImageFilterIUC4ISS4IRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4ISS4IRGBUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4ISS4IRGBUC4_Clone)
    SetLabelImage = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4ISS4IRGBUC4_SetLabelImage)
    GetLabelImage = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4ISS4IRGBUC4_GetLabelImage)
    SetOpacity = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4ISS4IRGBUC4_SetOpacity)
    GetOpacity = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4ISS4IRGBUC4_GetOpacity)
    SetBackgroundValue = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4ISS4IRGBUC4_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4ISS4IRGBUC4_GetBackgroundValue)
    OutputPixelShouldHaveValueType = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4ISS4IRGBUC4_OutputPixelShouldHaveValueType
    
    OutputPixelShouldHaveBracketOperator = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4ISS4IRGBUC4_OutputPixelShouldHaveBracketOperator
    
    ResetColors = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4ISS4IRGBUC4_ResetColors)
    GetNumberOfColors = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4ISS4IRGBUC4_GetNumberOfColors)
    AddColor = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4ISS4IRGBUC4_AddColor)
    GetFunctor = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4ISS4IRGBUC4_GetFunctor)
    __swig_destroy__ = _itkLabelOverlayImageFilterPython.delete_itkLabelOverlayImageFilterIUC4ISS4IRGBUC4
    cast = _swig_new_static_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4ISS4IRGBUC4_cast)

    def New(*args, **kargs):
        """New() -> itkLabelOverlayImageFilterIUC4ISS4IRGBUC4

        Create a new object of the class itkLabelOverlayImageFilterIUC4ISS4IRGBUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelOverlayImageFilterIUC4ISS4IRGBUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelOverlayImageFilterIUC4ISS4IRGBUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelOverlayImageFilterIUC4ISS4IRGBUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelOverlayImageFilterIUC4ISS4IRGBUC4 in _itkLabelOverlayImageFilterPython:
_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4ISS4IRGBUC4_swigregister(itkLabelOverlayImageFilterIUC4ISS4IRGBUC4)
itkLabelOverlayImageFilterIUC4ISS4IRGBUC4___New_orig__ = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4ISS4IRGBUC4___New_orig__
itkLabelOverlayImageFilterIUC4ISS4IRGBUC4_cast = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4ISS4IRGBUC4_cast


def itkLabelOverlayImageFilterIUC4IUC4IRGBUC4_New():
    return itkLabelOverlayImageFilterIUC4IUC4IRGBUC4.New()

class itkLabelOverlayImageFilterIUC4IUC4IRGBUC4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC4IUC4IRGBUC4):
    r"""Proxy of C++ itkLabelOverlayImageFilterIUC4IUC4IRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUC4IRGBUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUC4IRGBUC4_Clone)
    SetLabelImage = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUC4IRGBUC4_SetLabelImage)
    GetLabelImage = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUC4IRGBUC4_GetLabelImage)
    SetOpacity = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUC4IRGBUC4_SetOpacity)
    GetOpacity = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUC4IRGBUC4_GetOpacity)
    SetBackgroundValue = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUC4IRGBUC4_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUC4IRGBUC4_GetBackgroundValue)
    OutputPixelShouldHaveValueType = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUC4IRGBUC4_OutputPixelShouldHaveValueType
    
    OutputPixelShouldHaveBracketOperator = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUC4IRGBUC4_OutputPixelShouldHaveBracketOperator
    
    ResetColors = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUC4IRGBUC4_ResetColors)
    GetNumberOfColors = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUC4IRGBUC4_GetNumberOfColors)
    AddColor = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUC4IRGBUC4_AddColor)
    GetFunctor = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUC4IRGBUC4_GetFunctor)
    __swig_destroy__ = _itkLabelOverlayImageFilterPython.delete_itkLabelOverlayImageFilterIUC4IUC4IRGBUC4
    cast = _swig_new_static_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUC4IRGBUC4_cast)

    def New(*args, **kargs):
        """New() -> itkLabelOverlayImageFilterIUC4IUC4IRGBUC4

        Create a new object of the class itkLabelOverlayImageFilterIUC4IUC4IRGBUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelOverlayImageFilterIUC4IUC4IRGBUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelOverlayImageFilterIUC4IUC4IRGBUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelOverlayImageFilterIUC4IUC4IRGBUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelOverlayImageFilterIUC4IUC4IRGBUC4 in _itkLabelOverlayImageFilterPython:
_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUC4IRGBUC4_swigregister(itkLabelOverlayImageFilterIUC4IUC4IRGBUC4)
itkLabelOverlayImageFilterIUC4IUC4IRGBUC4___New_orig__ = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUC4IRGBUC4___New_orig__
itkLabelOverlayImageFilterIUC4IUC4IRGBUC4_cast = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUC4IRGBUC4_cast


def itkLabelOverlayImageFilterIUC4IUL4IRGBUC4_New():
    return itkLabelOverlayImageFilterIUC4IUL4IRGBUC4.New()

class itkLabelOverlayImageFilterIUC4IUL4IRGBUC4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC4IUL4IRGBUC4):
    r"""Proxy of C++ itkLabelOverlayImageFilterIUC4IUL4IRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUL4IRGBUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUL4IRGBUC4_Clone)
    SetLabelImage = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUL4IRGBUC4_SetLabelImage)
    GetLabelImage = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUL4IRGBUC4_GetLabelImage)
    SetOpacity = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUL4IRGBUC4_SetOpacity)
    GetOpacity = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUL4IRGBUC4_GetOpacity)
    SetBackgroundValue = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUL4IRGBUC4_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUL4IRGBUC4_GetBackgroundValue)
    OutputPixelShouldHaveValueType = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUL4IRGBUC4_OutputPixelShouldHaveValueType
    
    OutputPixelShouldHaveBracketOperator = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUL4IRGBUC4_OutputPixelShouldHaveBracketOperator
    
    ResetColors = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUL4IRGBUC4_ResetColors)
    GetNumberOfColors = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUL4IRGBUC4_GetNumberOfColors)
    AddColor = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUL4IRGBUC4_AddColor)
    GetFunctor = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUL4IRGBUC4_GetFunctor)
    __swig_destroy__ = _itkLabelOverlayImageFilterPython.delete_itkLabelOverlayImageFilterIUC4IUL4IRGBUC4
    cast = _swig_new_static_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUL4IRGBUC4_cast)

    def New(*args, **kargs):
        """New() -> itkLabelOverlayImageFilterIUC4IUL4IRGBUC4

        Create a new object of the class itkLabelOverlayImageFilterIUC4IUL4IRGBUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelOverlayImageFilterIUC4IUL4IRGBUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelOverlayImageFilterIUC4IUL4IRGBUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelOverlayImageFilterIUC4IUL4IRGBUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelOverlayImageFilterIUC4IUL4IRGBUC4 in _itkLabelOverlayImageFilterPython:
_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUL4IRGBUC4_swigregister(itkLabelOverlayImageFilterIUC4IUL4IRGBUC4)
itkLabelOverlayImageFilterIUC4IUL4IRGBUC4___New_orig__ = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUL4IRGBUC4___New_orig__
itkLabelOverlayImageFilterIUC4IUL4IRGBUC4_cast = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUL4IRGBUC4_cast


def itkLabelOverlayImageFilterIUC4IUS4IRGBUC4_New():
    return itkLabelOverlayImageFilterIUC4IUS4IRGBUC4.New()

class itkLabelOverlayImageFilterIUC4IUS4IRGBUC4(itk.itkBinaryGeneratorImageFilterPython.itkBinaryGeneratorImageFilterIUC4IUS4IRGBUC4):
    r"""Proxy of C++ itkLabelOverlayImageFilterIUC4IUS4IRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUS4IRGBUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUS4IRGBUC4_Clone)
    SetLabelImage = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUS4IRGBUC4_SetLabelImage)
    GetLabelImage = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUS4IRGBUC4_GetLabelImage)
    SetOpacity = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUS4IRGBUC4_SetOpacity)
    GetOpacity = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUS4IRGBUC4_GetOpacity)
    SetBackgroundValue = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUS4IRGBUC4_SetBackgroundValue)
    GetBackgroundValue = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUS4IRGBUC4_GetBackgroundValue)
    OutputPixelShouldHaveValueType = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUS4IRGBUC4_OutputPixelShouldHaveValueType
    
    OutputPixelShouldHaveBracketOperator = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUS4IRGBUC4_OutputPixelShouldHaveBracketOperator
    
    ResetColors = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUS4IRGBUC4_ResetColors)
    GetNumberOfColors = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUS4IRGBUC4_GetNumberOfColors)
    AddColor = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUS4IRGBUC4_AddColor)
    GetFunctor = _swig_new_instance_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUS4IRGBUC4_GetFunctor)
    __swig_destroy__ = _itkLabelOverlayImageFilterPython.delete_itkLabelOverlayImageFilterIUC4IUS4IRGBUC4
    cast = _swig_new_static_method(_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUS4IRGBUC4_cast)

    def New(*args, **kargs):
        """New() -> itkLabelOverlayImageFilterIUC4IUS4IRGBUC4

        Create a new object of the class itkLabelOverlayImageFilterIUC4IUS4IRGBUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelOverlayImageFilterIUC4IUS4IRGBUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelOverlayImageFilterIUC4IUS4IRGBUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelOverlayImageFilterIUC4IUS4IRGBUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelOverlayImageFilterIUC4IUS4IRGBUC4 in _itkLabelOverlayImageFilterPython:
_itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUS4IRGBUC4_swigregister(itkLabelOverlayImageFilterIUC4IUS4IRGBUC4)
itkLabelOverlayImageFilterIUC4IUS4IRGBUC4___New_orig__ = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUS4IRGBUC4___New_orig__
itkLabelOverlayImageFilterIUC4IUS4IRGBUC4_cast = _itkLabelOverlayImageFilterPython.itkLabelOverlayImageFilterIUC4IUS4IRGBUC4_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def label_overlay_image_filter(*args: itkt.ImageLike,  label_image: itkt.Image=..., opacity: float=..., background_value: int=..., constant1: int=..., constant2: int=..., constant: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for LabelOverlayImageFilter"""
    import itk

    kwarg_typehints = { 'label_image':label_image,'opacity':opacity,'background_value':background_value,'constant1':constant1,'constant2':constant2,'constant':constant }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.LabelOverlayImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def label_overlay_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageFusion.LabelOverlayImageFilter
    label_overlay_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    label_overlay_image_filter.__doc__ = filter_object.__doc__




