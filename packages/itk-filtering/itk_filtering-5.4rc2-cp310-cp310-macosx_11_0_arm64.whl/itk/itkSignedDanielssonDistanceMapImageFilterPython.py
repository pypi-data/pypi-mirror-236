# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKDistanceMapPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkSignedDanielssonDistanceMapImageFilterPython
else:
    import _itkSignedDanielssonDistanceMapImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkSignedDanielssonDistanceMapImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkSignedDanielssonDistanceMapImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkImageToImageFilterAPython
import itk.itkImageToImageFilterCommonPython
import itk.pyBasePython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_matrixPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkCovariantVectorPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython

def itkSignedDanielssonDistanceMapImageFilterID2ID2_New():
    return itkSignedDanielssonDistanceMapImageFilterID2ID2.New()

class itkSignedDanielssonDistanceMapImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkSignedDanielssonDistanceMapImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2ID2_Clone)
    SetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2ID2_SetSquaredDistance)
    GetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2ID2_GetSquaredDistance)
    SquaredDistanceOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2ID2_SquaredDistanceOn)
    SquaredDistanceOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2ID2_SquaredDistanceOff)
    SetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2ID2_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2ID2_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2ID2_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2ID2_UseImageSpacingOff)
    SetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2ID2_SetInsideIsPositive)
    GetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2ID2_GetInsideIsPositive)
    InsideIsPositiveOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2ID2_InsideIsPositiveOn)
    InsideIsPositiveOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2ID2_InsideIsPositiveOff)
    GetVoronoiMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2ID2_GetVoronoiMap)
    GetDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2ID2_GetDistanceMap)
    GetVectorDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2ID2_GetVectorDistanceMap)
    IntConvertibleToInputCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2ID2_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2ID2_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2ID2_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedDanielssonDistanceMapImageFilterPython.delete_itkSignedDanielssonDistanceMapImageFilterID2ID2
    cast = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkSignedDanielssonDistanceMapImageFilterID2ID2

        Create a new object of the class itkSignedDanielssonDistanceMapImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedDanielssonDistanceMapImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedDanielssonDistanceMapImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedDanielssonDistanceMapImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedDanielssonDistanceMapImageFilterID2ID2 in _itkSignedDanielssonDistanceMapImageFilterPython:
_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2ID2_swigregister(itkSignedDanielssonDistanceMapImageFilterID2ID2)
itkSignedDanielssonDistanceMapImageFilterID2ID2___New_orig__ = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2ID2___New_orig__
itkSignedDanielssonDistanceMapImageFilterID2ID2_cast = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2ID2_cast


def itkSignedDanielssonDistanceMapImageFilterID2IF2_New():
    return itkSignedDanielssonDistanceMapImageFilterID2IF2.New()

class itkSignedDanielssonDistanceMapImageFilterID2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2IF2):
    r"""Proxy of C++ itkSignedDanielssonDistanceMapImageFilterID2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2IF2_Clone)
    SetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2IF2_SetSquaredDistance)
    GetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2IF2_GetSquaredDistance)
    SquaredDistanceOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2IF2_SquaredDistanceOn)
    SquaredDistanceOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2IF2_SquaredDistanceOff)
    SetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2IF2_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2IF2_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2IF2_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2IF2_UseImageSpacingOff)
    SetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2IF2_SetInsideIsPositive)
    GetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2IF2_GetInsideIsPositive)
    InsideIsPositiveOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2IF2_InsideIsPositiveOn)
    InsideIsPositiveOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2IF2_InsideIsPositiveOff)
    GetVoronoiMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2IF2_GetVoronoiMap)
    GetDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2IF2_GetDistanceMap)
    GetVectorDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2IF2_GetVectorDistanceMap)
    IntConvertibleToInputCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2IF2_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2IF2_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2IF2_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedDanielssonDistanceMapImageFilterPython.delete_itkSignedDanielssonDistanceMapImageFilterID2IF2
    cast = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkSignedDanielssonDistanceMapImageFilterID2IF2

        Create a new object of the class itkSignedDanielssonDistanceMapImageFilterID2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedDanielssonDistanceMapImageFilterID2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedDanielssonDistanceMapImageFilterID2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedDanielssonDistanceMapImageFilterID2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedDanielssonDistanceMapImageFilterID2IF2 in _itkSignedDanielssonDistanceMapImageFilterPython:
_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2IF2_swigregister(itkSignedDanielssonDistanceMapImageFilterID2IF2)
itkSignedDanielssonDistanceMapImageFilterID2IF2___New_orig__ = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2IF2___New_orig__
itkSignedDanielssonDistanceMapImageFilterID2IF2_cast = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID2IF2_cast


def itkSignedDanielssonDistanceMapImageFilterID3ID3_New():
    return itkSignedDanielssonDistanceMapImageFilterID3ID3.New()

class itkSignedDanielssonDistanceMapImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkSignedDanielssonDistanceMapImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3ID3_Clone)
    SetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3ID3_SetSquaredDistance)
    GetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3ID3_GetSquaredDistance)
    SquaredDistanceOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3ID3_SquaredDistanceOn)
    SquaredDistanceOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3ID3_SquaredDistanceOff)
    SetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3ID3_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3ID3_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3ID3_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3ID3_UseImageSpacingOff)
    SetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3ID3_SetInsideIsPositive)
    GetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3ID3_GetInsideIsPositive)
    InsideIsPositiveOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3ID3_InsideIsPositiveOn)
    InsideIsPositiveOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3ID3_InsideIsPositiveOff)
    GetVoronoiMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3ID3_GetVoronoiMap)
    GetDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3ID3_GetDistanceMap)
    GetVectorDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3ID3_GetVectorDistanceMap)
    IntConvertibleToInputCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3ID3_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3ID3_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3ID3_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedDanielssonDistanceMapImageFilterPython.delete_itkSignedDanielssonDistanceMapImageFilterID3ID3
    cast = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkSignedDanielssonDistanceMapImageFilterID3ID3

        Create a new object of the class itkSignedDanielssonDistanceMapImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedDanielssonDistanceMapImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedDanielssonDistanceMapImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedDanielssonDistanceMapImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedDanielssonDistanceMapImageFilterID3ID3 in _itkSignedDanielssonDistanceMapImageFilterPython:
_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3ID3_swigregister(itkSignedDanielssonDistanceMapImageFilterID3ID3)
itkSignedDanielssonDistanceMapImageFilterID3ID3___New_orig__ = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3ID3___New_orig__
itkSignedDanielssonDistanceMapImageFilterID3ID3_cast = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3ID3_cast


def itkSignedDanielssonDistanceMapImageFilterID3IF3_New():
    return itkSignedDanielssonDistanceMapImageFilterID3IF3.New()

class itkSignedDanielssonDistanceMapImageFilterID3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3IF3):
    r"""Proxy of C++ itkSignedDanielssonDistanceMapImageFilterID3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3IF3_Clone)
    SetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3IF3_SetSquaredDistance)
    GetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3IF3_GetSquaredDistance)
    SquaredDistanceOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3IF3_SquaredDistanceOn)
    SquaredDistanceOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3IF3_SquaredDistanceOff)
    SetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3IF3_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3IF3_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3IF3_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3IF3_UseImageSpacingOff)
    SetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3IF3_SetInsideIsPositive)
    GetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3IF3_GetInsideIsPositive)
    InsideIsPositiveOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3IF3_InsideIsPositiveOn)
    InsideIsPositiveOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3IF3_InsideIsPositiveOff)
    GetVoronoiMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3IF3_GetVoronoiMap)
    GetDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3IF3_GetDistanceMap)
    GetVectorDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3IF3_GetVectorDistanceMap)
    IntConvertibleToInputCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3IF3_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3IF3_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3IF3_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedDanielssonDistanceMapImageFilterPython.delete_itkSignedDanielssonDistanceMapImageFilterID3IF3
    cast = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkSignedDanielssonDistanceMapImageFilterID3IF3

        Create a new object of the class itkSignedDanielssonDistanceMapImageFilterID3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedDanielssonDistanceMapImageFilterID3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedDanielssonDistanceMapImageFilterID3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedDanielssonDistanceMapImageFilterID3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedDanielssonDistanceMapImageFilterID3IF3 in _itkSignedDanielssonDistanceMapImageFilterPython:
_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3IF3_swigregister(itkSignedDanielssonDistanceMapImageFilterID3IF3)
itkSignedDanielssonDistanceMapImageFilterID3IF3___New_orig__ = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3IF3___New_orig__
itkSignedDanielssonDistanceMapImageFilterID3IF3_cast = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID3IF3_cast


def itkSignedDanielssonDistanceMapImageFilterID4ID4_New():
    return itkSignedDanielssonDistanceMapImageFilterID4ID4.New()

class itkSignedDanielssonDistanceMapImageFilterID4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkSignedDanielssonDistanceMapImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4ID4___New_orig__)
    Clone = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4ID4_Clone)
    SetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4ID4_SetSquaredDistance)
    GetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4ID4_GetSquaredDistance)
    SquaredDistanceOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4ID4_SquaredDistanceOn)
    SquaredDistanceOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4ID4_SquaredDistanceOff)
    SetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4ID4_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4ID4_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4ID4_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4ID4_UseImageSpacingOff)
    SetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4ID4_SetInsideIsPositive)
    GetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4ID4_GetInsideIsPositive)
    InsideIsPositiveOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4ID4_InsideIsPositiveOn)
    InsideIsPositiveOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4ID4_InsideIsPositiveOff)
    GetVoronoiMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4ID4_GetVoronoiMap)
    GetDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4ID4_GetDistanceMap)
    GetVectorDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4ID4_GetVectorDistanceMap)
    IntConvertibleToInputCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4ID4_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4ID4_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4ID4_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedDanielssonDistanceMapImageFilterPython.delete_itkSignedDanielssonDistanceMapImageFilterID4ID4
    cast = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4ID4_cast)

    def New(*args, **kargs):
        """New() -> itkSignedDanielssonDistanceMapImageFilterID4ID4

        Create a new object of the class itkSignedDanielssonDistanceMapImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedDanielssonDistanceMapImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedDanielssonDistanceMapImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedDanielssonDistanceMapImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedDanielssonDistanceMapImageFilterID4ID4 in _itkSignedDanielssonDistanceMapImageFilterPython:
_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4ID4_swigregister(itkSignedDanielssonDistanceMapImageFilterID4ID4)
itkSignedDanielssonDistanceMapImageFilterID4ID4___New_orig__ = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4ID4___New_orig__
itkSignedDanielssonDistanceMapImageFilterID4ID4_cast = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4ID4_cast


def itkSignedDanielssonDistanceMapImageFilterID4IF4_New():
    return itkSignedDanielssonDistanceMapImageFilterID4IF4.New()

class itkSignedDanielssonDistanceMapImageFilterID4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4IF4):
    r"""Proxy of C++ itkSignedDanielssonDistanceMapImageFilterID4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4IF4___New_orig__)
    Clone = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4IF4_Clone)
    SetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4IF4_SetSquaredDistance)
    GetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4IF4_GetSquaredDistance)
    SquaredDistanceOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4IF4_SquaredDistanceOn)
    SquaredDistanceOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4IF4_SquaredDistanceOff)
    SetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4IF4_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4IF4_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4IF4_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4IF4_UseImageSpacingOff)
    SetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4IF4_SetInsideIsPositive)
    GetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4IF4_GetInsideIsPositive)
    InsideIsPositiveOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4IF4_InsideIsPositiveOn)
    InsideIsPositiveOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4IF4_InsideIsPositiveOff)
    GetVoronoiMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4IF4_GetVoronoiMap)
    GetDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4IF4_GetDistanceMap)
    GetVectorDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4IF4_GetVectorDistanceMap)
    IntConvertibleToInputCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4IF4_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4IF4_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4IF4_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedDanielssonDistanceMapImageFilterPython.delete_itkSignedDanielssonDistanceMapImageFilterID4IF4
    cast = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4IF4_cast)

    def New(*args, **kargs):
        """New() -> itkSignedDanielssonDistanceMapImageFilterID4IF4

        Create a new object of the class itkSignedDanielssonDistanceMapImageFilterID4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedDanielssonDistanceMapImageFilterID4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedDanielssonDistanceMapImageFilterID4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedDanielssonDistanceMapImageFilterID4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedDanielssonDistanceMapImageFilterID4IF4 in _itkSignedDanielssonDistanceMapImageFilterPython:
_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4IF4_swigregister(itkSignedDanielssonDistanceMapImageFilterID4IF4)
itkSignedDanielssonDistanceMapImageFilterID4IF4___New_orig__ = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4IF4___New_orig__
itkSignedDanielssonDistanceMapImageFilterID4IF4_cast = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterID4IF4_cast


def itkSignedDanielssonDistanceMapImageFilterIF2ID2_New():
    return itkSignedDanielssonDistanceMapImageFilterIF2ID2.New()

class itkSignedDanielssonDistanceMapImageFilterIF2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2):
    r"""Proxy of C++ itkSignedDanielssonDistanceMapImageFilterIF2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2ID2_Clone)
    SetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2ID2_SetSquaredDistance)
    GetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2ID2_GetSquaredDistance)
    SquaredDistanceOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2ID2_SquaredDistanceOn)
    SquaredDistanceOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2ID2_SquaredDistanceOff)
    SetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2ID2_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2ID2_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2ID2_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2ID2_UseImageSpacingOff)
    SetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2ID2_SetInsideIsPositive)
    GetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2ID2_GetInsideIsPositive)
    InsideIsPositiveOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2ID2_InsideIsPositiveOn)
    InsideIsPositiveOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2ID2_InsideIsPositiveOff)
    GetVoronoiMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2ID2_GetVoronoiMap)
    GetDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2ID2_GetDistanceMap)
    GetVectorDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2ID2_GetVectorDistanceMap)
    IntConvertibleToInputCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2ID2_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2ID2_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2ID2_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedDanielssonDistanceMapImageFilterPython.delete_itkSignedDanielssonDistanceMapImageFilterIF2ID2
    cast = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkSignedDanielssonDistanceMapImageFilterIF2ID2

        Create a new object of the class itkSignedDanielssonDistanceMapImageFilterIF2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedDanielssonDistanceMapImageFilterIF2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedDanielssonDistanceMapImageFilterIF2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedDanielssonDistanceMapImageFilterIF2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedDanielssonDistanceMapImageFilterIF2ID2 in _itkSignedDanielssonDistanceMapImageFilterPython:
_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2ID2_swigregister(itkSignedDanielssonDistanceMapImageFilterIF2ID2)
itkSignedDanielssonDistanceMapImageFilterIF2ID2___New_orig__ = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2ID2___New_orig__
itkSignedDanielssonDistanceMapImageFilterIF2ID2_cast = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2ID2_cast


def itkSignedDanielssonDistanceMapImageFilterIF2IF2_New():
    return itkSignedDanielssonDistanceMapImageFilterIF2IF2.New()

class itkSignedDanielssonDistanceMapImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkSignedDanielssonDistanceMapImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2IF2_Clone)
    SetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2IF2_SetSquaredDistance)
    GetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2IF2_GetSquaredDistance)
    SquaredDistanceOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2IF2_SquaredDistanceOn)
    SquaredDistanceOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2IF2_SquaredDistanceOff)
    SetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2IF2_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2IF2_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2IF2_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2IF2_UseImageSpacingOff)
    SetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2IF2_SetInsideIsPositive)
    GetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2IF2_GetInsideIsPositive)
    InsideIsPositiveOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2IF2_InsideIsPositiveOn)
    InsideIsPositiveOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2IF2_InsideIsPositiveOff)
    GetVoronoiMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2IF2_GetVoronoiMap)
    GetDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2IF2_GetDistanceMap)
    GetVectorDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2IF2_GetVectorDistanceMap)
    IntConvertibleToInputCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2IF2_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2IF2_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2IF2_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedDanielssonDistanceMapImageFilterPython.delete_itkSignedDanielssonDistanceMapImageFilterIF2IF2
    cast = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkSignedDanielssonDistanceMapImageFilterIF2IF2

        Create a new object of the class itkSignedDanielssonDistanceMapImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedDanielssonDistanceMapImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedDanielssonDistanceMapImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedDanielssonDistanceMapImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedDanielssonDistanceMapImageFilterIF2IF2 in _itkSignedDanielssonDistanceMapImageFilterPython:
_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2IF2_swigregister(itkSignedDanielssonDistanceMapImageFilterIF2IF2)
itkSignedDanielssonDistanceMapImageFilterIF2IF2___New_orig__ = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2IF2___New_orig__
itkSignedDanielssonDistanceMapImageFilterIF2IF2_cast = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF2IF2_cast


def itkSignedDanielssonDistanceMapImageFilterIF3ID3_New():
    return itkSignedDanielssonDistanceMapImageFilterIF3ID3.New()

class itkSignedDanielssonDistanceMapImageFilterIF3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3):
    r"""Proxy of C++ itkSignedDanielssonDistanceMapImageFilterIF3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3ID3_Clone)
    SetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3ID3_SetSquaredDistance)
    GetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3ID3_GetSquaredDistance)
    SquaredDistanceOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3ID3_SquaredDistanceOn)
    SquaredDistanceOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3ID3_SquaredDistanceOff)
    SetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3ID3_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3ID3_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3ID3_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3ID3_UseImageSpacingOff)
    SetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3ID3_SetInsideIsPositive)
    GetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3ID3_GetInsideIsPositive)
    InsideIsPositiveOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3ID3_InsideIsPositiveOn)
    InsideIsPositiveOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3ID3_InsideIsPositiveOff)
    GetVoronoiMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3ID3_GetVoronoiMap)
    GetDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3ID3_GetDistanceMap)
    GetVectorDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3ID3_GetVectorDistanceMap)
    IntConvertibleToInputCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3ID3_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3ID3_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3ID3_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedDanielssonDistanceMapImageFilterPython.delete_itkSignedDanielssonDistanceMapImageFilterIF3ID3
    cast = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkSignedDanielssonDistanceMapImageFilterIF3ID3

        Create a new object of the class itkSignedDanielssonDistanceMapImageFilterIF3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedDanielssonDistanceMapImageFilterIF3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedDanielssonDistanceMapImageFilterIF3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedDanielssonDistanceMapImageFilterIF3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedDanielssonDistanceMapImageFilterIF3ID3 in _itkSignedDanielssonDistanceMapImageFilterPython:
_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3ID3_swigregister(itkSignedDanielssonDistanceMapImageFilterIF3ID3)
itkSignedDanielssonDistanceMapImageFilterIF3ID3___New_orig__ = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3ID3___New_orig__
itkSignedDanielssonDistanceMapImageFilterIF3ID3_cast = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3ID3_cast


def itkSignedDanielssonDistanceMapImageFilterIF3IF3_New():
    return itkSignedDanielssonDistanceMapImageFilterIF3IF3.New()

class itkSignedDanielssonDistanceMapImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkSignedDanielssonDistanceMapImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3IF3_Clone)
    SetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3IF3_SetSquaredDistance)
    GetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3IF3_GetSquaredDistance)
    SquaredDistanceOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3IF3_SquaredDistanceOn)
    SquaredDistanceOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3IF3_SquaredDistanceOff)
    SetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3IF3_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3IF3_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3IF3_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3IF3_UseImageSpacingOff)
    SetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3IF3_SetInsideIsPositive)
    GetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3IF3_GetInsideIsPositive)
    InsideIsPositiveOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3IF3_InsideIsPositiveOn)
    InsideIsPositiveOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3IF3_InsideIsPositiveOff)
    GetVoronoiMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3IF3_GetVoronoiMap)
    GetDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3IF3_GetDistanceMap)
    GetVectorDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3IF3_GetVectorDistanceMap)
    IntConvertibleToInputCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3IF3_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3IF3_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3IF3_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedDanielssonDistanceMapImageFilterPython.delete_itkSignedDanielssonDistanceMapImageFilterIF3IF3
    cast = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkSignedDanielssonDistanceMapImageFilterIF3IF3

        Create a new object of the class itkSignedDanielssonDistanceMapImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedDanielssonDistanceMapImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedDanielssonDistanceMapImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedDanielssonDistanceMapImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedDanielssonDistanceMapImageFilterIF3IF3 in _itkSignedDanielssonDistanceMapImageFilterPython:
_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3IF3_swigregister(itkSignedDanielssonDistanceMapImageFilterIF3IF3)
itkSignedDanielssonDistanceMapImageFilterIF3IF3___New_orig__ = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3IF3___New_orig__
itkSignedDanielssonDistanceMapImageFilterIF3IF3_cast = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF3IF3_cast


def itkSignedDanielssonDistanceMapImageFilterIF4ID4_New():
    return itkSignedDanielssonDistanceMapImageFilterIF4ID4.New()

class itkSignedDanielssonDistanceMapImageFilterIF4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4ID4):
    r"""Proxy of C++ itkSignedDanielssonDistanceMapImageFilterIF4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4ID4___New_orig__)
    Clone = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4ID4_Clone)
    SetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4ID4_SetSquaredDistance)
    GetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4ID4_GetSquaredDistance)
    SquaredDistanceOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4ID4_SquaredDistanceOn)
    SquaredDistanceOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4ID4_SquaredDistanceOff)
    SetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4ID4_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4ID4_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4ID4_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4ID4_UseImageSpacingOff)
    SetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4ID4_SetInsideIsPositive)
    GetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4ID4_GetInsideIsPositive)
    InsideIsPositiveOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4ID4_InsideIsPositiveOn)
    InsideIsPositiveOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4ID4_InsideIsPositiveOff)
    GetVoronoiMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4ID4_GetVoronoiMap)
    GetDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4ID4_GetDistanceMap)
    GetVectorDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4ID4_GetVectorDistanceMap)
    IntConvertibleToInputCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4ID4_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4ID4_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4ID4_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedDanielssonDistanceMapImageFilterPython.delete_itkSignedDanielssonDistanceMapImageFilterIF4ID4
    cast = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4ID4_cast)

    def New(*args, **kargs):
        """New() -> itkSignedDanielssonDistanceMapImageFilterIF4ID4

        Create a new object of the class itkSignedDanielssonDistanceMapImageFilterIF4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedDanielssonDistanceMapImageFilterIF4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedDanielssonDistanceMapImageFilterIF4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedDanielssonDistanceMapImageFilterIF4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedDanielssonDistanceMapImageFilterIF4ID4 in _itkSignedDanielssonDistanceMapImageFilterPython:
_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4ID4_swigregister(itkSignedDanielssonDistanceMapImageFilterIF4ID4)
itkSignedDanielssonDistanceMapImageFilterIF4ID4___New_orig__ = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4ID4___New_orig__
itkSignedDanielssonDistanceMapImageFilterIF4ID4_cast = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4ID4_cast


def itkSignedDanielssonDistanceMapImageFilterIF4IF4_New():
    return itkSignedDanielssonDistanceMapImageFilterIF4IF4.New()

class itkSignedDanielssonDistanceMapImageFilterIF4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkSignedDanielssonDistanceMapImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4IF4___New_orig__)
    Clone = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4IF4_Clone)
    SetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4IF4_SetSquaredDistance)
    GetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4IF4_GetSquaredDistance)
    SquaredDistanceOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4IF4_SquaredDistanceOn)
    SquaredDistanceOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4IF4_SquaredDistanceOff)
    SetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4IF4_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4IF4_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4IF4_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4IF4_UseImageSpacingOff)
    SetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4IF4_SetInsideIsPositive)
    GetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4IF4_GetInsideIsPositive)
    InsideIsPositiveOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4IF4_InsideIsPositiveOn)
    InsideIsPositiveOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4IF4_InsideIsPositiveOff)
    GetVoronoiMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4IF4_GetVoronoiMap)
    GetDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4IF4_GetDistanceMap)
    GetVectorDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4IF4_GetVectorDistanceMap)
    IntConvertibleToInputCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4IF4_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4IF4_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4IF4_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedDanielssonDistanceMapImageFilterPython.delete_itkSignedDanielssonDistanceMapImageFilterIF4IF4
    cast = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4IF4_cast)

    def New(*args, **kargs):
        """New() -> itkSignedDanielssonDistanceMapImageFilterIF4IF4

        Create a new object of the class itkSignedDanielssonDistanceMapImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedDanielssonDistanceMapImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedDanielssonDistanceMapImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedDanielssonDistanceMapImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedDanielssonDistanceMapImageFilterIF4IF4 in _itkSignedDanielssonDistanceMapImageFilterPython:
_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4IF4_swigregister(itkSignedDanielssonDistanceMapImageFilterIF4IF4)
itkSignedDanielssonDistanceMapImageFilterIF4IF4___New_orig__ = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4IF4___New_orig__
itkSignedDanielssonDistanceMapImageFilterIF4IF4_cast = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIF4IF4_cast


def itkSignedDanielssonDistanceMapImageFilterISS2ID2_New():
    return itkSignedDanielssonDistanceMapImageFilterISS2ID2.New()

class itkSignedDanielssonDistanceMapImageFilterISS2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ID2):
    r"""Proxy of C++ itkSignedDanielssonDistanceMapImageFilterISS2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2ID2_Clone)
    SetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2ID2_SetSquaredDistance)
    GetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2ID2_GetSquaredDistance)
    SquaredDistanceOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2ID2_SquaredDistanceOn)
    SquaredDistanceOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2ID2_SquaredDistanceOff)
    SetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2ID2_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2ID2_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2ID2_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2ID2_UseImageSpacingOff)
    SetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2ID2_SetInsideIsPositive)
    GetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2ID2_GetInsideIsPositive)
    InsideIsPositiveOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2ID2_InsideIsPositiveOn)
    InsideIsPositiveOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2ID2_InsideIsPositiveOff)
    GetVoronoiMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2ID2_GetVoronoiMap)
    GetDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2ID2_GetDistanceMap)
    GetVectorDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2ID2_GetVectorDistanceMap)
    IntConvertibleToInputCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2ID2_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2ID2_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2ID2_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedDanielssonDistanceMapImageFilterPython.delete_itkSignedDanielssonDistanceMapImageFilterISS2ID2
    cast = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkSignedDanielssonDistanceMapImageFilterISS2ID2

        Create a new object of the class itkSignedDanielssonDistanceMapImageFilterISS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedDanielssonDistanceMapImageFilterISS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedDanielssonDistanceMapImageFilterISS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedDanielssonDistanceMapImageFilterISS2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedDanielssonDistanceMapImageFilterISS2ID2 in _itkSignedDanielssonDistanceMapImageFilterPython:
_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2ID2_swigregister(itkSignedDanielssonDistanceMapImageFilterISS2ID2)
itkSignedDanielssonDistanceMapImageFilterISS2ID2___New_orig__ = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2ID2___New_orig__
itkSignedDanielssonDistanceMapImageFilterISS2ID2_cast = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2ID2_cast


def itkSignedDanielssonDistanceMapImageFilterISS2IF2_New():
    return itkSignedDanielssonDistanceMapImageFilterISS2IF2.New()

class itkSignedDanielssonDistanceMapImageFilterISS2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2IF2):
    r"""Proxy of C++ itkSignedDanielssonDistanceMapImageFilterISS2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2IF2_Clone)
    SetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2IF2_SetSquaredDistance)
    GetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2IF2_GetSquaredDistance)
    SquaredDistanceOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2IF2_SquaredDistanceOn)
    SquaredDistanceOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2IF2_SquaredDistanceOff)
    SetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2IF2_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2IF2_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2IF2_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2IF2_UseImageSpacingOff)
    SetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2IF2_SetInsideIsPositive)
    GetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2IF2_GetInsideIsPositive)
    InsideIsPositiveOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2IF2_InsideIsPositiveOn)
    InsideIsPositiveOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2IF2_InsideIsPositiveOff)
    GetVoronoiMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2IF2_GetVoronoiMap)
    GetDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2IF2_GetDistanceMap)
    GetVectorDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2IF2_GetVectorDistanceMap)
    IntConvertibleToInputCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2IF2_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2IF2_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2IF2_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedDanielssonDistanceMapImageFilterPython.delete_itkSignedDanielssonDistanceMapImageFilterISS2IF2
    cast = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkSignedDanielssonDistanceMapImageFilterISS2IF2

        Create a new object of the class itkSignedDanielssonDistanceMapImageFilterISS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedDanielssonDistanceMapImageFilterISS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedDanielssonDistanceMapImageFilterISS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedDanielssonDistanceMapImageFilterISS2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedDanielssonDistanceMapImageFilterISS2IF2 in _itkSignedDanielssonDistanceMapImageFilterPython:
_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2IF2_swigregister(itkSignedDanielssonDistanceMapImageFilterISS2IF2)
itkSignedDanielssonDistanceMapImageFilterISS2IF2___New_orig__ = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2IF2___New_orig__
itkSignedDanielssonDistanceMapImageFilterISS2IF2_cast = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS2IF2_cast


def itkSignedDanielssonDistanceMapImageFilterISS3ID3_New():
    return itkSignedDanielssonDistanceMapImageFilterISS3ID3.New()

class itkSignedDanielssonDistanceMapImageFilterISS3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ID3):
    r"""Proxy of C++ itkSignedDanielssonDistanceMapImageFilterISS3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3ID3_Clone)
    SetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3ID3_SetSquaredDistance)
    GetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3ID3_GetSquaredDistance)
    SquaredDistanceOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3ID3_SquaredDistanceOn)
    SquaredDistanceOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3ID3_SquaredDistanceOff)
    SetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3ID3_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3ID3_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3ID3_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3ID3_UseImageSpacingOff)
    SetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3ID3_SetInsideIsPositive)
    GetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3ID3_GetInsideIsPositive)
    InsideIsPositiveOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3ID3_InsideIsPositiveOn)
    InsideIsPositiveOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3ID3_InsideIsPositiveOff)
    GetVoronoiMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3ID3_GetVoronoiMap)
    GetDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3ID3_GetDistanceMap)
    GetVectorDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3ID3_GetVectorDistanceMap)
    IntConvertibleToInputCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3ID3_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3ID3_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3ID3_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedDanielssonDistanceMapImageFilterPython.delete_itkSignedDanielssonDistanceMapImageFilterISS3ID3
    cast = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkSignedDanielssonDistanceMapImageFilterISS3ID3

        Create a new object of the class itkSignedDanielssonDistanceMapImageFilterISS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedDanielssonDistanceMapImageFilterISS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedDanielssonDistanceMapImageFilterISS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedDanielssonDistanceMapImageFilterISS3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedDanielssonDistanceMapImageFilterISS3ID3 in _itkSignedDanielssonDistanceMapImageFilterPython:
_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3ID3_swigregister(itkSignedDanielssonDistanceMapImageFilterISS3ID3)
itkSignedDanielssonDistanceMapImageFilterISS3ID3___New_orig__ = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3ID3___New_orig__
itkSignedDanielssonDistanceMapImageFilterISS3ID3_cast = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3ID3_cast


def itkSignedDanielssonDistanceMapImageFilterISS3IF3_New():
    return itkSignedDanielssonDistanceMapImageFilterISS3IF3.New()

class itkSignedDanielssonDistanceMapImageFilterISS3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3IF3):
    r"""Proxy of C++ itkSignedDanielssonDistanceMapImageFilterISS3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3IF3_Clone)
    SetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3IF3_SetSquaredDistance)
    GetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3IF3_GetSquaredDistance)
    SquaredDistanceOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3IF3_SquaredDistanceOn)
    SquaredDistanceOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3IF3_SquaredDistanceOff)
    SetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3IF3_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3IF3_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3IF3_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3IF3_UseImageSpacingOff)
    SetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3IF3_SetInsideIsPositive)
    GetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3IF3_GetInsideIsPositive)
    InsideIsPositiveOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3IF3_InsideIsPositiveOn)
    InsideIsPositiveOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3IF3_InsideIsPositiveOff)
    GetVoronoiMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3IF3_GetVoronoiMap)
    GetDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3IF3_GetDistanceMap)
    GetVectorDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3IF3_GetVectorDistanceMap)
    IntConvertibleToInputCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3IF3_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3IF3_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3IF3_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedDanielssonDistanceMapImageFilterPython.delete_itkSignedDanielssonDistanceMapImageFilterISS3IF3
    cast = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkSignedDanielssonDistanceMapImageFilterISS3IF3

        Create a new object of the class itkSignedDanielssonDistanceMapImageFilterISS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedDanielssonDistanceMapImageFilterISS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedDanielssonDistanceMapImageFilterISS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedDanielssonDistanceMapImageFilterISS3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedDanielssonDistanceMapImageFilterISS3IF3 in _itkSignedDanielssonDistanceMapImageFilterPython:
_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3IF3_swigregister(itkSignedDanielssonDistanceMapImageFilterISS3IF3)
itkSignedDanielssonDistanceMapImageFilterISS3IF3___New_orig__ = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3IF3___New_orig__
itkSignedDanielssonDistanceMapImageFilterISS3IF3_cast = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS3IF3_cast


def itkSignedDanielssonDistanceMapImageFilterISS4ID4_New():
    return itkSignedDanielssonDistanceMapImageFilterISS4ID4.New()

class itkSignedDanielssonDistanceMapImageFilterISS4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ID4):
    r"""Proxy of C++ itkSignedDanielssonDistanceMapImageFilterISS4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4ID4___New_orig__)
    Clone = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4ID4_Clone)
    SetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4ID4_SetSquaredDistance)
    GetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4ID4_GetSquaredDistance)
    SquaredDistanceOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4ID4_SquaredDistanceOn)
    SquaredDistanceOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4ID4_SquaredDistanceOff)
    SetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4ID4_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4ID4_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4ID4_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4ID4_UseImageSpacingOff)
    SetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4ID4_SetInsideIsPositive)
    GetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4ID4_GetInsideIsPositive)
    InsideIsPositiveOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4ID4_InsideIsPositiveOn)
    InsideIsPositiveOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4ID4_InsideIsPositiveOff)
    GetVoronoiMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4ID4_GetVoronoiMap)
    GetDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4ID4_GetDistanceMap)
    GetVectorDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4ID4_GetVectorDistanceMap)
    IntConvertibleToInputCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4ID4_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4ID4_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4ID4_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedDanielssonDistanceMapImageFilterPython.delete_itkSignedDanielssonDistanceMapImageFilterISS4ID4
    cast = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4ID4_cast)

    def New(*args, **kargs):
        """New() -> itkSignedDanielssonDistanceMapImageFilterISS4ID4

        Create a new object of the class itkSignedDanielssonDistanceMapImageFilterISS4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedDanielssonDistanceMapImageFilterISS4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedDanielssonDistanceMapImageFilterISS4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedDanielssonDistanceMapImageFilterISS4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedDanielssonDistanceMapImageFilterISS4ID4 in _itkSignedDanielssonDistanceMapImageFilterPython:
_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4ID4_swigregister(itkSignedDanielssonDistanceMapImageFilterISS4ID4)
itkSignedDanielssonDistanceMapImageFilterISS4ID4___New_orig__ = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4ID4___New_orig__
itkSignedDanielssonDistanceMapImageFilterISS4ID4_cast = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4ID4_cast


def itkSignedDanielssonDistanceMapImageFilterISS4IF4_New():
    return itkSignedDanielssonDistanceMapImageFilterISS4IF4.New()

class itkSignedDanielssonDistanceMapImageFilterISS4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4IF4):
    r"""Proxy of C++ itkSignedDanielssonDistanceMapImageFilterISS4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4IF4___New_orig__)
    Clone = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4IF4_Clone)
    SetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4IF4_SetSquaredDistance)
    GetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4IF4_GetSquaredDistance)
    SquaredDistanceOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4IF4_SquaredDistanceOn)
    SquaredDistanceOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4IF4_SquaredDistanceOff)
    SetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4IF4_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4IF4_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4IF4_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4IF4_UseImageSpacingOff)
    SetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4IF4_SetInsideIsPositive)
    GetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4IF4_GetInsideIsPositive)
    InsideIsPositiveOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4IF4_InsideIsPositiveOn)
    InsideIsPositiveOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4IF4_InsideIsPositiveOff)
    GetVoronoiMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4IF4_GetVoronoiMap)
    GetDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4IF4_GetDistanceMap)
    GetVectorDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4IF4_GetVectorDistanceMap)
    IntConvertibleToInputCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4IF4_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4IF4_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4IF4_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedDanielssonDistanceMapImageFilterPython.delete_itkSignedDanielssonDistanceMapImageFilterISS4IF4
    cast = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4IF4_cast)

    def New(*args, **kargs):
        """New() -> itkSignedDanielssonDistanceMapImageFilterISS4IF4

        Create a new object of the class itkSignedDanielssonDistanceMapImageFilterISS4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedDanielssonDistanceMapImageFilterISS4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedDanielssonDistanceMapImageFilterISS4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedDanielssonDistanceMapImageFilterISS4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedDanielssonDistanceMapImageFilterISS4IF4 in _itkSignedDanielssonDistanceMapImageFilterPython:
_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4IF4_swigregister(itkSignedDanielssonDistanceMapImageFilterISS4IF4)
itkSignedDanielssonDistanceMapImageFilterISS4IF4___New_orig__ = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4IF4___New_orig__
itkSignedDanielssonDistanceMapImageFilterISS4IF4_cast = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterISS4IF4_cast


def itkSignedDanielssonDistanceMapImageFilterIUC2ID2_New():
    return itkSignedDanielssonDistanceMapImageFilterIUC2ID2.New()

class itkSignedDanielssonDistanceMapImageFilterIUC2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2):
    r"""Proxy of C++ itkSignedDanielssonDistanceMapImageFilterIUC2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2ID2_Clone)
    SetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2ID2_SetSquaredDistance)
    GetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2ID2_GetSquaredDistance)
    SquaredDistanceOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2ID2_SquaredDistanceOn)
    SquaredDistanceOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2ID2_SquaredDistanceOff)
    SetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2ID2_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2ID2_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2ID2_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2ID2_UseImageSpacingOff)
    SetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2ID2_SetInsideIsPositive)
    GetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2ID2_GetInsideIsPositive)
    InsideIsPositiveOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2ID2_InsideIsPositiveOn)
    InsideIsPositiveOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2ID2_InsideIsPositiveOff)
    GetVoronoiMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2ID2_GetVoronoiMap)
    GetDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2ID2_GetDistanceMap)
    GetVectorDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2ID2_GetVectorDistanceMap)
    IntConvertibleToInputCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2ID2_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2ID2_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2ID2_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedDanielssonDistanceMapImageFilterPython.delete_itkSignedDanielssonDistanceMapImageFilterIUC2ID2
    cast = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkSignedDanielssonDistanceMapImageFilterIUC2ID2

        Create a new object of the class itkSignedDanielssonDistanceMapImageFilterIUC2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedDanielssonDistanceMapImageFilterIUC2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedDanielssonDistanceMapImageFilterIUC2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedDanielssonDistanceMapImageFilterIUC2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedDanielssonDistanceMapImageFilterIUC2ID2 in _itkSignedDanielssonDistanceMapImageFilterPython:
_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2ID2_swigregister(itkSignedDanielssonDistanceMapImageFilterIUC2ID2)
itkSignedDanielssonDistanceMapImageFilterIUC2ID2___New_orig__ = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2ID2___New_orig__
itkSignedDanielssonDistanceMapImageFilterIUC2ID2_cast = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2ID2_cast


def itkSignedDanielssonDistanceMapImageFilterIUC2IF2_New():
    return itkSignedDanielssonDistanceMapImageFilterIUC2IF2.New()

class itkSignedDanielssonDistanceMapImageFilterIUC2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2):
    r"""Proxy of C++ itkSignedDanielssonDistanceMapImageFilterIUC2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2IF2_Clone)
    SetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2IF2_SetSquaredDistance)
    GetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2IF2_GetSquaredDistance)
    SquaredDistanceOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2IF2_SquaredDistanceOn)
    SquaredDistanceOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2IF2_SquaredDistanceOff)
    SetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2IF2_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2IF2_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2IF2_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2IF2_UseImageSpacingOff)
    SetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2IF2_SetInsideIsPositive)
    GetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2IF2_GetInsideIsPositive)
    InsideIsPositiveOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2IF2_InsideIsPositiveOn)
    InsideIsPositiveOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2IF2_InsideIsPositiveOff)
    GetVoronoiMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2IF2_GetVoronoiMap)
    GetDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2IF2_GetDistanceMap)
    GetVectorDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2IF2_GetVectorDistanceMap)
    IntConvertibleToInputCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2IF2_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2IF2_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2IF2_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedDanielssonDistanceMapImageFilterPython.delete_itkSignedDanielssonDistanceMapImageFilterIUC2IF2
    cast = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkSignedDanielssonDistanceMapImageFilterIUC2IF2

        Create a new object of the class itkSignedDanielssonDistanceMapImageFilterIUC2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedDanielssonDistanceMapImageFilterIUC2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedDanielssonDistanceMapImageFilterIUC2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedDanielssonDistanceMapImageFilterIUC2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedDanielssonDistanceMapImageFilterIUC2IF2 in _itkSignedDanielssonDistanceMapImageFilterPython:
_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2IF2_swigregister(itkSignedDanielssonDistanceMapImageFilterIUC2IF2)
itkSignedDanielssonDistanceMapImageFilterIUC2IF2___New_orig__ = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2IF2___New_orig__
itkSignedDanielssonDistanceMapImageFilterIUC2IF2_cast = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC2IF2_cast


def itkSignedDanielssonDistanceMapImageFilterIUC3ID3_New():
    return itkSignedDanielssonDistanceMapImageFilterIUC3ID3.New()

class itkSignedDanielssonDistanceMapImageFilterIUC3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3):
    r"""Proxy of C++ itkSignedDanielssonDistanceMapImageFilterIUC3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3ID3_Clone)
    SetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3ID3_SetSquaredDistance)
    GetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3ID3_GetSquaredDistance)
    SquaredDistanceOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3ID3_SquaredDistanceOn)
    SquaredDistanceOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3ID3_SquaredDistanceOff)
    SetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3ID3_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3ID3_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3ID3_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3ID3_UseImageSpacingOff)
    SetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3ID3_SetInsideIsPositive)
    GetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3ID3_GetInsideIsPositive)
    InsideIsPositiveOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3ID3_InsideIsPositiveOn)
    InsideIsPositiveOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3ID3_InsideIsPositiveOff)
    GetVoronoiMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3ID3_GetVoronoiMap)
    GetDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3ID3_GetDistanceMap)
    GetVectorDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3ID3_GetVectorDistanceMap)
    IntConvertibleToInputCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3ID3_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3ID3_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3ID3_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedDanielssonDistanceMapImageFilterPython.delete_itkSignedDanielssonDistanceMapImageFilterIUC3ID3
    cast = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkSignedDanielssonDistanceMapImageFilterIUC3ID3

        Create a new object of the class itkSignedDanielssonDistanceMapImageFilterIUC3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedDanielssonDistanceMapImageFilterIUC3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedDanielssonDistanceMapImageFilterIUC3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedDanielssonDistanceMapImageFilterIUC3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedDanielssonDistanceMapImageFilterIUC3ID3 in _itkSignedDanielssonDistanceMapImageFilterPython:
_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3ID3_swigregister(itkSignedDanielssonDistanceMapImageFilterIUC3ID3)
itkSignedDanielssonDistanceMapImageFilterIUC3ID3___New_orig__ = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3ID3___New_orig__
itkSignedDanielssonDistanceMapImageFilterIUC3ID3_cast = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3ID3_cast


def itkSignedDanielssonDistanceMapImageFilterIUC3IF3_New():
    return itkSignedDanielssonDistanceMapImageFilterIUC3IF3.New()

class itkSignedDanielssonDistanceMapImageFilterIUC3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3):
    r"""Proxy of C++ itkSignedDanielssonDistanceMapImageFilterIUC3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3IF3_Clone)
    SetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3IF3_SetSquaredDistance)
    GetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3IF3_GetSquaredDistance)
    SquaredDistanceOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3IF3_SquaredDistanceOn)
    SquaredDistanceOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3IF3_SquaredDistanceOff)
    SetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3IF3_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3IF3_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3IF3_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3IF3_UseImageSpacingOff)
    SetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3IF3_SetInsideIsPositive)
    GetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3IF3_GetInsideIsPositive)
    InsideIsPositiveOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3IF3_InsideIsPositiveOn)
    InsideIsPositiveOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3IF3_InsideIsPositiveOff)
    GetVoronoiMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3IF3_GetVoronoiMap)
    GetDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3IF3_GetDistanceMap)
    GetVectorDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3IF3_GetVectorDistanceMap)
    IntConvertibleToInputCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3IF3_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3IF3_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3IF3_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedDanielssonDistanceMapImageFilterPython.delete_itkSignedDanielssonDistanceMapImageFilterIUC3IF3
    cast = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkSignedDanielssonDistanceMapImageFilterIUC3IF3

        Create a new object of the class itkSignedDanielssonDistanceMapImageFilterIUC3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedDanielssonDistanceMapImageFilterIUC3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedDanielssonDistanceMapImageFilterIUC3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedDanielssonDistanceMapImageFilterIUC3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedDanielssonDistanceMapImageFilterIUC3IF3 in _itkSignedDanielssonDistanceMapImageFilterPython:
_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3IF3_swigregister(itkSignedDanielssonDistanceMapImageFilterIUC3IF3)
itkSignedDanielssonDistanceMapImageFilterIUC3IF3___New_orig__ = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3IF3___New_orig__
itkSignedDanielssonDistanceMapImageFilterIUC3IF3_cast = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC3IF3_cast


def itkSignedDanielssonDistanceMapImageFilterIUC4ID4_New():
    return itkSignedDanielssonDistanceMapImageFilterIUC4ID4.New()

class itkSignedDanielssonDistanceMapImageFilterIUC4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4ID4):
    r"""Proxy of C++ itkSignedDanielssonDistanceMapImageFilterIUC4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4ID4___New_orig__)
    Clone = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4ID4_Clone)
    SetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4ID4_SetSquaredDistance)
    GetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4ID4_GetSquaredDistance)
    SquaredDistanceOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4ID4_SquaredDistanceOn)
    SquaredDistanceOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4ID4_SquaredDistanceOff)
    SetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4ID4_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4ID4_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4ID4_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4ID4_UseImageSpacingOff)
    SetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4ID4_SetInsideIsPositive)
    GetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4ID4_GetInsideIsPositive)
    InsideIsPositiveOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4ID4_InsideIsPositiveOn)
    InsideIsPositiveOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4ID4_InsideIsPositiveOff)
    GetVoronoiMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4ID4_GetVoronoiMap)
    GetDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4ID4_GetDistanceMap)
    GetVectorDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4ID4_GetVectorDistanceMap)
    IntConvertibleToInputCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4ID4_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4ID4_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4ID4_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedDanielssonDistanceMapImageFilterPython.delete_itkSignedDanielssonDistanceMapImageFilterIUC4ID4
    cast = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4ID4_cast)

    def New(*args, **kargs):
        """New() -> itkSignedDanielssonDistanceMapImageFilterIUC4ID4

        Create a new object of the class itkSignedDanielssonDistanceMapImageFilterIUC4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedDanielssonDistanceMapImageFilterIUC4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedDanielssonDistanceMapImageFilterIUC4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedDanielssonDistanceMapImageFilterIUC4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedDanielssonDistanceMapImageFilterIUC4ID4 in _itkSignedDanielssonDistanceMapImageFilterPython:
_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4ID4_swigregister(itkSignedDanielssonDistanceMapImageFilterIUC4ID4)
itkSignedDanielssonDistanceMapImageFilterIUC4ID4___New_orig__ = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4ID4___New_orig__
itkSignedDanielssonDistanceMapImageFilterIUC4ID4_cast = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4ID4_cast


def itkSignedDanielssonDistanceMapImageFilterIUC4IF4_New():
    return itkSignedDanielssonDistanceMapImageFilterIUC4IF4.New()

class itkSignedDanielssonDistanceMapImageFilterIUC4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IF4):
    r"""Proxy of C++ itkSignedDanielssonDistanceMapImageFilterIUC4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4IF4___New_orig__)
    Clone = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4IF4_Clone)
    SetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4IF4_SetSquaredDistance)
    GetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4IF4_GetSquaredDistance)
    SquaredDistanceOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4IF4_SquaredDistanceOn)
    SquaredDistanceOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4IF4_SquaredDistanceOff)
    SetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4IF4_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4IF4_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4IF4_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4IF4_UseImageSpacingOff)
    SetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4IF4_SetInsideIsPositive)
    GetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4IF4_GetInsideIsPositive)
    InsideIsPositiveOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4IF4_InsideIsPositiveOn)
    InsideIsPositiveOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4IF4_InsideIsPositiveOff)
    GetVoronoiMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4IF4_GetVoronoiMap)
    GetDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4IF4_GetDistanceMap)
    GetVectorDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4IF4_GetVectorDistanceMap)
    IntConvertibleToInputCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4IF4_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4IF4_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4IF4_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedDanielssonDistanceMapImageFilterPython.delete_itkSignedDanielssonDistanceMapImageFilterIUC4IF4
    cast = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4IF4_cast)

    def New(*args, **kargs):
        """New() -> itkSignedDanielssonDistanceMapImageFilterIUC4IF4

        Create a new object of the class itkSignedDanielssonDistanceMapImageFilterIUC4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedDanielssonDistanceMapImageFilterIUC4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedDanielssonDistanceMapImageFilterIUC4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedDanielssonDistanceMapImageFilterIUC4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedDanielssonDistanceMapImageFilterIUC4IF4 in _itkSignedDanielssonDistanceMapImageFilterPython:
_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4IF4_swigregister(itkSignedDanielssonDistanceMapImageFilterIUC4IF4)
itkSignedDanielssonDistanceMapImageFilterIUC4IF4___New_orig__ = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4IF4___New_orig__
itkSignedDanielssonDistanceMapImageFilterIUC4IF4_cast = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUC4IF4_cast


def itkSignedDanielssonDistanceMapImageFilterIUS2ID2_New():
    return itkSignedDanielssonDistanceMapImageFilterIUS2ID2.New()

class itkSignedDanielssonDistanceMapImageFilterIUS2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2):
    r"""Proxy of C++ itkSignedDanielssonDistanceMapImageFilterIUS2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2ID2_Clone)
    SetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2ID2_SetSquaredDistance)
    GetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2ID2_GetSquaredDistance)
    SquaredDistanceOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2ID2_SquaredDistanceOn)
    SquaredDistanceOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2ID2_SquaredDistanceOff)
    SetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2ID2_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2ID2_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2ID2_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2ID2_UseImageSpacingOff)
    SetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2ID2_SetInsideIsPositive)
    GetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2ID2_GetInsideIsPositive)
    InsideIsPositiveOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2ID2_InsideIsPositiveOn)
    InsideIsPositiveOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2ID2_InsideIsPositiveOff)
    GetVoronoiMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2ID2_GetVoronoiMap)
    GetDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2ID2_GetDistanceMap)
    GetVectorDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2ID2_GetVectorDistanceMap)
    IntConvertibleToInputCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2ID2_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2ID2_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2ID2_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedDanielssonDistanceMapImageFilterPython.delete_itkSignedDanielssonDistanceMapImageFilterIUS2ID2
    cast = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkSignedDanielssonDistanceMapImageFilterIUS2ID2

        Create a new object of the class itkSignedDanielssonDistanceMapImageFilterIUS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedDanielssonDistanceMapImageFilterIUS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedDanielssonDistanceMapImageFilterIUS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedDanielssonDistanceMapImageFilterIUS2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedDanielssonDistanceMapImageFilterIUS2ID2 in _itkSignedDanielssonDistanceMapImageFilterPython:
_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2ID2_swigregister(itkSignedDanielssonDistanceMapImageFilterIUS2ID2)
itkSignedDanielssonDistanceMapImageFilterIUS2ID2___New_orig__ = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2ID2___New_orig__
itkSignedDanielssonDistanceMapImageFilterIUS2ID2_cast = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2ID2_cast


def itkSignedDanielssonDistanceMapImageFilterIUS2IF2_New():
    return itkSignedDanielssonDistanceMapImageFilterIUS2IF2.New()

class itkSignedDanielssonDistanceMapImageFilterIUS2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2):
    r"""Proxy of C++ itkSignedDanielssonDistanceMapImageFilterIUS2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2IF2_Clone)
    SetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2IF2_SetSquaredDistance)
    GetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2IF2_GetSquaredDistance)
    SquaredDistanceOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2IF2_SquaredDistanceOn)
    SquaredDistanceOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2IF2_SquaredDistanceOff)
    SetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2IF2_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2IF2_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2IF2_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2IF2_UseImageSpacingOff)
    SetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2IF2_SetInsideIsPositive)
    GetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2IF2_GetInsideIsPositive)
    InsideIsPositiveOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2IF2_InsideIsPositiveOn)
    InsideIsPositiveOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2IF2_InsideIsPositiveOff)
    GetVoronoiMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2IF2_GetVoronoiMap)
    GetDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2IF2_GetDistanceMap)
    GetVectorDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2IF2_GetVectorDistanceMap)
    IntConvertibleToInputCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2IF2_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2IF2_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2IF2_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedDanielssonDistanceMapImageFilterPython.delete_itkSignedDanielssonDistanceMapImageFilterIUS2IF2
    cast = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkSignedDanielssonDistanceMapImageFilterIUS2IF2

        Create a new object of the class itkSignedDanielssonDistanceMapImageFilterIUS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedDanielssonDistanceMapImageFilterIUS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedDanielssonDistanceMapImageFilterIUS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedDanielssonDistanceMapImageFilterIUS2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedDanielssonDistanceMapImageFilterIUS2IF2 in _itkSignedDanielssonDistanceMapImageFilterPython:
_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2IF2_swigregister(itkSignedDanielssonDistanceMapImageFilterIUS2IF2)
itkSignedDanielssonDistanceMapImageFilterIUS2IF2___New_orig__ = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2IF2___New_orig__
itkSignedDanielssonDistanceMapImageFilterIUS2IF2_cast = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS2IF2_cast


def itkSignedDanielssonDistanceMapImageFilterIUS3ID3_New():
    return itkSignedDanielssonDistanceMapImageFilterIUS3ID3.New()

class itkSignedDanielssonDistanceMapImageFilterIUS3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3):
    r"""Proxy of C++ itkSignedDanielssonDistanceMapImageFilterIUS3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3ID3_Clone)
    SetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3ID3_SetSquaredDistance)
    GetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3ID3_GetSquaredDistance)
    SquaredDistanceOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3ID3_SquaredDistanceOn)
    SquaredDistanceOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3ID3_SquaredDistanceOff)
    SetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3ID3_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3ID3_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3ID3_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3ID3_UseImageSpacingOff)
    SetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3ID3_SetInsideIsPositive)
    GetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3ID3_GetInsideIsPositive)
    InsideIsPositiveOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3ID3_InsideIsPositiveOn)
    InsideIsPositiveOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3ID3_InsideIsPositiveOff)
    GetVoronoiMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3ID3_GetVoronoiMap)
    GetDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3ID3_GetDistanceMap)
    GetVectorDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3ID3_GetVectorDistanceMap)
    IntConvertibleToInputCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3ID3_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3ID3_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3ID3_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedDanielssonDistanceMapImageFilterPython.delete_itkSignedDanielssonDistanceMapImageFilterIUS3ID3
    cast = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkSignedDanielssonDistanceMapImageFilterIUS3ID3

        Create a new object of the class itkSignedDanielssonDistanceMapImageFilterIUS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedDanielssonDistanceMapImageFilterIUS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedDanielssonDistanceMapImageFilterIUS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedDanielssonDistanceMapImageFilterIUS3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedDanielssonDistanceMapImageFilterIUS3ID3 in _itkSignedDanielssonDistanceMapImageFilterPython:
_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3ID3_swigregister(itkSignedDanielssonDistanceMapImageFilterIUS3ID3)
itkSignedDanielssonDistanceMapImageFilterIUS3ID3___New_orig__ = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3ID3___New_orig__
itkSignedDanielssonDistanceMapImageFilterIUS3ID3_cast = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3ID3_cast


def itkSignedDanielssonDistanceMapImageFilterIUS3IF3_New():
    return itkSignedDanielssonDistanceMapImageFilterIUS3IF3.New()

class itkSignedDanielssonDistanceMapImageFilterIUS3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3):
    r"""Proxy of C++ itkSignedDanielssonDistanceMapImageFilterIUS3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3IF3_Clone)
    SetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3IF3_SetSquaredDistance)
    GetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3IF3_GetSquaredDistance)
    SquaredDistanceOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3IF3_SquaredDistanceOn)
    SquaredDistanceOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3IF3_SquaredDistanceOff)
    SetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3IF3_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3IF3_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3IF3_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3IF3_UseImageSpacingOff)
    SetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3IF3_SetInsideIsPositive)
    GetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3IF3_GetInsideIsPositive)
    InsideIsPositiveOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3IF3_InsideIsPositiveOn)
    InsideIsPositiveOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3IF3_InsideIsPositiveOff)
    GetVoronoiMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3IF3_GetVoronoiMap)
    GetDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3IF3_GetDistanceMap)
    GetVectorDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3IF3_GetVectorDistanceMap)
    IntConvertibleToInputCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3IF3_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3IF3_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3IF3_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedDanielssonDistanceMapImageFilterPython.delete_itkSignedDanielssonDistanceMapImageFilterIUS3IF3
    cast = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkSignedDanielssonDistanceMapImageFilterIUS3IF3

        Create a new object of the class itkSignedDanielssonDistanceMapImageFilterIUS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedDanielssonDistanceMapImageFilterIUS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedDanielssonDistanceMapImageFilterIUS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedDanielssonDistanceMapImageFilterIUS3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedDanielssonDistanceMapImageFilterIUS3IF3 in _itkSignedDanielssonDistanceMapImageFilterPython:
_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3IF3_swigregister(itkSignedDanielssonDistanceMapImageFilterIUS3IF3)
itkSignedDanielssonDistanceMapImageFilterIUS3IF3___New_orig__ = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3IF3___New_orig__
itkSignedDanielssonDistanceMapImageFilterIUS3IF3_cast = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS3IF3_cast


def itkSignedDanielssonDistanceMapImageFilterIUS4ID4_New():
    return itkSignedDanielssonDistanceMapImageFilterIUS4ID4.New()

class itkSignedDanielssonDistanceMapImageFilterIUS4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4ID4):
    r"""Proxy of C++ itkSignedDanielssonDistanceMapImageFilterIUS4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4ID4___New_orig__)
    Clone = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4ID4_Clone)
    SetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4ID4_SetSquaredDistance)
    GetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4ID4_GetSquaredDistance)
    SquaredDistanceOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4ID4_SquaredDistanceOn)
    SquaredDistanceOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4ID4_SquaredDistanceOff)
    SetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4ID4_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4ID4_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4ID4_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4ID4_UseImageSpacingOff)
    SetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4ID4_SetInsideIsPositive)
    GetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4ID4_GetInsideIsPositive)
    InsideIsPositiveOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4ID4_InsideIsPositiveOn)
    InsideIsPositiveOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4ID4_InsideIsPositiveOff)
    GetVoronoiMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4ID4_GetVoronoiMap)
    GetDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4ID4_GetDistanceMap)
    GetVectorDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4ID4_GetVectorDistanceMap)
    IntConvertibleToInputCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4ID4_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4ID4_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4ID4_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedDanielssonDistanceMapImageFilterPython.delete_itkSignedDanielssonDistanceMapImageFilterIUS4ID4
    cast = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4ID4_cast)

    def New(*args, **kargs):
        """New() -> itkSignedDanielssonDistanceMapImageFilterIUS4ID4

        Create a new object of the class itkSignedDanielssonDistanceMapImageFilterIUS4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedDanielssonDistanceMapImageFilterIUS4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedDanielssonDistanceMapImageFilterIUS4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedDanielssonDistanceMapImageFilterIUS4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedDanielssonDistanceMapImageFilterIUS4ID4 in _itkSignedDanielssonDistanceMapImageFilterPython:
_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4ID4_swigregister(itkSignedDanielssonDistanceMapImageFilterIUS4ID4)
itkSignedDanielssonDistanceMapImageFilterIUS4ID4___New_orig__ = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4ID4___New_orig__
itkSignedDanielssonDistanceMapImageFilterIUS4ID4_cast = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4ID4_cast


def itkSignedDanielssonDistanceMapImageFilterIUS4IF4_New():
    return itkSignedDanielssonDistanceMapImageFilterIUS4IF4.New()

class itkSignedDanielssonDistanceMapImageFilterIUS4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IF4):
    r"""Proxy of C++ itkSignedDanielssonDistanceMapImageFilterIUS4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4IF4___New_orig__)
    Clone = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4IF4_Clone)
    SetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4IF4_SetSquaredDistance)
    GetSquaredDistance = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4IF4_GetSquaredDistance)
    SquaredDistanceOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4IF4_SquaredDistanceOn)
    SquaredDistanceOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4IF4_SquaredDistanceOff)
    SetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4IF4_SetUseImageSpacing)
    GetUseImageSpacing = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4IF4_GetUseImageSpacing)
    UseImageSpacingOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4IF4_UseImageSpacingOn)
    UseImageSpacingOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4IF4_UseImageSpacingOff)
    SetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4IF4_SetInsideIsPositive)
    GetInsideIsPositive = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4IF4_GetInsideIsPositive)
    InsideIsPositiveOn = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4IF4_InsideIsPositiveOn)
    InsideIsPositiveOff = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4IF4_InsideIsPositiveOff)
    GetVoronoiMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4IF4_GetVoronoiMap)
    GetDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4IF4_GetDistanceMap)
    GetVectorDistanceMap = _swig_new_instance_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4IF4_GetVectorDistanceMap)
    IntConvertibleToInputCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4IF4_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4IF4_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4IF4_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedDanielssonDistanceMapImageFilterPython.delete_itkSignedDanielssonDistanceMapImageFilterIUS4IF4
    cast = _swig_new_static_method(_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4IF4_cast)

    def New(*args, **kargs):
        """New() -> itkSignedDanielssonDistanceMapImageFilterIUS4IF4

        Create a new object of the class itkSignedDanielssonDistanceMapImageFilterIUS4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedDanielssonDistanceMapImageFilterIUS4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedDanielssonDistanceMapImageFilterIUS4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedDanielssonDistanceMapImageFilterIUS4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedDanielssonDistanceMapImageFilterIUS4IF4 in _itkSignedDanielssonDistanceMapImageFilterPython:
_itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4IF4_swigregister(itkSignedDanielssonDistanceMapImageFilterIUS4IF4)
itkSignedDanielssonDistanceMapImageFilterIUS4IF4___New_orig__ = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4IF4___New_orig__
itkSignedDanielssonDistanceMapImageFilterIUS4IF4_cast = _itkSignedDanielssonDistanceMapImageFilterPython.itkSignedDanielssonDistanceMapImageFilterIUS4IF4_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def signed_danielsson_distance_map_image_filter(*args: itkt.ImageLike,  squared_distance: bool=..., use_image_spacing: bool=..., inside_is_positive: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for SignedDanielssonDistanceMapImageFilter"""
    import itk

    kwarg_typehints = { 'squared_distance':squared_distance,'use_image_spacing':use_image_spacing,'inside_is_positive':inside_is_positive }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.SignedDanielssonDistanceMapImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def signed_danielsson_distance_map_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKDistanceMap.SignedDanielssonDistanceMapImageFilter
    signed_danielsson_distance_map_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    signed_danielsson_distance_map_image_filter.__doc__ = filter_object.__doc__




