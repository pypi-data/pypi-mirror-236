# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKLabelMapPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _ITKLabelMapBasePython
else:
    import _ITKLabelMapBasePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _ITKLabelMapBasePython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _ITKLabelMapBasePython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkImageToImageFilterCommonPython
import itk.pyBasePython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkCovariantVectorPython
import itk.itkImageSourceCommonPython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkStatisticsLabelObjectPython
import itk.itkAffineTransformPython
import itk.itkTransformBasePython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.itkArray2DPython
import itk.itkDiffusionTensor3DPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkShapeLabelObjectPython
import itk.itkLabelObjectPython
import itk.itkLabelObjectLinePython
import itk.itkHistogramPython
import itk.itkSamplePython
class itkImageSourceLM2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkImageSourceLM2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageSourceLM2_GetOutput)
    GraftOutput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageSourceLM2_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageSourceLM2_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageSourceLM2_MakeOutput)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageSourceLM2
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageSourceLM2_cast)

# Register itkImageSourceLM2 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageSourceLM2_swigregister(itkImageSourceLM2)
itkImageSourceLM2_cast = _ITKLabelMapBasePython.itkImageSourceLM2_cast

class itkImageSourceLM3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkImageSourceLM3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageSourceLM3_GetOutput)
    GraftOutput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageSourceLM3_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageSourceLM3_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageSourceLM3_MakeOutput)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageSourceLM3
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageSourceLM3_cast)

# Register itkImageSourceLM3 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageSourceLM3_swigregister(itkImageSourceLM3)
itkImageSourceLM3_cast = _ITKLabelMapBasePython.itkImageSourceLM3_cast

class itkImageSourceLM4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkImageSourceLM4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    GetOutput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageSourceLM4_GetOutput)
    GraftOutput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageSourceLM4_GraftOutput)
    GraftNthOutput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageSourceLM4_GraftNthOutput)
    MakeOutput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageSourceLM4_MakeOutput)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageSourceLM4
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageSourceLM4_cast)

# Register itkImageSourceLM4 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageSourceLM4_swigregister(itkImageSourceLM4)
itkImageSourceLM4_cast = _ITKLabelMapBasePython.itkImageSourceLM4_cast

class itkImageToImageFilterID2LM2(itkImageSourceLM2):
    r"""Proxy of C++ itkImageToImageFilterID2LM2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterID2LM2_SetInput)
    GetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterID2LM2_GetInput)
    PushBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterID2LM2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterID2LM2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterID2LM2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterID2LM2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterID2LM2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterID2LM2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterID2LM2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterID2LM2_GetDirectionTolerance)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterID2LM2
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageToImageFilterID2LM2_cast)

# Register itkImageToImageFilterID2LM2 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageToImageFilterID2LM2_swigregister(itkImageToImageFilterID2LM2)
itkImageToImageFilterID2LM2_cast = _ITKLabelMapBasePython.itkImageToImageFilterID2LM2_cast

class itkImageToImageFilterID3LM3(itkImageSourceLM3):
    r"""Proxy of C++ itkImageToImageFilterID3LM3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterID3LM3_SetInput)
    GetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterID3LM3_GetInput)
    PushBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterID3LM3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterID3LM3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterID3LM3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterID3LM3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterID3LM3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterID3LM3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterID3LM3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterID3LM3_GetDirectionTolerance)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterID3LM3
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageToImageFilterID3LM3_cast)

# Register itkImageToImageFilterID3LM3 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageToImageFilterID3LM3_swigregister(itkImageToImageFilterID3LM3)
itkImageToImageFilterID3LM3_cast = _ITKLabelMapBasePython.itkImageToImageFilterID3LM3_cast

class itkImageToImageFilterID4LM4(itkImageSourceLM4):
    r"""Proxy of C++ itkImageToImageFilterID4LM4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterID4LM4_SetInput)
    GetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterID4LM4_GetInput)
    PushBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterID4LM4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterID4LM4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterID4LM4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterID4LM4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterID4LM4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterID4LM4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterID4LM4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterID4LM4_GetDirectionTolerance)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterID4LM4
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageToImageFilterID4LM4_cast)

# Register itkImageToImageFilterID4LM4 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageToImageFilterID4LM4_swigregister(itkImageToImageFilterID4LM4)
itkImageToImageFilterID4LM4_cast = _ITKLabelMapBasePython.itkImageToImageFilterID4LM4_cast

class itkImageToImageFilterIF2LM2(itkImageSourceLM2):
    r"""Proxy of C++ itkImageToImageFilterIF2LM2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIF2LM2_SetInput)
    GetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIF2LM2_GetInput)
    PushBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIF2LM2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIF2LM2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIF2LM2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIF2LM2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIF2LM2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIF2LM2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIF2LM2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIF2LM2_GetDirectionTolerance)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterIF2LM2
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageToImageFilterIF2LM2_cast)

# Register itkImageToImageFilterIF2LM2 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageToImageFilterIF2LM2_swigregister(itkImageToImageFilterIF2LM2)
itkImageToImageFilterIF2LM2_cast = _ITKLabelMapBasePython.itkImageToImageFilterIF2LM2_cast

class itkImageToImageFilterIF3LM3(itkImageSourceLM3):
    r"""Proxy of C++ itkImageToImageFilterIF3LM3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIF3LM3_SetInput)
    GetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIF3LM3_GetInput)
    PushBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIF3LM3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIF3LM3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIF3LM3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIF3LM3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIF3LM3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIF3LM3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIF3LM3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIF3LM3_GetDirectionTolerance)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterIF3LM3
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageToImageFilterIF3LM3_cast)

# Register itkImageToImageFilterIF3LM3 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageToImageFilterIF3LM3_swigregister(itkImageToImageFilterIF3LM3)
itkImageToImageFilterIF3LM3_cast = _ITKLabelMapBasePython.itkImageToImageFilterIF3LM3_cast

class itkImageToImageFilterIF4LM4(itkImageSourceLM4):
    r"""Proxy of C++ itkImageToImageFilterIF4LM4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIF4LM4_SetInput)
    GetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIF4LM4_GetInput)
    PushBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIF4LM4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIF4LM4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIF4LM4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIF4LM4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIF4LM4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIF4LM4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIF4LM4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIF4LM4_GetDirectionTolerance)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterIF4LM4
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageToImageFilterIF4LM4_cast)

# Register itkImageToImageFilterIF4LM4 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageToImageFilterIF4LM4_swigregister(itkImageToImageFilterIF4LM4)
itkImageToImageFilterIF4LM4_cast = _ITKLabelMapBasePython.itkImageToImageFilterIF4LM4_cast

class itkImageToImageFilterISS2LM2(itkImageSourceLM2):
    r"""Proxy of C++ itkImageToImageFilterISS2LM2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterISS2LM2_SetInput)
    GetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterISS2LM2_GetInput)
    PushBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterISS2LM2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterISS2LM2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterISS2LM2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterISS2LM2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterISS2LM2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterISS2LM2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterISS2LM2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterISS2LM2_GetDirectionTolerance)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterISS2LM2
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageToImageFilterISS2LM2_cast)

# Register itkImageToImageFilterISS2LM2 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageToImageFilterISS2LM2_swigregister(itkImageToImageFilterISS2LM2)
itkImageToImageFilterISS2LM2_cast = _ITKLabelMapBasePython.itkImageToImageFilterISS2LM2_cast

class itkImageToImageFilterISS3LM3(itkImageSourceLM3):
    r"""Proxy of C++ itkImageToImageFilterISS3LM3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterISS3LM3_SetInput)
    GetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterISS3LM3_GetInput)
    PushBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterISS3LM3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterISS3LM3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterISS3LM3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterISS3LM3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterISS3LM3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterISS3LM3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterISS3LM3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterISS3LM3_GetDirectionTolerance)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterISS3LM3
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageToImageFilterISS3LM3_cast)

# Register itkImageToImageFilterISS3LM3 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageToImageFilterISS3LM3_swigregister(itkImageToImageFilterISS3LM3)
itkImageToImageFilterISS3LM3_cast = _ITKLabelMapBasePython.itkImageToImageFilterISS3LM3_cast

class itkImageToImageFilterISS4LM4(itkImageSourceLM4):
    r"""Proxy of C++ itkImageToImageFilterISS4LM4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterISS4LM4_SetInput)
    GetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterISS4LM4_GetInput)
    PushBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterISS4LM4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterISS4LM4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterISS4LM4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterISS4LM4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterISS4LM4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterISS4LM4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterISS4LM4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterISS4LM4_GetDirectionTolerance)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterISS4LM4
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageToImageFilterISS4LM4_cast)

# Register itkImageToImageFilterISS4LM4 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageToImageFilterISS4LM4_swigregister(itkImageToImageFilterISS4LM4)
itkImageToImageFilterISS4LM4_cast = _ITKLabelMapBasePython.itkImageToImageFilterISS4LM4_cast

class itkImageToImageFilterIUC2LM2(itkImageSourceLM2):
    r"""Proxy of C++ itkImageToImageFilterIUC2LM2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2_SetInput)
    GetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2_GetInput)
    PushBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2_GetDirectionTolerance)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterIUC2LM2
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2_cast)

# Register itkImageToImageFilterIUC2LM2 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2_swigregister(itkImageToImageFilterIUC2LM2)
itkImageToImageFilterIUC2LM2_cast = _ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2_cast

class itkImageToImageFilterIUC3LM3(itkImageSourceLM3):
    r"""Proxy of C++ itkImageToImageFilterIUC3LM3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3_SetInput)
    GetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3_GetInput)
    PushBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3_GetDirectionTolerance)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterIUC3LM3
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3_cast)

# Register itkImageToImageFilterIUC3LM3 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3_swigregister(itkImageToImageFilterIUC3LM3)
itkImageToImageFilterIUC3LM3_cast = _ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3_cast

class itkImageToImageFilterIUC4LM4(itkImageSourceLM4):
    r"""Proxy of C++ itkImageToImageFilterIUC4LM4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUC4LM4_SetInput)
    GetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUC4LM4_GetInput)
    PushBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUC4LM4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUC4LM4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUC4LM4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUC4LM4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUC4LM4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUC4LM4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUC4LM4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUC4LM4_GetDirectionTolerance)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterIUC4LM4
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageToImageFilterIUC4LM4_cast)

# Register itkImageToImageFilterIUC4LM4 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageToImageFilterIUC4LM4_swigregister(itkImageToImageFilterIUC4LM4)
itkImageToImageFilterIUC4LM4_cast = _ITKLabelMapBasePython.itkImageToImageFilterIUC4LM4_cast

class itkImageToImageFilterIUS2LM2(itkImageSourceLM2):
    r"""Proxy of C++ itkImageToImageFilterIUS2LM2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2_SetInput)
    GetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2_GetInput)
    PushBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2_GetDirectionTolerance)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterIUS2LM2
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2_cast)

# Register itkImageToImageFilterIUS2LM2 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2_swigregister(itkImageToImageFilterIUS2LM2)
itkImageToImageFilterIUS2LM2_cast = _ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2_cast

class itkImageToImageFilterIUS3LM3(itkImageSourceLM3):
    r"""Proxy of C++ itkImageToImageFilterIUS3LM3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3_SetInput)
    GetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3_GetInput)
    PushBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3_GetDirectionTolerance)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterIUS3LM3
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3_cast)

# Register itkImageToImageFilterIUS3LM3 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3_swigregister(itkImageToImageFilterIUS3LM3)
itkImageToImageFilterIUS3LM3_cast = _ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3_cast

class itkImageToImageFilterIUS4LM4(itkImageSourceLM4):
    r"""Proxy of C++ itkImageToImageFilterIUS4LM4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUS4LM4_SetInput)
    GetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUS4LM4_GetInput)
    PushBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUS4LM4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUS4LM4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUS4LM4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUS4LM4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUS4LM4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUS4LM4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUS4LM4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterIUS4LM4_GetDirectionTolerance)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterIUS4LM4
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageToImageFilterIUS4LM4_cast)

# Register itkImageToImageFilterIUS4LM4 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageToImageFilterIUS4LM4_swigregister(itkImageToImageFilterIUS4LM4)
itkImageToImageFilterIUS4LM4_cast = _ITKLabelMapBasePython.itkImageToImageFilterIUS4LM4_cast

class itkImageToImageFilterLM2ID2(itk.itkImageSourcePython.itkImageSourceID2):
    r"""Proxy of C++ itkImageToImageFilterLM2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2ID2_SetInput)
    GetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2ID2_GetInput)
    PushBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2ID2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2ID2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2ID2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2ID2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2ID2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2ID2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2ID2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2ID2_GetDirectionTolerance)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterLM2ID2
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2ID2_cast)

# Register itkImageToImageFilterLM2ID2 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageToImageFilterLM2ID2_swigregister(itkImageToImageFilterLM2ID2)
itkImageToImageFilterLM2ID2_cast = _ITKLabelMapBasePython.itkImageToImageFilterLM2ID2_cast

class itkImageToImageFilterLM2IF2(itk.itkImageSourcePython.itkImageSourceIF2):
    r"""Proxy of C++ itkImageToImageFilterLM2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IF2_SetInput)
    GetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IF2_GetInput)
    PushBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IF2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IF2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IF2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IF2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IF2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IF2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IF2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IF2_GetDirectionTolerance)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterLM2IF2
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IF2_cast)

# Register itkImageToImageFilterLM2IF2 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageToImageFilterLM2IF2_swigregister(itkImageToImageFilterLM2IF2)
itkImageToImageFilterLM2IF2_cast = _ITKLabelMapBasePython.itkImageToImageFilterLM2IF2_cast

class itkImageToImageFilterLM2IRGBUC2(itk.itkImageSourcePython.itkImageSourceIRGBUC2):
    r"""Proxy of C++ itkImageToImageFilterLM2IRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IRGBUC2_SetInput)
    GetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IRGBUC2_GetInput)
    PushBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IRGBUC2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IRGBUC2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IRGBUC2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IRGBUC2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IRGBUC2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IRGBUC2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IRGBUC2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IRGBUC2_GetDirectionTolerance)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterLM2IRGBUC2
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IRGBUC2_cast)

# Register itkImageToImageFilterLM2IRGBUC2 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageToImageFilterLM2IRGBUC2_swigregister(itkImageToImageFilterLM2IRGBUC2)
itkImageToImageFilterLM2IRGBUC2_cast = _ITKLabelMapBasePython.itkImageToImageFilterLM2IRGBUC2_cast

class itkImageToImageFilterLM2ISS2(itk.itkImageSourcePython.itkImageSourceISS2):
    r"""Proxy of C++ itkImageToImageFilterLM2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2ISS2_SetInput)
    GetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2ISS2_GetInput)
    PushBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2ISS2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2ISS2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2ISS2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2ISS2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2ISS2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2ISS2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2ISS2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2ISS2_GetDirectionTolerance)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterLM2ISS2
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2ISS2_cast)

# Register itkImageToImageFilterLM2ISS2 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageToImageFilterLM2ISS2_swigregister(itkImageToImageFilterLM2ISS2)
itkImageToImageFilterLM2ISS2_cast = _ITKLabelMapBasePython.itkImageToImageFilterLM2ISS2_cast

class itkImageToImageFilterLM2IUC2(itk.itkImageSourcePython.itkImageSourceIUC2):
    r"""Proxy of C++ itkImageToImageFilterLM2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUC2_SetInput)
    GetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUC2_GetInput)
    PushBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUC2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUC2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUC2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUC2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUC2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUC2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUC2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUC2_GetDirectionTolerance)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterLM2IUC2
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUC2_cast)

# Register itkImageToImageFilterLM2IUC2 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageToImageFilterLM2IUC2_swigregister(itkImageToImageFilterLM2IUC2)
itkImageToImageFilterLM2IUC2_cast = _ITKLabelMapBasePython.itkImageToImageFilterLM2IUC2_cast

class itkImageToImageFilterLM2IUS2(itk.itkImageSourcePython.itkImageSourceIUS2):
    r"""Proxy of C++ itkImageToImageFilterLM2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUS2_SetInput)
    GetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUS2_GetInput)
    PushBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUS2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUS2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUS2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUS2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUS2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUS2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUS2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUS2_GetDirectionTolerance)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterLM2IUS2
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2IUS2_cast)

# Register itkImageToImageFilterLM2IUS2 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageToImageFilterLM2IUS2_swigregister(itkImageToImageFilterLM2IUS2)
itkImageToImageFilterLM2IUS2_cast = _ITKLabelMapBasePython.itkImageToImageFilterLM2IUS2_cast

class itkImageToImageFilterLM2LM2(itkImageSourceLM2):
    r"""Proxy of C++ itkImageToImageFilterLM2LM2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2LM2_SetInput)
    GetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2LM2_GetInput)
    PushBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2LM2_PushBackInput)
    PopBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2LM2_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2LM2_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2LM2_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2LM2_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2LM2_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2LM2_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2LM2_GetDirectionTolerance)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterLM2LM2
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageToImageFilterLM2LM2_cast)

# Register itkImageToImageFilterLM2LM2 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageToImageFilterLM2LM2_swigregister(itkImageToImageFilterLM2LM2)
itkImageToImageFilterLM2LM2_cast = _ITKLabelMapBasePython.itkImageToImageFilterLM2LM2_cast

class itkImageToImageFilterLM3ID3(itk.itkImageSourcePython.itkImageSourceID3):
    r"""Proxy of C++ itkImageToImageFilterLM3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3ID3_SetInput)
    GetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3ID3_GetInput)
    PushBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3ID3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3ID3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3ID3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3ID3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3ID3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3ID3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3ID3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3ID3_GetDirectionTolerance)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterLM3ID3
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3ID3_cast)

# Register itkImageToImageFilterLM3ID3 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageToImageFilterLM3ID3_swigregister(itkImageToImageFilterLM3ID3)
itkImageToImageFilterLM3ID3_cast = _ITKLabelMapBasePython.itkImageToImageFilterLM3ID3_cast

class itkImageToImageFilterLM3IF3(itk.itkImageSourcePython.itkImageSourceIF3):
    r"""Proxy of C++ itkImageToImageFilterLM3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IF3_SetInput)
    GetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IF3_GetInput)
    PushBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IF3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IF3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IF3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IF3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IF3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IF3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IF3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IF3_GetDirectionTolerance)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterLM3IF3
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IF3_cast)

# Register itkImageToImageFilterLM3IF3 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageToImageFilterLM3IF3_swigregister(itkImageToImageFilterLM3IF3)
itkImageToImageFilterLM3IF3_cast = _ITKLabelMapBasePython.itkImageToImageFilterLM3IF3_cast

class itkImageToImageFilterLM3IRGBUC3(itk.itkImageSourcePython.itkImageSourceIRGBUC3):
    r"""Proxy of C++ itkImageToImageFilterLM3IRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IRGBUC3_SetInput)
    GetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IRGBUC3_GetInput)
    PushBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IRGBUC3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IRGBUC3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IRGBUC3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IRGBUC3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IRGBUC3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IRGBUC3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IRGBUC3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IRGBUC3_GetDirectionTolerance)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterLM3IRGBUC3
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IRGBUC3_cast)

# Register itkImageToImageFilterLM3IRGBUC3 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageToImageFilterLM3IRGBUC3_swigregister(itkImageToImageFilterLM3IRGBUC3)
itkImageToImageFilterLM3IRGBUC3_cast = _ITKLabelMapBasePython.itkImageToImageFilterLM3IRGBUC3_cast

class itkImageToImageFilterLM3ISS3(itk.itkImageSourcePython.itkImageSourceISS3):
    r"""Proxy of C++ itkImageToImageFilterLM3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3ISS3_SetInput)
    GetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3ISS3_GetInput)
    PushBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3ISS3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3ISS3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3ISS3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3ISS3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3ISS3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3ISS3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3ISS3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3ISS3_GetDirectionTolerance)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterLM3ISS3
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3ISS3_cast)

# Register itkImageToImageFilterLM3ISS3 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageToImageFilterLM3ISS3_swigregister(itkImageToImageFilterLM3ISS3)
itkImageToImageFilterLM3ISS3_cast = _ITKLabelMapBasePython.itkImageToImageFilterLM3ISS3_cast

class itkImageToImageFilterLM3IUC3(itk.itkImageSourcePython.itkImageSourceIUC3):
    r"""Proxy of C++ itkImageToImageFilterLM3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUC3_SetInput)
    GetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUC3_GetInput)
    PushBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUC3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUC3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUC3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUC3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUC3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUC3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUC3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUC3_GetDirectionTolerance)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterLM3IUC3
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUC3_cast)

# Register itkImageToImageFilterLM3IUC3 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageToImageFilterLM3IUC3_swigregister(itkImageToImageFilterLM3IUC3)
itkImageToImageFilterLM3IUC3_cast = _ITKLabelMapBasePython.itkImageToImageFilterLM3IUC3_cast

class itkImageToImageFilterLM3IUS3(itk.itkImageSourcePython.itkImageSourceIUS3):
    r"""Proxy of C++ itkImageToImageFilterLM3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUS3_SetInput)
    GetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUS3_GetInput)
    PushBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUS3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUS3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUS3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUS3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUS3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUS3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUS3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUS3_GetDirectionTolerance)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterLM3IUS3
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3IUS3_cast)

# Register itkImageToImageFilterLM3IUS3 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageToImageFilterLM3IUS3_swigregister(itkImageToImageFilterLM3IUS3)
itkImageToImageFilterLM3IUS3_cast = _ITKLabelMapBasePython.itkImageToImageFilterLM3IUS3_cast

class itkImageToImageFilterLM3LM3(itkImageSourceLM3):
    r"""Proxy of C++ itkImageToImageFilterLM3LM3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3LM3_SetInput)
    GetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3LM3_GetInput)
    PushBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3LM3_PushBackInput)
    PopBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3LM3_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3LM3_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3LM3_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3LM3_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3LM3_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3LM3_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3LM3_GetDirectionTolerance)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterLM3LM3
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageToImageFilterLM3LM3_cast)

# Register itkImageToImageFilterLM3LM3 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageToImageFilterLM3LM3_swigregister(itkImageToImageFilterLM3LM3)
itkImageToImageFilterLM3LM3_cast = _ITKLabelMapBasePython.itkImageToImageFilterLM3LM3_cast

class itkImageToImageFilterLM4ID4(itk.itkImageSourcePython.itkImageSourceID4):
    r"""Proxy of C++ itkImageToImageFilterLM4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4ID4_SetInput)
    GetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4ID4_GetInput)
    PushBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4ID4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4ID4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4ID4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4ID4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4ID4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4ID4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4ID4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4ID4_GetDirectionTolerance)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterLM4ID4
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4ID4_cast)

# Register itkImageToImageFilterLM4ID4 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageToImageFilterLM4ID4_swigregister(itkImageToImageFilterLM4ID4)
itkImageToImageFilterLM4ID4_cast = _ITKLabelMapBasePython.itkImageToImageFilterLM4ID4_cast

class itkImageToImageFilterLM4IF4(itk.itkImageSourcePython.itkImageSourceIF4):
    r"""Proxy of C++ itkImageToImageFilterLM4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IF4_SetInput)
    GetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IF4_GetInput)
    PushBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IF4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IF4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IF4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IF4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IF4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IF4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IF4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IF4_GetDirectionTolerance)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterLM4IF4
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IF4_cast)

# Register itkImageToImageFilterLM4IF4 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageToImageFilterLM4IF4_swigregister(itkImageToImageFilterLM4IF4)
itkImageToImageFilterLM4IF4_cast = _ITKLabelMapBasePython.itkImageToImageFilterLM4IF4_cast

class itkImageToImageFilterLM4IRGBUC4(itk.itkImageSourcePython.itkImageSourceIRGBUC4):
    r"""Proxy of C++ itkImageToImageFilterLM4IRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IRGBUC4_SetInput)
    GetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IRGBUC4_GetInput)
    PushBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IRGBUC4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IRGBUC4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IRGBUC4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IRGBUC4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IRGBUC4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IRGBUC4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IRGBUC4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IRGBUC4_GetDirectionTolerance)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterLM4IRGBUC4
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IRGBUC4_cast)

# Register itkImageToImageFilterLM4IRGBUC4 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageToImageFilterLM4IRGBUC4_swigregister(itkImageToImageFilterLM4IRGBUC4)
itkImageToImageFilterLM4IRGBUC4_cast = _ITKLabelMapBasePython.itkImageToImageFilterLM4IRGBUC4_cast

class itkImageToImageFilterLM4ISS4(itk.itkImageSourcePython.itkImageSourceISS4):
    r"""Proxy of C++ itkImageToImageFilterLM4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4ISS4_SetInput)
    GetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4ISS4_GetInput)
    PushBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4ISS4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4ISS4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4ISS4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4ISS4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4ISS4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4ISS4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4ISS4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4ISS4_GetDirectionTolerance)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterLM4ISS4
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4ISS4_cast)

# Register itkImageToImageFilterLM4ISS4 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageToImageFilterLM4ISS4_swigregister(itkImageToImageFilterLM4ISS4)
itkImageToImageFilterLM4ISS4_cast = _ITKLabelMapBasePython.itkImageToImageFilterLM4ISS4_cast

class itkImageToImageFilterLM4IUC4(itk.itkImageSourcePython.itkImageSourceIUC4):
    r"""Proxy of C++ itkImageToImageFilterLM4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IUC4_SetInput)
    GetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IUC4_GetInput)
    PushBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IUC4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IUC4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IUC4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IUC4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IUC4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IUC4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IUC4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IUC4_GetDirectionTolerance)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterLM4IUC4
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IUC4_cast)

# Register itkImageToImageFilterLM4IUC4 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageToImageFilterLM4IUC4_swigregister(itkImageToImageFilterLM4IUC4)
itkImageToImageFilterLM4IUC4_cast = _ITKLabelMapBasePython.itkImageToImageFilterLM4IUC4_cast

class itkImageToImageFilterLM4IUS4(itk.itkImageSourcePython.itkImageSourceIUS4):
    r"""Proxy of C++ itkImageToImageFilterLM4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IUS4_SetInput)
    GetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IUS4_GetInput)
    PushBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IUS4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IUS4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IUS4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IUS4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IUS4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IUS4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IUS4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IUS4_GetDirectionTolerance)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterLM4IUS4
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4IUS4_cast)

# Register itkImageToImageFilterLM4IUS4 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageToImageFilterLM4IUS4_swigregister(itkImageToImageFilterLM4IUS4)
itkImageToImageFilterLM4IUS4_cast = _ITKLabelMapBasePython.itkImageToImageFilterLM4IUS4_cast

class itkImageToImageFilterLM4LM4(itkImageSourceLM4):
    r"""Proxy of C++ itkImageToImageFilterLM4LM4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    SetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4LM4_SetInput)
    GetInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4LM4_GetInput)
    PushBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4LM4_PushBackInput)
    PopBackInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4LM4_PopBackInput)
    PushFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4LM4_PushFrontInput)
    PopFrontInput = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4LM4_PopFrontInput)
    SetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4LM4_SetCoordinateTolerance)
    GetCoordinateTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4LM4_GetCoordinateTolerance)
    SetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4LM4_SetDirectionTolerance)
    GetDirectionTolerance = _swig_new_instance_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4LM4_GetDirectionTolerance)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkImageToImageFilterLM4LM4
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkImageToImageFilterLM4LM4_cast)

# Register itkImageToImageFilterLM4LM4 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkImageToImageFilterLM4LM4_swigregister(itkImageToImageFilterLM4LM4)
itkImageToImageFilterLM4LM4_cast = _ITKLabelMapBasePython.itkImageToImageFilterLM4LM4_cast


def itkLabelMap2_New():
    return itkLabelMap2.New()

class itkLabelMap2(itk.itkImagePython.itkImageBase2):
    r"""Proxy of C++ itkLabelMap2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKLabelMapBasePython.itkLabelMap2___New_orig__)
    Clone = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap2_Clone)
    Allocate = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap2_Allocate)
    Graft = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap2_Graft)
    HasLabel = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap2_HasLabel)
    GetNthLabelObject = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap2_GetNthLabelObject)
    GetPixel = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap2_GetPixel)
    SetPixel = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap2_SetPixel)
    AddPixel = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap2_AddPixel)
    RemovePixel = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap2_RemovePixel)
    SetLine = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap2_SetLine)
    GetLabelObject = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap2_GetLabelObject)
    AddLabelObject = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap2_AddLabelObject)
    PushLabelObject = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap2_PushLabelObject)
    RemoveLabelObject = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap2_RemoveLabelObject)
    RemoveLabel = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap2_RemoveLabel)
    ClearLabels = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap2_ClearLabels)
    GetNumberOfLabelObjects = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap2_GetNumberOfLabelObjects)
    GetLabels = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap2_GetLabels)
    GetLabelObjects = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap2_GetLabelObjects)
    GetBackgroundValue = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap2_GetBackgroundValue)
    SetBackgroundValue = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap2_SetBackgroundValue)
    PrintLabelObjects = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap2_PrintLabelObjects)
    Optimize = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap2_Optimize)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkLabelMap2
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkLabelMap2_cast)

    def __len__(self):
        return self.GetNumberOfLabelObjects()
    def __getitem__(self, label):
        return self.GetLabelObject(label)
    def __iter__(self):
        labels = self.GetLabels()
        for label in labels:
            yield self.GetLabelObject(label)


    def New(*args, **kargs):
        """New() -> itkLabelMap2

        Create a new object of the class itkLabelMap2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMap2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMap2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMap2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMap2 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkLabelMap2_swigregister(itkLabelMap2)
itkLabelMap2___New_orig__ = _ITKLabelMapBasePython.itkLabelMap2___New_orig__
itkLabelMap2_cast = _ITKLabelMapBasePython.itkLabelMap2_cast


def itkLabelMap3_New():
    return itkLabelMap3.New()

class itkLabelMap3(itk.itkImagePython.itkImageBase3):
    r"""Proxy of C++ itkLabelMap3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKLabelMapBasePython.itkLabelMap3___New_orig__)
    Clone = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap3_Clone)
    Allocate = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap3_Allocate)
    Graft = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap3_Graft)
    HasLabel = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap3_HasLabel)
    GetNthLabelObject = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap3_GetNthLabelObject)
    GetPixel = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap3_GetPixel)
    SetPixel = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap3_SetPixel)
    AddPixel = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap3_AddPixel)
    RemovePixel = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap3_RemovePixel)
    SetLine = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap3_SetLine)
    GetLabelObject = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap3_GetLabelObject)
    AddLabelObject = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap3_AddLabelObject)
    PushLabelObject = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap3_PushLabelObject)
    RemoveLabelObject = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap3_RemoveLabelObject)
    RemoveLabel = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap3_RemoveLabel)
    ClearLabels = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap3_ClearLabels)
    GetNumberOfLabelObjects = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap3_GetNumberOfLabelObjects)
    GetLabels = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap3_GetLabels)
    GetLabelObjects = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap3_GetLabelObjects)
    GetBackgroundValue = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap3_GetBackgroundValue)
    SetBackgroundValue = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap3_SetBackgroundValue)
    PrintLabelObjects = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap3_PrintLabelObjects)
    Optimize = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap3_Optimize)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkLabelMap3
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkLabelMap3_cast)

    def __len__(self):
        return self.GetNumberOfLabelObjects()
    def __getitem__(self, label):
        return self.GetLabelObject(label)
    def __iter__(self):
        labels = self.GetLabels()
        for label in labels:
            yield self.GetLabelObject(label)


    def New(*args, **kargs):
        """New() -> itkLabelMap3

        Create a new object of the class itkLabelMap3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMap3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMap3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMap3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMap3 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkLabelMap3_swigregister(itkLabelMap3)
itkLabelMap3___New_orig__ = _ITKLabelMapBasePython.itkLabelMap3___New_orig__
itkLabelMap3_cast = _ITKLabelMapBasePython.itkLabelMap3_cast


def itkLabelMap4_New():
    return itkLabelMap4.New()

class itkLabelMap4(itk.itkImagePython.itkImageBase4):
    r"""Proxy of C++ itkLabelMap4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKLabelMapBasePython.itkLabelMap4___New_orig__)
    Clone = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap4_Clone)
    Allocate = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap4_Allocate)
    Graft = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap4_Graft)
    HasLabel = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap4_HasLabel)
    GetNthLabelObject = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap4_GetNthLabelObject)
    GetPixel = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap4_GetPixel)
    SetPixel = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap4_SetPixel)
    AddPixel = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap4_AddPixel)
    RemovePixel = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap4_RemovePixel)
    SetLine = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap4_SetLine)
    GetLabelObject = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap4_GetLabelObject)
    AddLabelObject = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap4_AddLabelObject)
    PushLabelObject = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap4_PushLabelObject)
    RemoveLabelObject = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap4_RemoveLabelObject)
    RemoveLabel = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap4_RemoveLabel)
    ClearLabels = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap4_ClearLabels)
    GetNumberOfLabelObjects = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap4_GetNumberOfLabelObjects)
    GetLabels = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap4_GetLabels)
    GetLabelObjects = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap4_GetLabelObjects)
    GetBackgroundValue = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap4_GetBackgroundValue)
    SetBackgroundValue = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap4_SetBackgroundValue)
    PrintLabelObjects = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap4_PrintLabelObjects)
    Optimize = _swig_new_instance_method(_ITKLabelMapBasePython.itkLabelMap4_Optimize)
    __swig_destroy__ = _ITKLabelMapBasePython.delete_itkLabelMap4
    cast = _swig_new_static_method(_ITKLabelMapBasePython.itkLabelMap4_cast)

    def __len__(self):
        return self.GetNumberOfLabelObjects()
    def __getitem__(self, label):
        return self.GetLabelObject(label)
    def __iter__(self):
        labels = self.GetLabels()
        for label in labels:
            yield self.GetLabelObject(label)


    def New(*args, **kargs):
        """New() -> itkLabelMap4

        Create a new object of the class itkLabelMap4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMap4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMap4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMap4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMap4 in _ITKLabelMapBasePython:
_ITKLabelMapBasePython.itkLabelMap4_swigregister(itkLabelMap4)
itkLabelMap4___New_orig__ = _ITKLabelMapBasePython.itkLabelMap4___New_orig__
itkLabelMap4_cast = _ITKLabelMapBasePython.itkLabelMap4_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def image_source(*args, **kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ImageSource"""
    import itk

    kwarg_typehints = {  }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ImageSource.New(*args, **kwargs)

    return instance.__internal_call__()

def image_source_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKLabelMap.ImageSource
    image_source.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    image_source.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def image_to_image_filter(*args: itkt.ImageLike, **kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ImageToImageFilter"""
    import itk

    kwarg_typehints = {  }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ImageToImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def image_to_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKLabelMap.ImageToImageFilter
    image_to_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    image_to_image_filter.__doc__ = filter_object.__doc__




