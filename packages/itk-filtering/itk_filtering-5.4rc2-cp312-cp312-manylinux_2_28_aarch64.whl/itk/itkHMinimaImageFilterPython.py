# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKMathematicalMorphologyPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkHMinimaImageFilterPython
else:
    import _itkHMinimaImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkHMinimaImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkHMinimaImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkImageToImageFilterAPython
import itk.itkImageSourcePython
import itk.itkImagePython
import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkRGBPixelPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkRGBAPixelPython
import itk.itkIndexPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageRegionPython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython

def itkHMinimaImageFilterID2ID2_New():
    return itkHMinimaImageFilterID2ID2.New()

class itkHMinimaImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkHMinimaImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterID2ID2_Clone)
    SetHeight = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterID2ID2_SetHeight)
    GetHeight = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterID2ID2_GetHeight)
    SetFullyConnected = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterID2ID2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterID2ID2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterID2ID2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterID2ID2_FullyConnectedOff)
    InputEqualityComparableCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterID2ID2_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterID2ID2_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterID2ID2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHMinimaImageFilterPython.delete_itkHMinimaImageFilterID2ID2
    cast = _swig_new_static_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkHMinimaImageFilterID2ID2

        Create a new object of the class itkHMinimaImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHMinimaImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHMinimaImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHMinimaImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHMinimaImageFilterID2ID2 in _itkHMinimaImageFilterPython:
_itkHMinimaImageFilterPython.itkHMinimaImageFilterID2ID2_swigregister(itkHMinimaImageFilterID2ID2)
itkHMinimaImageFilterID2ID2___New_orig__ = _itkHMinimaImageFilterPython.itkHMinimaImageFilterID2ID2___New_orig__
itkHMinimaImageFilterID2ID2_cast = _itkHMinimaImageFilterPython.itkHMinimaImageFilterID2ID2_cast


def itkHMinimaImageFilterID3ID3_New():
    return itkHMinimaImageFilterID3ID3.New()

class itkHMinimaImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkHMinimaImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterID3ID3_Clone)
    SetHeight = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterID3ID3_SetHeight)
    GetHeight = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterID3ID3_GetHeight)
    SetFullyConnected = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterID3ID3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterID3ID3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterID3ID3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterID3ID3_FullyConnectedOff)
    InputEqualityComparableCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterID3ID3_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterID3ID3_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterID3ID3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHMinimaImageFilterPython.delete_itkHMinimaImageFilterID3ID3
    cast = _swig_new_static_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkHMinimaImageFilterID3ID3

        Create a new object of the class itkHMinimaImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHMinimaImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHMinimaImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHMinimaImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHMinimaImageFilterID3ID3 in _itkHMinimaImageFilterPython:
_itkHMinimaImageFilterPython.itkHMinimaImageFilterID3ID3_swigregister(itkHMinimaImageFilterID3ID3)
itkHMinimaImageFilterID3ID3___New_orig__ = _itkHMinimaImageFilterPython.itkHMinimaImageFilterID3ID3___New_orig__
itkHMinimaImageFilterID3ID3_cast = _itkHMinimaImageFilterPython.itkHMinimaImageFilterID3ID3_cast


def itkHMinimaImageFilterID4ID4_New():
    return itkHMinimaImageFilterID4ID4.New()

class itkHMinimaImageFilterID4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkHMinimaImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterID4ID4___New_orig__)
    Clone = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterID4ID4_Clone)
    SetHeight = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterID4ID4_SetHeight)
    GetHeight = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterID4ID4_GetHeight)
    SetFullyConnected = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterID4ID4_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterID4ID4_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterID4ID4_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterID4ID4_FullyConnectedOff)
    InputEqualityComparableCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterID4ID4_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterID4ID4_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterID4ID4_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHMinimaImageFilterPython.delete_itkHMinimaImageFilterID4ID4
    cast = _swig_new_static_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterID4ID4_cast)

    def New(*args, **kargs):
        """New() -> itkHMinimaImageFilterID4ID4

        Create a new object of the class itkHMinimaImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHMinimaImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHMinimaImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHMinimaImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHMinimaImageFilterID4ID4 in _itkHMinimaImageFilterPython:
_itkHMinimaImageFilterPython.itkHMinimaImageFilterID4ID4_swigregister(itkHMinimaImageFilterID4ID4)
itkHMinimaImageFilterID4ID4___New_orig__ = _itkHMinimaImageFilterPython.itkHMinimaImageFilterID4ID4___New_orig__
itkHMinimaImageFilterID4ID4_cast = _itkHMinimaImageFilterPython.itkHMinimaImageFilterID4ID4_cast


def itkHMinimaImageFilterIF2IF2_New():
    return itkHMinimaImageFilterIF2IF2.New()

class itkHMinimaImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkHMinimaImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIF2IF2_Clone)
    SetHeight = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIF2IF2_SetHeight)
    GetHeight = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIF2IF2_GetHeight)
    SetFullyConnected = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIF2IF2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIF2IF2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIF2IF2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIF2IF2_FullyConnectedOff)
    InputEqualityComparableCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIF2IF2_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIF2IF2_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIF2IF2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHMinimaImageFilterPython.delete_itkHMinimaImageFilterIF2IF2
    cast = _swig_new_static_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkHMinimaImageFilterIF2IF2

        Create a new object of the class itkHMinimaImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHMinimaImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHMinimaImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHMinimaImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHMinimaImageFilterIF2IF2 in _itkHMinimaImageFilterPython:
_itkHMinimaImageFilterPython.itkHMinimaImageFilterIF2IF2_swigregister(itkHMinimaImageFilterIF2IF2)
itkHMinimaImageFilterIF2IF2___New_orig__ = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIF2IF2___New_orig__
itkHMinimaImageFilterIF2IF2_cast = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIF2IF2_cast


def itkHMinimaImageFilterIF3IF3_New():
    return itkHMinimaImageFilterIF3IF3.New()

class itkHMinimaImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkHMinimaImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIF3IF3_Clone)
    SetHeight = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIF3IF3_SetHeight)
    GetHeight = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIF3IF3_GetHeight)
    SetFullyConnected = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIF3IF3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIF3IF3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIF3IF3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIF3IF3_FullyConnectedOff)
    InputEqualityComparableCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIF3IF3_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIF3IF3_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIF3IF3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHMinimaImageFilterPython.delete_itkHMinimaImageFilterIF3IF3
    cast = _swig_new_static_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkHMinimaImageFilterIF3IF3

        Create a new object of the class itkHMinimaImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHMinimaImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHMinimaImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHMinimaImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHMinimaImageFilterIF3IF3 in _itkHMinimaImageFilterPython:
_itkHMinimaImageFilterPython.itkHMinimaImageFilterIF3IF3_swigregister(itkHMinimaImageFilterIF3IF3)
itkHMinimaImageFilterIF3IF3___New_orig__ = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIF3IF3___New_orig__
itkHMinimaImageFilterIF3IF3_cast = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIF3IF3_cast


def itkHMinimaImageFilterIF4IF4_New():
    return itkHMinimaImageFilterIF4IF4.New()

class itkHMinimaImageFilterIF4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkHMinimaImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIF4IF4___New_orig__)
    Clone = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIF4IF4_Clone)
    SetHeight = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIF4IF4_SetHeight)
    GetHeight = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIF4IF4_GetHeight)
    SetFullyConnected = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIF4IF4_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIF4IF4_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIF4IF4_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIF4IF4_FullyConnectedOff)
    InputEqualityComparableCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIF4IF4_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIF4IF4_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIF4IF4_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHMinimaImageFilterPython.delete_itkHMinimaImageFilterIF4IF4
    cast = _swig_new_static_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIF4IF4_cast)

    def New(*args, **kargs):
        """New() -> itkHMinimaImageFilterIF4IF4

        Create a new object of the class itkHMinimaImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHMinimaImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHMinimaImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHMinimaImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHMinimaImageFilterIF4IF4 in _itkHMinimaImageFilterPython:
_itkHMinimaImageFilterPython.itkHMinimaImageFilterIF4IF4_swigregister(itkHMinimaImageFilterIF4IF4)
itkHMinimaImageFilterIF4IF4___New_orig__ = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIF4IF4___New_orig__
itkHMinimaImageFilterIF4IF4_cast = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIF4IF4_cast


def itkHMinimaImageFilterISS2ISS2_New():
    return itkHMinimaImageFilterISS2ISS2.New()

class itkHMinimaImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkHMinimaImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterISS2ISS2_Clone)
    SetHeight = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterISS2ISS2_SetHeight)
    GetHeight = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterISS2ISS2_GetHeight)
    SetFullyConnected = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterISS2ISS2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterISS2ISS2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterISS2ISS2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterISS2ISS2_FullyConnectedOff)
    InputEqualityComparableCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterISS2ISS2_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterISS2ISS2_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterISS2ISS2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHMinimaImageFilterPython.delete_itkHMinimaImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkHMinimaImageFilterISS2ISS2

        Create a new object of the class itkHMinimaImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHMinimaImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHMinimaImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHMinimaImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHMinimaImageFilterISS2ISS2 in _itkHMinimaImageFilterPython:
_itkHMinimaImageFilterPython.itkHMinimaImageFilterISS2ISS2_swigregister(itkHMinimaImageFilterISS2ISS2)
itkHMinimaImageFilterISS2ISS2___New_orig__ = _itkHMinimaImageFilterPython.itkHMinimaImageFilterISS2ISS2___New_orig__
itkHMinimaImageFilterISS2ISS2_cast = _itkHMinimaImageFilterPython.itkHMinimaImageFilterISS2ISS2_cast


def itkHMinimaImageFilterISS3ISS3_New():
    return itkHMinimaImageFilterISS3ISS3.New()

class itkHMinimaImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkHMinimaImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterISS3ISS3_Clone)
    SetHeight = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterISS3ISS3_SetHeight)
    GetHeight = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterISS3ISS3_GetHeight)
    SetFullyConnected = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterISS3ISS3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterISS3ISS3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterISS3ISS3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterISS3ISS3_FullyConnectedOff)
    InputEqualityComparableCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterISS3ISS3_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterISS3ISS3_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterISS3ISS3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHMinimaImageFilterPython.delete_itkHMinimaImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkHMinimaImageFilterISS3ISS3

        Create a new object of the class itkHMinimaImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHMinimaImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHMinimaImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHMinimaImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHMinimaImageFilterISS3ISS3 in _itkHMinimaImageFilterPython:
_itkHMinimaImageFilterPython.itkHMinimaImageFilterISS3ISS3_swigregister(itkHMinimaImageFilterISS3ISS3)
itkHMinimaImageFilterISS3ISS3___New_orig__ = _itkHMinimaImageFilterPython.itkHMinimaImageFilterISS3ISS3___New_orig__
itkHMinimaImageFilterISS3ISS3_cast = _itkHMinimaImageFilterPython.itkHMinimaImageFilterISS3ISS3_cast


def itkHMinimaImageFilterISS4ISS4_New():
    return itkHMinimaImageFilterISS4ISS4.New()

class itkHMinimaImageFilterISS4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkHMinimaImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterISS4ISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterISS4ISS4_Clone)
    SetHeight = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterISS4ISS4_SetHeight)
    GetHeight = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterISS4ISS4_GetHeight)
    SetFullyConnected = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterISS4ISS4_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterISS4ISS4_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterISS4ISS4_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterISS4ISS4_FullyConnectedOff)
    InputEqualityComparableCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterISS4ISS4_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterISS4ISS4_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterISS4ISS4_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHMinimaImageFilterPython.delete_itkHMinimaImageFilterISS4ISS4
    cast = _swig_new_static_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterISS4ISS4_cast)

    def New(*args, **kargs):
        """New() -> itkHMinimaImageFilterISS4ISS4

        Create a new object of the class itkHMinimaImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHMinimaImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHMinimaImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHMinimaImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHMinimaImageFilterISS4ISS4 in _itkHMinimaImageFilterPython:
_itkHMinimaImageFilterPython.itkHMinimaImageFilterISS4ISS4_swigregister(itkHMinimaImageFilterISS4ISS4)
itkHMinimaImageFilterISS4ISS4___New_orig__ = _itkHMinimaImageFilterPython.itkHMinimaImageFilterISS4ISS4___New_orig__
itkHMinimaImageFilterISS4ISS4_cast = _itkHMinimaImageFilterPython.itkHMinimaImageFilterISS4ISS4_cast


def itkHMinimaImageFilterIUC2IUC2_New():
    return itkHMinimaImageFilterIUC2IUC2.New()

class itkHMinimaImageFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkHMinimaImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC2IUC2_Clone)
    SetHeight = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC2IUC2_SetHeight)
    GetHeight = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC2IUC2_GetHeight)
    SetFullyConnected = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC2IUC2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC2IUC2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC2IUC2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC2IUC2_FullyConnectedOff)
    InputEqualityComparableCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC2IUC2_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC2IUC2_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC2IUC2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHMinimaImageFilterPython.delete_itkHMinimaImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkHMinimaImageFilterIUC2IUC2

        Create a new object of the class itkHMinimaImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHMinimaImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHMinimaImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHMinimaImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHMinimaImageFilterIUC2IUC2 in _itkHMinimaImageFilterPython:
_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC2IUC2_swigregister(itkHMinimaImageFilterIUC2IUC2)
itkHMinimaImageFilterIUC2IUC2___New_orig__ = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC2IUC2___New_orig__
itkHMinimaImageFilterIUC2IUC2_cast = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC2IUC2_cast


def itkHMinimaImageFilterIUC3IUC3_New():
    return itkHMinimaImageFilterIUC3IUC3.New()

class itkHMinimaImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkHMinimaImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC3IUC3_Clone)
    SetHeight = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC3IUC3_SetHeight)
    GetHeight = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC3IUC3_GetHeight)
    SetFullyConnected = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC3IUC3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC3IUC3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC3IUC3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC3IUC3_FullyConnectedOff)
    InputEqualityComparableCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC3IUC3_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC3IUC3_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC3IUC3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHMinimaImageFilterPython.delete_itkHMinimaImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkHMinimaImageFilterIUC3IUC3

        Create a new object of the class itkHMinimaImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHMinimaImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHMinimaImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHMinimaImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHMinimaImageFilterIUC3IUC3 in _itkHMinimaImageFilterPython:
_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC3IUC3_swigregister(itkHMinimaImageFilterIUC3IUC3)
itkHMinimaImageFilterIUC3IUC3___New_orig__ = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC3IUC3___New_orig__
itkHMinimaImageFilterIUC3IUC3_cast = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC3IUC3_cast


def itkHMinimaImageFilterIUC4IUC4_New():
    return itkHMinimaImageFilterIUC4IUC4.New()

class itkHMinimaImageFilterIUC4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkHMinimaImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC4IUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC4IUC4_Clone)
    SetHeight = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC4IUC4_SetHeight)
    GetHeight = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC4IUC4_GetHeight)
    SetFullyConnected = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC4IUC4_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC4IUC4_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC4IUC4_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC4IUC4_FullyConnectedOff)
    InputEqualityComparableCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC4IUC4_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC4IUC4_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC4IUC4_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHMinimaImageFilterPython.delete_itkHMinimaImageFilterIUC4IUC4
    cast = _swig_new_static_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC4IUC4_cast)

    def New(*args, **kargs):
        """New() -> itkHMinimaImageFilterIUC4IUC4

        Create a new object of the class itkHMinimaImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHMinimaImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHMinimaImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHMinimaImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHMinimaImageFilterIUC4IUC4 in _itkHMinimaImageFilterPython:
_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC4IUC4_swigregister(itkHMinimaImageFilterIUC4IUC4)
itkHMinimaImageFilterIUC4IUC4___New_orig__ = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC4IUC4___New_orig__
itkHMinimaImageFilterIUC4IUC4_cast = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIUC4IUC4_cast


def itkHMinimaImageFilterIUS2IUS2_New():
    return itkHMinimaImageFilterIUS2IUS2.New()

class itkHMinimaImageFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkHMinimaImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS2IUS2_Clone)
    SetHeight = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS2IUS2_SetHeight)
    GetHeight = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS2IUS2_GetHeight)
    SetFullyConnected = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS2IUS2_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS2IUS2_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS2IUS2_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS2IUS2_FullyConnectedOff)
    InputEqualityComparableCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS2IUS2_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS2IUS2_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS2IUS2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHMinimaImageFilterPython.delete_itkHMinimaImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkHMinimaImageFilterIUS2IUS2

        Create a new object of the class itkHMinimaImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHMinimaImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHMinimaImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHMinimaImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHMinimaImageFilterIUS2IUS2 in _itkHMinimaImageFilterPython:
_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS2IUS2_swigregister(itkHMinimaImageFilterIUS2IUS2)
itkHMinimaImageFilterIUS2IUS2___New_orig__ = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS2IUS2___New_orig__
itkHMinimaImageFilterIUS2IUS2_cast = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS2IUS2_cast


def itkHMinimaImageFilterIUS3IUS3_New():
    return itkHMinimaImageFilterIUS3IUS3.New()

class itkHMinimaImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkHMinimaImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS3IUS3_Clone)
    SetHeight = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS3IUS3_SetHeight)
    GetHeight = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS3IUS3_GetHeight)
    SetFullyConnected = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS3IUS3_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS3IUS3_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS3IUS3_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS3IUS3_FullyConnectedOff)
    InputEqualityComparableCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS3IUS3_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS3IUS3_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS3IUS3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHMinimaImageFilterPython.delete_itkHMinimaImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkHMinimaImageFilterIUS3IUS3

        Create a new object of the class itkHMinimaImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHMinimaImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHMinimaImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHMinimaImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHMinimaImageFilterIUS3IUS3 in _itkHMinimaImageFilterPython:
_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS3IUS3_swigregister(itkHMinimaImageFilterIUS3IUS3)
itkHMinimaImageFilterIUS3IUS3___New_orig__ = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS3IUS3___New_orig__
itkHMinimaImageFilterIUS3IUS3_cast = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS3IUS3_cast


def itkHMinimaImageFilterIUS4IUS4_New():
    return itkHMinimaImageFilterIUS4IUS4.New()

class itkHMinimaImageFilterIUS4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkHMinimaImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS4IUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS4IUS4_Clone)
    SetHeight = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS4IUS4_SetHeight)
    GetHeight = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS4IUS4_GetHeight)
    SetFullyConnected = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS4IUS4_SetFullyConnected)
    GetFullyConnected = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS4IUS4_GetFullyConnected)
    FullyConnectedOn = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS4IUS4_FullyConnectedOn)
    FullyConnectedOff = _swig_new_instance_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS4IUS4_FullyConnectedOff)
    InputEqualityComparableCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS4IUS4_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS4IUS4_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS4IUS4_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHMinimaImageFilterPython.delete_itkHMinimaImageFilterIUS4IUS4
    cast = _swig_new_static_method(_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS4IUS4_cast)

    def New(*args, **kargs):
        """New() -> itkHMinimaImageFilterIUS4IUS4

        Create a new object of the class itkHMinimaImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHMinimaImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHMinimaImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHMinimaImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHMinimaImageFilterIUS4IUS4 in _itkHMinimaImageFilterPython:
_itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS4IUS4_swigregister(itkHMinimaImageFilterIUS4IUS4)
itkHMinimaImageFilterIUS4IUS4___New_orig__ = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS4IUS4___New_orig__
itkHMinimaImageFilterIUS4IUS4_cast = _itkHMinimaImageFilterPython.itkHMinimaImageFilterIUS4IUS4_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def h_minima_image_filter(*args: itkt.ImageLike,  height: int=..., fully_connected: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for HMinimaImageFilter"""
    import itk

    kwarg_typehints = { 'height':height,'fully_connected':fully_connected }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.HMinimaImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def h_minima_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKMathematicalMorphology.HMinimaImageFilter
    h_minima_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    h_minima_image_filter.__doc__ = filter_object.__doc__




