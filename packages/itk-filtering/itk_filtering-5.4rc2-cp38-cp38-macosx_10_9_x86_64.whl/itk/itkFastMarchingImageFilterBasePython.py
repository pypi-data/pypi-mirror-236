# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKFastMarchingPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkFastMarchingImageFilterBasePython
else:
    import _itkFastMarchingImageFilterBasePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkFastMarchingImageFilterBasePython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkFastMarchingImageFilterBasePython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkSizePython
import itk.pyBasePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkImageRegionPython
import itk.ITKFastMarchingBasePython
import itk.itkImageToImageFilterAPython
import itk.itkImageToImageFilterCommonPython
import itk.itkVectorImagePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkLevelSetNodePython
import itk.itkNodePairPython
import itk.itkFastMarchingStoppingCriterionBasePython

def itkFastMarchingImageFilterBaseID2ID2_New():
    return itkFastMarchingImageFilterBaseID2ID2.New()

class itkFastMarchingImageFilterBaseID2ID2(itk.ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2):
    r"""Proxy of C++ itkFastMarchingImageFilterBaseID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID2ID2_Clone)
    GetModifiableLabelImage = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID2ID2_GetModifiableLabelImage)
    GetLabelImage = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID2ID2_GetLabelImage)
    SetOutputSize = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID2ID2_SetOutputSize)
    GetOutputSize = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID2ID2_GetOutputSize)
    SetOutputRegion = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID2ID2_SetOutputRegion)
    GetOutputRegion = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID2ID2_GetOutputRegion)
    SetOutputSpacing = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID2ID2_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID2ID2_GetOutputSpacing)
    SetOutputDirection = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID2ID2_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID2ID2_GetOutputDirection)
    SetOutputOrigin = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID2ID2_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID2ID2_GetOutputOrigin)
    SetOverrideOutputInformation = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID2ID2_SetOverrideOutputInformation)
    GetOverrideOutputInformation = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID2ID2_GetOverrideOutputInformation)
    OverrideOutputInformationOn = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID2ID2_OverrideOutputInformationOn)
    OverrideOutputInformationOff = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID2ID2_OverrideOutputInformationOff)
    __swig_destroy__ = _itkFastMarchingImageFilterBasePython.delete_itkFastMarchingImageFilterBaseID2ID2
    cast = _swig_new_static_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkFastMarchingImageFilterBaseID2ID2

        Create a new object of the class itkFastMarchingImageFilterBaseID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastMarchingImageFilterBaseID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastMarchingImageFilterBaseID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastMarchingImageFilterBaseID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastMarchingImageFilterBaseID2ID2 in _itkFastMarchingImageFilterBasePython:
_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID2ID2_swigregister(itkFastMarchingImageFilterBaseID2ID2)
itkFastMarchingImageFilterBaseID2ID2___New_orig__ = _itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID2ID2___New_orig__
itkFastMarchingImageFilterBaseID2ID2_cast = _itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID2ID2_cast


def itkFastMarchingImageFilterBaseID3ID3_New():
    return itkFastMarchingImageFilterBaseID3ID3.New()

class itkFastMarchingImageFilterBaseID3ID3(itk.ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3):
    r"""Proxy of C++ itkFastMarchingImageFilterBaseID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID3ID3_Clone)
    GetModifiableLabelImage = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID3ID3_GetModifiableLabelImage)
    GetLabelImage = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID3ID3_GetLabelImage)
    SetOutputSize = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID3ID3_SetOutputSize)
    GetOutputSize = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID3ID3_GetOutputSize)
    SetOutputRegion = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID3ID3_SetOutputRegion)
    GetOutputRegion = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID3ID3_GetOutputRegion)
    SetOutputSpacing = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID3ID3_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID3ID3_GetOutputSpacing)
    SetOutputDirection = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID3ID3_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID3ID3_GetOutputDirection)
    SetOutputOrigin = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID3ID3_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID3ID3_GetOutputOrigin)
    SetOverrideOutputInformation = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID3ID3_SetOverrideOutputInformation)
    GetOverrideOutputInformation = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID3ID3_GetOverrideOutputInformation)
    OverrideOutputInformationOn = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID3ID3_OverrideOutputInformationOn)
    OverrideOutputInformationOff = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID3ID3_OverrideOutputInformationOff)
    __swig_destroy__ = _itkFastMarchingImageFilterBasePython.delete_itkFastMarchingImageFilterBaseID3ID3
    cast = _swig_new_static_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkFastMarchingImageFilterBaseID3ID3

        Create a new object of the class itkFastMarchingImageFilterBaseID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastMarchingImageFilterBaseID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastMarchingImageFilterBaseID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastMarchingImageFilterBaseID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastMarchingImageFilterBaseID3ID3 in _itkFastMarchingImageFilterBasePython:
_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID3ID3_swigregister(itkFastMarchingImageFilterBaseID3ID3)
itkFastMarchingImageFilterBaseID3ID3___New_orig__ = _itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID3ID3___New_orig__
itkFastMarchingImageFilterBaseID3ID3_cast = _itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID3ID3_cast


def itkFastMarchingImageFilterBaseID4ID4_New():
    return itkFastMarchingImageFilterBaseID4ID4.New()

class itkFastMarchingImageFilterBaseID4ID4(itk.ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4):
    r"""Proxy of C++ itkFastMarchingImageFilterBaseID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID4ID4___New_orig__)
    Clone = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID4ID4_Clone)
    GetModifiableLabelImage = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID4ID4_GetModifiableLabelImage)
    GetLabelImage = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID4ID4_GetLabelImage)
    SetOutputSize = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID4ID4_SetOutputSize)
    GetOutputSize = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID4ID4_GetOutputSize)
    SetOutputRegion = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID4ID4_SetOutputRegion)
    GetOutputRegion = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID4ID4_GetOutputRegion)
    SetOutputSpacing = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID4ID4_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID4ID4_GetOutputSpacing)
    SetOutputDirection = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID4ID4_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID4ID4_GetOutputDirection)
    SetOutputOrigin = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID4ID4_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID4ID4_GetOutputOrigin)
    SetOverrideOutputInformation = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID4ID4_SetOverrideOutputInformation)
    GetOverrideOutputInformation = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID4ID4_GetOverrideOutputInformation)
    OverrideOutputInformationOn = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID4ID4_OverrideOutputInformationOn)
    OverrideOutputInformationOff = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID4ID4_OverrideOutputInformationOff)
    __swig_destroy__ = _itkFastMarchingImageFilterBasePython.delete_itkFastMarchingImageFilterBaseID4ID4
    cast = _swig_new_static_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID4ID4_cast)

    def New(*args, **kargs):
        """New() -> itkFastMarchingImageFilterBaseID4ID4

        Create a new object of the class itkFastMarchingImageFilterBaseID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastMarchingImageFilterBaseID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastMarchingImageFilterBaseID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastMarchingImageFilterBaseID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastMarchingImageFilterBaseID4ID4 in _itkFastMarchingImageFilterBasePython:
_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID4ID4_swigregister(itkFastMarchingImageFilterBaseID4ID4)
itkFastMarchingImageFilterBaseID4ID4___New_orig__ = _itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID4ID4___New_orig__
itkFastMarchingImageFilterBaseID4ID4_cast = _itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseID4ID4_cast


def itkFastMarchingImageFilterBaseIF2IF2_New():
    return itkFastMarchingImageFilterBaseIF2IF2.New()

class itkFastMarchingImageFilterBaseIF2IF2(itk.ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2):
    r"""Proxy of C++ itkFastMarchingImageFilterBaseIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF2IF2_Clone)
    GetModifiableLabelImage = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF2IF2_GetModifiableLabelImage)
    GetLabelImage = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF2IF2_GetLabelImage)
    SetOutputSize = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF2IF2_SetOutputSize)
    GetOutputSize = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF2IF2_GetOutputSize)
    SetOutputRegion = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF2IF2_SetOutputRegion)
    GetOutputRegion = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF2IF2_GetOutputRegion)
    SetOutputSpacing = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF2IF2_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF2IF2_GetOutputSpacing)
    SetOutputDirection = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF2IF2_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF2IF2_GetOutputDirection)
    SetOutputOrigin = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF2IF2_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF2IF2_GetOutputOrigin)
    SetOverrideOutputInformation = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF2IF2_SetOverrideOutputInformation)
    GetOverrideOutputInformation = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF2IF2_GetOverrideOutputInformation)
    OverrideOutputInformationOn = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF2IF2_OverrideOutputInformationOn)
    OverrideOutputInformationOff = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF2IF2_OverrideOutputInformationOff)
    __swig_destroy__ = _itkFastMarchingImageFilterBasePython.delete_itkFastMarchingImageFilterBaseIF2IF2
    cast = _swig_new_static_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkFastMarchingImageFilterBaseIF2IF2

        Create a new object of the class itkFastMarchingImageFilterBaseIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastMarchingImageFilterBaseIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastMarchingImageFilterBaseIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastMarchingImageFilterBaseIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastMarchingImageFilterBaseIF2IF2 in _itkFastMarchingImageFilterBasePython:
_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF2IF2_swigregister(itkFastMarchingImageFilterBaseIF2IF2)
itkFastMarchingImageFilterBaseIF2IF2___New_orig__ = _itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF2IF2___New_orig__
itkFastMarchingImageFilterBaseIF2IF2_cast = _itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF2IF2_cast


def itkFastMarchingImageFilterBaseIF3IF3_New():
    return itkFastMarchingImageFilterBaseIF3IF3.New()

class itkFastMarchingImageFilterBaseIF3IF3(itk.ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3):
    r"""Proxy of C++ itkFastMarchingImageFilterBaseIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF3IF3_Clone)
    GetModifiableLabelImage = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF3IF3_GetModifiableLabelImage)
    GetLabelImage = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF3IF3_GetLabelImage)
    SetOutputSize = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF3IF3_SetOutputSize)
    GetOutputSize = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF3IF3_GetOutputSize)
    SetOutputRegion = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF3IF3_SetOutputRegion)
    GetOutputRegion = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF3IF3_GetOutputRegion)
    SetOutputSpacing = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF3IF3_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF3IF3_GetOutputSpacing)
    SetOutputDirection = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF3IF3_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF3IF3_GetOutputDirection)
    SetOutputOrigin = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF3IF3_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF3IF3_GetOutputOrigin)
    SetOverrideOutputInformation = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF3IF3_SetOverrideOutputInformation)
    GetOverrideOutputInformation = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF3IF3_GetOverrideOutputInformation)
    OverrideOutputInformationOn = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF3IF3_OverrideOutputInformationOn)
    OverrideOutputInformationOff = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF3IF3_OverrideOutputInformationOff)
    __swig_destroy__ = _itkFastMarchingImageFilterBasePython.delete_itkFastMarchingImageFilterBaseIF3IF3
    cast = _swig_new_static_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkFastMarchingImageFilterBaseIF3IF3

        Create a new object of the class itkFastMarchingImageFilterBaseIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastMarchingImageFilterBaseIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastMarchingImageFilterBaseIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastMarchingImageFilterBaseIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastMarchingImageFilterBaseIF3IF3 in _itkFastMarchingImageFilterBasePython:
_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF3IF3_swigregister(itkFastMarchingImageFilterBaseIF3IF3)
itkFastMarchingImageFilterBaseIF3IF3___New_orig__ = _itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF3IF3___New_orig__
itkFastMarchingImageFilterBaseIF3IF3_cast = _itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF3IF3_cast


def itkFastMarchingImageFilterBaseIF4IF4_New():
    return itkFastMarchingImageFilterBaseIF4IF4.New()

class itkFastMarchingImageFilterBaseIF4IF4(itk.ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4):
    r"""Proxy of C++ itkFastMarchingImageFilterBaseIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF4IF4___New_orig__)
    Clone = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF4IF4_Clone)
    GetModifiableLabelImage = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF4IF4_GetModifiableLabelImage)
    GetLabelImage = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF4IF4_GetLabelImage)
    SetOutputSize = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF4IF4_SetOutputSize)
    GetOutputSize = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF4IF4_GetOutputSize)
    SetOutputRegion = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF4IF4_SetOutputRegion)
    GetOutputRegion = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF4IF4_GetOutputRegion)
    SetOutputSpacing = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF4IF4_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF4IF4_GetOutputSpacing)
    SetOutputDirection = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF4IF4_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF4IF4_GetOutputDirection)
    SetOutputOrigin = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF4IF4_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF4IF4_GetOutputOrigin)
    SetOverrideOutputInformation = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF4IF4_SetOverrideOutputInformation)
    GetOverrideOutputInformation = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF4IF4_GetOverrideOutputInformation)
    OverrideOutputInformationOn = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF4IF4_OverrideOutputInformationOn)
    OverrideOutputInformationOff = _swig_new_instance_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF4IF4_OverrideOutputInformationOff)
    __swig_destroy__ = _itkFastMarchingImageFilterBasePython.delete_itkFastMarchingImageFilterBaseIF4IF4
    cast = _swig_new_static_method(_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF4IF4_cast)

    def New(*args, **kargs):
        """New() -> itkFastMarchingImageFilterBaseIF4IF4

        Create a new object of the class itkFastMarchingImageFilterBaseIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastMarchingImageFilterBaseIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastMarchingImageFilterBaseIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastMarchingImageFilterBaseIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastMarchingImageFilterBaseIF4IF4 in _itkFastMarchingImageFilterBasePython:
_itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF4IF4_swigregister(itkFastMarchingImageFilterBaseIF4IF4)
itkFastMarchingImageFilterBaseIF4IF4___New_orig__ = _itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF4IF4___New_orig__
itkFastMarchingImageFilterBaseIF4IF4_cast = _itkFastMarchingImageFilterBasePython.itkFastMarchingImageFilterBaseIF4IF4_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def fast_marching_image_filter_base(*args: itkt.ImageLike,  output_size: Sequence[int]=..., output_region: itkt.ImageRegion=..., output_spacing: Sequence[float]=..., output_direction=..., output_origin: Sequence[float]=..., override_output_information: bool=..., topology_check=..., trial_points=..., alive_points=..., processed_points=..., forbidden_points=..., stopping_criterion=..., speed_constant: float=..., normalization_factor: float=..., collect_points: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for FastMarchingImageFilterBase"""
    import itk

    kwarg_typehints = { 'output_size':output_size,'output_region':output_region,'output_spacing':output_spacing,'output_direction':output_direction,'output_origin':output_origin,'override_output_information':override_output_information,'topology_check':topology_check,'trial_points':trial_points,'alive_points':alive_points,'processed_points':processed_points,'forbidden_points':forbidden_points,'stopping_criterion':stopping_criterion,'speed_constant':speed_constant,'normalization_factor':normalization_factor,'collect_points':collect_points }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.FastMarchingImageFilterBase.New(*args, **kwargs)

    return instance.__internal_call__()

def fast_marching_image_filter_base_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKFastMarching.FastMarchingImageFilterBase
    fast_marching_image_filter_base.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    fast_marching_image_filter_base.__doc__ = filter_object.__doc__




