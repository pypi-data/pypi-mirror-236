# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageFeaturePython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkSimpleContourExtractorImageFilterPython
else:
    import _itkSimpleContourExtractorImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkSimpleContourExtractorImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkSimpleContourExtractorImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkBoxImageFilterPython
import itk.itkImageToImageFilterAPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython

def itkSimpleContourExtractorImageFilterID2ID2_New():
    return itkSimpleContourExtractorImageFilterID2ID2.New()

class itkSimpleContourExtractorImageFilterID2ID2(itk.itkBoxImageFilterPython.itkBoxImageFilterID2ID2):
    r"""Proxy of C++ itkSimpleContourExtractorImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID2ID2_Clone)
    SetInputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID2ID2_SetInputForegroundValue)
    GetInputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID2ID2_GetInputForegroundValue)
    SetInputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID2ID2_SetInputBackgroundValue)
    GetInputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID2ID2_GetInputBackgroundValue)
    SetOutputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID2ID2_SetOutputForegroundValue)
    GetOutputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID2ID2_GetOutputForegroundValue)
    SetOutputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID2ID2_SetOutputBackgroundValue)
    GetOutputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID2ID2_GetOutputBackgroundValue)
    InputHasNumericTraitsCheck = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID2ID2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID2ID2_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSimpleContourExtractorImageFilterPython.delete_itkSimpleContourExtractorImageFilterID2ID2
    cast = _swig_new_static_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkSimpleContourExtractorImageFilterID2ID2

        Create a new object of the class itkSimpleContourExtractorImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSimpleContourExtractorImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSimpleContourExtractorImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSimpleContourExtractorImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSimpleContourExtractorImageFilterID2ID2 in _itkSimpleContourExtractorImageFilterPython:
_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID2ID2_swigregister(itkSimpleContourExtractorImageFilterID2ID2)
itkSimpleContourExtractorImageFilterID2ID2___New_orig__ = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID2ID2___New_orig__
itkSimpleContourExtractorImageFilterID2ID2_cast = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID2ID2_cast


def itkSimpleContourExtractorImageFilterID3ID3_New():
    return itkSimpleContourExtractorImageFilterID3ID3.New()

class itkSimpleContourExtractorImageFilterID3ID3(itk.itkBoxImageFilterPython.itkBoxImageFilterID3ID3):
    r"""Proxy of C++ itkSimpleContourExtractorImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID3ID3_Clone)
    SetInputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID3ID3_SetInputForegroundValue)
    GetInputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID3ID3_GetInputForegroundValue)
    SetInputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID3ID3_SetInputBackgroundValue)
    GetInputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID3ID3_GetInputBackgroundValue)
    SetOutputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID3ID3_SetOutputForegroundValue)
    GetOutputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID3ID3_GetOutputForegroundValue)
    SetOutputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID3ID3_SetOutputBackgroundValue)
    GetOutputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID3ID3_GetOutputBackgroundValue)
    InputHasNumericTraitsCheck = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID3ID3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID3ID3_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSimpleContourExtractorImageFilterPython.delete_itkSimpleContourExtractorImageFilterID3ID3
    cast = _swig_new_static_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkSimpleContourExtractorImageFilterID3ID3

        Create a new object of the class itkSimpleContourExtractorImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSimpleContourExtractorImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSimpleContourExtractorImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSimpleContourExtractorImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSimpleContourExtractorImageFilterID3ID3 in _itkSimpleContourExtractorImageFilterPython:
_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID3ID3_swigregister(itkSimpleContourExtractorImageFilterID3ID3)
itkSimpleContourExtractorImageFilterID3ID3___New_orig__ = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID3ID3___New_orig__
itkSimpleContourExtractorImageFilterID3ID3_cast = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID3ID3_cast


def itkSimpleContourExtractorImageFilterID4ID4_New():
    return itkSimpleContourExtractorImageFilterID4ID4.New()

class itkSimpleContourExtractorImageFilterID4ID4(itk.itkBoxImageFilterPython.itkBoxImageFilterID4ID4):
    r"""Proxy of C++ itkSimpleContourExtractorImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID4ID4___New_orig__)
    Clone = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID4ID4_Clone)
    SetInputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID4ID4_SetInputForegroundValue)
    GetInputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID4ID4_GetInputForegroundValue)
    SetInputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID4ID4_SetInputBackgroundValue)
    GetInputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID4ID4_GetInputBackgroundValue)
    SetOutputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID4ID4_SetOutputForegroundValue)
    GetOutputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID4ID4_GetOutputForegroundValue)
    SetOutputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID4ID4_SetOutputBackgroundValue)
    GetOutputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID4ID4_GetOutputBackgroundValue)
    InputHasNumericTraitsCheck = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID4ID4_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID4ID4_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSimpleContourExtractorImageFilterPython.delete_itkSimpleContourExtractorImageFilterID4ID4
    cast = _swig_new_static_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID4ID4_cast)

    def New(*args, **kargs):
        """New() -> itkSimpleContourExtractorImageFilterID4ID4

        Create a new object of the class itkSimpleContourExtractorImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSimpleContourExtractorImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSimpleContourExtractorImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSimpleContourExtractorImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSimpleContourExtractorImageFilterID4ID4 in _itkSimpleContourExtractorImageFilterPython:
_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID4ID4_swigregister(itkSimpleContourExtractorImageFilterID4ID4)
itkSimpleContourExtractorImageFilterID4ID4___New_orig__ = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID4ID4___New_orig__
itkSimpleContourExtractorImageFilterID4ID4_cast = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterID4ID4_cast


def itkSimpleContourExtractorImageFilterIF2IF2_New():
    return itkSimpleContourExtractorImageFilterIF2IF2.New()

class itkSimpleContourExtractorImageFilterIF2IF2(itk.itkBoxImageFilterPython.itkBoxImageFilterIF2IF2):
    r"""Proxy of C++ itkSimpleContourExtractorImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF2IF2_Clone)
    SetInputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF2IF2_SetInputForegroundValue)
    GetInputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF2IF2_GetInputForegroundValue)
    SetInputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF2IF2_SetInputBackgroundValue)
    GetInputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF2IF2_GetInputBackgroundValue)
    SetOutputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF2IF2_SetOutputForegroundValue)
    GetOutputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF2IF2_GetOutputForegroundValue)
    SetOutputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF2IF2_SetOutputBackgroundValue)
    GetOutputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF2IF2_GetOutputBackgroundValue)
    InputHasNumericTraitsCheck = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF2IF2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF2IF2_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSimpleContourExtractorImageFilterPython.delete_itkSimpleContourExtractorImageFilterIF2IF2
    cast = _swig_new_static_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkSimpleContourExtractorImageFilterIF2IF2

        Create a new object of the class itkSimpleContourExtractorImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSimpleContourExtractorImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSimpleContourExtractorImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSimpleContourExtractorImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSimpleContourExtractorImageFilterIF2IF2 in _itkSimpleContourExtractorImageFilterPython:
_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF2IF2_swigregister(itkSimpleContourExtractorImageFilterIF2IF2)
itkSimpleContourExtractorImageFilterIF2IF2___New_orig__ = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF2IF2___New_orig__
itkSimpleContourExtractorImageFilterIF2IF2_cast = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF2IF2_cast


def itkSimpleContourExtractorImageFilterIF3IF3_New():
    return itkSimpleContourExtractorImageFilterIF3IF3.New()

class itkSimpleContourExtractorImageFilterIF3IF3(itk.itkBoxImageFilterPython.itkBoxImageFilterIF3IF3):
    r"""Proxy of C++ itkSimpleContourExtractorImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF3IF3_Clone)
    SetInputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF3IF3_SetInputForegroundValue)
    GetInputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF3IF3_GetInputForegroundValue)
    SetInputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF3IF3_SetInputBackgroundValue)
    GetInputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF3IF3_GetInputBackgroundValue)
    SetOutputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF3IF3_SetOutputForegroundValue)
    GetOutputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF3IF3_GetOutputForegroundValue)
    SetOutputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF3IF3_SetOutputBackgroundValue)
    GetOutputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF3IF3_GetOutputBackgroundValue)
    InputHasNumericTraitsCheck = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF3IF3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF3IF3_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSimpleContourExtractorImageFilterPython.delete_itkSimpleContourExtractorImageFilterIF3IF3
    cast = _swig_new_static_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkSimpleContourExtractorImageFilterIF3IF3

        Create a new object of the class itkSimpleContourExtractorImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSimpleContourExtractorImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSimpleContourExtractorImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSimpleContourExtractorImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSimpleContourExtractorImageFilterIF3IF3 in _itkSimpleContourExtractorImageFilterPython:
_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF3IF3_swigregister(itkSimpleContourExtractorImageFilterIF3IF3)
itkSimpleContourExtractorImageFilterIF3IF3___New_orig__ = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF3IF3___New_orig__
itkSimpleContourExtractorImageFilterIF3IF3_cast = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF3IF3_cast


def itkSimpleContourExtractorImageFilterIF4IF4_New():
    return itkSimpleContourExtractorImageFilterIF4IF4.New()

class itkSimpleContourExtractorImageFilterIF4IF4(itk.itkBoxImageFilterPython.itkBoxImageFilterIF4IF4):
    r"""Proxy of C++ itkSimpleContourExtractorImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF4IF4___New_orig__)
    Clone = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF4IF4_Clone)
    SetInputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF4IF4_SetInputForegroundValue)
    GetInputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF4IF4_GetInputForegroundValue)
    SetInputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF4IF4_SetInputBackgroundValue)
    GetInputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF4IF4_GetInputBackgroundValue)
    SetOutputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF4IF4_SetOutputForegroundValue)
    GetOutputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF4IF4_GetOutputForegroundValue)
    SetOutputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF4IF4_SetOutputBackgroundValue)
    GetOutputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF4IF4_GetOutputBackgroundValue)
    InputHasNumericTraitsCheck = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF4IF4_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF4IF4_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSimpleContourExtractorImageFilterPython.delete_itkSimpleContourExtractorImageFilterIF4IF4
    cast = _swig_new_static_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF4IF4_cast)

    def New(*args, **kargs):
        """New() -> itkSimpleContourExtractorImageFilterIF4IF4

        Create a new object of the class itkSimpleContourExtractorImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSimpleContourExtractorImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSimpleContourExtractorImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSimpleContourExtractorImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSimpleContourExtractorImageFilterIF4IF4 in _itkSimpleContourExtractorImageFilterPython:
_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF4IF4_swigregister(itkSimpleContourExtractorImageFilterIF4IF4)
itkSimpleContourExtractorImageFilterIF4IF4___New_orig__ = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF4IF4___New_orig__
itkSimpleContourExtractorImageFilterIF4IF4_cast = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIF4IF4_cast


def itkSimpleContourExtractorImageFilterISS2ISS2_New():
    return itkSimpleContourExtractorImageFilterISS2ISS2.New()

class itkSimpleContourExtractorImageFilterISS2ISS2(itk.itkBoxImageFilterPython.itkBoxImageFilterISS2ISS2):
    r"""Proxy of C++ itkSimpleContourExtractorImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS2ISS2_Clone)
    SetInputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS2ISS2_SetInputForegroundValue)
    GetInputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS2ISS2_GetInputForegroundValue)
    SetInputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS2ISS2_SetInputBackgroundValue)
    GetInputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS2ISS2_GetInputBackgroundValue)
    SetOutputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS2ISS2_SetOutputForegroundValue)
    GetOutputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS2ISS2_GetOutputForegroundValue)
    SetOutputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS2ISS2_SetOutputBackgroundValue)
    GetOutputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS2ISS2_GetOutputBackgroundValue)
    InputHasNumericTraitsCheck = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS2ISS2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS2ISS2_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSimpleContourExtractorImageFilterPython.delete_itkSimpleContourExtractorImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkSimpleContourExtractorImageFilterISS2ISS2

        Create a new object of the class itkSimpleContourExtractorImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSimpleContourExtractorImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSimpleContourExtractorImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSimpleContourExtractorImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSimpleContourExtractorImageFilterISS2ISS2 in _itkSimpleContourExtractorImageFilterPython:
_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS2ISS2_swigregister(itkSimpleContourExtractorImageFilterISS2ISS2)
itkSimpleContourExtractorImageFilterISS2ISS2___New_orig__ = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS2ISS2___New_orig__
itkSimpleContourExtractorImageFilterISS2ISS2_cast = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS2ISS2_cast


def itkSimpleContourExtractorImageFilterISS3ISS3_New():
    return itkSimpleContourExtractorImageFilterISS3ISS3.New()

class itkSimpleContourExtractorImageFilterISS3ISS3(itk.itkBoxImageFilterPython.itkBoxImageFilterISS3ISS3):
    r"""Proxy of C++ itkSimpleContourExtractorImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS3ISS3_Clone)
    SetInputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS3ISS3_SetInputForegroundValue)
    GetInputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS3ISS3_GetInputForegroundValue)
    SetInputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS3ISS3_SetInputBackgroundValue)
    GetInputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS3ISS3_GetInputBackgroundValue)
    SetOutputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS3ISS3_SetOutputForegroundValue)
    GetOutputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS3ISS3_GetOutputForegroundValue)
    SetOutputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS3ISS3_SetOutputBackgroundValue)
    GetOutputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS3ISS3_GetOutputBackgroundValue)
    InputHasNumericTraitsCheck = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS3ISS3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS3ISS3_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSimpleContourExtractorImageFilterPython.delete_itkSimpleContourExtractorImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkSimpleContourExtractorImageFilterISS3ISS3

        Create a new object of the class itkSimpleContourExtractorImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSimpleContourExtractorImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSimpleContourExtractorImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSimpleContourExtractorImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSimpleContourExtractorImageFilterISS3ISS3 in _itkSimpleContourExtractorImageFilterPython:
_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS3ISS3_swigregister(itkSimpleContourExtractorImageFilterISS3ISS3)
itkSimpleContourExtractorImageFilterISS3ISS3___New_orig__ = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS3ISS3___New_orig__
itkSimpleContourExtractorImageFilterISS3ISS3_cast = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS3ISS3_cast


def itkSimpleContourExtractorImageFilterISS4ISS4_New():
    return itkSimpleContourExtractorImageFilterISS4ISS4.New()

class itkSimpleContourExtractorImageFilterISS4ISS4(itk.itkBoxImageFilterPython.itkBoxImageFilterISS4ISS4):
    r"""Proxy of C++ itkSimpleContourExtractorImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS4ISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS4ISS4_Clone)
    SetInputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS4ISS4_SetInputForegroundValue)
    GetInputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS4ISS4_GetInputForegroundValue)
    SetInputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS4ISS4_SetInputBackgroundValue)
    GetInputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS4ISS4_GetInputBackgroundValue)
    SetOutputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS4ISS4_SetOutputForegroundValue)
    GetOutputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS4ISS4_GetOutputForegroundValue)
    SetOutputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS4ISS4_SetOutputBackgroundValue)
    GetOutputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS4ISS4_GetOutputBackgroundValue)
    InputHasNumericTraitsCheck = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS4ISS4_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS4ISS4_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSimpleContourExtractorImageFilterPython.delete_itkSimpleContourExtractorImageFilterISS4ISS4
    cast = _swig_new_static_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS4ISS4_cast)

    def New(*args, **kargs):
        """New() -> itkSimpleContourExtractorImageFilterISS4ISS4

        Create a new object of the class itkSimpleContourExtractorImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSimpleContourExtractorImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSimpleContourExtractorImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSimpleContourExtractorImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSimpleContourExtractorImageFilterISS4ISS4 in _itkSimpleContourExtractorImageFilterPython:
_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS4ISS4_swigregister(itkSimpleContourExtractorImageFilterISS4ISS4)
itkSimpleContourExtractorImageFilterISS4ISS4___New_orig__ = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS4ISS4___New_orig__
itkSimpleContourExtractorImageFilterISS4ISS4_cast = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterISS4ISS4_cast


def itkSimpleContourExtractorImageFilterIUC2IUC2_New():
    return itkSimpleContourExtractorImageFilterIUC2IUC2.New()

class itkSimpleContourExtractorImageFilterIUC2IUC2(itk.itkBoxImageFilterPython.itkBoxImageFilterIUC2IUC2):
    r"""Proxy of C++ itkSimpleContourExtractorImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC2IUC2_Clone)
    SetInputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC2IUC2_SetInputForegroundValue)
    GetInputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC2IUC2_GetInputForegroundValue)
    SetInputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC2IUC2_SetInputBackgroundValue)
    GetInputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC2IUC2_GetInputBackgroundValue)
    SetOutputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC2IUC2_SetOutputForegroundValue)
    GetOutputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC2IUC2_GetOutputForegroundValue)
    SetOutputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC2IUC2_SetOutputBackgroundValue)
    GetOutputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC2IUC2_GetOutputBackgroundValue)
    InputHasNumericTraitsCheck = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC2IUC2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC2IUC2_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSimpleContourExtractorImageFilterPython.delete_itkSimpleContourExtractorImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkSimpleContourExtractorImageFilterIUC2IUC2

        Create a new object of the class itkSimpleContourExtractorImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSimpleContourExtractorImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSimpleContourExtractorImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSimpleContourExtractorImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSimpleContourExtractorImageFilterIUC2IUC2 in _itkSimpleContourExtractorImageFilterPython:
_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC2IUC2_swigregister(itkSimpleContourExtractorImageFilterIUC2IUC2)
itkSimpleContourExtractorImageFilterIUC2IUC2___New_orig__ = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC2IUC2___New_orig__
itkSimpleContourExtractorImageFilterIUC2IUC2_cast = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC2IUC2_cast


def itkSimpleContourExtractorImageFilterIUC3IUC3_New():
    return itkSimpleContourExtractorImageFilterIUC3IUC3.New()

class itkSimpleContourExtractorImageFilterIUC3IUC3(itk.itkBoxImageFilterPython.itkBoxImageFilterIUC3IUC3):
    r"""Proxy of C++ itkSimpleContourExtractorImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC3IUC3_Clone)
    SetInputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC3IUC3_SetInputForegroundValue)
    GetInputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC3IUC3_GetInputForegroundValue)
    SetInputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC3IUC3_SetInputBackgroundValue)
    GetInputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC3IUC3_GetInputBackgroundValue)
    SetOutputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC3IUC3_SetOutputForegroundValue)
    GetOutputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC3IUC3_GetOutputForegroundValue)
    SetOutputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC3IUC3_SetOutputBackgroundValue)
    GetOutputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC3IUC3_GetOutputBackgroundValue)
    InputHasNumericTraitsCheck = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC3IUC3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC3IUC3_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSimpleContourExtractorImageFilterPython.delete_itkSimpleContourExtractorImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkSimpleContourExtractorImageFilterIUC3IUC3

        Create a new object of the class itkSimpleContourExtractorImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSimpleContourExtractorImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSimpleContourExtractorImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSimpleContourExtractorImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSimpleContourExtractorImageFilterIUC3IUC3 in _itkSimpleContourExtractorImageFilterPython:
_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC3IUC3_swigregister(itkSimpleContourExtractorImageFilterIUC3IUC3)
itkSimpleContourExtractorImageFilterIUC3IUC3___New_orig__ = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC3IUC3___New_orig__
itkSimpleContourExtractorImageFilterIUC3IUC3_cast = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC3IUC3_cast


def itkSimpleContourExtractorImageFilterIUC4IUC4_New():
    return itkSimpleContourExtractorImageFilterIUC4IUC4.New()

class itkSimpleContourExtractorImageFilterIUC4IUC4(itk.itkBoxImageFilterPython.itkBoxImageFilterIUC4IUC4):
    r"""Proxy of C++ itkSimpleContourExtractorImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC4IUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC4IUC4_Clone)
    SetInputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC4IUC4_SetInputForegroundValue)
    GetInputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC4IUC4_GetInputForegroundValue)
    SetInputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC4IUC4_SetInputBackgroundValue)
    GetInputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC4IUC4_GetInputBackgroundValue)
    SetOutputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC4IUC4_SetOutputForegroundValue)
    GetOutputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC4IUC4_GetOutputForegroundValue)
    SetOutputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC4IUC4_SetOutputBackgroundValue)
    GetOutputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC4IUC4_GetOutputBackgroundValue)
    InputHasNumericTraitsCheck = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC4IUC4_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC4IUC4_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSimpleContourExtractorImageFilterPython.delete_itkSimpleContourExtractorImageFilterIUC4IUC4
    cast = _swig_new_static_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC4IUC4_cast)

    def New(*args, **kargs):
        """New() -> itkSimpleContourExtractorImageFilterIUC4IUC4

        Create a new object of the class itkSimpleContourExtractorImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSimpleContourExtractorImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSimpleContourExtractorImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSimpleContourExtractorImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSimpleContourExtractorImageFilterIUC4IUC4 in _itkSimpleContourExtractorImageFilterPython:
_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC4IUC4_swigregister(itkSimpleContourExtractorImageFilterIUC4IUC4)
itkSimpleContourExtractorImageFilterIUC4IUC4___New_orig__ = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC4IUC4___New_orig__
itkSimpleContourExtractorImageFilterIUC4IUC4_cast = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUC4IUC4_cast


def itkSimpleContourExtractorImageFilterIUS2IUS2_New():
    return itkSimpleContourExtractorImageFilterIUS2IUS2.New()

class itkSimpleContourExtractorImageFilterIUS2IUS2(itk.itkBoxImageFilterPython.itkBoxImageFilterIUS2IUS2):
    r"""Proxy of C++ itkSimpleContourExtractorImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS2IUS2_Clone)
    SetInputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS2IUS2_SetInputForegroundValue)
    GetInputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS2IUS2_GetInputForegroundValue)
    SetInputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS2IUS2_SetInputBackgroundValue)
    GetInputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS2IUS2_GetInputBackgroundValue)
    SetOutputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS2IUS2_SetOutputForegroundValue)
    GetOutputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS2IUS2_GetOutputForegroundValue)
    SetOutputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS2IUS2_SetOutputBackgroundValue)
    GetOutputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS2IUS2_GetOutputBackgroundValue)
    InputHasNumericTraitsCheck = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS2IUS2_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS2IUS2_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSimpleContourExtractorImageFilterPython.delete_itkSimpleContourExtractorImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkSimpleContourExtractorImageFilterIUS2IUS2

        Create a new object of the class itkSimpleContourExtractorImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSimpleContourExtractorImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSimpleContourExtractorImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSimpleContourExtractorImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSimpleContourExtractorImageFilterIUS2IUS2 in _itkSimpleContourExtractorImageFilterPython:
_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS2IUS2_swigregister(itkSimpleContourExtractorImageFilterIUS2IUS2)
itkSimpleContourExtractorImageFilterIUS2IUS2___New_orig__ = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS2IUS2___New_orig__
itkSimpleContourExtractorImageFilterIUS2IUS2_cast = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS2IUS2_cast


def itkSimpleContourExtractorImageFilterIUS3IUS3_New():
    return itkSimpleContourExtractorImageFilterIUS3IUS3.New()

class itkSimpleContourExtractorImageFilterIUS3IUS3(itk.itkBoxImageFilterPython.itkBoxImageFilterIUS3IUS3):
    r"""Proxy of C++ itkSimpleContourExtractorImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS3IUS3_Clone)
    SetInputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS3IUS3_SetInputForegroundValue)
    GetInputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS3IUS3_GetInputForegroundValue)
    SetInputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS3IUS3_SetInputBackgroundValue)
    GetInputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS3IUS3_GetInputBackgroundValue)
    SetOutputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS3IUS3_SetOutputForegroundValue)
    GetOutputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS3IUS3_GetOutputForegroundValue)
    SetOutputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS3IUS3_SetOutputBackgroundValue)
    GetOutputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS3IUS3_GetOutputBackgroundValue)
    InputHasNumericTraitsCheck = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS3IUS3_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS3IUS3_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSimpleContourExtractorImageFilterPython.delete_itkSimpleContourExtractorImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkSimpleContourExtractorImageFilterIUS3IUS3

        Create a new object of the class itkSimpleContourExtractorImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSimpleContourExtractorImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSimpleContourExtractorImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSimpleContourExtractorImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSimpleContourExtractorImageFilterIUS3IUS3 in _itkSimpleContourExtractorImageFilterPython:
_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS3IUS3_swigregister(itkSimpleContourExtractorImageFilterIUS3IUS3)
itkSimpleContourExtractorImageFilterIUS3IUS3___New_orig__ = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS3IUS3___New_orig__
itkSimpleContourExtractorImageFilterIUS3IUS3_cast = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS3IUS3_cast


def itkSimpleContourExtractorImageFilterIUS4IUS4_New():
    return itkSimpleContourExtractorImageFilterIUS4IUS4.New()

class itkSimpleContourExtractorImageFilterIUS4IUS4(itk.itkBoxImageFilterPython.itkBoxImageFilterIUS4IUS4):
    r"""Proxy of C++ itkSimpleContourExtractorImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS4IUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS4IUS4_Clone)
    SetInputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS4IUS4_SetInputForegroundValue)
    GetInputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS4IUS4_GetInputForegroundValue)
    SetInputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS4IUS4_SetInputBackgroundValue)
    GetInputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS4IUS4_GetInputBackgroundValue)
    SetOutputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS4IUS4_SetOutputForegroundValue)
    GetOutputForegroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS4IUS4_GetOutputForegroundValue)
    SetOutputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS4IUS4_SetOutputBackgroundValue)
    GetOutputBackgroundValue = _swig_new_instance_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS4IUS4_GetOutputBackgroundValue)
    InputHasNumericTraitsCheck = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS4IUS4_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS4IUS4_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSimpleContourExtractorImageFilterPython.delete_itkSimpleContourExtractorImageFilterIUS4IUS4
    cast = _swig_new_static_method(_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS4IUS4_cast)

    def New(*args, **kargs):
        """New() -> itkSimpleContourExtractorImageFilterIUS4IUS4

        Create a new object of the class itkSimpleContourExtractorImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSimpleContourExtractorImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSimpleContourExtractorImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSimpleContourExtractorImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSimpleContourExtractorImageFilterIUS4IUS4 in _itkSimpleContourExtractorImageFilterPython:
_itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS4IUS4_swigregister(itkSimpleContourExtractorImageFilterIUS4IUS4)
itkSimpleContourExtractorImageFilterIUS4IUS4___New_orig__ = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS4IUS4___New_orig__
itkSimpleContourExtractorImageFilterIUS4IUS4_cast = _itkSimpleContourExtractorImageFilterPython.itkSimpleContourExtractorImageFilterIUS4IUS4_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def simple_contour_extractor_image_filter(*args: itkt.ImageLike,  input_foreground_value: float=..., input_background_value: float=..., output_foreground_value: float=..., output_background_value: float=..., radius: Union[int, Sequence[int]]=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for SimpleContourExtractorImageFilter"""
    import itk

    kwarg_typehints = { 'input_foreground_value':input_foreground_value,'input_background_value':input_background_value,'output_foreground_value':output_foreground_value,'output_background_value':output_background_value,'radius':radius }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.SimpleContourExtractorImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def simple_contour_extractor_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageFeature.SimpleContourExtractorImageFilter
    simple_contour_extractor_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    simple_contour_extractor_image_filter.__doc__ = filter_object.__doc__




