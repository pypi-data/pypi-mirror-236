# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKFastMarchingPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _ITKFastMarchingBasePython
else:
    import _ITKFastMarchingBasePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _ITKFastMarchingBasePython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _ITKFastMarchingBasePython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkImageToImageFilterAPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkVectorImagePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkImageRegionPython
import itk.itkRGBAPixelPython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkNodePairPython
import itk.itkFastMarchingStoppingCriterionBasePython
import itk.itkLevelSetNodePython
class itkFastMarchingBaseID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkFastMarchingBaseID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetTopologyCheck = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_SetTopologyCheck)
    GetTopologyCheck = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_GetTopologyCheck)
    SetTrialPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_SetTrialPoints)
    GetModifiableTrialPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_GetModifiableTrialPoints)
    GetTrialPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_GetTrialPoints)
    SetAlivePoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_SetAlivePoints)
    GetModifiableAlivePoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_GetModifiableAlivePoints)
    GetAlivePoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_GetAlivePoints)
    SetProcessedPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_SetProcessedPoints)
    GetModifiableProcessedPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_GetModifiableProcessedPoints)
    GetProcessedPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_GetProcessedPoints)
    SetForbiddenPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_SetForbiddenPoints)
    GetModifiableForbiddenPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_GetModifiableForbiddenPoints)
    GetForbiddenPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_GetForbiddenPoints)
    SetStoppingCriterion = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_SetStoppingCriterion)
    GetModifiableStoppingCriterion = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_GetModifiableStoppingCriterion)
    GetStoppingCriterion = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_GetStoppingCriterion)
    GetSpeedConstant = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_GetSpeedConstant)
    SetSpeedConstant = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_SetSpeedConstant)
    GetNormalizationFactor = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_GetNormalizationFactor)
    SetNormalizationFactor = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_SetNormalizationFactor)
    GetTargetReachedValue = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_GetTargetReachedValue)
    SetCollectPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_SetCollectPoints)
    GetCollectPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_GetCollectPoints)
    CollectPointsOn = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_CollectPointsOn)
    CollectPointsOff = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_CollectPointsOff)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkFastMarchingBaseID2ID2
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_cast)

# Register itkFastMarchingBaseID2ID2 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_swigregister(itkFastMarchingBaseID2ID2)
itkFastMarchingBaseID2ID2_cast = _ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_cast

class itkFastMarchingBaseID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkFastMarchingBaseID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetTopologyCheck = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_SetTopologyCheck)
    GetTopologyCheck = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_GetTopologyCheck)
    SetTrialPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_SetTrialPoints)
    GetModifiableTrialPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_GetModifiableTrialPoints)
    GetTrialPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_GetTrialPoints)
    SetAlivePoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_SetAlivePoints)
    GetModifiableAlivePoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_GetModifiableAlivePoints)
    GetAlivePoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_GetAlivePoints)
    SetProcessedPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_SetProcessedPoints)
    GetModifiableProcessedPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_GetModifiableProcessedPoints)
    GetProcessedPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_GetProcessedPoints)
    SetForbiddenPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_SetForbiddenPoints)
    GetModifiableForbiddenPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_GetModifiableForbiddenPoints)
    GetForbiddenPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_GetForbiddenPoints)
    SetStoppingCriterion = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_SetStoppingCriterion)
    GetModifiableStoppingCriterion = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_GetModifiableStoppingCriterion)
    GetStoppingCriterion = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_GetStoppingCriterion)
    GetSpeedConstant = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_GetSpeedConstant)
    SetSpeedConstant = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_SetSpeedConstant)
    GetNormalizationFactor = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_GetNormalizationFactor)
    SetNormalizationFactor = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_SetNormalizationFactor)
    GetTargetReachedValue = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_GetTargetReachedValue)
    SetCollectPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_SetCollectPoints)
    GetCollectPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_GetCollectPoints)
    CollectPointsOn = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_CollectPointsOn)
    CollectPointsOff = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_CollectPointsOff)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkFastMarchingBaseID3ID3
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_cast)

# Register itkFastMarchingBaseID3ID3 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_swigregister(itkFastMarchingBaseID3ID3)
itkFastMarchingBaseID3ID3_cast = _ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_cast

class itkFastMarchingBaseID4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkFastMarchingBaseID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetTopologyCheck = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_SetTopologyCheck)
    GetTopologyCheck = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_GetTopologyCheck)
    SetTrialPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_SetTrialPoints)
    GetModifiableTrialPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_GetModifiableTrialPoints)
    GetTrialPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_GetTrialPoints)
    SetAlivePoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_SetAlivePoints)
    GetModifiableAlivePoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_GetModifiableAlivePoints)
    GetAlivePoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_GetAlivePoints)
    SetProcessedPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_SetProcessedPoints)
    GetModifiableProcessedPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_GetModifiableProcessedPoints)
    GetProcessedPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_GetProcessedPoints)
    SetForbiddenPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_SetForbiddenPoints)
    GetModifiableForbiddenPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_GetModifiableForbiddenPoints)
    GetForbiddenPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_GetForbiddenPoints)
    SetStoppingCriterion = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_SetStoppingCriterion)
    GetModifiableStoppingCriterion = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_GetModifiableStoppingCriterion)
    GetStoppingCriterion = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_GetStoppingCriterion)
    GetSpeedConstant = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_GetSpeedConstant)
    SetSpeedConstant = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_SetSpeedConstant)
    GetNormalizationFactor = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_GetNormalizationFactor)
    SetNormalizationFactor = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_SetNormalizationFactor)
    GetTargetReachedValue = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_GetTargetReachedValue)
    SetCollectPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_SetCollectPoints)
    GetCollectPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_GetCollectPoints)
    CollectPointsOn = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_CollectPointsOn)
    CollectPointsOff = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_CollectPointsOff)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkFastMarchingBaseID4ID4
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_cast)

# Register itkFastMarchingBaseID4ID4 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_swigregister(itkFastMarchingBaseID4ID4)
itkFastMarchingBaseID4ID4_cast = _ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_cast

class itkFastMarchingBaseIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkFastMarchingBaseIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetTopologyCheck = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_SetTopologyCheck)
    GetTopologyCheck = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetTopologyCheck)
    SetTrialPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_SetTrialPoints)
    GetModifiableTrialPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetModifiableTrialPoints)
    GetTrialPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetTrialPoints)
    SetAlivePoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_SetAlivePoints)
    GetModifiableAlivePoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetModifiableAlivePoints)
    GetAlivePoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetAlivePoints)
    SetProcessedPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_SetProcessedPoints)
    GetModifiableProcessedPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetModifiableProcessedPoints)
    GetProcessedPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetProcessedPoints)
    SetForbiddenPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_SetForbiddenPoints)
    GetModifiableForbiddenPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetModifiableForbiddenPoints)
    GetForbiddenPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetForbiddenPoints)
    SetStoppingCriterion = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_SetStoppingCriterion)
    GetModifiableStoppingCriterion = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetModifiableStoppingCriterion)
    GetStoppingCriterion = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetStoppingCriterion)
    GetSpeedConstant = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetSpeedConstant)
    SetSpeedConstant = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_SetSpeedConstant)
    GetNormalizationFactor = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetNormalizationFactor)
    SetNormalizationFactor = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_SetNormalizationFactor)
    GetTargetReachedValue = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetTargetReachedValue)
    SetCollectPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_SetCollectPoints)
    GetCollectPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetCollectPoints)
    CollectPointsOn = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_CollectPointsOn)
    CollectPointsOff = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_CollectPointsOff)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkFastMarchingBaseIF2IF2
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_cast)

# Register itkFastMarchingBaseIF2IF2 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_swigregister(itkFastMarchingBaseIF2IF2)
itkFastMarchingBaseIF2IF2_cast = _ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_cast

class itkFastMarchingBaseIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkFastMarchingBaseIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetTopologyCheck = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_SetTopologyCheck)
    GetTopologyCheck = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetTopologyCheck)
    SetTrialPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_SetTrialPoints)
    GetModifiableTrialPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetModifiableTrialPoints)
    GetTrialPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetTrialPoints)
    SetAlivePoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_SetAlivePoints)
    GetModifiableAlivePoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetModifiableAlivePoints)
    GetAlivePoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetAlivePoints)
    SetProcessedPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_SetProcessedPoints)
    GetModifiableProcessedPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetModifiableProcessedPoints)
    GetProcessedPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetProcessedPoints)
    SetForbiddenPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_SetForbiddenPoints)
    GetModifiableForbiddenPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetModifiableForbiddenPoints)
    GetForbiddenPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetForbiddenPoints)
    SetStoppingCriterion = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_SetStoppingCriterion)
    GetModifiableStoppingCriterion = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetModifiableStoppingCriterion)
    GetStoppingCriterion = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetStoppingCriterion)
    GetSpeedConstant = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetSpeedConstant)
    SetSpeedConstant = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_SetSpeedConstant)
    GetNormalizationFactor = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetNormalizationFactor)
    SetNormalizationFactor = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_SetNormalizationFactor)
    GetTargetReachedValue = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetTargetReachedValue)
    SetCollectPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_SetCollectPoints)
    GetCollectPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetCollectPoints)
    CollectPointsOn = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_CollectPointsOn)
    CollectPointsOff = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_CollectPointsOff)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkFastMarchingBaseIF3IF3
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_cast)

# Register itkFastMarchingBaseIF3IF3 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_swigregister(itkFastMarchingBaseIF3IF3)
itkFastMarchingBaseIF3IF3_cast = _ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_cast

class itkFastMarchingBaseIF4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkFastMarchingBaseIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetTopologyCheck = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_SetTopologyCheck)
    GetTopologyCheck = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_GetTopologyCheck)
    SetTrialPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_SetTrialPoints)
    GetModifiableTrialPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_GetModifiableTrialPoints)
    GetTrialPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_GetTrialPoints)
    SetAlivePoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_SetAlivePoints)
    GetModifiableAlivePoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_GetModifiableAlivePoints)
    GetAlivePoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_GetAlivePoints)
    SetProcessedPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_SetProcessedPoints)
    GetModifiableProcessedPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_GetModifiableProcessedPoints)
    GetProcessedPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_GetProcessedPoints)
    SetForbiddenPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_SetForbiddenPoints)
    GetModifiableForbiddenPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_GetModifiableForbiddenPoints)
    GetForbiddenPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_GetForbiddenPoints)
    SetStoppingCriterion = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_SetStoppingCriterion)
    GetModifiableStoppingCriterion = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_GetModifiableStoppingCriterion)
    GetStoppingCriterion = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_GetStoppingCriterion)
    GetSpeedConstant = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_GetSpeedConstant)
    SetSpeedConstant = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_SetSpeedConstant)
    GetNormalizationFactor = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_GetNormalizationFactor)
    SetNormalizationFactor = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_SetNormalizationFactor)
    GetTargetReachedValue = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_GetTargetReachedValue)
    SetCollectPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_SetCollectPoints)
    GetCollectPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_GetCollectPoints)
    CollectPointsOn = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_CollectPointsOn)
    CollectPointsOff = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_CollectPointsOff)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkFastMarchingBaseIF4IF4
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_cast)

# Register itkFastMarchingBaseIF4IF4 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_swigregister(itkFastMarchingBaseIF4IF4)
itkFastMarchingBaseIF4IF4_cast = _ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_cast

class itkFastMarchingTraitsEnums(object):
    r"""Proxy of C++ itkFastMarchingTraitsEnums class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TopologyCheck_Nothing = _ITKFastMarchingBasePython.itkFastMarchingTraitsEnums_TopologyCheck_Nothing
    
    TopologyCheck_NoHandles = _ITKFastMarchingBasePython.itkFastMarchingTraitsEnums_TopologyCheck_NoHandles
    
    TopologyCheck_Strict = _ITKFastMarchingBasePython.itkFastMarchingTraitsEnums_TopologyCheck_Strict
    

    def __init__(self, *args):
        r"""
        __init__(self) -> itkFastMarchingTraitsEnums
        __init__(self, arg0) -> itkFastMarchingTraitsEnums

        Parameters
        ----------
        arg0: itkFastMarchingTraitsEnums const &

        """
        _ITKFastMarchingBasePython.itkFastMarchingTraitsEnums_swiginit(self, _ITKFastMarchingBasePython.new_itkFastMarchingTraitsEnums(*args))
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkFastMarchingTraitsEnums

# Register itkFastMarchingTraitsEnums in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkFastMarchingTraitsEnums_swigregister(itkFastMarchingTraitsEnums)


def itkVectorContainerUILSND2_New():
    return itkVectorContainerUILSND2.New()

class itkVectorContainerUILSND2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerUILSND2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND2___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND2_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND2_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND2_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND2_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND2_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND2_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND2_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND2_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND2_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND2_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND2_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND2_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND2_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND2_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND2_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND2_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSND2
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSND2

        Create a new object of the class itkVectorContainerUILSND2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSND2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSND2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerUILSND2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerUILSND2 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerUILSND2_swigregister(itkVectorContainerUILSND2)
itkVectorContainerUILSND2___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerUILSND2___New_orig__
itkVectorContainerUILSND2_cast = _ITKFastMarchingBasePython.itkVectorContainerUILSND2_cast


def itkVectorContainerUILSND3_New():
    return itkVectorContainerUILSND3.New()

class itkVectorContainerUILSND3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerUILSND3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND3___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND3_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND3_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND3_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND3_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND3_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND3_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND3_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND3_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND3_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND3_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND3_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND3_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND3_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND3_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND3_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND3_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSND3
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSND3

        Create a new object of the class itkVectorContainerUILSND3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSND3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSND3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerUILSND3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerUILSND3 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerUILSND3_swigregister(itkVectorContainerUILSND3)
itkVectorContainerUILSND3___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerUILSND3___New_orig__
itkVectorContainerUILSND3_cast = _ITKFastMarchingBasePython.itkVectorContainerUILSND3_cast


def itkVectorContainerUILSND4_New():
    return itkVectorContainerUILSND4.New()

class itkVectorContainerUILSND4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerUILSND4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND4___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND4_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND4_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND4_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND4_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND4_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND4_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND4_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND4_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND4_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND4_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND4_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND4_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND4_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND4_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND4_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND4_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSND4
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND4_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSND4

        Create a new object of the class itkVectorContainerUILSND4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSND4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSND4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerUILSND4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerUILSND4 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerUILSND4_swigregister(itkVectorContainerUILSND4)
itkVectorContainerUILSND4___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerUILSND4___New_orig__
itkVectorContainerUILSND4_cast = _ITKFastMarchingBasePython.itkVectorContainerUILSND4_cast


def itkVectorContainerUILSNF2_New():
    return itkVectorContainerUILSNF2.New()

class itkVectorContainerUILSNF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerUILSNF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSNF2
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSNF2

        Create a new object of the class itkVectorContainerUILSNF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSNF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSNF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerUILSNF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerUILSNF2 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_swigregister(itkVectorContainerUILSNF2)
itkVectorContainerUILSNF2___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerUILSNF2___New_orig__
itkVectorContainerUILSNF2_cast = _ITKFastMarchingBasePython.itkVectorContainerUILSNF2_cast


def itkVectorContainerUILSNF3_New():
    return itkVectorContainerUILSNF3.New()

class itkVectorContainerUILSNF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerUILSNF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSNF3
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSNF3

        Create a new object of the class itkVectorContainerUILSNF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSNF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSNF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerUILSNF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerUILSNF3 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_swigregister(itkVectorContainerUILSNF3)
itkVectorContainerUILSNF3___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerUILSNF3___New_orig__
itkVectorContainerUILSNF3_cast = _ITKFastMarchingBasePython.itkVectorContainerUILSNF3_cast


def itkVectorContainerUILSNF4_New():
    return itkVectorContainerUILSNF4.New()

class itkVectorContainerUILSNF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerUILSNF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF4___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF4_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF4_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF4_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF4_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF4_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF4_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF4_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF4_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF4_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF4_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF4_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF4_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF4_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF4_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF4_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF4_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSNF4
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF4_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSNF4

        Create a new object of the class itkVectorContainerUILSNF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSNF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSNF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerUILSNF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerUILSNF4 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerUILSNF4_swigregister(itkVectorContainerUILSNF4)
itkVectorContainerUILSNF4___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerUILSNF4___New_orig__
itkVectorContainerUILSNF4_cast = _ITKFastMarchingBasePython.itkVectorContainerUILSNF4_cast


def itkVectorContainerUILSNSS2_New():
    return itkVectorContainerUILSNSS2.New()

class itkVectorContainerUILSNSS2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerUILSNSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSNSS2
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSNSS2

        Create a new object of the class itkVectorContainerUILSNSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSNSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSNSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerUILSNSS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerUILSNSS2 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_swigregister(itkVectorContainerUILSNSS2)
itkVectorContainerUILSNSS2___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerUILSNSS2___New_orig__
itkVectorContainerUILSNSS2_cast = _ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_cast


def itkVectorContainerUILSNSS3_New():
    return itkVectorContainerUILSNSS3.New()

class itkVectorContainerUILSNSS3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerUILSNSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSNSS3
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSNSS3

        Create a new object of the class itkVectorContainerUILSNSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSNSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSNSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerUILSNSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerUILSNSS3 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_swigregister(itkVectorContainerUILSNSS3)
itkVectorContainerUILSNSS3___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerUILSNSS3___New_orig__
itkVectorContainerUILSNSS3_cast = _ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_cast


def itkVectorContainerUILSNSS4_New():
    return itkVectorContainerUILSNSS4.New()

class itkVectorContainerUILSNSS4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerUILSNSS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSNSS4
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSNSS4

        Create a new object of the class itkVectorContainerUILSNSS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSNSS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSNSS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerUILSNSS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerUILSNSS4 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_swigregister(itkVectorContainerUILSNSS4)
itkVectorContainerUILSNSS4___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerUILSNSS4___New_orig__
itkVectorContainerUILSNSS4_cast = _ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_cast


def itkVectorContainerUILSNUC2_New():
    return itkVectorContainerUILSNUC2.New()

class itkVectorContainerUILSNUC2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerUILSNUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSNUC2
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSNUC2

        Create a new object of the class itkVectorContainerUILSNUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSNUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSNUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerUILSNUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerUILSNUC2 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_swigregister(itkVectorContainerUILSNUC2)
itkVectorContainerUILSNUC2___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerUILSNUC2___New_orig__
itkVectorContainerUILSNUC2_cast = _ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_cast


def itkVectorContainerUILSNUC3_New():
    return itkVectorContainerUILSNUC3.New()

class itkVectorContainerUILSNUC3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerUILSNUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSNUC3
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSNUC3

        Create a new object of the class itkVectorContainerUILSNUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSNUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSNUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerUILSNUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerUILSNUC3 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_swigregister(itkVectorContainerUILSNUC3)
itkVectorContainerUILSNUC3___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerUILSNUC3___New_orig__
itkVectorContainerUILSNUC3_cast = _ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_cast


def itkVectorContainerUILSNUC4_New():
    return itkVectorContainerUILSNUC4.New()

class itkVectorContainerUILSNUC4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerUILSNUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSNUC4
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSNUC4

        Create a new object of the class itkVectorContainerUILSNUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSNUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSNUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerUILSNUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerUILSNUC4 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_swigregister(itkVectorContainerUILSNUC4)
itkVectorContainerUILSNUC4___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerUILSNUC4___New_orig__
itkVectorContainerUILSNUC4_cast = _ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_cast


def itkVectorContainerUILSNUS2_New():
    return itkVectorContainerUILSNUS2.New()

class itkVectorContainerUILSNUS2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerUILSNUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSNUS2
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSNUS2

        Create a new object of the class itkVectorContainerUILSNUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSNUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSNUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerUILSNUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerUILSNUS2 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_swigregister(itkVectorContainerUILSNUS2)
itkVectorContainerUILSNUS2___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerUILSNUS2___New_orig__
itkVectorContainerUILSNUS2_cast = _ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_cast


def itkVectorContainerUILSNUS3_New():
    return itkVectorContainerUILSNUS3.New()

class itkVectorContainerUILSNUS3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerUILSNUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSNUS3
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSNUS3

        Create a new object of the class itkVectorContainerUILSNUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSNUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSNUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerUILSNUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerUILSNUS3 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_swigregister(itkVectorContainerUILSNUS3)
itkVectorContainerUILSNUS3___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerUILSNUS3___New_orig__
itkVectorContainerUILSNUS3_cast = _ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_cast


def itkVectorContainerUILSNUS4_New():
    return itkVectorContainerUILSNUS4.New()

class itkVectorContainerUILSNUS4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerUILSNUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSNUS4
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSNUS4

        Create a new object of the class itkVectorContainerUILSNUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSNUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSNUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerUILSNUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerUILSNUS4 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_swigregister(itkVectorContainerUILSNUS4)
itkVectorContainerUILSNUS4___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerUILSNUS4___New_orig__
itkVectorContainerUILSNUS4_cast = _ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_cast


def itkVectorContainerULNPI2D_New():
    return itkVectorContainerULNPI2D.New()

class itkVectorContainerULNPI2D(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULNPI2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2D___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2D_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2D_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2D_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2D_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2D_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2D_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2D_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2D_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2D_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2D_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2D_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2D_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2D_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2D_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2D_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2D_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULNPI2D
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2D_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULNPI2D

        Create a new object of the class itkVectorContainerULNPI2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULNPI2D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULNPI2D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULNPI2D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULNPI2D in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerULNPI2D_swigregister(itkVectorContainerULNPI2D)
itkVectorContainerULNPI2D___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerULNPI2D___New_orig__
itkVectorContainerULNPI2D_cast = _ITKFastMarchingBasePython.itkVectorContainerULNPI2D_cast


def itkVectorContainerULNPI2F_New():
    return itkVectorContainerULNPI2F.New()

class itkVectorContainerULNPI2F(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULNPI2F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2F___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2F_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2F_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2F_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2F_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2F_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2F_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2F_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2F_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2F_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2F_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2F_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2F_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2F_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2F_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2F_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2F_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULNPI2F
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2F_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULNPI2F

        Create a new object of the class itkVectorContainerULNPI2F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULNPI2F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULNPI2F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULNPI2F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULNPI2F in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerULNPI2F_swigregister(itkVectorContainerULNPI2F)
itkVectorContainerULNPI2F___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerULNPI2F___New_orig__
itkVectorContainerULNPI2F_cast = _ITKFastMarchingBasePython.itkVectorContainerULNPI2F_cast


def itkVectorContainerULNPI2SS_New():
    return itkVectorContainerULNPI2SS.New()

class itkVectorContainerULNPI2SS(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULNPI2SS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2SS___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2SS_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2SS_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2SS_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2SS_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2SS_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2SS_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2SS_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2SS_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2SS_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2SS_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2SS_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2SS_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2SS_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2SS_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2SS_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2SS_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULNPI2SS
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2SS_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULNPI2SS

        Create a new object of the class itkVectorContainerULNPI2SS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULNPI2SS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULNPI2SS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULNPI2SS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULNPI2SS in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerULNPI2SS_swigregister(itkVectorContainerULNPI2SS)
itkVectorContainerULNPI2SS___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerULNPI2SS___New_orig__
itkVectorContainerULNPI2SS_cast = _ITKFastMarchingBasePython.itkVectorContainerULNPI2SS_cast


def itkVectorContainerULNPI2UC_New():
    return itkVectorContainerULNPI2UC.New()

class itkVectorContainerULNPI2UC(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULNPI2UC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2UC___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2UC_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2UC_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2UC_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2UC_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2UC_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2UC_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2UC_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2UC_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2UC_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2UC_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2UC_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2UC_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2UC_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2UC_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2UC_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2UC_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULNPI2UC
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2UC_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULNPI2UC

        Create a new object of the class itkVectorContainerULNPI2UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULNPI2UC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULNPI2UC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULNPI2UC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULNPI2UC in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerULNPI2UC_swigregister(itkVectorContainerULNPI2UC)
itkVectorContainerULNPI2UC___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerULNPI2UC___New_orig__
itkVectorContainerULNPI2UC_cast = _ITKFastMarchingBasePython.itkVectorContainerULNPI2UC_cast


def itkVectorContainerULNPI2US_New():
    return itkVectorContainerULNPI2US.New()

class itkVectorContainerULNPI2US(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULNPI2US class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2US___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2US_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2US_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2US_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2US_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2US_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2US_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2US_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2US_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2US_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2US_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2US_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2US_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2US_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2US_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2US_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2US_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULNPI2US
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI2US_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULNPI2US

        Create a new object of the class itkVectorContainerULNPI2US and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULNPI2US.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULNPI2US.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULNPI2US.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULNPI2US in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerULNPI2US_swigregister(itkVectorContainerULNPI2US)
itkVectorContainerULNPI2US___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerULNPI2US___New_orig__
itkVectorContainerULNPI2US_cast = _ITKFastMarchingBasePython.itkVectorContainerULNPI2US_cast


def itkVectorContainerULNPI3D_New():
    return itkVectorContainerULNPI3D.New()

class itkVectorContainerULNPI3D(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULNPI3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3D___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3D_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3D_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3D_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3D_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3D_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3D_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3D_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3D_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3D_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3D_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3D_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3D_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3D_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3D_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3D_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3D_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULNPI3D
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3D_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULNPI3D

        Create a new object of the class itkVectorContainerULNPI3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULNPI3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULNPI3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULNPI3D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULNPI3D in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerULNPI3D_swigregister(itkVectorContainerULNPI3D)
itkVectorContainerULNPI3D___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerULNPI3D___New_orig__
itkVectorContainerULNPI3D_cast = _ITKFastMarchingBasePython.itkVectorContainerULNPI3D_cast


def itkVectorContainerULNPI3F_New():
    return itkVectorContainerULNPI3F.New()

class itkVectorContainerULNPI3F(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULNPI3F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3F___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3F_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3F_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3F_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3F_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3F_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3F_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3F_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3F_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3F_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3F_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3F_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3F_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3F_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3F_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3F_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3F_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULNPI3F
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3F_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULNPI3F

        Create a new object of the class itkVectorContainerULNPI3F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULNPI3F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULNPI3F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULNPI3F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULNPI3F in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerULNPI3F_swigregister(itkVectorContainerULNPI3F)
itkVectorContainerULNPI3F___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerULNPI3F___New_orig__
itkVectorContainerULNPI3F_cast = _ITKFastMarchingBasePython.itkVectorContainerULNPI3F_cast


def itkVectorContainerULNPI3SS_New():
    return itkVectorContainerULNPI3SS.New()

class itkVectorContainerULNPI3SS(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULNPI3SS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3SS___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3SS_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3SS_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3SS_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3SS_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3SS_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3SS_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3SS_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3SS_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3SS_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3SS_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3SS_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3SS_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3SS_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3SS_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3SS_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3SS_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULNPI3SS
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3SS_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULNPI3SS

        Create a new object of the class itkVectorContainerULNPI3SS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULNPI3SS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULNPI3SS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULNPI3SS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULNPI3SS in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerULNPI3SS_swigregister(itkVectorContainerULNPI3SS)
itkVectorContainerULNPI3SS___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerULNPI3SS___New_orig__
itkVectorContainerULNPI3SS_cast = _ITKFastMarchingBasePython.itkVectorContainerULNPI3SS_cast


def itkVectorContainerULNPI3UC_New():
    return itkVectorContainerULNPI3UC.New()

class itkVectorContainerULNPI3UC(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULNPI3UC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3UC___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3UC_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3UC_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3UC_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3UC_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3UC_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3UC_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3UC_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3UC_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3UC_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3UC_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3UC_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3UC_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3UC_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3UC_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3UC_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3UC_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULNPI3UC
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3UC_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULNPI3UC

        Create a new object of the class itkVectorContainerULNPI3UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULNPI3UC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULNPI3UC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULNPI3UC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULNPI3UC in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerULNPI3UC_swigregister(itkVectorContainerULNPI3UC)
itkVectorContainerULNPI3UC___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerULNPI3UC___New_orig__
itkVectorContainerULNPI3UC_cast = _ITKFastMarchingBasePython.itkVectorContainerULNPI3UC_cast


def itkVectorContainerULNPI3US_New():
    return itkVectorContainerULNPI3US.New()

class itkVectorContainerULNPI3US(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULNPI3US class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3US___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3US_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3US_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3US_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3US_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3US_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3US_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3US_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3US_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3US_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3US_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3US_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3US_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3US_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3US_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3US_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3US_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULNPI3US
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI3US_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULNPI3US

        Create a new object of the class itkVectorContainerULNPI3US and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULNPI3US.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULNPI3US.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULNPI3US.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULNPI3US in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerULNPI3US_swigregister(itkVectorContainerULNPI3US)
itkVectorContainerULNPI3US___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerULNPI3US___New_orig__
itkVectorContainerULNPI3US_cast = _ITKFastMarchingBasePython.itkVectorContainerULNPI3US_cast


def itkVectorContainerULNPI4D_New():
    return itkVectorContainerULNPI4D.New()

class itkVectorContainerULNPI4D(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULNPI4D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4D___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4D_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4D_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4D_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4D_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4D_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4D_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4D_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4D_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4D_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4D_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4D_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4D_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4D_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4D_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4D_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4D_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULNPI4D
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4D_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULNPI4D

        Create a new object of the class itkVectorContainerULNPI4D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULNPI4D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULNPI4D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULNPI4D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULNPI4D in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerULNPI4D_swigregister(itkVectorContainerULNPI4D)
itkVectorContainerULNPI4D___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerULNPI4D___New_orig__
itkVectorContainerULNPI4D_cast = _ITKFastMarchingBasePython.itkVectorContainerULNPI4D_cast


def itkVectorContainerULNPI4F_New():
    return itkVectorContainerULNPI4F.New()

class itkVectorContainerULNPI4F(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULNPI4F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4F___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4F_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4F_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4F_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4F_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4F_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4F_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4F_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4F_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4F_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4F_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4F_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4F_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4F_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4F_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4F_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4F_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULNPI4F
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4F_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULNPI4F

        Create a new object of the class itkVectorContainerULNPI4F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULNPI4F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULNPI4F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULNPI4F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULNPI4F in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerULNPI4F_swigregister(itkVectorContainerULNPI4F)
itkVectorContainerULNPI4F___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerULNPI4F___New_orig__
itkVectorContainerULNPI4F_cast = _ITKFastMarchingBasePython.itkVectorContainerULNPI4F_cast


def itkVectorContainerULNPI4SS_New():
    return itkVectorContainerULNPI4SS.New()

class itkVectorContainerULNPI4SS(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULNPI4SS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4SS___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4SS_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4SS_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4SS_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4SS_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4SS_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4SS_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4SS_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4SS_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4SS_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4SS_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4SS_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4SS_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4SS_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4SS_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4SS_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4SS_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULNPI4SS
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4SS_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULNPI4SS

        Create a new object of the class itkVectorContainerULNPI4SS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULNPI4SS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULNPI4SS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULNPI4SS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULNPI4SS in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerULNPI4SS_swigregister(itkVectorContainerULNPI4SS)
itkVectorContainerULNPI4SS___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerULNPI4SS___New_orig__
itkVectorContainerULNPI4SS_cast = _ITKFastMarchingBasePython.itkVectorContainerULNPI4SS_cast


def itkVectorContainerULNPI4UC_New():
    return itkVectorContainerULNPI4UC.New()

class itkVectorContainerULNPI4UC(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULNPI4UC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4UC___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4UC_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4UC_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4UC_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4UC_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4UC_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4UC_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4UC_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4UC_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4UC_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4UC_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4UC_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4UC_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4UC_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4UC_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4UC_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4UC_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULNPI4UC
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4UC_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULNPI4UC

        Create a new object of the class itkVectorContainerULNPI4UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULNPI4UC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULNPI4UC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULNPI4UC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULNPI4UC in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerULNPI4UC_swigregister(itkVectorContainerULNPI4UC)
itkVectorContainerULNPI4UC___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerULNPI4UC___New_orig__
itkVectorContainerULNPI4UC_cast = _ITKFastMarchingBasePython.itkVectorContainerULNPI4UC_cast


def itkVectorContainerULNPI4US_New():
    return itkVectorContainerULNPI4US.New()

class itkVectorContainerULNPI4US(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULNPI4US class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4US___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4US_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4US_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4US_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4US_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4US_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4US_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4US_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4US_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4US_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4US_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4US_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4US_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4US_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4US_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4US_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4US_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULNPI4US
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULNPI4US_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULNPI4US

        Create a new object of the class itkVectorContainerULNPI4US and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULNPI4US.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULNPI4US.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULNPI4US.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULNPI4US in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerULNPI4US_swigregister(itkVectorContainerULNPI4US)
itkVectorContainerULNPI4US___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerULNPI4US___New_orig__
itkVectorContainerULNPI4US_cast = _ITKFastMarchingBasePython.itkVectorContainerULNPI4US_cast



