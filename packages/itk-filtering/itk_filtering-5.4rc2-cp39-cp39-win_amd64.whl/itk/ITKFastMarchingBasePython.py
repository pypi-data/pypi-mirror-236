# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKFastMarchingPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _ITKFastMarchingBasePython
else:
    import _ITKFastMarchingBasePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _ITKFastMarchingBasePython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _ITKFastMarchingBasePython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageRegionPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageToImageFilterCommonPython
import itk.itkNodePairPython
import itk.itkFastMarchingStoppingCriterionBasePython
import itk.itkLevelSetNodePython
class itkFastMarchingBaseID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkFastMarchingBaseID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetTopologyCheck = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_SetTopologyCheck)
    GetTopologyCheck = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_GetTopologyCheck)
    SetTrialPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_SetTrialPoints)
    GetModifiableTrialPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_GetModifiableTrialPoints)
    GetTrialPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_GetTrialPoints)
    SetAlivePoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_SetAlivePoints)
    GetModifiableAlivePoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_GetModifiableAlivePoints)
    GetAlivePoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_GetAlivePoints)
    SetProcessedPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_SetProcessedPoints)
    GetModifiableProcessedPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_GetModifiableProcessedPoints)
    GetProcessedPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_GetProcessedPoints)
    SetForbiddenPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_SetForbiddenPoints)
    GetModifiableForbiddenPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_GetModifiableForbiddenPoints)
    GetForbiddenPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_GetForbiddenPoints)
    SetStoppingCriterion = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_SetStoppingCriterion)
    GetModifiableStoppingCriterion = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_GetModifiableStoppingCriterion)
    GetStoppingCriterion = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_GetStoppingCriterion)
    GetSpeedConstant = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_GetSpeedConstant)
    SetSpeedConstant = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_SetSpeedConstant)
    GetNormalizationFactor = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_GetNormalizationFactor)
    SetNormalizationFactor = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_SetNormalizationFactor)
    GetTargetReachedValue = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_GetTargetReachedValue)
    SetCollectPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_SetCollectPoints)
    GetCollectPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_GetCollectPoints)
    CollectPointsOn = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_CollectPointsOn)
    CollectPointsOff = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_CollectPointsOff)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkFastMarchingBaseID2ID2
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_cast)

# Register itkFastMarchingBaseID2ID2 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_swigregister(itkFastMarchingBaseID2ID2)
itkFastMarchingBaseID2ID2_cast = _ITKFastMarchingBasePython.itkFastMarchingBaseID2ID2_cast

class itkFastMarchingBaseID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkFastMarchingBaseID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetTopologyCheck = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_SetTopologyCheck)
    GetTopologyCheck = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_GetTopologyCheck)
    SetTrialPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_SetTrialPoints)
    GetModifiableTrialPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_GetModifiableTrialPoints)
    GetTrialPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_GetTrialPoints)
    SetAlivePoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_SetAlivePoints)
    GetModifiableAlivePoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_GetModifiableAlivePoints)
    GetAlivePoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_GetAlivePoints)
    SetProcessedPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_SetProcessedPoints)
    GetModifiableProcessedPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_GetModifiableProcessedPoints)
    GetProcessedPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_GetProcessedPoints)
    SetForbiddenPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_SetForbiddenPoints)
    GetModifiableForbiddenPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_GetModifiableForbiddenPoints)
    GetForbiddenPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_GetForbiddenPoints)
    SetStoppingCriterion = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_SetStoppingCriterion)
    GetModifiableStoppingCriterion = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_GetModifiableStoppingCriterion)
    GetStoppingCriterion = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_GetStoppingCriterion)
    GetSpeedConstant = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_GetSpeedConstant)
    SetSpeedConstant = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_SetSpeedConstant)
    GetNormalizationFactor = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_GetNormalizationFactor)
    SetNormalizationFactor = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_SetNormalizationFactor)
    GetTargetReachedValue = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_GetTargetReachedValue)
    SetCollectPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_SetCollectPoints)
    GetCollectPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_GetCollectPoints)
    CollectPointsOn = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_CollectPointsOn)
    CollectPointsOff = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_CollectPointsOff)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkFastMarchingBaseID3ID3
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_cast)

# Register itkFastMarchingBaseID3ID3 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_swigregister(itkFastMarchingBaseID3ID3)
itkFastMarchingBaseID3ID3_cast = _ITKFastMarchingBasePython.itkFastMarchingBaseID3ID3_cast

class itkFastMarchingBaseID4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkFastMarchingBaseID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetTopologyCheck = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_SetTopologyCheck)
    GetTopologyCheck = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_GetTopologyCheck)
    SetTrialPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_SetTrialPoints)
    GetModifiableTrialPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_GetModifiableTrialPoints)
    GetTrialPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_GetTrialPoints)
    SetAlivePoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_SetAlivePoints)
    GetModifiableAlivePoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_GetModifiableAlivePoints)
    GetAlivePoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_GetAlivePoints)
    SetProcessedPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_SetProcessedPoints)
    GetModifiableProcessedPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_GetModifiableProcessedPoints)
    GetProcessedPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_GetProcessedPoints)
    SetForbiddenPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_SetForbiddenPoints)
    GetModifiableForbiddenPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_GetModifiableForbiddenPoints)
    GetForbiddenPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_GetForbiddenPoints)
    SetStoppingCriterion = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_SetStoppingCriterion)
    GetModifiableStoppingCriterion = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_GetModifiableStoppingCriterion)
    GetStoppingCriterion = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_GetStoppingCriterion)
    GetSpeedConstant = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_GetSpeedConstant)
    SetSpeedConstant = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_SetSpeedConstant)
    GetNormalizationFactor = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_GetNormalizationFactor)
    SetNormalizationFactor = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_SetNormalizationFactor)
    GetTargetReachedValue = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_GetTargetReachedValue)
    SetCollectPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_SetCollectPoints)
    GetCollectPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_GetCollectPoints)
    CollectPointsOn = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_CollectPointsOn)
    CollectPointsOff = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_CollectPointsOff)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkFastMarchingBaseID4ID4
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_cast)

# Register itkFastMarchingBaseID4ID4 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_swigregister(itkFastMarchingBaseID4ID4)
itkFastMarchingBaseID4ID4_cast = _ITKFastMarchingBasePython.itkFastMarchingBaseID4ID4_cast

class itkFastMarchingBaseIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkFastMarchingBaseIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetTopologyCheck = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_SetTopologyCheck)
    GetTopologyCheck = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetTopologyCheck)
    SetTrialPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_SetTrialPoints)
    GetModifiableTrialPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetModifiableTrialPoints)
    GetTrialPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetTrialPoints)
    SetAlivePoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_SetAlivePoints)
    GetModifiableAlivePoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetModifiableAlivePoints)
    GetAlivePoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetAlivePoints)
    SetProcessedPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_SetProcessedPoints)
    GetModifiableProcessedPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetModifiableProcessedPoints)
    GetProcessedPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetProcessedPoints)
    SetForbiddenPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_SetForbiddenPoints)
    GetModifiableForbiddenPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetModifiableForbiddenPoints)
    GetForbiddenPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetForbiddenPoints)
    SetStoppingCriterion = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_SetStoppingCriterion)
    GetModifiableStoppingCriterion = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetModifiableStoppingCriterion)
    GetStoppingCriterion = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetStoppingCriterion)
    GetSpeedConstant = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetSpeedConstant)
    SetSpeedConstant = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_SetSpeedConstant)
    GetNormalizationFactor = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetNormalizationFactor)
    SetNormalizationFactor = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_SetNormalizationFactor)
    GetTargetReachedValue = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetTargetReachedValue)
    SetCollectPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_SetCollectPoints)
    GetCollectPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_GetCollectPoints)
    CollectPointsOn = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_CollectPointsOn)
    CollectPointsOff = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_CollectPointsOff)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkFastMarchingBaseIF2IF2
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_cast)

# Register itkFastMarchingBaseIF2IF2 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_swigregister(itkFastMarchingBaseIF2IF2)
itkFastMarchingBaseIF2IF2_cast = _ITKFastMarchingBasePython.itkFastMarchingBaseIF2IF2_cast

class itkFastMarchingBaseIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkFastMarchingBaseIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetTopologyCheck = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_SetTopologyCheck)
    GetTopologyCheck = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetTopologyCheck)
    SetTrialPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_SetTrialPoints)
    GetModifiableTrialPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetModifiableTrialPoints)
    GetTrialPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetTrialPoints)
    SetAlivePoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_SetAlivePoints)
    GetModifiableAlivePoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetModifiableAlivePoints)
    GetAlivePoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetAlivePoints)
    SetProcessedPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_SetProcessedPoints)
    GetModifiableProcessedPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetModifiableProcessedPoints)
    GetProcessedPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetProcessedPoints)
    SetForbiddenPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_SetForbiddenPoints)
    GetModifiableForbiddenPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetModifiableForbiddenPoints)
    GetForbiddenPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetForbiddenPoints)
    SetStoppingCriterion = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_SetStoppingCriterion)
    GetModifiableStoppingCriterion = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetModifiableStoppingCriterion)
    GetStoppingCriterion = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetStoppingCriterion)
    GetSpeedConstant = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetSpeedConstant)
    SetSpeedConstant = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_SetSpeedConstant)
    GetNormalizationFactor = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetNormalizationFactor)
    SetNormalizationFactor = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_SetNormalizationFactor)
    GetTargetReachedValue = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetTargetReachedValue)
    SetCollectPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_SetCollectPoints)
    GetCollectPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_GetCollectPoints)
    CollectPointsOn = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_CollectPointsOn)
    CollectPointsOff = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_CollectPointsOff)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkFastMarchingBaseIF3IF3
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_cast)

# Register itkFastMarchingBaseIF3IF3 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_swigregister(itkFastMarchingBaseIF3IF3)
itkFastMarchingBaseIF3IF3_cast = _ITKFastMarchingBasePython.itkFastMarchingBaseIF3IF3_cast

class itkFastMarchingBaseIF4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkFastMarchingBaseIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetTopologyCheck = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_SetTopologyCheck)
    GetTopologyCheck = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_GetTopologyCheck)
    SetTrialPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_SetTrialPoints)
    GetModifiableTrialPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_GetModifiableTrialPoints)
    GetTrialPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_GetTrialPoints)
    SetAlivePoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_SetAlivePoints)
    GetModifiableAlivePoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_GetModifiableAlivePoints)
    GetAlivePoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_GetAlivePoints)
    SetProcessedPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_SetProcessedPoints)
    GetModifiableProcessedPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_GetModifiableProcessedPoints)
    GetProcessedPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_GetProcessedPoints)
    SetForbiddenPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_SetForbiddenPoints)
    GetModifiableForbiddenPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_GetModifiableForbiddenPoints)
    GetForbiddenPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_GetForbiddenPoints)
    SetStoppingCriterion = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_SetStoppingCriterion)
    GetModifiableStoppingCriterion = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_GetModifiableStoppingCriterion)
    GetStoppingCriterion = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_GetStoppingCriterion)
    GetSpeedConstant = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_GetSpeedConstant)
    SetSpeedConstant = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_SetSpeedConstant)
    GetNormalizationFactor = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_GetNormalizationFactor)
    SetNormalizationFactor = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_SetNormalizationFactor)
    GetTargetReachedValue = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_GetTargetReachedValue)
    SetCollectPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_SetCollectPoints)
    GetCollectPoints = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_GetCollectPoints)
    CollectPointsOn = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_CollectPointsOn)
    CollectPointsOff = _swig_new_instance_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_CollectPointsOff)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkFastMarchingBaseIF4IF4
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_cast)

# Register itkFastMarchingBaseIF4IF4 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_swigregister(itkFastMarchingBaseIF4IF4)
itkFastMarchingBaseIF4IF4_cast = _ITKFastMarchingBasePython.itkFastMarchingBaseIF4IF4_cast

class itkFastMarchingTraitsEnums(object):
    r"""Proxy of C++ itkFastMarchingTraitsEnums class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    TopologyCheck_Nothing = _ITKFastMarchingBasePython.itkFastMarchingTraitsEnums_TopologyCheck_Nothing
    
    TopologyCheck_NoHandles = _ITKFastMarchingBasePython.itkFastMarchingTraitsEnums_TopologyCheck_NoHandles
    
    TopologyCheck_Strict = _ITKFastMarchingBasePython.itkFastMarchingTraitsEnums_TopologyCheck_Strict
    

    def __init__(self, *args):
        r"""
        __init__(self) -> itkFastMarchingTraitsEnums
        __init__(self, arg0) -> itkFastMarchingTraitsEnums

        Parameters
        ----------
        arg0: itkFastMarchingTraitsEnums const &

        """
        _ITKFastMarchingBasePython.itkFastMarchingTraitsEnums_swiginit(self, _ITKFastMarchingBasePython.new_itkFastMarchingTraitsEnums(*args))
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkFastMarchingTraitsEnums

# Register itkFastMarchingTraitsEnums in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkFastMarchingTraitsEnums_swigregister(itkFastMarchingTraitsEnums)


def itkVectorContainerUILSND2_New():
    return itkVectorContainerUILSND2.New()

class itkVectorContainerUILSND2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerUILSND2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND2___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND2_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND2_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND2_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND2_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND2_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND2_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND2_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND2_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND2_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND2_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND2_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND2_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND2_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND2_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND2_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND2_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSND2
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSND2

        Create a new object of the class itkVectorContainerUILSND2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSND2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSND2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerUILSND2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerUILSND2 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerUILSND2_swigregister(itkVectorContainerUILSND2)
itkVectorContainerUILSND2___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerUILSND2___New_orig__
itkVectorContainerUILSND2_cast = _ITKFastMarchingBasePython.itkVectorContainerUILSND2_cast


def itkVectorContainerUILSND3_New():
    return itkVectorContainerUILSND3.New()

class itkVectorContainerUILSND3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerUILSND3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND3___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND3_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND3_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND3_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND3_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND3_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND3_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND3_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND3_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND3_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND3_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND3_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND3_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND3_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND3_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND3_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND3_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSND3
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSND3

        Create a new object of the class itkVectorContainerUILSND3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSND3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSND3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerUILSND3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerUILSND3 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerUILSND3_swigregister(itkVectorContainerUILSND3)
itkVectorContainerUILSND3___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerUILSND3___New_orig__
itkVectorContainerUILSND3_cast = _ITKFastMarchingBasePython.itkVectorContainerUILSND3_cast


def itkVectorContainerUILSND4_New():
    return itkVectorContainerUILSND4.New()

class itkVectorContainerUILSND4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerUILSND4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND4___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND4_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND4_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND4_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND4_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND4_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND4_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND4_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND4_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND4_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND4_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND4_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND4_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND4_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND4_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND4_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND4_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSND4
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSND4_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSND4

        Create a new object of the class itkVectorContainerUILSND4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSND4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSND4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerUILSND4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerUILSND4 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerUILSND4_swigregister(itkVectorContainerUILSND4)
itkVectorContainerUILSND4___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerUILSND4___New_orig__
itkVectorContainerUILSND4_cast = _ITKFastMarchingBasePython.itkVectorContainerUILSND4_cast


def itkVectorContainerUILSNF2_New():
    return itkVectorContainerUILSNF2.New()

class itkVectorContainerUILSNF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerUILSNF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSNF2
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSNF2

        Create a new object of the class itkVectorContainerUILSNF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSNF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSNF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerUILSNF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerUILSNF2 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerUILSNF2_swigregister(itkVectorContainerUILSNF2)
itkVectorContainerUILSNF2___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerUILSNF2___New_orig__
itkVectorContainerUILSNF2_cast = _ITKFastMarchingBasePython.itkVectorContainerUILSNF2_cast


def itkVectorContainerUILSNF3_New():
    return itkVectorContainerUILSNF3.New()

class itkVectorContainerUILSNF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerUILSNF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSNF3
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSNF3

        Create a new object of the class itkVectorContainerUILSNF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSNF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSNF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerUILSNF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerUILSNF3 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerUILSNF3_swigregister(itkVectorContainerUILSNF3)
itkVectorContainerUILSNF3___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerUILSNF3___New_orig__
itkVectorContainerUILSNF3_cast = _ITKFastMarchingBasePython.itkVectorContainerUILSNF3_cast


def itkVectorContainerUILSNF4_New():
    return itkVectorContainerUILSNF4.New()

class itkVectorContainerUILSNF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerUILSNF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF4___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF4_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF4_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF4_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF4_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF4_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF4_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF4_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF4_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF4_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF4_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF4_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF4_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF4_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF4_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF4_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF4_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSNF4
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNF4_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSNF4

        Create a new object of the class itkVectorContainerUILSNF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSNF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSNF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerUILSNF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerUILSNF4 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerUILSNF4_swigregister(itkVectorContainerUILSNF4)
itkVectorContainerUILSNF4___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerUILSNF4___New_orig__
itkVectorContainerUILSNF4_cast = _ITKFastMarchingBasePython.itkVectorContainerUILSNF4_cast


def itkVectorContainerUILSNSS2_New():
    return itkVectorContainerUILSNSS2.New()

class itkVectorContainerUILSNSS2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerUILSNSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSNSS2
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSNSS2

        Create a new object of the class itkVectorContainerUILSNSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSNSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSNSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerUILSNSS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerUILSNSS2 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_swigregister(itkVectorContainerUILSNSS2)
itkVectorContainerUILSNSS2___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerUILSNSS2___New_orig__
itkVectorContainerUILSNSS2_cast = _ITKFastMarchingBasePython.itkVectorContainerUILSNSS2_cast


def itkVectorContainerUILSNSS3_New():
    return itkVectorContainerUILSNSS3.New()

class itkVectorContainerUILSNSS3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerUILSNSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSNSS3
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSNSS3

        Create a new object of the class itkVectorContainerUILSNSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSNSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSNSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerUILSNSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerUILSNSS3 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_swigregister(itkVectorContainerUILSNSS3)
itkVectorContainerUILSNSS3___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerUILSNSS3___New_orig__
itkVectorContainerUILSNSS3_cast = _ITKFastMarchingBasePython.itkVectorContainerUILSNSS3_cast


def itkVectorContainerUILSNSS4_New():
    return itkVectorContainerUILSNSS4.New()

class itkVectorContainerUILSNSS4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerUILSNSS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSNSS4
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSNSS4

        Create a new object of the class itkVectorContainerUILSNSS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSNSS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSNSS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerUILSNSS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerUILSNSS4 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_swigregister(itkVectorContainerUILSNSS4)
itkVectorContainerUILSNSS4___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerUILSNSS4___New_orig__
itkVectorContainerUILSNSS4_cast = _ITKFastMarchingBasePython.itkVectorContainerUILSNSS4_cast


def itkVectorContainerUILSNUC2_New():
    return itkVectorContainerUILSNUC2.New()

class itkVectorContainerUILSNUC2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerUILSNUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSNUC2
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSNUC2

        Create a new object of the class itkVectorContainerUILSNUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSNUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSNUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerUILSNUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerUILSNUC2 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_swigregister(itkVectorContainerUILSNUC2)
itkVectorContainerUILSNUC2___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerUILSNUC2___New_orig__
itkVectorContainerUILSNUC2_cast = _ITKFastMarchingBasePython.itkVectorContainerUILSNUC2_cast


def itkVectorContainerUILSNUC3_New():
    return itkVectorContainerUILSNUC3.New()

class itkVectorContainerUILSNUC3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerUILSNUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSNUC3
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSNUC3

        Create a new object of the class itkVectorContainerUILSNUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSNUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSNUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerUILSNUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerUILSNUC3 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_swigregister(itkVectorContainerUILSNUC3)
itkVectorContainerUILSNUC3___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerUILSNUC3___New_orig__
itkVectorContainerUILSNUC3_cast = _ITKFastMarchingBasePython.itkVectorContainerUILSNUC3_cast


def itkVectorContainerUILSNUC4_New():
    return itkVectorContainerUILSNUC4.New()

class itkVectorContainerUILSNUC4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerUILSNUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSNUC4
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSNUC4

        Create a new object of the class itkVectorContainerUILSNUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSNUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSNUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerUILSNUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerUILSNUC4 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_swigregister(itkVectorContainerUILSNUC4)
itkVectorContainerUILSNUC4___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerUILSNUC4___New_orig__
itkVectorContainerUILSNUC4_cast = _ITKFastMarchingBasePython.itkVectorContainerUILSNUC4_cast


def itkVectorContainerUILSNUS2_New():
    return itkVectorContainerUILSNUS2.New()

class itkVectorContainerUILSNUS2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerUILSNUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSNUS2
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSNUS2

        Create a new object of the class itkVectorContainerUILSNUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSNUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSNUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerUILSNUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerUILSNUS2 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_swigregister(itkVectorContainerUILSNUS2)
itkVectorContainerUILSNUS2___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerUILSNUS2___New_orig__
itkVectorContainerUILSNUS2_cast = _ITKFastMarchingBasePython.itkVectorContainerUILSNUS2_cast


def itkVectorContainerUILSNUS3_New():
    return itkVectorContainerUILSNUS3.New()

class itkVectorContainerUILSNUS3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerUILSNUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSNUS3
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSNUS3

        Create a new object of the class itkVectorContainerUILSNUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSNUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSNUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerUILSNUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerUILSNUS3 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_swigregister(itkVectorContainerUILSNUS3)
itkVectorContainerUILSNUS3___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerUILSNUS3___New_orig__
itkVectorContainerUILSNUS3_cast = _ITKFastMarchingBasePython.itkVectorContainerUILSNUS3_cast


def itkVectorContainerUILSNUS4_New():
    return itkVectorContainerUILSNUS4.New()

class itkVectorContainerUILSNUS4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerUILSNUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerUILSNUS4
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerUILSNUS4

        Create a new object of the class itkVectorContainerUILSNUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerUILSNUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerUILSNUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerUILSNUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerUILSNUS4 in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_swigregister(itkVectorContainerUILSNUS4)
itkVectorContainerUILSNUS4___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerUILSNUS4___New_orig__
itkVectorContainerUILSNUS4_cast = _ITKFastMarchingBasePython.itkVectorContainerUILSNUS4_cast


def itkVectorContainerULLNPI2D_New():
    return itkVectorContainerULLNPI2D.New()

class itkVectorContainerULLNPI2D(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULLNPI2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2D___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2D_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2D_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2D_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2D_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2D_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2D_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2D_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2D_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2D_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2D_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2D_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2D_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2D_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2D_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2D_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2D_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULLNPI2D
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2D_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLNPI2D

        Create a new object of the class itkVectorContainerULLNPI2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLNPI2D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLNPI2D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULLNPI2D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULLNPI2D in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerULLNPI2D_swigregister(itkVectorContainerULLNPI2D)
itkVectorContainerULLNPI2D___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerULLNPI2D___New_orig__
itkVectorContainerULLNPI2D_cast = _ITKFastMarchingBasePython.itkVectorContainerULLNPI2D_cast


def itkVectorContainerULLNPI2F_New():
    return itkVectorContainerULLNPI2F.New()

class itkVectorContainerULLNPI2F(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULLNPI2F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2F___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULLNPI2F
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLNPI2F

        Create a new object of the class itkVectorContainerULLNPI2F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLNPI2F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLNPI2F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULLNPI2F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULLNPI2F in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_swigregister(itkVectorContainerULLNPI2F)
itkVectorContainerULLNPI2F___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerULLNPI2F___New_orig__
itkVectorContainerULLNPI2F_cast = _ITKFastMarchingBasePython.itkVectorContainerULLNPI2F_cast


def itkVectorContainerULLNPI2SS_New():
    return itkVectorContainerULLNPI2SS.New()

class itkVectorContainerULLNPI2SS(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULLNPI2SS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULLNPI2SS
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLNPI2SS

        Create a new object of the class itkVectorContainerULLNPI2SS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLNPI2SS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLNPI2SS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULLNPI2SS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULLNPI2SS in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_swigregister(itkVectorContainerULLNPI2SS)
itkVectorContainerULLNPI2SS___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS___New_orig__
itkVectorContainerULLNPI2SS_cast = _ITKFastMarchingBasePython.itkVectorContainerULLNPI2SS_cast


def itkVectorContainerULLNPI2UC_New():
    return itkVectorContainerULLNPI2UC.New()

class itkVectorContainerULLNPI2UC(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULLNPI2UC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULLNPI2UC
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLNPI2UC

        Create a new object of the class itkVectorContainerULLNPI2UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLNPI2UC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLNPI2UC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULLNPI2UC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULLNPI2UC in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_swigregister(itkVectorContainerULLNPI2UC)
itkVectorContainerULLNPI2UC___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC___New_orig__
itkVectorContainerULLNPI2UC_cast = _ITKFastMarchingBasePython.itkVectorContainerULLNPI2UC_cast


def itkVectorContainerULLNPI2US_New():
    return itkVectorContainerULLNPI2US.New()

class itkVectorContainerULLNPI2US(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULLNPI2US class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2US___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULLNPI2US
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLNPI2US

        Create a new object of the class itkVectorContainerULLNPI2US and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLNPI2US.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLNPI2US.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULLNPI2US.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULLNPI2US in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_swigregister(itkVectorContainerULLNPI2US)
itkVectorContainerULLNPI2US___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerULLNPI2US___New_orig__
itkVectorContainerULLNPI2US_cast = _ITKFastMarchingBasePython.itkVectorContainerULLNPI2US_cast


def itkVectorContainerULLNPI3D_New():
    return itkVectorContainerULLNPI3D.New()

class itkVectorContainerULLNPI3D(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULLNPI3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3D___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3D_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3D_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3D_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3D_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3D_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3D_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3D_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3D_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3D_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3D_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3D_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3D_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3D_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3D_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3D_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3D_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULLNPI3D
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3D_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLNPI3D

        Create a new object of the class itkVectorContainerULLNPI3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLNPI3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLNPI3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULLNPI3D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULLNPI3D in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerULLNPI3D_swigregister(itkVectorContainerULLNPI3D)
itkVectorContainerULLNPI3D___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerULLNPI3D___New_orig__
itkVectorContainerULLNPI3D_cast = _ITKFastMarchingBasePython.itkVectorContainerULLNPI3D_cast


def itkVectorContainerULLNPI3F_New():
    return itkVectorContainerULLNPI3F.New()

class itkVectorContainerULLNPI3F(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULLNPI3F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3F___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULLNPI3F
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLNPI3F

        Create a new object of the class itkVectorContainerULLNPI3F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLNPI3F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLNPI3F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULLNPI3F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULLNPI3F in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_swigregister(itkVectorContainerULLNPI3F)
itkVectorContainerULLNPI3F___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerULLNPI3F___New_orig__
itkVectorContainerULLNPI3F_cast = _ITKFastMarchingBasePython.itkVectorContainerULLNPI3F_cast


def itkVectorContainerULLNPI3SS_New():
    return itkVectorContainerULLNPI3SS.New()

class itkVectorContainerULLNPI3SS(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULLNPI3SS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULLNPI3SS
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLNPI3SS

        Create a new object of the class itkVectorContainerULLNPI3SS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLNPI3SS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLNPI3SS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULLNPI3SS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULLNPI3SS in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_swigregister(itkVectorContainerULLNPI3SS)
itkVectorContainerULLNPI3SS___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS___New_orig__
itkVectorContainerULLNPI3SS_cast = _ITKFastMarchingBasePython.itkVectorContainerULLNPI3SS_cast


def itkVectorContainerULLNPI3UC_New():
    return itkVectorContainerULLNPI3UC.New()

class itkVectorContainerULLNPI3UC(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULLNPI3UC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULLNPI3UC
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLNPI3UC

        Create a new object of the class itkVectorContainerULLNPI3UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLNPI3UC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLNPI3UC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULLNPI3UC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULLNPI3UC in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_swigregister(itkVectorContainerULLNPI3UC)
itkVectorContainerULLNPI3UC___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC___New_orig__
itkVectorContainerULLNPI3UC_cast = _ITKFastMarchingBasePython.itkVectorContainerULLNPI3UC_cast


def itkVectorContainerULLNPI3US_New():
    return itkVectorContainerULLNPI3US.New()

class itkVectorContainerULLNPI3US(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULLNPI3US class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3US___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULLNPI3US
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLNPI3US

        Create a new object of the class itkVectorContainerULLNPI3US and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLNPI3US.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLNPI3US.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULLNPI3US.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULLNPI3US in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_swigregister(itkVectorContainerULLNPI3US)
itkVectorContainerULLNPI3US___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerULLNPI3US___New_orig__
itkVectorContainerULLNPI3US_cast = _ITKFastMarchingBasePython.itkVectorContainerULLNPI3US_cast


def itkVectorContainerULLNPI4D_New():
    return itkVectorContainerULLNPI4D.New()

class itkVectorContainerULLNPI4D(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULLNPI4D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4D___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4D_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4D_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4D_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4D_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4D_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4D_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4D_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4D_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4D_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4D_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4D_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4D_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4D_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4D_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4D_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4D_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULLNPI4D
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4D_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLNPI4D

        Create a new object of the class itkVectorContainerULLNPI4D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLNPI4D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLNPI4D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULLNPI4D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULLNPI4D in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerULLNPI4D_swigregister(itkVectorContainerULLNPI4D)
itkVectorContainerULLNPI4D___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerULLNPI4D___New_orig__
itkVectorContainerULLNPI4D_cast = _ITKFastMarchingBasePython.itkVectorContainerULLNPI4D_cast


def itkVectorContainerULLNPI4F_New():
    return itkVectorContainerULLNPI4F.New()

class itkVectorContainerULLNPI4F(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULLNPI4F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4F___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4F_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4F_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4F_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4F_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4F_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4F_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4F_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4F_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4F_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4F_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4F_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4F_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4F_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4F_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4F_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4F_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULLNPI4F
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4F_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLNPI4F

        Create a new object of the class itkVectorContainerULLNPI4F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLNPI4F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLNPI4F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULLNPI4F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULLNPI4F in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerULLNPI4F_swigregister(itkVectorContainerULLNPI4F)
itkVectorContainerULLNPI4F___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerULLNPI4F___New_orig__
itkVectorContainerULLNPI4F_cast = _ITKFastMarchingBasePython.itkVectorContainerULLNPI4F_cast


def itkVectorContainerULLNPI4SS_New():
    return itkVectorContainerULLNPI4SS.New()

class itkVectorContainerULLNPI4SS(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULLNPI4SS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4SS___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4SS_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4SS_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4SS_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4SS_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4SS_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4SS_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4SS_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4SS_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4SS_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4SS_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4SS_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4SS_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4SS_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4SS_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4SS_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4SS_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULLNPI4SS
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4SS_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLNPI4SS

        Create a new object of the class itkVectorContainerULLNPI4SS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLNPI4SS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLNPI4SS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULLNPI4SS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULLNPI4SS in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerULLNPI4SS_swigregister(itkVectorContainerULLNPI4SS)
itkVectorContainerULLNPI4SS___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerULLNPI4SS___New_orig__
itkVectorContainerULLNPI4SS_cast = _ITKFastMarchingBasePython.itkVectorContainerULLNPI4SS_cast


def itkVectorContainerULLNPI4UC_New():
    return itkVectorContainerULLNPI4UC.New()

class itkVectorContainerULLNPI4UC(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULLNPI4UC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4UC___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4UC_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4UC_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4UC_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4UC_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4UC_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4UC_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4UC_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4UC_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4UC_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4UC_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4UC_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4UC_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4UC_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4UC_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4UC_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4UC_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULLNPI4UC
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4UC_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLNPI4UC

        Create a new object of the class itkVectorContainerULLNPI4UC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLNPI4UC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLNPI4UC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULLNPI4UC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULLNPI4UC in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerULLNPI4UC_swigregister(itkVectorContainerULLNPI4UC)
itkVectorContainerULLNPI4UC___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerULLNPI4UC___New_orig__
itkVectorContainerULLNPI4UC_cast = _ITKFastMarchingBasePython.itkVectorContainerULLNPI4UC_cast


def itkVectorContainerULLNPI4US_New():
    return itkVectorContainerULLNPI4US.New()

class itkVectorContainerULLNPI4US(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULLNPI4US class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4US___New_orig__)
    Clone = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4US_Clone)
    CastToSTLContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4US_CastToSTLContainer)
    CastToSTLConstContainer = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4US_CastToSTLConstContainer)
    ElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4US_ElementAt)
    CreateElementAt = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4US_CreateElementAt)
    GetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4US_GetElement)
    SetElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4US_SetElement)
    InsertElement = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4US_InsertElement)
    IndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4US_IndexExists)
    GetElementIfIndexExists = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4US_GetElementIfIndexExists)
    CreateIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4US_CreateIndex)
    DeleteIndex = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4US_DeleteIndex)
    Size = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4US_Size)
    Reserve = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4US_Reserve)
    Squeeze = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4US_Squeeze)
    Initialize = _swig_new_instance_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4US_Initialize)
    __swig_destroy__ = _ITKFastMarchingBasePython.delete_itkVectorContainerULLNPI4US
    cast = _swig_new_static_method(_ITKFastMarchingBasePython.itkVectorContainerULLNPI4US_cast)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLNPI4US

        Create a new object of the class itkVectorContainerULLNPI4US and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLNPI4US.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLNPI4US.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULLNPI4US.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULLNPI4US in _ITKFastMarchingBasePython:
_ITKFastMarchingBasePython.itkVectorContainerULLNPI4US_swigregister(itkVectorContainerULLNPI4US)
itkVectorContainerULLNPI4US___New_orig__ = _ITKFastMarchingBasePython.itkVectorContainerULLNPI4US___New_orig__
itkVectorContainerULLNPI4US_cast = _ITKFastMarchingBasePython.itkVectorContainerULLNPI4US_cast



