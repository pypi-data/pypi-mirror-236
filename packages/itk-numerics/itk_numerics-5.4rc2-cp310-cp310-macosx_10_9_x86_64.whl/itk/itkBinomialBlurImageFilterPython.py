# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKSmoothingPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkBinomialBlurImageFilterPython
else:
    import _itkBinomialBlurImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkBinomialBlurImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkBinomialBlurImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkImageToImageFilterAPython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.itkPointPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkRGBAPixelPython
import itk.ITKCommonBasePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageRegionPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython

def itkBinomialBlurImageFilterID2ID2_New():
    return itkBinomialBlurImageFilterID2ID2.New()

class itkBinomialBlurImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkBinomialBlurImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterID2ID2_Clone)
    SetRepetitions = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterID2ID2_SetRepetitions)
    GetRepetitions = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterID2ID2_GetRepetitions)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterID2ID2_GenerateInputRequestedRegion)
    SameDimensionCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterID2ID2_SameDimensionCheck
    
    InputConvertibleToDoubleCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterID2ID2_InputConvertibleToDoubleCheck
    
    DoubleConvertibleToOutputCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterID2ID2_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBinomialBlurImageFilterPython.delete_itkBinomialBlurImageFilterID2ID2
    cast = _swig_new_static_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkBinomialBlurImageFilterID2ID2

        Create a new object of the class itkBinomialBlurImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinomialBlurImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinomialBlurImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinomialBlurImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinomialBlurImageFilterID2ID2 in _itkBinomialBlurImageFilterPython:
_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterID2ID2_swigregister(itkBinomialBlurImageFilterID2ID2)
itkBinomialBlurImageFilterID2ID2___New_orig__ = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterID2ID2___New_orig__
itkBinomialBlurImageFilterID2ID2_cast = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterID2ID2_cast


def itkBinomialBlurImageFilterID3ID3_New():
    return itkBinomialBlurImageFilterID3ID3.New()

class itkBinomialBlurImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkBinomialBlurImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterID3ID3_Clone)
    SetRepetitions = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterID3ID3_SetRepetitions)
    GetRepetitions = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterID3ID3_GetRepetitions)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterID3ID3_GenerateInputRequestedRegion)
    SameDimensionCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterID3ID3_SameDimensionCheck
    
    InputConvertibleToDoubleCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterID3ID3_InputConvertibleToDoubleCheck
    
    DoubleConvertibleToOutputCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterID3ID3_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBinomialBlurImageFilterPython.delete_itkBinomialBlurImageFilterID3ID3
    cast = _swig_new_static_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkBinomialBlurImageFilterID3ID3

        Create a new object of the class itkBinomialBlurImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinomialBlurImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinomialBlurImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinomialBlurImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinomialBlurImageFilterID3ID3 in _itkBinomialBlurImageFilterPython:
_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterID3ID3_swigregister(itkBinomialBlurImageFilterID3ID3)
itkBinomialBlurImageFilterID3ID3___New_orig__ = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterID3ID3___New_orig__
itkBinomialBlurImageFilterID3ID3_cast = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterID3ID3_cast


def itkBinomialBlurImageFilterID4ID4_New():
    return itkBinomialBlurImageFilterID4ID4.New()

class itkBinomialBlurImageFilterID4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkBinomialBlurImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterID4ID4___New_orig__)
    Clone = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterID4ID4_Clone)
    SetRepetitions = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterID4ID4_SetRepetitions)
    GetRepetitions = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterID4ID4_GetRepetitions)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterID4ID4_GenerateInputRequestedRegion)
    SameDimensionCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterID4ID4_SameDimensionCheck
    
    InputConvertibleToDoubleCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterID4ID4_InputConvertibleToDoubleCheck
    
    DoubleConvertibleToOutputCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterID4ID4_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBinomialBlurImageFilterPython.delete_itkBinomialBlurImageFilterID4ID4
    cast = _swig_new_static_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterID4ID4_cast)

    def New(*args, **kargs):
        """New() -> itkBinomialBlurImageFilterID4ID4

        Create a new object of the class itkBinomialBlurImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinomialBlurImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinomialBlurImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinomialBlurImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinomialBlurImageFilterID4ID4 in _itkBinomialBlurImageFilterPython:
_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterID4ID4_swigregister(itkBinomialBlurImageFilterID4ID4)
itkBinomialBlurImageFilterID4ID4___New_orig__ = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterID4ID4___New_orig__
itkBinomialBlurImageFilterID4ID4_cast = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterID4ID4_cast


def itkBinomialBlurImageFilterIF2IF2_New():
    return itkBinomialBlurImageFilterIF2IF2.New()

class itkBinomialBlurImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkBinomialBlurImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIF2IF2_Clone)
    SetRepetitions = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIF2IF2_SetRepetitions)
    GetRepetitions = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIF2IF2_GetRepetitions)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIF2IF2_GenerateInputRequestedRegion)
    SameDimensionCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIF2IF2_SameDimensionCheck
    
    InputConvertibleToDoubleCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIF2IF2_InputConvertibleToDoubleCheck
    
    DoubleConvertibleToOutputCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIF2IF2_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBinomialBlurImageFilterPython.delete_itkBinomialBlurImageFilterIF2IF2
    cast = _swig_new_static_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkBinomialBlurImageFilterIF2IF2

        Create a new object of the class itkBinomialBlurImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinomialBlurImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinomialBlurImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinomialBlurImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinomialBlurImageFilterIF2IF2 in _itkBinomialBlurImageFilterPython:
_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIF2IF2_swigregister(itkBinomialBlurImageFilterIF2IF2)
itkBinomialBlurImageFilterIF2IF2___New_orig__ = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIF2IF2___New_orig__
itkBinomialBlurImageFilterIF2IF2_cast = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIF2IF2_cast


def itkBinomialBlurImageFilterIF3IF3_New():
    return itkBinomialBlurImageFilterIF3IF3.New()

class itkBinomialBlurImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkBinomialBlurImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIF3IF3_Clone)
    SetRepetitions = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIF3IF3_SetRepetitions)
    GetRepetitions = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIF3IF3_GetRepetitions)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIF3IF3_GenerateInputRequestedRegion)
    SameDimensionCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIF3IF3_SameDimensionCheck
    
    InputConvertibleToDoubleCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIF3IF3_InputConvertibleToDoubleCheck
    
    DoubleConvertibleToOutputCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIF3IF3_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBinomialBlurImageFilterPython.delete_itkBinomialBlurImageFilterIF3IF3
    cast = _swig_new_static_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkBinomialBlurImageFilterIF3IF3

        Create a new object of the class itkBinomialBlurImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinomialBlurImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinomialBlurImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinomialBlurImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinomialBlurImageFilterIF3IF3 in _itkBinomialBlurImageFilterPython:
_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIF3IF3_swigregister(itkBinomialBlurImageFilterIF3IF3)
itkBinomialBlurImageFilterIF3IF3___New_orig__ = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIF3IF3___New_orig__
itkBinomialBlurImageFilterIF3IF3_cast = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIF3IF3_cast


def itkBinomialBlurImageFilterIF4IF4_New():
    return itkBinomialBlurImageFilterIF4IF4.New()

class itkBinomialBlurImageFilterIF4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkBinomialBlurImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIF4IF4___New_orig__)
    Clone = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIF4IF4_Clone)
    SetRepetitions = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIF4IF4_SetRepetitions)
    GetRepetitions = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIF4IF4_GetRepetitions)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIF4IF4_GenerateInputRequestedRegion)
    SameDimensionCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIF4IF4_SameDimensionCheck
    
    InputConvertibleToDoubleCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIF4IF4_InputConvertibleToDoubleCheck
    
    DoubleConvertibleToOutputCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIF4IF4_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBinomialBlurImageFilterPython.delete_itkBinomialBlurImageFilterIF4IF4
    cast = _swig_new_static_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIF4IF4_cast)

    def New(*args, **kargs):
        """New() -> itkBinomialBlurImageFilterIF4IF4

        Create a new object of the class itkBinomialBlurImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinomialBlurImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinomialBlurImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinomialBlurImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinomialBlurImageFilterIF4IF4 in _itkBinomialBlurImageFilterPython:
_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIF4IF4_swigregister(itkBinomialBlurImageFilterIF4IF4)
itkBinomialBlurImageFilterIF4IF4___New_orig__ = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIF4IF4___New_orig__
itkBinomialBlurImageFilterIF4IF4_cast = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIF4IF4_cast


def itkBinomialBlurImageFilterISS2ISS2_New():
    return itkBinomialBlurImageFilterISS2ISS2.New()

class itkBinomialBlurImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkBinomialBlurImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterISS2ISS2_Clone)
    SetRepetitions = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterISS2ISS2_SetRepetitions)
    GetRepetitions = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterISS2ISS2_GetRepetitions)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterISS2ISS2_GenerateInputRequestedRegion)
    SameDimensionCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterISS2ISS2_SameDimensionCheck
    
    InputConvertibleToDoubleCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterISS2ISS2_InputConvertibleToDoubleCheck
    
    DoubleConvertibleToOutputCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterISS2ISS2_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBinomialBlurImageFilterPython.delete_itkBinomialBlurImageFilterISS2ISS2
    cast = _swig_new_static_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinomialBlurImageFilterISS2ISS2

        Create a new object of the class itkBinomialBlurImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinomialBlurImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinomialBlurImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinomialBlurImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinomialBlurImageFilterISS2ISS2 in _itkBinomialBlurImageFilterPython:
_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterISS2ISS2_swigregister(itkBinomialBlurImageFilterISS2ISS2)
itkBinomialBlurImageFilterISS2ISS2___New_orig__ = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterISS2ISS2___New_orig__
itkBinomialBlurImageFilterISS2ISS2_cast = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterISS2ISS2_cast


def itkBinomialBlurImageFilterISS3ISS3_New():
    return itkBinomialBlurImageFilterISS3ISS3.New()

class itkBinomialBlurImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkBinomialBlurImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterISS3ISS3_Clone)
    SetRepetitions = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterISS3ISS3_SetRepetitions)
    GetRepetitions = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterISS3ISS3_GetRepetitions)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterISS3ISS3_GenerateInputRequestedRegion)
    SameDimensionCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterISS3ISS3_SameDimensionCheck
    
    InputConvertibleToDoubleCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterISS3ISS3_InputConvertibleToDoubleCheck
    
    DoubleConvertibleToOutputCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterISS3ISS3_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBinomialBlurImageFilterPython.delete_itkBinomialBlurImageFilterISS3ISS3
    cast = _swig_new_static_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinomialBlurImageFilterISS3ISS3

        Create a new object of the class itkBinomialBlurImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinomialBlurImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinomialBlurImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinomialBlurImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinomialBlurImageFilterISS3ISS3 in _itkBinomialBlurImageFilterPython:
_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterISS3ISS3_swigregister(itkBinomialBlurImageFilterISS3ISS3)
itkBinomialBlurImageFilterISS3ISS3___New_orig__ = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterISS3ISS3___New_orig__
itkBinomialBlurImageFilterISS3ISS3_cast = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterISS3ISS3_cast


def itkBinomialBlurImageFilterISS4ISS4_New():
    return itkBinomialBlurImageFilterISS4ISS4.New()

class itkBinomialBlurImageFilterISS4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkBinomialBlurImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterISS4ISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterISS4ISS4_Clone)
    SetRepetitions = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterISS4ISS4_SetRepetitions)
    GetRepetitions = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterISS4ISS4_GetRepetitions)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterISS4ISS4_GenerateInputRequestedRegion)
    SameDimensionCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterISS4ISS4_SameDimensionCheck
    
    InputConvertibleToDoubleCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterISS4ISS4_InputConvertibleToDoubleCheck
    
    DoubleConvertibleToOutputCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterISS4ISS4_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBinomialBlurImageFilterPython.delete_itkBinomialBlurImageFilterISS4ISS4
    cast = _swig_new_static_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterISS4ISS4_cast)

    def New(*args, **kargs):
        """New() -> itkBinomialBlurImageFilterISS4ISS4

        Create a new object of the class itkBinomialBlurImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinomialBlurImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinomialBlurImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinomialBlurImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinomialBlurImageFilterISS4ISS4 in _itkBinomialBlurImageFilterPython:
_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterISS4ISS4_swigregister(itkBinomialBlurImageFilterISS4ISS4)
itkBinomialBlurImageFilterISS4ISS4___New_orig__ = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterISS4ISS4___New_orig__
itkBinomialBlurImageFilterISS4ISS4_cast = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterISS4ISS4_cast


def itkBinomialBlurImageFilterIUC2IUC2_New():
    return itkBinomialBlurImageFilterIUC2IUC2.New()

class itkBinomialBlurImageFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkBinomialBlurImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUC2IUC2_Clone)
    SetRepetitions = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUC2IUC2_SetRepetitions)
    GetRepetitions = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUC2IUC2_GetRepetitions)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUC2IUC2_GenerateInputRequestedRegion)
    SameDimensionCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUC2IUC2_SameDimensionCheck
    
    InputConvertibleToDoubleCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUC2IUC2_InputConvertibleToDoubleCheck
    
    DoubleConvertibleToOutputCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUC2IUC2_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBinomialBlurImageFilterPython.delete_itkBinomialBlurImageFilterIUC2IUC2
    cast = _swig_new_static_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkBinomialBlurImageFilterIUC2IUC2

        Create a new object of the class itkBinomialBlurImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinomialBlurImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinomialBlurImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinomialBlurImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinomialBlurImageFilterIUC2IUC2 in _itkBinomialBlurImageFilterPython:
_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUC2IUC2_swigregister(itkBinomialBlurImageFilterIUC2IUC2)
itkBinomialBlurImageFilterIUC2IUC2___New_orig__ = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUC2IUC2___New_orig__
itkBinomialBlurImageFilterIUC2IUC2_cast = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUC2IUC2_cast


def itkBinomialBlurImageFilterIUC3IUC3_New():
    return itkBinomialBlurImageFilterIUC3IUC3.New()

class itkBinomialBlurImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkBinomialBlurImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUC3IUC3_Clone)
    SetRepetitions = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUC3IUC3_SetRepetitions)
    GetRepetitions = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUC3IUC3_GetRepetitions)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUC3IUC3_GenerateInputRequestedRegion)
    SameDimensionCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUC3IUC3_SameDimensionCheck
    
    InputConvertibleToDoubleCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUC3IUC3_InputConvertibleToDoubleCheck
    
    DoubleConvertibleToOutputCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUC3IUC3_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBinomialBlurImageFilterPython.delete_itkBinomialBlurImageFilterIUC3IUC3
    cast = _swig_new_static_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkBinomialBlurImageFilterIUC3IUC3

        Create a new object of the class itkBinomialBlurImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinomialBlurImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinomialBlurImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinomialBlurImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinomialBlurImageFilterIUC3IUC3 in _itkBinomialBlurImageFilterPython:
_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUC3IUC3_swigregister(itkBinomialBlurImageFilterIUC3IUC3)
itkBinomialBlurImageFilterIUC3IUC3___New_orig__ = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUC3IUC3___New_orig__
itkBinomialBlurImageFilterIUC3IUC3_cast = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUC3IUC3_cast


def itkBinomialBlurImageFilterIUC4IUC4_New():
    return itkBinomialBlurImageFilterIUC4IUC4.New()

class itkBinomialBlurImageFilterIUC4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkBinomialBlurImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUC4IUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUC4IUC4_Clone)
    SetRepetitions = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUC4IUC4_SetRepetitions)
    GetRepetitions = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUC4IUC4_GetRepetitions)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUC4IUC4_GenerateInputRequestedRegion)
    SameDimensionCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUC4IUC4_SameDimensionCheck
    
    InputConvertibleToDoubleCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUC4IUC4_InputConvertibleToDoubleCheck
    
    DoubleConvertibleToOutputCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUC4IUC4_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBinomialBlurImageFilterPython.delete_itkBinomialBlurImageFilterIUC4IUC4
    cast = _swig_new_static_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUC4IUC4_cast)

    def New(*args, **kargs):
        """New() -> itkBinomialBlurImageFilterIUC4IUC4

        Create a new object of the class itkBinomialBlurImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinomialBlurImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinomialBlurImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinomialBlurImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinomialBlurImageFilterIUC4IUC4 in _itkBinomialBlurImageFilterPython:
_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUC4IUC4_swigregister(itkBinomialBlurImageFilterIUC4IUC4)
itkBinomialBlurImageFilterIUC4IUC4___New_orig__ = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUC4IUC4___New_orig__
itkBinomialBlurImageFilterIUC4IUC4_cast = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUC4IUC4_cast


def itkBinomialBlurImageFilterIUS2IUS2_New():
    return itkBinomialBlurImageFilterIUS2IUS2.New()

class itkBinomialBlurImageFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkBinomialBlurImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUS2IUS2_Clone)
    SetRepetitions = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUS2IUS2_SetRepetitions)
    GetRepetitions = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUS2IUS2_GetRepetitions)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUS2IUS2_GenerateInputRequestedRegion)
    SameDimensionCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUS2IUS2_SameDimensionCheck
    
    InputConvertibleToDoubleCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUS2IUS2_InputConvertibleToDoubleCheck
    
    DoubleConvertibleToOutputCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUS2IUS2_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBinomialBlurImageFilterPython.delete_itkBinomialBlurImageFilterIUS2IUS2
    cast = _swig_new_static_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkBinomialBlurImageFilterIUS2IUS2

        Create a new object of the class itkBinomialBlurImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinomialBlurImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinomialBlurImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinomialBlurImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinomialBlurImageFilterIUS2IUS2 in _itkBinomialBlurImageFilterPython:
_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUS2IUS2_swigregister(itkBinomialBlurImageFilterIUS2IUS2)
itkBinomialBlurImageFilterIUS2IUS2___New_orig__ = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUS2IUS2___New_orig__
itkBinomialBlurImageFilterIUS2IUS2_cast = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUS2IUS2_cast


def itkBinomialBlurImageFilterIUS3IUS3_New():
    return itkBinomialBlurImageFilterIUS3IUS3.New()

class itkBinomialBlurImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkBinomialBlurImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUS3IUS3_Clone)
    SetRepetitions = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUS3IUS3_SetRepetitions)
    GetRepetitions = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUS3IUS3_GetRepetitions)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUS3IUS3_GenerateInputRequestedRegion)
    SameDimensionCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUS3IUS3_SameDimensionCheck
    
    InputConvertibleToDoubleCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUS3IUS3_InputConvertibleToDoubleCheck
    
    DoubleConvertibleToOutputCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUS3IUS3_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBinomialBlurImageFilterPython.delete_itkBinomialBlurImageFilterIUS3IUS3
    cast = _swig_new_static_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkBinomialBlurImageFilterIUS3IUS3

        Create a new object of the class itkBinomialBlurImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinomialBlurImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinomialBlurImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinomialBlurImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinomialBlurImageFilterIUS3IUS3 in _itkBinomialBlurImageFilterPython:
_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUS3IUS3_swigregister(itkBinomialBlurImageFilterIUS3IUS3)
itkBinomialBlurImageFilterIUS3IUS3___New_orig__ = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUS3IUS3___New_orig__
itkBinomialBlurImageFilterIUS3IUS3_cast = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUS3IUS3_cast


def itkBinomialBlurImageFilterIUS4IUS4_New():
    return itkBinomialBlurImageFilterIUS4IUS4.New()

class itkBinomialBlurImageFilterIUS4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkBinomialBlurImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUS4IUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUS4IUS4_Clone)
    SetRepetitions = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUS4IUS4_SetRepetitions)
    GetRepetitions = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUS4IUS4_GetRepetitions)
    GenerateInputRequestedRegion = _swig_new_instance_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUS4IUS4_GenerateInputRequestedRegion)
    SameDimensionCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUS4IUS4_SameDimensionCheck
    
    InputConvertibleToDoubleCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUS4IUS4_InputConvertibleToDoubleCheck
    
    DoubleConvertibleToOutputCheck = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUS4IUS4_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkBinomialBlurImageFilterPython.delete_itkBinomialBlurImageFilterIUS4IUS4
    cast = _swig_new_static_method(_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUS4IUS4_cast)

    def New(*args, **kargs):
        """New() -> itkBinomialBlurImageFilterIUS4IUS4

        Create a new object of the class itkBinomialBlurImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinomialBlurImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinomialBlurImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinomialBlurImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinomialBlurImageFilterIUS4IUS4 in _itkBinomialBlurImageFilterPython:
_itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUS4IUS4_swigregister(itkBinomialBlurImageFilterIUS4IUS4)
itkBinomialBlurImageFilterIUS4IUS4___New_orig__ = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUS4IUS4___New_orig__
itkBinomialBlurImageFilterIUS4IUS4_cast = _itkBinomialBlurImageFilterPython.itkBinomialBlurImageFilterIUS4IUS4_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def binomial_blur_image_filter(*args: itkt.ImageLike,  repetitions: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for BinomialBlurImageFilter"""
    import itk

    kwarg_typehints = { 'repetitions':repetitions }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.BinomialBlurImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def binomial_blur_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKSmoothing.BinomialBlurImageFilter
    binomial_blur_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    binomial_blur_image_filter.__doc__ = filter_object.__doc__




