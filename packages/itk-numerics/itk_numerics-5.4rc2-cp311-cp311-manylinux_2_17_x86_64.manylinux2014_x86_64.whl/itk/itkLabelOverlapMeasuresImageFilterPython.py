# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageStatisticsPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkLabelOverlapMeasuresImageFilterPython
else:
    import _itkLabelOverlapMeasuresImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkLabelOverlapMeasuresImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkLabelOverlapMeasuresImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkImageRegionPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkImageSinkPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython

def itkLabelOverlapMeasuresImageFilterISS2_New():
    return itkLabelOverlapMeasuresImageFilterISS2.New()

class itkLabelOverlapMeasuresImageFilterISS2(itk.itkImageSinkPython.itkImageSinkISS2):
    r"""Proxy of C++ itkLabelOverlapMeasuresImageFilterISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS2_Clone)
    SetTargetImage = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS2_SetTargetImage)
    GetTargetImage = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS2_GetTargetImage)
    SetSourceImage = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS2_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS2_GetSourceImage)
    GetLabelSetMeasures = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS2_GetLabelSetMeasures)
    GetTotalOverlap = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS2_GetTotalOverlap)
    GetTargetOverlap = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS2_GetTargetOverlap)
    GetUnionOverlap = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS2_GetUnionOverlap)
    GetJaccardCoefficient = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS2_GetJaccardCoefficient)
    GetMeanOverlap = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS2_GetMeanOverlap)
    GetDiceCoefficient = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS2_GetDiceCoefficient)
    GetVolumeSimilarity = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS2_GetVolumeSimilarity)
    GetFalseNegativeError = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS2_GetFalseNegativeError)
    GetFalsePositiveError = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS2_GetFalsePositiveError)
    GetFalseDiscoveryRate = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS2_GetFalseDiscoveryRate)
    Input1HasNumericTraitsCheck = _itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS2_Input1HasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelOverlapMeasuresImageFilterPython.delete_itkLabelOverlapMeasuresImageFilterISS2
    cast = _swig_new_static_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS2_cast)

    def New(*args, **kargs):
        """New() -> itkLabelOverlapMeasuresImageFilterISS2

        Create a new object of the class itkLabelOverlapMeasuresImageFilterISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelOverlapMeasuresImageFilterISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelOverlapMeasuresImageFilterISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelOverlapMeasuresImageFilterISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelOverlapMeasuresImageFilterISS2 in _itkLabelOverlapMeasuresImageFilterPython:
_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS2_swigregister(itkLabelOverlapMeasuresImageFilterISS2)
itkLabelOverlapMeasuresImageFilterISS2___New_orig__ = _itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS2___New_orig__
itkLabelOverlapMeasuresImageFilterISS2_cast = _itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS2_cast


def itkLabelOverlapMeasuresImageFilterISS3_New():
    return itkLabelOverlapMeasuresImageFilterISS3.New()

class itkLabelOverlapMeasuresImageFilterISS3(itk.itkImageSinkPython.itkImageSinkISS3):
    r"""Proxy of C++ itkLabelOverlapMeasuresImageFilterISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS3_Clone)
    SetTargetImage = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS3_SetTargetImage)
    GetTargetImage = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS3_GetTargetImage)
    SetSourceImage = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS3_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS3_GetSourceImage)
    GetLabelSetMeasures = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS3_GetLabelSetMeasures)
    GetTotalOverlap = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS3_GetTotalOverlap)
    GetTargetOverlap = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS3_GetTargetOverlap)
    GetUnionOverlap = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS3_GetUnionOverlap)
    GetJaccardCoefficient = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS3_GetJaccardCoefficient)
    GetMeanOverlap = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS3_GetMeanOverlap)
    GetDiceCoefficient = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS3_GetDiceCoefficient)
    GetVolumeSimilarity = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS3_GetVolumeSimilarity)
    GetFalseNegativeError = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS3_GetFalseNegativeError)
    GetFalsePositiveError = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS3_GetFalsePositiveError)
    GetFalseDiscoveryRate = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS3_GetFalseDiscoveryRate)
    Input1HasNumericTraitsCheck = _itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS3_Input1HasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelOverlapMeasuresImageFilterPython.delete_itkLabelOverlapMeasuresImageFilterISS3
    cast = _swig_new_static_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS3_cast)

    def New(*args, **kargs):
        """New() -> itkLabelOverlapMeasuresImageFilterISS3

        Create a new object of the class itkLabelOverlapMeasuresImageFilterISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelOverlapMeasuresImageFilterISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelOverlapMeasuresImageFilterISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelOverlapMeasuresImageFilterISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelOverlapMeasuresImageFilterISS3 in _itkLabelOverlapMeasuresImageFilterPython:
_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS3_swigregister(itkLabelOverlapMeasuresImageFilterISS3)
itkLabelOverlapMeasuresImageFilterISS3___New_orig__ = _itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS3___New_orig__
itkLabelOverlapMeasuresImageFilterISS3_cast = _itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS3_cast


def itkLabelOverlapMeasuresImageFilterISS4_New():
    return itkLabelOverlapMeasuresImageFilterISS4.New()

class itkLabelOverlapMeasuresImageFilterISS4(itk.itkImageSinkPython.itkImageSinkISS4):
    r"""Proxy of C++ itkLabelOverlapMeasuresImageFilterISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS4_Clone)
    SetTargetImage = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS4_SetTargetImage)
    GetTargetImage = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS4_GetTargetImage)
    SetSourceImage = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS4_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS4_GetSourceImage)
    GetLabelSetMeasures = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS4_GetLabelSetMeasures)
    GetTotalOverlap = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS4_GetTotalOverlap)
    GetTargetOverlap = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS4_GetTargetOverlap)
    GetUnionOverlap = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS4_GetUnionOverlap)
    GetJaccardCoefficient = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS4_GetJaccardCoefficient)
    GetMeanOverlap = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS4_GetMeanOverlap)
    GetDiceCoefficient = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS4_GetDiceCoefficient)
    GetVolumeSimilarity = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS4_GetVolumeSimilarity)
    GetFalseNegativeError = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS4_GetFalseNegativeError)
    GetFalsePositiveError = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS4_GetFalsePositiveError)
    GetFalseDiscoveryRate = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS4_GetFalseDiscoveryRate)
    Input1HasNumericTraitsCheck = _itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS4_Input1HasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelOverlapMeasuresImageFilterPython.delete_itkLabelOverlapMeasuresImageFilterISS4
    cast = _swig_new_static_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS4_cast)

    def New(*args, **kargs):
        """New() -> itkLabelOverlapMeasuresImageFilterISS4

        Create a new object of the class itkLabelOverlapMeasuresImageFilterISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelOverlapMeasuresImageFilterISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelOverlapMeasuresImageFilterISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelOverlapMeasuresImageFilterISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelOverlapMeasuresImageFilterISS4 in _itkLabelOverlapMeasuresImageFilterPython:
_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS4_swigregister(itkLabelOverlapMeasuresImageFilterISS4)
itkLabelOverlapMeasuresImageFilterISS4___New_orig__ = _itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS4___New_orig__
itkLabelOverlapMeasuresImageFilterISS4_cast = _itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterISS4_cast


def itkLabelOverlapMeasuresImageFilterIUC2_New():
    return itkLabelOverlapMeasuresImageFilterIUC2.New()

class itkLabelOverlapMeasuresImageFilterIUC2(itk.itkImageSinkPython.itkImageSinkIUC2):
    r"""Proxy of C++ itkLabelOverlapMeasuresImageFilterIUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC2_Clone)
    SetTargetImage = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC2_SetTargetImage)
    GetTargetImage = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC2_GetTargetImage)
    SetSourceImage = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC2_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC2_GetSourceImage)
    GetLabelSetMeasures = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC2_GetLabelSetMeasures)
    GetTotalOverlap = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC2_GetTotalOverlap)
    GetTargetOverlap = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC2_GetTargetOverlap)
    GetUnionOverlap = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC2_GetUnionOverlap)
    GetJaccardCoefficient = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC2_GetJaccardCoefficient)
    GetMeanOverlap = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC2_GetMeanOverlap)
    GetDiceCoefficient = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC2_GetDiceCoefficient)
    GetVolumeSimilarity = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC2_GetVolumeSimilarity)
    GetFalseNegativeError = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC2_GetFalseNegativeError)
    GetFalsePositiveError = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC2_GetFalsePositiveError)
    GetFalseDiscoveryRate = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC2_GetFalseDiscoveryRate)
    Input1HasNumericTraitsCheck = _itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC2_Input1HasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelOverlapMeasuresImageFilterPython.delete_itkLabelOverlapMeasuresImageFilterIUC2
    cast = _swig_new_static_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC2_cast)

    def New(*args, **kargs):
        """New() -> itkLabelOverlapMeasuresImageFilterIUC2

        Create a new object of the class itkLabelOverlapMeasuresImageFilterIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelOverlapMeasuresImageFilterIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelOverlapMeasuresImageFilterIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelOverlapMeasuresImageFilterIUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelOverlapMeasuresImageFilterIUC2 in _itkLabelOverlapMeasuresImageFilterPython:
_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC2_swigregister(itkLabelOverlapMeasuresImageFilterIUC2)
itkLabelOverlapMeasuresImageFilterIUC2___New_orig__ = _itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC2___New_orig__
itkLabelOverlapMeasuresImageFilterIUC2_cast = _itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC2_cast


def itkLabelOverlapMeasuresImageFilterIUC3_New():
    return itkLabelOverlapMeasuresImageFilterIUC3.New()

class itkLabelOverlapMeasuresImageFilterIUC3(itk.itkImageSinkPython.itkImageSinkIUC3):
    r"""Proxy of C++ itkLabelOverlapMeasuresImageFilterIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC3_Clone)
    SetTargetImage = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC3_SetTargetImage)
    GetTargetImage = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC3_GetTargetImage)
    SetSourceImage = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC3_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC3_GetSourceImage)
    GetLabelSetMeasures = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC3_GetLabelSetMeasures)
    GetTotalOverlap = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC3_GetTotalOverlap)
    GetTargetOverlap = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC3_GetTargetOverlap)
    GetUnionOverlap = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC3_GetUnionOverlap)
    GetJaccardCoefficient = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC3_GetJaccardCoefficient)
    GetMeanOverlap = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC3_GetMeanOverlap)
    GetDiceCoefficient = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC3_GetDiceCoefficient)
    GetVolumeSimilarity = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC3_GetVolumeSimilarity)
    GetFalseNegativeError = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC3_GetFalseNegativeError)
    GetFalsePositiveError = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC3_GetFalsePositiveError)
    GetFalseDiscoveryRate = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC3_GetFalseDiscoveryRate)
    Input1HasNumericTraitsCheck = _itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC3_Input1HasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelOverlapMeasuresImageFilterPython.delete_itkLabelOverlapMeasuresImageFilterIUC3
    cast = _swig_new_static_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC3_cast)

    def New(*args, **kargs):
        """New() -> itkLabelOverlapMeasuresImageFilterIUC3

        Create a new object of the class itkLabelOverlapMeasuresImageFilterIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelOverlapMeasuresImageFilterIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelOverlapMeasuresImageFilterIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelOverlapMeasuresImageFilterIUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelOverlapMeasuresImageFilterIUC3 in _itkLabelOverlapMeasuresImageFilterPython:
_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC3_swigregister(itkLabelOverlapMeasuresImageFilterIUC3)
itkLabelOverlapMeasuresImageFilterIUC3___New_orig__ = _itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC3___New_orig__
itkLabelOverlapMeasuresImageFilterIUC3_cast = _itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC3_cast


def itkLabelOverlapMeasuresImageFilterIUC4_New():
    return itkLabelOverlapMeasuresImageFilterIUC4.New()

class itkLabelOverlapMeasuresImageFilterIUC4(itk.itkImageSinkPython.itkImageSinkIUC4):
    r"""Proxy of C++ itkLabelOverlapMeasuresImageFilterIUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC4_Clone)
    SetTargetImage = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC4_SetTargetImage)
    GetTargetImage = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC4_GetTargetImage)
    SetSourceImage = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC4_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC4_GetSourceImage)
    GetLabelSetMeasures = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC4_GetLabelSetMeasures)
    GetTotalOverlap = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC4_GetTotalOverlap)
    GetTargetOverlap = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC4_GetTargetOverlap)
    GetUnionOverlap = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC4_GetUnionOverlap)
    GetJaccardCoefficient = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC4_GetJaccardCoefficient)
    GetMeanOverlap = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC4_GetMeanOverlap)
    GetDiceCoefficient = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC4_GetDiceCoefficient)
    GetVolumeSimilarity = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC4_GetVolumeSimilarity)
    GetFalseNegativeError = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC4_GetFalseNegativeError)
    GetFalsePositiveError = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC4_GetFalsePositiveError)
    GetFalseDiscoveryRate = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC4_GetFalseDiscoveryRate)
    Input1HasNumericTraitsCheck = _itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC4_Input1HasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelOverlapMeasuresImageFilterPython.delete_itkLabelOverlapMeasuresImageFilterIUC4
    cast = _swig_new_static_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC4_cast)

    def New(*args, **kargs):
        """New() -> itkLabelOverlapMeasuresImageFilterIUC4

        Create a new object of the class itkLabelOverlapMeasuresImageFilterIUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelOverlapMeasuresImageFilterIUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelOverlapMeasuresImageFilterIUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelOverlapMeasuresImageFilterIUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelOverlapMeasuresImageFilterIUC4 in _itkLabelOverlapMeasuresImageFilterPython:
_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC4_swigregister(itkLabelOverlapMeasuresImageFilterIUC4)
itkLabelOverlapMeasuresImageFilterIUC4___New_orig__ = _itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC4___New_orig__
itkLabelOverlapMeasuresImageFilterIUC4_cast = _itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUC4_cast


def itkLabelOverlapMeasuresImageFilterIUS2_New():
    return itkLabelOverlapMeasuresImageFilterIUS2.New()

class itkLabelOverlapMeasuresImageFilterIUS2(itk.itkImageSinkPython.itkImageSinkIUS2):
    r"""Proxy of C++ itkLabelOverlapMeasuresImageFilterIUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS2_Clone)
    SetTargetImage = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS2_SetTargetImage)
    GetTargetImage = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS2_GetTargetImage)
    SetSourceImage = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS2_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS2_GetSourceImage)
    GetLabelSetMeasures = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS2_GetLabelSetMeasures)
    GetTotalOverlap = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS2_GetTotalOverlap)
    GetTargetOverlap = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS2_GetTargetOverlap)
    GetUnionOverlap = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS2_GetUnionOverlap)
    GetJaccardCoefficient = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS2_GetJaccardCoefficient)
    GetMeanOverlap = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS2_GetMeanOverlap)
    GetDiceCoefficient = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS2_GetDiceCoefficient)
    GetVolumeSimilarity = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS2_GetVolumeSimilarity)
    GetFalseNegativeError = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS2_GetFalseNegativeError)
    GetFalsePositiveError = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS2_GetFalsePositiveError)
    GetFalseDiscoveryRate = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS2_GetFalseDiscoveryRate)
    Input1HasNumericTraitsCheck = _itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS2_Input1HasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelOverlapMeasuresImageFilterPython.delete_itkLabelOverlapMeasuresImageFilterIUS2
    cast = _swig_new_static_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS2_cast)

    def New(*args, **kargs):
        """New() -> itkLabelOverlapMeasuresImageFilterIUS2

        Create a new object of the class itkLabelOverlapMeasuresImageFilterIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelOverlapMeasuresImageFilterIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelOverlapMeasuresImageFilterIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelOverlapMeasuresImageFilterIUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelOverlapMeasuresImageFilterIUS2 in _itkLabelOverlapMeasuresImageFilterPython:
_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS2_swigregister(itkLabelOverlapMeasuresImageFilterIUS2)
itkLabelOverlapMeasuresImageFilterIUS2___New_orig__ = _itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS2___New_orig__
itkLabelOverlapMeasuresImageFilterIUS2_cast = _itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS2_cast


def itkLabelOverlapMeasuresImageFilterIUS3_New():
    return itkLabelOverlapMeasuresImageFilterIUS3.New()

class itkLabelOverlapMeasuresImageFilterIUS3(itk.itkImageSinkPython.itkImageSinkIUS3):
    r"""Proxy of C++ itkLabelOverlapMeasuresImageFilterIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS3_Clone)
    SetTargetImage = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS3_SetTargetImage)
    GetTargetImage = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS3_GetTargetImage)
    SetSourceImage = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS3_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS3_GetSourceImage)
    GetLabelSetMeasures = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS3_GetLabelSetMeasures)
    GetTotalOverlap = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS3_GetTotalOverlap)
    GetTargetOverlap = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS3_GetTargetOverlap)
    GetUnionOverlap = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS3_GetUnionOverlap)
    GetJaccardCoefficient = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS3_GetJaccardCoefficient)
    GetMeanOverlap = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS3_GetMeanOverlap)
    GetDiceCoefficient = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS3_GetDiceCoefficient)
    GetVolumeSimilarity = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS3_GetVolumeSimilarity)
    GetFalseNegativeError = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS3_GetFalseNegativeError)
    GetFalsePositiveError = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS3_GetFalsePositiveError)
    GetFalseDiscoveryRate = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS3_GetFalseDiscoveryRate)
    Input1HasNumericTraitsCheck = _itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS3_Input1HasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelOverlapMeasuresImageFilterPython.delete_itkLabelOverlapMeasuresImageFilterIUS3
    cast = _swig_new_static_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS3_cast)

    def New(*args, **kargs):
        """New() -> itkLabelOverlapMeasuresImageFilterIUS3

        Create a new object of the class itkLabelOverlapMeasuresImageFilterIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelOverlapMeasuresImageFilterIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelOverlapMeasuresImageFilterIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelOverlapMeasuresImageFilterIUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelOverlapMeasuresImageFilterIUS3 in _itkLabelOverlapMeasuresImageFilterPython:
_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS3_swigregister(itkLabelOverlapMeasuresImageFilterIUS3)
itkLabelOverlapMeasuresImageFilterIUS3___New_orig__ = _itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS3___New_orig__
itkLabelOverlapMeasuresImageFilterIUS3_cast = _itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS3_cast


def itkLabelOverlapMeasuresImageFilterIUS4_New():
    return itkLabelOverlapMeasuresImageFilterIUS4.New()

class itkLabelOverlapMeasuresImageFilterIUS4(itk.itkImageSinkPython.itkImageSinkIUS4):
    r"""Proxy of C++ itkLabelOverlapMeasuresImageFilterIUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS4_Clone)
    SetTargetImage = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS4_SetTargetImage)
    GetTargetImage = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS4_GetTargetImage)
    SetSourceImage = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS4_SetSourceImage)
    GetSourceImage = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS4_GetSourceImage)
    GetLabelSetMeasures = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS4_GetLabelSetMeasures)
    GetTotalOverlap = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS4_GetTotalOverlap)
    GetTargetOverlap = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS4_GetTargetOverlap)
    GetUnionOverlap = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS4_GetUnionOverlap)
    GetJaccardCoefficient = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS4_GetJaccardCoefficient)
    GetMeanOverlap = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS4_GetMeanOverlap)
    GetDiceCoefficient = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS4_GetDiceCoefficient)
    GetVolumeSimilarity = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS4_GetVolumeSimilarity)
    GetFalseNegativeError = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS4_GetFalseNegativeError)
    GetFalsePositiveError = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS4_GetFalsePositiveError)
    GetFalseDiscoveryRate = _swig_new_instance_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS4_GetFalseDiscoveryRate)
    Input1HasNumericTraitsCheck = _itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS4_Input1HasNumericTraitsCheck
    
    __swig_destroy__ = _itkLabelOverlapMeasuresImageFilterPython.delete_itkLabelOverlapMeasuresImageFilterIUS4
    cast = _swig_new_static_method(_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS4_cast)

    def New(*args, **kargs):
        """New() -> itkLabelOverlapMeasuresImageFilterIUS4

        Create a new object of the class itkLabelOverlapMeasuresImageFilterIUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelOverlapMeasuresImageFilterIUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelOverlapMeasuresImageFilterIUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelOverlapMeasuresImageFilterIUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelOverlapMeasuresImageFilterIUS4 in _itkLabelOverlapMeasuresImageFilterPython:
_itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS4_swigregister(itkLabelOverlapMeasuresImageFilterIUS4)
itkLabelOverlapMeasuresImageFilterIUS4___New_orig__ = _itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS4___New_orig__
itkLabelOverlapMeasuresImageFilterIUS4_cast = _itkLabelOverlapMeasuresImageFilterPython.itkLabelOverlapMeasuresImageFilterIUS4_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def label_overlap_measures_image_filter(*args: itkt.ImageLike,  target_image: itkt.Image=..., source_image: itkt.Image=...,**kwargs):
    """Functional interface for LabelOverlapMeasuresImageFilter"""
    import itk

    kwarg_typehints = { 'target_image':target_image,'source_image':source_image }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.LabelOverlapMeasuresImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def label_overlap_measures_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageStatistics.LabelOverlapMeasuresImageFilter
    label_overlap_measures_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    label_overlap_measures_image_filter.__doc__ = filter_object.__doc__




