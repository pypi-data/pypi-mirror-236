# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKDisplacementFieldPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkTransformToDisplacementFieldFilterPython
else:
    import _itkTransformToDisplacementFieldFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkTransformToDisplacementFieldFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkTransformToDisplacementFieldFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkSizePython
import itk.pyBasePython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.itkTransformBasePython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkArray2DPython
import itk.itkDiffusionTensor3DPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkVariableLengthVectorPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkVectorImagePython
import itk.itkImageSourceCommonPython

def itkTransformToDisplacementFieldFilterICVF22D_New():
    return itkTransformToDisplacementFieldFilterICVF22D.New()

class itkTransformToDisplacementFieldFilterICVF22D(itk.itkImageSourcePython.itkImageSourceICVF22):
    r"""Proxy of C++ itkTransformToDisplacementFieldFilterICVF22D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D___New_orig__)
    Clone = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_Clone)
    SetInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_SetInput)
    GetInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_GetInput)
    SetTransformInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_GetTransform)
    SetOutputStartIndex = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_GetOutputStartIndex)
    SetSize = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_SetSize)
    GetSize = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_GetSize)
    SetOutputSpacing = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_GetOutputDirection)
    SetReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_GetUseReferenceImage)
    SameDimensionCheck = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_SameDimensionCheck
    
    __swig_destroy__ = _itkTransformToDisplacementFieldFilterPython.delete_itkTransformToDisplacementFieldFilterICVF22D
    cast = _swig_new_static_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_cast)

    def New(*args, **kargs):
        """New() -> itkTransformToDisplacementFieldFilterICVF22D

        Create a new object of the class itkTransformToDisplacementFieldFilterICVF22D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToDisplacementFieldFilterICVF22D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToDisplacementFieldFilterICVF22D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToDisplacementFieldFilterICVF22D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToDisplacementFieldFilterICVF22D in _itkTransformToDisplacementFieldFilterPython:
_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_swigregister(itkTransformToDisplacementFieldFilterICVF22D)
itkTransformToDisplacementFieldFilterICVF22D___New_orig__ = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D___New_orig__
itkTransformToDisplacementFieldFilterICVF22D_cast = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22D_cast


def itkTransformToDisplacementFieldFilterICVF22F_New():
    return itkTransformToDisplacementFieldFilterICVF22F.New()

class itkTransformToDisplacementFieldFilterICVF22F(itk.itkImageSourcePython.itkImageSourceICVF22):
    r"""Proxy of C++ itkTransformToDisplacementFieldFilterICVF22F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F___New_orig__)
    Clone = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_Clone)
    SetInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_SetInput)
    GetInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_GetInput)
    SetTransformInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_GetTransform)
    SetOutputStartIndex = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_GetOutputStartIndex)
    SetSize = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_SetSize)
    GetSize = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_GetSize)
    SetOutputSpacing = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_GetOutputDirection)
    SetReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_GetUseReferenceImage)
    SameDimensionCheck = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_SameDimensionCheck
    
    __swig_destroy__ = _itkTransformToDisplacementFieldFilterPython.delete_itkTransformToDisplacementFieldFilterICVF22F
    cast = _swig_new_static_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_cast)

    def New(*args, **kargs):
        """New() -> itkTransformToDisplacementFieldFilterICVF22F

        Create a new object of the class itkTransformToDisplacementFieldFilterICVF22F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToDisplacementFieldFilterICVF22F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToDisplacementFieldFilterICVF22F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToDisplacementFieldFilterICVF22F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToDisplacementFieldFilterICVF22F in _itkTransformToDisplacementFieldFilterPython:
_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_swigregister(itkTransformToDisplacementFieldFilterICVF22F)
itkTransformToDisplacementFieldFilterICVF22F___New_orig__ = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F___New_orig__
itkTransformToDisplacementFieldFilterICVF22F_cast = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF22F_cast


def itkTransformToDisplacementFieldFilterICVF33D_New():
    return itkTransformToDisplacementFieldFilterICVF33D.New()

class itkTransformToDisplacementFieldFilterICVF33D(itk.itkImageSourcePython.itkImageSourceICVF33):
    r"""Proxy of C++ itkTransformToDisplacementFieldFilterICVF33D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D___New_orig__)
    Clone = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_Clone)
    SetInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_SetInput)
    GetInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_GetInput)
    SetTransformInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_GetTransform)
    SetOutputStartIndex = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_GetOutputStartIndex)
    SetSize = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_SetSize)
    GetSize = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_GetSize)
    SetOutputSpacing = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_GetOutputDirection)
    SetReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_GetUseReferenceImage)
    SameDimensionCheck = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_SameDimensionCheck
    
    __swig_destroy__ = _itkTransformToDisplacementFieldFilterPython.delete_itkTransformToDisplacementFieldFilterICVF33D
    cast = _swig_new_static_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_cast)

    def New(*args, **kargs):
        """New() -> itkTransformToDisplacementFieldFilterICVF33D

        Create a new object of the class itkTransformToDisplacementFieldFilterICVF33D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToDisplacementFieldFilterICVF33D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToDisplacementFieldFilterICVF33D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToDisplacementFieldFilterICVF33D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToDisplacementFieldFilterICVF33D in _itkTransformToDisplacementFieldFilterPython:
_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_swigregister(itkTransformToDisplacementFieldFilterICVF33D)
itkTransformToDisplacementFieldFilterICVF33D___New_orig__ = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D___New_orig__
itkTransformToDisplacementFieldFilterICVF33D_cast = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33D_cast


def itkTransformToDisplacementFieldFilterICVF33F_New():
    return itkTransformToDisplacementFieldFilterICVF33F.New()

class itkTransformToDisplacementFieldFilterICVF33F(itk.itkImageSourcePython.itkImageSourceICVF33):
    r"""Proxy of C++ itkTransformToDisplacementFieldFilterICVF33F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F___New_orig__)
    Clone = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_Clone)
    SetInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_SetInput)
    GetInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_GetInput)
    SetTransformInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_GetTransform)
    SetOutputStartIndex = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_GetOutputStartIndex)
    SetSize = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_SetSize)
    GetSize = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_GetSize)
    SetOutputSpacing = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_GetOutputDirection)
    SetReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_GetUseReferenceImage)
    SameDimensionCheck = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_SameDimensionCheck
    
    __swig_destroy__ = _itkTransformToDisplacementFieldFilterPython.delete_itkTransformToDisplacementFieldFilterICVF33F
    cast = _swig_new_static_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_cast)

    def New(*args, **kargs):
        """New() -> itkTransformToDisplacementFieldFilterICVF33F

        Create a new object of the class itkTransformToDisplacementFieldFilterICVF33F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToDisplacementFieldFilterICVF33F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToDisplacementFieldFilterICVF33F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToDisplacementFieldFilterICVF33F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToDisplacementFieldFilterICVF33F in _itkTransformToDisplacementFieldFilterPython:
_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_swigregister(itkTransformToDisplacementFieldFilterICVF33F)
itkTransformToDisplacementFieldFilterICVF33F___New_orig__ = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F___New_orig__
itkTransformToDisplacementFieldFilterICVF33F_cast = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF33F_cast


def itkTransformToDisplacementFieldFilterICVF44D_New():
    return itkTransformToDisplacementFieldFilterICVF44D.New()

class itkTransformToDisplacementFieldFilterICVF44D(itk.itkImageSourcePython.itkImageSourceICVF44):
    r"""Proxy of C++ itkTransformToDisplacementFieldFilterICVF44D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D___New_orig__)
    Clone = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_Clone)
    SetInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_SetInput)
    GetInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_GetInput)
    SetTransformInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_GetTransform)
    SetOutputStartIndex = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_GetOutputStartIndex)
    SetSize = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_SetSize)
    GetSize = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_GetSize)
    SetOutputSpacing = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_GetOutputDirection)
    SetReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_GetUseReferenceImage)
    SameDimensionCheck = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_SameDimensionCheck
    
    __swig_destroy__ = _itkTransformToDisplacementFieldFilterPython.delete_itkTransformToDisplacementFieldFilterICVF44D
    cast = _swig_new_static_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_cast)

    def New(*args, **kargs):
        """New() -> itkTransformToDisplacementFieldFilterICVF44D

        Create a new object of the class itkTransformToDisplacementFieldFilterICVF44D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToDisplacementFieldFilterICVF44D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToDisplacementFieldFilterICVF44D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToDisplacementFieldFilterICVF44D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToDisplacementFieldFilterICVF44D in _itkTransformToDisplacementFieldFilterPython:
_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_swigregister(itkTransformToDisplacementFieldFilterICVF44D)
itkTransformToDisplacementFieldFilterICVF44D___New_orig__ = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D___New_orig__
itkTransformToDisplacementFieldFilterICVF44D_cast = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44D_cast


def itkTransformToDisplacementFieldFilterICVF44F_New():
    return itkTransformToDisplacementFieldFilterICVF44F.New()

class itkTransformToDisplacementFieldFilterICVF44F(itk.itkImageSourcePython.itkImageSourceICVF44):
    r"""Proxy of C++ itkTransformToDisplacementFieldFilterICVF44F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F___New_orig__)
    Clone = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_Clone)
    SetInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_SetInput)
    GetInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_GetInput)
    SetTransformInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_GetTransform)
    SetOutputStartIndex = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_GetOutputStartIndex)
    SetSize = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_SetSize)
    GetSize = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_GetSize)
    SetOutputSpacing = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_GetOutputDirection)
    SetReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_GetUseReferenceImage)
    SameDimensionCheck = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_SameDimensionCheck
    
    __swig_destroy__ = _itkTransformToDisplacementFieldFilterPython.delete_itkTransformToDisplacementFieldFilterICVF44F
    cast = _swig_new_static_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_cast)

    def New(*args, **kargs):
        """New() -> itkTransformToDisplacementFieldFilterICVF44F

        Create a new object of the class itkTransformToDisplacementFieldFilterICVF44F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToDisplacementFieldFilterICVF44F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToDisplacementFieldFilterICVF44F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToDisplacementFieldFilterICVF44F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToDisplacementFieldFilterICVF44F in _itkTransformToDisplacementFieldFilterPython:
_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_swigregister(itkTransformToDisplacementFieldFilterICVF44F)
itkTransformToDisplacementFieldFilterICVF44F___New_orig__ = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F___New_orig__
itkTransformToDisplacementFieldFilterICVF44F_cast = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterICVF44F_cast


def itkTransformToDisplacementFieldFilterIVF22D_New():
    return itkTransformToDisplacementFieldFilterIVF22D.New()

class itkTransformToDisplacementFieldFilterIVF22D(itk.itkImageSourcePython.itkImageSourceIVF22):
    r"""Proxy of C++ itkTransformToDisplacementFieldFilterIVF22D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D___New_orig__)
    Clone = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_Clone)
    SetInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_SetInput)
    GetInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_GetInput)
    SetTransformInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_GetTransform)
    SetOutputStartIndex = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_GetOutputStartIndex)
    SetSize = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_SetSize)
    GetSize = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_GetSize)
    SetOutputSpacing = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_GetOutputDirection)
    SetReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_GetUseReferenceImage)
    SameDimensionCheck = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_SameDimensionCheck
    
    __swig_destroy__ = _itkTransformToDisplacementFieldFilterPython.delete_itkTransformToDisplacementFieldFilterIVF22D
    cast = _swig_new_static_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_cast)

    def New(*args, **kargs):
        """New() -> itkTransformToDisplacementFieldFilterIVF22D

        Create a new object of the class itkTransformToDisplacementFieldFilterIVF22D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToDisplacementFieldFilterIVF22D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToDisplacementFieldFilterIVF22D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToDisplacementFieldFilterIVF22D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToDisplacementFieldFilterIVF22D in _itkTransformToDisplacementFieldFilterPython:
_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_swigregister(itkTransformToDisplacementFieldFilterIVF22D)
itkTransformToDisplacementFieldFilterIVF22D___New_orig__ = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D___New_orig__
itkTransformToDisplacementFieldFilterIVF22D_cast = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22D_cast


def itkTransformToDisplacementFieldFilterIVF22F_New():
    return itkTransformToDisplacementFieldFilterIVF22F.New()

class itkTransformToDisplacementFieldFilterIVF22F(itk.itkImageSourcePython.itkImageSourceIVF22):
    r"""Proxy of C++ itkTransformToDisplacementFieldFilterIVF22F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F___New_orig__)
    Clone = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_Clone)
    SetInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_SetInput)
    GetInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_GetInput)
    SetTransformInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_GetTransform)
    SetOutputStartIndex = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_GetOutputStartIndex)
    SetSize = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_SetSize)
    GetSize = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_GetSize)
    SetOutputSpacing = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_GetOutputDirection)
    SetReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_GetUseReferenceImage)
    SameDimensionCheck = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_SameDimensionCheck
    
    __swig_destroy__ = _itkTransformToDisplacementFieldFilterPython.delete_itkTransformToDisplacementFieldFilterIVF22F
    cast = _swig_new_static_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_cast)

    def New(*args, **kargs):
        """New() -> itkTransformToDisplacementFieldFilterIVF22F

        Create a new object of the class itkTransformToDisplacementFieldFilterIVF22F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToDisplacementFieldFilterIVF22F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToDisplacementFieldFilterIVF22F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToDisplacementFieldFilterIVF22F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToDisplacementFieldFilterIVF22F in _itkTransformToDisplacementFieldFilterPython:
_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_swigregister(itkTransformToDisplacementFieldFilterIVF22F)
itkTransformToDisplacementFieldFilterIVF22F___New_orig__ = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F___New_orig__
itkTransformToDisplacementFieldFilterIVF22F_cast = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF22F_cast


def itkTransformToDisplacementFieldFilterIVF33D_New():
    return itkTransformToDisplacementFieldFilterIVF33D.New()

class itkTransformToDisplacementFieldFilterIVF33D(itk.itkImageSourcePython.itkImageSourceIVF33):
    r"""Proxy of C++ itkTransformToDisplacementFieldFilterIVF33D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D___New_orig__)
    Clone = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_Clone)
    SetInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_SetInput)
    GetInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_GetInput)
    SetTransformInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_GetTransform)
    SetOutputStartIndex = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_GetOutputStartIndex)
    SetSize = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_SetSize)
    GetSize = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_GetSize)
    SetOutputSpacing = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_GetOutputDirection)
    SetReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_GetUseReferenceImage)
    SameDimensionCheck = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_SameDimensionCheck
    
    __swig_destroy__ = _itkTransformToDisplacementFieldFilterPython.delete_itkTransformToDisplacementFieldFilterIVF33D
    cast = _swig_new_static_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_cast)

    def New(*args, **kargs):
        """New() -> itkTransformToDisplacementFieldFilterIVF33D

        Create a new object of the class itkTransformToDisplacementFieldFilterIVF33D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToDisplacementFieldFilterIVF33D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToDisplacementFieldFilterIVF33D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToDisplacementFieldFilterIVF33D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToDisplacementFieldFilterIVF33D in _itkTransformToDisplacementFieldFilterPython:
_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_swigregister(itkTransformToDisplacementFieldFilterIVF33D)
itkTransformToDisplacementFieldFilterIVF33D___New_orig__ = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D___New_orig__
itkTransformToDisplacementFieldFilterIVF33D_cast = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33D_cast


def itkTransformToDisplacementFieldFilterIVF33F_New():
    return itkTransformToDisplacementFieldFilterIVF33F.New()

class itkTransformToDisplacementFieldFilterIVF33F(itk.itkImageSourcePython.itkImageSourceIVF33):
    r"""Proxy of C++ itkTransformToDisplacementFieldFilterIVF33F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F___New_orig__)
    Clone = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_Clone)
    SetInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_SetInput)
    GetInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_GetInput)
    SetTransformInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_GetTransform)
    SetOutputStartIndex = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_GetOutputStartIndex)
    SetSize = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_SetSize)
    GetSize = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_GetSize)
    SetOutputSpacing = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_GetOutputDirection)
    SetReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_GetUseReferenceImage)
    SameDimensionCheck = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_SameDimensionCheck
    
    __swig_destroy__ = _itkTransformToDisplacementFieldFilterPython.delete_itkTransformToDisplacementFieldFilterIVF33F
    cast = _swig_new_static_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_cast)

    def New(*args, **kargs):
        """New() -> itkTransformToDisplacementFieldFilterIVF33F

        Create a new object of the class itkTransformToDisplacementFieldFilterIVF33F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToDisplacementFieldFilterIVF33F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToDisplacementFieldFilterIVF33F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToDisplacementFieldFilterIVF33F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToDisplacementFieldFilterIVF33F in _itkTransformToDisplacementFieldFilterPython:
_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_swigregister(itkTransformToDisplacementFieldFilterIVF33F)
itkTransformToDisplacementFieldFilterIVF33F___New_orig__ = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F___New_orig__
itkTransformToDisplacementFieldFilterIVF33F_cast = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF33F_cast


def itkTransformToDisplacementFieldFilterIVF44D_New():
    return itkTransformToDisplacementFieldFilterIVF44D.New()

class itkTransformToDisplacementFieldFilterIVF44D(itk.itkImageSourcePython.itkImageSourceIVF44):
    r"""Proxy of C++ itkTransformToDisplacementFieldFilterIVF44D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D___New_orig__)
    Clone = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_Clone)
    SetInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_SetInput)
    GetInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_GetInput)
    SetTransformInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_GetTransform)
    SetOutputStartIndex = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_GetOutputStartIndex)
    SetSize = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_SetSize)
    GetSize = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_GetSize)
    SetOutputSpacing = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_GetOutputDirection)
    SetReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_GetUseReferenceImage)
    SameDimensionCheck = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_SameDimensionCheck
    
    __swig_destroy__ = _itkTransformToDisplacementFieldFilterPython.delete_itkTransformToDisplacementFieldFilterIVF44D
    cast = _swig_new_static_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_cast)

    def New(*args, **kargs):
        """New() -> itkTransformToDisplacementFieldFilterIVF44D

        Create a new object of the class itkTransformToDisplacementFieldFilterIVF44D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToDisplacementFieldFilterIVF44D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToDisplacementFieldFilterIVF44D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToDisplacementFieldFilterIVF44D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToDisplacementFieldFilterIVF44D in _itkTransformToDisplacementFieldFilterPython:
_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_swigregister(itkTransformToDisplacementFieldFilterIVF44D)
itkTransformToDisplacementFieldFilterIVF44D___New_orig__ = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D___New_orig__
itkTransformToDisplacementFieldFilterIVF44D_cast = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44D_cast


def itkTransformToDisplacementFieldFilterIVF44F_New():
    return itkTransformToDisplacementFieldFilterIVF44F.New()

class itkTransformToDisplacementFieldFilterIVF44F(itk.itkImageSourcePython.itkImageSourceIVF44):
    r"""Proxy of C++ itkTransformToDisplacementFieldFilterIVF44F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F___New_orig__)
    Clone = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_Clone)
    SetInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_SetInput)
    GetInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_GetInput)
    SetTransformInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_SetTransformInput)
    SetTransform = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_SetTransform)
    GetTransformInput = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_GetTransformInput)
    GetTransform = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_GetTransform)
    SetOutputStartIndex = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_SetOutputStartIndex)
    GetOutputStartIndex = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_GetOutputStartIndex)
    SetSize = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_SetSize)
    GetSize = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_GetSize)
    SetOutputSpacing = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_SetOutputSpacing)
    GetOutputSpacing = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_GetOutputSpacing)
    SetOutputOrigin = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_SetOutputOrigin)
    GetOutputOrigin = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_GetOutputOrigin)
    SetOutputDirection = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_SetOutputDirection)
    GetOutputDirection = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_GetOutputDirection)
    SetReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_SetReferenceImage)
    GetReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_GetReferenceImage)
    SetUseReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_SetUseReferenceImage)
    UseReferenceImageOn = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_UseReferenceImageOn)
    UseReferenceImageOff = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_UseReferenceImageOff)
    GetUseReferenceImage = _swig_new_instance_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_GetUseReferenceImage)
    SameDimensionCheck = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_SameDimensionCheck
    
    __swig_destroy__ = _itkTransformToDisplacementFieldFilterPython.delete_itkTransformToDisplacementFieldFilterIVF44F
    cast = _swig_new_static_method(_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_cast)

    def New(*args, **kargs):
        """New() -> itkTransformToDisplacementFieldFilterIVF44F

        Create a new object of the class itkTransformToDisplacementFieldFilterIVF44F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTransformToDisplacementFieldFilterIVF44F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTransformToDisplacementFieldFilterIVF44F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTransformToDisplacementFieldFilterIVF44F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTransformToDisplacementFieldFilterIVF44F in _itkTransformToDisplacementFieldFilterPython:
_itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_swigregister(itkTransformToDisplacementFieldFilterIVF44F)
itkTransformToDisplacementFieldFilterIVF44F___New_orig__ = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F___New_orig__
itkTransformToDisplacementFieldFilterIVF44F_cast = _itkTransformToDisplacementFieldFilterPython.itkTransformToDisplacementFieldFilterIVF44F_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def transform_to_displacement_field_filter(*args,  transform_input=..., transform: itkt.Transform=..., output_start_index: Sequence[int]=..., size: Sequence[int]=..., output_spacing: Sequence[float]=..., output_origin: Sequence[float]=..., output_direction=..., reference_image: itkt.ImageBase=..., use_reference_image: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for TransformToDisplacementFieldFilter"""
    import itk

    kwarg_typehints = { 'transform_input':transform_input,'transform':transform,'output_start_index':output_start_index,'size':size,'output_spacing':output_spacing,'output_origin':output_origin,'output_direction':output_direction,'reference_image':reference_image,'use_reference_image':use_reference_image }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)

    transform = None
    if len(args):
        transform = args[0]
    elif 'transform' in kwargs:
        transform = kwargs.pop('transform')
    elif 'transform_input' in kwargs:
        transform = kwargs.pop('transform_input')
    else:
        raise ValueError('A transform is required. Pass as the first argument.')

    input_dim = transform.GetInputSpaceDimension()
    output_dim = transform.GetOutputSpaceDimension()
    ParametersType = itk.template(transform)[1][0]

    decorator = itk.DataObjectDecorator[itk.Transform[ParametersType, input_dim, output_dim]].New()
    decorator.Set(transform)

    FieldType = itk.Image[itk.Vector[itk.F, output_dim], output_dim]

    args = (decorator,)
    instance = itk.TransformToDisplacementFieldFilter[FieldType, ParametersType].New(*args, **kwargs)

    return instance.__internal_call__()

def transform_to_displacement_field_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKDisplacementField.TransformToDisplacementFieldFilter
    transform_to_displacement_field_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    transform_to_displacement_field_filter.__doc__ = filter_object.__doc__




