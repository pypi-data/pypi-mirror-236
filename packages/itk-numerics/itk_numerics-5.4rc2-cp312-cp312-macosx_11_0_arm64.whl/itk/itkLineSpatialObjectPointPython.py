# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKSpatialObjectsPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkLineSpatialObjectPointPython
else:
    import _itkLineSpatialObjectPointPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkLineSpatialObjectPointPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkLineSpatialObjectPointPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkSpatialObjectPointPython
import itk.itkSpatialObjectBasePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkArrayPython
import itk.itkSpatialObjectPropertyPython
import itk.itkRGBAPixelPython
import itk.itkAffineTransformPython
import itk.itkTransformBasePython
import itk.itkVariableLengthVectorPython
import itk.itkOptimizerParametersPython
import itk.itkDiffusionTensor3DPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkArray2DPython
import itk.itkMatrixOffsetTransformBasePython
class vectoritkLineSpatialObjectPoint2(collections.abc.MutableSequence):
    r"""Proxy of C++ std::vector< itkLineSpatialObjectPoint2 > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2___nonzero__)
    __bool__ = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2___bool__)
    __len__ = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2___len__)
    __getslice__ = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2___getslice__)
    __setslice__ = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2___setslice__)
    __delslice__ = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2___delslice__)
    __delitem__ = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2___delitem__)
    __getitem__ = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2___getitem__)
    __setitem__ = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2___setitem__)
    pop = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_pop)
    append = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_append)
    empty = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_empty)
    size = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_size)
    swap = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_swap)
    begin = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_begin)
    end = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_end)
    rbegin = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_rbegin)
    rend = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_rend)
    clear = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_clear)
    get_allocator = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_get_allocator)
    pop_back = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_pop_back)
    erase = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_erase)

    def __init__(self, *args):
        r"""
        __init__(self) -> vectoritkLineSpatialObjectPoint2
        __init__(self, other) -> vectoritkLineSpatialObjectPoint2

        Parameters
        ----------
        other: std::vector< itkLineSpatialObjectPoint2 > const &

        __init__(self, size) -> vectoritkLineSpatialObjectPoint2

        Parameters
        ----------
        size: std::vector< itkLineSpatialObjectPoint2 >::size_type

        __init__(self, size, value) -> vectoritkLineSpatialObjectPoint2

        Parameters
        ----------
        size: std::vector< itkLineSpatialObjectPoint2 >::size_type
        value: std::vector< itkLineSpatialObjectPoint2 >::value_type const &

        """
        _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_swiginit(self, _itkLineSpatialObjectPointPython.new_vectoritkLineSpatialObjectPoint2(*args))
    push_back = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_push_back)
    front = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_front)
    back = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_back)
    assign = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_assign)
    resize = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_resize)
    insert = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_insert)
    reserve = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_reserve)
    capacity = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_capacity)
    __swig_destroy__ = _itkLineSpatialObjectPointPython.delete_vectoritkLineSpatialObjectPoint2

# Register vectoritkLineSpatialObjectPoint2 in _itkLineSpatialObjectPointPython:
_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint2_swigregister(vectoritkLineSpatialObjectPoint2)

class vectoritkLineSpatialObjectPoint3(collections.abc.MutableSequence):
    r"""Proxy of C++ std::vector< itkLineSpatialObjectPoint3 > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3___nonzero__)
    __bool__ = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3___bool__)
    __len__ = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3___len__)
    __getslice__ = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3___getslice__)
    __setslice__ = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3___setslice__)
    __delslice__ = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3___delslice__)
    __delitem__ = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3___delitem__)
    __getitem__ = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3___getitem__)
    __setitem__ = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3___setitem__)
    pop = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_pop)
    append = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_append)
    empty = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_empty)
    size = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_size)
    swap = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_swap)
    begin = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_begin)
    end = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_end)
    rbegin = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_rbegin)
    rend = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_rend)
    clear = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_clear)
    get_allocator = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_get_allocator)
    pop_back = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_pop_back)
    erase = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_erase)

    def __init__(self, *args):
        r"""
        __init__(self) -> vectoritkLineSpatialObjectPoint3
        __init__(self, other) -> vectoritkLineSpatialObjectPoint3

        Parameters
        ----------
        other: std::vector< itkLineSpatialObjectPoint3 > const &

        __init__(self, size) -> vectoritkLineSpatialObjectPoint3

        Parameters
        ----------
        size: std::vector< itkLineSpatialObjectPoint3 >::size_type

        __init__(self, size, value) -> vectoritkLineSpatialObjectPoint3

        Parameters
        ----------
        size: std::vector< itkLineSpatialObjectPoint3 >::size_type
        value: std::vector< itkLineSpatialObjectPoint3 >::value_type const &

        """
        _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_swiginit(self, _itkLineSpatialObjectPointPython.new_vectoritkLineSpatialObjectPoint3(*args))
    push_back = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_push_back)
    front = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_front)
    back = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_back)
    assign = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_assign)
    resize = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_resize)
    insert = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_insert)
    reserve = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_reserve)
    capacity = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_capacity)
    __swig_destroy__ = _itkLineSpatialObjectPointPython.delete_vectoritkLineSpatialObjectPoint3

# Register vectoritkLineSpatialObjectPoint3 in _itkLineSpatialObjectPointPython:
_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint3_swigregister(vectoritkLineSpatialObjectPoint3)

class vectoritkLineSpatialObjectPoint4(collections.abc.MutableSequence):
    r"""Proxy of C++ std::vector< itkLineSpatialObjectPoint4 > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint4_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint4___nonzero__)
    __bool__ = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint4___bool__)
    __len__ = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint4___len__)
    __getslice__ = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint4___getslice__)
    __setslice__ = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint4___setslice__)
    __delslice__ = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint4___delslice__)
    __delitem__ = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint4___delitem__)
    __getitem__ = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint4___getitem__)
    __setitem__ = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint4___setitem__)
    pop = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint4_pop)
    append = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint4_append)
    empty = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint4_empty)
    size = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint4_size)
    swap = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint4_swap)
    begin = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint4_begin)
    end = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint4_end)
    rbegin = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint4_rbegin)
    rend = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint4_rend)
    clear = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint4_clear)
    get_allocator = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint4_get_allocator)
    pop_back = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint4_pop_back)
    erase = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint4_erase)

    def __init__(self, *args):
        r"""
        __init__(self) -> vectoritkLineSpatialObjectPoint4
        __init__(self, other) -> vectoritkLineSpatialObjectPoint4

        Parameters
        ----------
        other: std::vector< itkLineSpatialObjectPoint4 > const &

        __init__(self, size) -> vectoritkLineSpatialObjectPoint4

        Parameters
        ----------
        size: std::vector< itkLineSpatialObjectPoint4 >::size_type

        __init__(self, size, value) -> vectoritkLineSpatialObjectPoint4

        Parameters
        ----------
        size: std::vector< itkLineSpatialObjectPoint4 >::size_type
        value: std::vector< itkLineSpatialObjectPoint4 >::value_type const &

        """
        _itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint4_swiginit(self, _itkLineSpatialObjectPointPython.new_vectoritkLineSpatialObjectPoint4(*args))
    push_back = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint4_push_back)
    front = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint4_front)
    back = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint4_back)
    assign = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint4_assign)
    resize = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint4_resize)
    insert = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint4_insert)
    reserve = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint4_reserve)
    capacity = _swig_new_instance_method(_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint4_capacity)
    __swig_destroy__ = _itkLineSpatialObjectPointPython.delete_vectoritkLineSpatialObjectPoint4

# Register vectoritkLineSpatialObjectPoint4 in _itkLineSpatialObjectPointPython:
_itkLineSpatialObjectPointPython.vectoritkLineSpatialObjectPoint4_swigregister(vectoritkLineSpatialObjectPoint4)

class itkLineSpatialObjectPoint2(itk.itkSpatialObjectPointPython.itkSpatialObjectPoint2):
    r"""Proxy of C++ itkLineSpatialObjectPoint2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkLineSpatialObjectPoint2
        __init__(self, other) -> itkLineSpatialObjectPoint2

        Parameters
        ----------
        other: itkLineSpatialObjectPoint2 const &

        """
        _itkLineSpatialObjectPointPython.itkLineSpatialObjectPoint2_swiginit(self, _itkLineSpatialObjectPointPython.new_itkLineSpatialObjectPoint2(*args))
    __swig_destroy__ = _itkLineSpatialObjectPointPython.delete_itkLineSpatialObjectPoint2
    GetNormalInObjectSpace = _swig_new_instance_method(_itkLineSpatialObjectPointPython.itkLineSpatialObjectPoint2_GetNormalInObjectSpace)
    SetNormalInObjectSpace = _swig_new_instance_method(_itkLineSpatialObjectPointPython.itkLineSpatialObjectPoint2_SetNormalInObjectSpace)

# Register itkLineSpatialObjectPoint2 in _itkLineSpatialObjectPointPython:
_itkLineSpatialObjectPointPython.itkLineSpatialObjectPoint2_swigregister(itkLineSpatialObjectPoint2)

class itkLineSpatialObjectPoint3(itk.itkSpatialObjectPointPython.itkSpatialObjectPoint3):
    r"""Proxy of C++ itkLineSpatialObjectPoint3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkLineSpatialObjectPoint3
        __init__(self, other) -> itkLineSpatialObjectPoint3

        Parameters
        ----------
        other: itkLineSpatialObjectPoint3 const &

        """
        _itkLineSpatialObjectPointPython.itkLineSpatialObjectPoint3_swiginit(self, _itkLineSpatialObjectPointPython.new_itkLineSpatialObjectPoint3(*args))
    __swig_destroy__ = _itkLineSpatialObjectPointPython.delete_itkLineSpatialObjectPoint3
    GetNormalInObjectSpace = _swig_new_instance_method(_itkLineSpatialObjectPointPython.itkLineSpatialObjectPoint3_GetNormalInObjectSpace)
    SetNormalInObjectSpace = _swig_new_instance_method(_itkLineSpatialObjectPointPython.itkLineSpatialObjectPoint3_SetNormalInObjectSpace)

# Register itkLineSpatialObjectPoint3 in _itkLineSpatialObjectPointPython:
_itkLineSpatialObjectPointPython.itkLineSpatialObjectPoint3_swigregister(itkLineSpatialObjectPoint3)

class itkLineSpatialObjectPoint4(itk.itkSpatialObjectPointPython.itkSpatialObjectPoint4):
    r"""Proxy of C++ itkLineSpatialObjectPoint4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkLineSpatialObjectPoint4
        __init__(self, other) -> itkLineSpatialObjectPoint4

        Parameters
        ----------
        other: itkLineSpatialObjectPoint4 const &

        """
        _itkLineSpatialObjectPointPython.itkLineSpatialObjectPoint4_swiginit(self, _itkLineSpatialObjectPointPython.new_itkLineSpatialObjectPoint4(*args))
    __swig_destroy__ = _itkLineSpatialObjectPointPython.delete_itkLineSpatialObjectPoint4
    GetNormalInObjectSpace = _swig_new_instance_method(_itkLineSpatialObjectPointPython.itkLineSpatialObjectPoint4_GetNormalInObjectSpace)
    SetNormalInObjectSpace = _swig_new_instance_method(_itkLineSpatialObjectPointPython.itkLineSpatialObjectPoint4_SetNormalInObjectSpace)

# Register itkLineSpatialObjectPoint4 in _itkLineSpatialObjectPointPython:
_itkLineSpatialObjectPointPython.itkLineSpatialObjectPoint4_swigregister(itkLineSpatialObjectPoint4)



