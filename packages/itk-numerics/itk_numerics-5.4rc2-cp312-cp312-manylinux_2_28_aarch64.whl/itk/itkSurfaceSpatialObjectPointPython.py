# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKSpatialObjectsPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkSurfaceSpatialObjectPointPython
else:
    import _itkSurfaceSpatialObjectPointPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkSurfaceSpatialObjectPointPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkSurfaceSpatialObjectPointPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkSpatialObjectPointPython
import itk.itkRGBAPixelPython
import itk.itkSpatialObjectBasePython
import itk.itkAffineTransformPython
import itk.itkTransformBasePython
import itk.itkDiffusionTensor3DPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkVariableLengthVectorPython
import itk.itkArray2DPython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkSpatialObjectPropertyPython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImageRegionPython
class vectoritkSurfaceSpatialObjectPoint2(collections.abc.MutableSequence):
    r"""Proxy of C++ std::vector< itkSurfaceSpatialObjectPoint2 > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2___nonzero__)
    __bool__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2___bool__)
    __len__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2___len__)
    __getslice__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2___getslice__)
    __setslice__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2___setslice__)
    __delslice__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2___delslice__)
    __delitem__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2___delitem__)
    __getitem__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2___getitem__)
    __setitem__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2___setitem__)
    pop = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_pop)
    append = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_append)
    empty = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_empty)
    size = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_size)
    swap = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_swap)
    begin = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_begin)
    end = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_end)
    rbegin = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_rbegin)
    rend = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_rend)
    clear = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_clear)
    get_allocator = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_get_allocator)
    pop_back = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_pop_back)
    erase = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_erase)

    def __init__(self, *args):
        r"""
        __init__(self) -> vectoritkSurfaceSpatialObjectPoint2
        __init__(self, other) -> vectoritkSurfaceSpatialObjectPoint2

        Parameters
        ----------
        other: std::vector< itkSurfaceSpatialObjectPoint2 > const &

        __init__(self, size) -> vectoritkSurfaceSpatialObjectPoint2

        Parameters
        ----------
        size: std::vector< itkSurfaceSpatialObjectPoint2 >::size_type

        __init__(self, size, value) -> vectoritkSurfaceSpatialObjectPoint2

        Parameters
        ----------
        size: std::vector< itkSurfaceSpatialObjectPoint2 >::size_type
        value: std::vector< itkSurfaceSpatialObjectPoint2 >::value_type const &

        """
        _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_swiginit(self, _itkSurfaceSpatialObjectPointPython.new_vectoritkSurfaceSpatialObjectPoint2(*args))
    push_back = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_push_back)
    front = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_front)
    back = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_back)
    assign = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_assign)
    resize = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_resize)
    insert = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_insert)
    reserve = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_reserve)
    capacity = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_capacity)
    __swig_destroy__ = _itkSurfaceSpatialObjectPointPython.delete_vectoritkSurfaceSpatialObjectPoint2

# Register vectoritkSurfaceSpatialObjectPoint2 in _itkSurfaceSpatialObjectPointPython:
_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint2_swigregister(vectoritkSurfaceSpatialObjectPoint2)

class vectoritkSurfaceSpatialObjectPoint3(collections.abc.MutableSequence):
    r"""Proxy of C++ std::vector< itkSurfaceSpatialObjectPoint3 > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3___nonzero__)
    __bool__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3___bool__)
    __len__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3___len__)
    __getslice__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3___getslice__)
    __setslice__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3___setslice__)
    __delslice__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3___delslice__)
    __delitem__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3___delitem__)
    __getitem__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3___getitem__)
    __setitem__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3___setitem__)
    pop = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_pop)
    append = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_append)
    empty = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_empty)
    size = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_size)
    swap = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_swap)
    begin = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_begin)
    end = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_end)
    rbegin = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_rbegin)
    rend = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_rend)
    clear = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_clear)
    get_allocator = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_get_allocator)
    pop_back = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_pop_back)
    erase = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_erase)

    def __init__(self, *args):
        r"""
        __init__(self) -> vectoritkSurfaceSpatialObjectPoint3
        __init__(self, other) -> vectoritkSurfaceSpatialObjectPoint3

        Parameters
        ----------
        other: std::vector< itkSurfaceSpatialObjectPoint3 > const &

        __init__(self, size) -> vectoritkSurfaceSpatialObjectPoint3

        Parameters
        ----------
        size: std::vector< itkSurfaceSpatialObjectPoint3 >::size_type

        __init__(self, size, value) -> vectoritkSurfaceSpatialObjectPoint3

        Parameters
        ----------
        size: std::vector< itkSurfaceSpatialObjectPoint3 >::size_type
        value: std::vector< itkSurfaceSpatialObjectPoint3 >::value_type const &

        """
        _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_swiginit(self, _itkSurfaceSpatialObjectPointPython.new_vectoritkSurfaceSpatialObjectPoint3(*args))
    push_back = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_push_back)
    front = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_front)
    back = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_back)
    assign = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_assign)
    resize = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_resize)
    insert = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_insert)
    reserve = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_reserve)
    capacity = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_capacity)
    __swig_destroy__ = _itkSurfaceSpatialObjectPointPython.delete_vectoritkSurfaceSpatialObjectPoint3

# Register vectoritkSurfaceSpatialObjectPoint3 in _itkSurfaceSpatialObjectPointPython:
_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint3_swigregister(vectoritkSurfaceSpatialObjectPoint3)

class vectoritkSurfaceSpatialObjectPoint4(collections.abc.MutableSequence):
    r"""Proxy of C++ std::vector< itkSurfaceSpatialObjectPoint4 > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4___nonzero__)
    __bool__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4___bool__)
    __len__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4___len__)
    __getslice__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4___getslice__)
    __setslice__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4___setslice__)
    __delslice__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4___delslice__)
    __delitem__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4___delitem__)
    __getitem__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4___getitem__)
    __setitem__ = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4___setitem__)
    pop = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_pop)
    append = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_append)
    empty = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_empty)
    size = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_size)
    swap = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_swap)
    begin = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_begin)
    end = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_end)
    rbegin = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_rbegin)
    rend = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_rend)
    clear = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_clear)
    get_allocator = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_get_allocator)
    pop_back = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_pop_back)
    erase = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_erase)

    def __init__(self, *args):
        r"""
        __init__(self) -> vectoritkSurfaceSpatialObjectPoint4
        __init__(self, other) -> vectoritkSurfaceSpatialObjectPoint4

        Parameters
        ----------
        other: std::vector< itkSurfaceSpatialObjectPoint4 > const &

        __init__(self, size) -> vectoritkSurfaceSpatialObjectPoint4

        Parameters
        ----------
        size: std::vector< itkSurfaceSpatialObjectPoint4 >::size_type

        __init__(self, size, value) -> vectoritkSurfaceSpatialObjectPoint4

        Parameters
        ----------
        size: std::vector< itkSurfaceSpatialObjectPoint4 >::size_type
        value: std::vector< itkSurfaceSpatialObjectPoint4 >::value_type const &

        """
        _itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_swiginit(self, _itkSurfaceSpatialObjectPointPython.new_vectoritkSurfaceSpatialObjectPoint4(*args))
    push_back = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_push_back)
    front = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_front)
    back = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_back)
    assign = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_assign)
    resize = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_resize)
    insert = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_insert)
    reserve = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_reserve)
    capacity = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_capacity)
    __swig_destroy__ = _itkSurfaceSpatialObjectPointPython.delete_vectoritkSurfaceSpatialObjectPoint4

# Register vectoritkSurfaceSpatialObjectPoint4 in _itkSurfaceSpatialObjectPointPython:
_itkSurfaceSpatialObjectPointPython.vectoritkSurfaceSpatialObjectPoint4_swigregister(vectoritkSurfaceSpatialObjectPoint4)

class itkSurfaceSpatialObjectPoint2(itk.itkSpatialObjectPointPython.itkSpatialObjectPoint2):
    r"""Proxy of C++ itkSurfaceSpatialObjectPoint2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkSurfaceSpatialObjectPoint2
        __init__(self, other) -> itkSurfaceSpatialObjectPoint2

        Parameters
        ----------
        other: itkSurfaceSpatialObjectPoint2 const &

        """
        _itkSurfaceSpatialObjectPointPython.itkSurfaceSpatialObjectPoint2_swiginit(self, _itkSurfaceSpatialObjectPointPython.new_itkSurfaceSpatialObjectPoint2(*args))
    __swig_destroy__ = _itkSurfaceSpatialObjectPointPython.delete_itkSurfaceSpatialObjectPoint2
    GetNormalInObjectSpace = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.itkSurfaceSpatialObjectPoint2_GetNormalInObjectSpace)
    GetNormalInWorldSpace = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.itkSurfaceSpatialObjectPoint2_GetNormalInWorldSpace)
    SetNormalInObjectSpace = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.itkSurfaceSpatialObjectPoint2_SetNormalInObjectSpace)
    SetNormalInWorldSpace = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.itkSurfaceSpatialObjectPoint2_SetNormalInWorldSpace)

# Register itkSurfaceSpatialObjectPoint2 in _itkSurfaceSpatialObjectPointPython:
_itkSurfaceSpatialObjectPointPython.itkSurfaceSpatialObjectPoint2_swigregister(itkSurfaceSpatialObjectPoint2)

class itkSurfaceSpatialObjectPoint3(itk.itkSpatialObjectPointPython.itkSpatialObjectPoint3):
    r"""Proxy of C++ itkSurfaceSpatialObjectPoint3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkSurfaceSpatialObjectPoint3
        __init__(self, other) -> itkSurfaceSpatialObjectPoint3

        Parameters
        ----------
        other: itkSurfaceSpatialObjectPoint3 const &

        """
        _itkSurfaceSpatialObjectPointPython.itkSurfaceSpatialObjectPoint3_swiginit(self, _itkSurfaceSpatialObjectPointPython.new_itkSurfaceSpatialObjectPoint3(*args))
    __swig_destroy__ = _itkSurfaceSpatialObjectPointPython.delete_itkSurfaceSpatialObjectPoint3
    GetNormalInObjectSpace = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.itkSurfaceSpatialObjectPoint3_GetNormalInObjectSpace)
    GetNormalInWorldSpace = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.itkSurfaceSpatialObjectPoint3_GetNormalInWorldSpace)
    SetNormalInObjectSpace = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.itkSurfaceSpatialObjectPoint3_SetNormalInObjectSpace)
    SetNormalInWorldSpace = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.itkSurfaceSpatialObjectPoint3_SetNormalInWorldSpace)

# Register itkSurfaceSpatialObjectPoint3 in _itkSurfaceSpatialObjectPointPython:
_itkSurfaceSpatialObjectPointPython.itkSurfaceSpatialObjectPoint3_swigregister(itkSurfaceSpatialObjectPoint3)

class itkSurfaceSpatialObjectPoint4(itk.itkSpatialObjectPointPython.itkSpatialObjectPoint4):
    r"""Proxy of C++ itkSurfaceSpatialObjectPoint4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkSurfaceSpatialObjectPoint4
        __init__(self, other) -> itkSurfaceSpatialObjectPoint4

        Parameters
        ----------
        other: itkSurfaceSpatialObjectPoint4 const &

        """
        _itkSurfaceSpatialObjectPointPython.itkSurfaceSpatialObjectPoint4_swiginit(self, _itkSurfaceSpatialObjectPointPython.new_itkSurfaceSpatialObjectPoint4(*args))
    __swig_destroy__ = _itkSurfaceSpatialObjectPointPython.delete_itkSurfaceSpatialObjectPoint4
    GetNormalInObjectSpace = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.itkSurfaceSpatialObjectPoint4_GetNormalInObjectSpace)
    GetNormalInWorldSpace = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.itkSurfaceSpatialObjectPoint4_GetNormalInWorldSpace)
    SetNormalInObjectSpace = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.itkSurfaceSpatialObjectPoint4_SetNormalInObjectSpace)
    SetNormalInWorldSpace = _swig_new_instance_method(_itkSurfaceSpatialObjectPointPython.itkSurfaceSpatialObjectPoint4_SetNormalInWorldSpace)

# Register itkSurfaceSpatialObjectPoint4 in _itkSurfaceSpatialObjectPointPython:
_itkSurfaceSpatialObjectPointPython.itkSurfaceSpatialObjectPoint4_swigregister(itkSurfaceSpatialObjectPoint4)



