# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageIntensityPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkTernaryAddImageFilterPython
else:
    import _itkTernaryAddImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkTernaryAddImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkTernaryAddImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkTernaryGeneratorImageFilterPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkRGBAPixelPython
import itk.itkArrayPython
import itk.itkRGBPixelPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterAPython
import itk.itkImageToImageFilterCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageToImageFilterBPython

def itkTernaryAddImageFilterID2ID2ID2ID2_New():
    return itkTernaryAddImageFilterID2ID2ID2ID2.New()

class itkTernaryAddImageFilterID2ID2ID2ID2(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterID2ID2ID2ID2):
    r"""Proxy of C++ itkTernaryAddImageFilterID2ID2ID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterID2ID2ID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterID2ID2ID2ID2_Clone)
    __swig_destroy__ = _itkTernaryAddImageFilterPython.delete_itkTernaryAddImageFilterID2ID2ID2ID2
    cast = _swig_new_static_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterID2ID2ID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryAddImageFilterID2ID2ID2ID2

        Create a new object of the class itkTernaryAddImageFilterID2ID2ID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryAddImageFilterID2ID2ID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryAddImageFilterID2ID2ID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryAddImageFilterID2ID2ID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryAddImageFilterID2ID2ID2ID2 in _itkTernaryAddImageFilterPython:
_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterID2ID2ID2ID2_swigregister(itkTernaryAddImageFilterID2ID2ID2ID2)
itkTernaryAddImageFilterID2ID2ID2ID2___New_orig__ = _itkTernaryAddImageFilterPython.itkTernaryAddImageFilterID2ID2ID2ID2___New_orig__
itkTernaryAddImageFilterID2ID2ID2ID2_cast = _itkTernaryAddImageFilterPython.itkTernaryAddImageFilterID2ID2ID2ID2_cast


def itkTernaryAddImageFilterID3ID3ID3ID3_New():
    return itkTernaryAddImageFilterID3ID3ID3ID3.New()

class itkTernaryAddImageFilterID3ID3ID3ID3(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterID3ID3ID3ID3):
    r"""Proxy of C++ itkTernaryAddImageFilterID3ID3ID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterID3ID3ID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterID3ID3ID3ID3_Clone)
    __swig_destroy__ = _itkTernaryAddImageFilterPython.delete_itkTernaryAddImageFilterID3ID3ID3ID3
    cast = _swig_new_static_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterID3ID3ID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryAddImageFilterID3ID3ID3ID3

        Create a new object of the class itkTernaryAddImageFilterID3ID3ID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryAddImageFilterID3ID3ID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryAddImageFilterID3ID3ID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryAddImageFilterID3ID3ID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryAddImageFilterID3ID3ID3ID3 in _itkTernaryAddImageFilterPython:
_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterID3ID3ID3ID3_swigregister(itkTernaryAddImageFilterID3ID3ID3ID3)
itkTernaryAddImageFilterID3ID3ID3ID3___New_orig__ = _itkTernaryAddImageFilterPython.itkTernaryAddImageFilterID3ID3ID3ID3___New_orig__
itkTernaryAddImageFilterID3ID3ID3ID3_cast = _itkTernaryAddImageFilterPython.itkTernaryAddImageFilterID3ID3ID3ID3_cast


def itkTernaryAddImageFilterID4ID4ID4ID4_New():
    return itkTernaryAddImageFilterID4ID4ID4ID4.New()

class itkTernaryAddImageFilterID4ID4ID4ID4(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterID4ID4ID4ID4):
    r"""Proxy of C++ itkTernaryAddImageFilterID4ID4ID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterID4ID4ID4ID4___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterID4ID4ID4ID4_Clone)
    __swig_destroy__ = _itkTernaryAddImageFilterPython.delete_itkTernaryAddImageFilterID4ID4ID4ID4
    cast = _swig_new_static_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterID4ID4ID4ID4_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryAddImageFilterID4ID4ID4ID4

        Create a new object of the class itkTernaryAddImageFilterID4ID4ID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryAddImageFilterID4ID4ID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryAddImageFilterID4ID4ID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryAddImageFilterID4ID4ID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryAddImageFilterID4ID4ID4ID4 in _itkTernaryAddImageFilterPython:
_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterID4ID4ID4ID4_swigregister(itkTernaryAddImageFilterID4ID4ID4ID4)
itkTernaryAddImageFilterID4ID4ID4ID4___New_orig__ = _itkTernaryAddImageFilterPython.itkTernaryAddImageFilterID4ID4ID4ID4___New_orig__
itkTernaryAddImageFilterID4ID4ID4ID4_cast = _itkTernaryAddImageFilterPython.itkTernaryAddImageFilterID4ID4ID4ID4_cast


def itkTernaryAddImageFilterIF2IF2IF2IF2_New():
    return itkTernaryAddImageFilterIF2IF2IF2IF2.New()

class itkTernaryAddImageFilterIF2IF2IF2IF2(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterIF2IF2IF2IF2):
    r"""Proxy of C++ itkTernaryAddImageFilterIF2IF2IF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIF2IF2IF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIF2IF2IF2IF2_Clone)
    __swig_destroy__ = _itkTernaryAddImageFilterPython.delete_itkTernaryAddImageFilterIF2IF2IF2IF2
    cast = _swig_new_static_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIF2IF2IF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryAddImageFilterIF2IF2IF2IF2

        Create a new object of the class itkTernaryAddImageFilterIF2IF2IF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryAddImageFilterIF2IF2IF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryAddImageFilterIF2IF2IF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryAddImageFilterIF2IF2IF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryAddImageFilterIF2IF2IF2IF2 in _itkTernaryAddImageFilterPython:
_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIF2IF2IF2IF2_swigregister(itkTernaryAddImageFilterIF2IF2IF2IF2)
itkTernaryAddImageFilterIF2IF2IF2IF2___New_orig__ = _itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIF2IF2IF2IF2___New_orig__
itkTernaryAddImageFilterIF2IF2IF2IF2_cast = _itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIF2IF2IF2IF2_cast


def itkTernaryAddImageFilterIF3IF3IF3IF3_New():
    return itkTernaryAddImageFilterIF3IF3IF3IF3.New()

class itkTernaryAddImageFilterIF3IF3IF3IF3(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterIF3IF3IF3IF3):
    r"""Proxy of C++ itkTernaryAddImageFilterIF3IF3IF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIF3IF3IF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIF3IF3IF3IF3_Clone)
    __swig_destroy__ = _itkTernaryAddImageFilterPython.delete_itkTernaryAddImageFilterIF3IF3IF3IF3
    cast = _swig_new_static_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIF3IF3IF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryAddImageFilterIF3IF3IF3IF3

        Create a new object of the class itkTernaryAddImageFilterIF3IF3IF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryAddImageFilterIF3IF3IF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryAddImageFilterIF3IF3IF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryAddImageFilterIF3IF3IF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryAddImageFilterIF3IF3IF3IF3 in _itkTernaryAddImageFilterPython:
_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIF3IF3IF3IF3_swigregister(itkTernaryAddImageFilterIF3IF3IF3IF3)
itkTernaryAddImageFilterIF3IF3IF3IF3___New_orig__ = _itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIF3IF3IF3IF3___New_orig__
itkTernaryAddImageFilterIF3IF3IF3IF3_cast = _itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIF3IF3IF3IF3_cast


def itkTernaryAddImageFilterIF4IF4IF4IF4_New():
    return itkTernaryAddImageFilterIF4IF4IF4IF4.New()

class itkTernaryAddImageFilterIF4IF4IF4IF4(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterIF4IF4IF4IF4):
    r"""Proxy of C++ itkTernaryAddImageFilterIF4IF4IF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIF4IF4IF4IF4___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIF4IF4IF4IF4_Clone)
    __swig_destroy__ = _itkTernaryAddImageFilterPython.delete_itkTernaryAddImageFilterIF4IF4IF4IF4
    cast = _swig_new_static_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIF4IF4IF4IF4_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryAddImageFilterIF4IF4IF4IF4

        Create a new object of the class itkTernaryAddImageFilterIF4IF4IF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryAddImageFilterIF4IF4IF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryAddImageFilterIF4IF4IF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryAddImageFilterIF4IF4IF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryAddImageFilterIF4IF4IF4IF4 in _itkTernaryAddImageFilterPython:
_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIF4IF4IF4IF4_swigregister(itkTernaryAddImageFilterIF4IF4IF4IF4)
itkTernaryAddImageFilterIF4IF4IF4IF4___New_orig__ = _itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIF4IF4IF4IF4___New_orig__
itkTernaryAddImageFilterIF4IF4IF4IF4_cast = _itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIF4IF4IF4IF4_cast


def itkTernaryAddImageFilterISS2ISS2ISS2ISS2_New():
    return itkTernaryAddImageFilterISS2ISS2ISS2ISS2.New()

class itkTernaryAddImageFilterISS2ISS2ISS2ISS2(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterISS2ISS2ISS2ISS2):
    r"""Proxy of C++ itkTernaryAddImageFilterISS2ISS2ISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterISS2ISS2ISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterISS2ISS2ISS2ISS2_Clone)
    __swig_destroy__ = _itkTernaryAddImageFilterPython.delete_itkTernaryAddImageFilterISS2ISS2ISS2ISS2
    cast = _swig_new_static_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterISS2ISS2ISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryAddImageFilterISS2ISS2ISS2ISS2

        Create a new object of the class itkTernaryAddImageFilterISS2ISS2ISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryAddImageFilterISS2ISS2ISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryAddImageFilterISS2ISS2ISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryAddImageFilterISS2ISS2ISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryAddImageFilterISS2ISS2ISS2ISS2 in _itkTernaryAddImageFilterPython:
_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterISS2ISS2ISS2ISS2_swigregister(itkTernaryAddImageFilterISS2ISS2ISS2ISS2)
itkTernaryAddImageFilterISS2ISS2ISS2ISS2___New_orig__ = _itkTernaryAddImageFilterPython.itkTernaryAddImageFilterISS2ISS2ISS2ISS2___New_orig__
itkTernaryAddImageFilterISS2ISS2ISS2ISS2_cast = _itkTernaryAddImageFilterPython.itkTernaryAddImageFilterISS2ISS2ISS2ISS2_cast


def itkTernaryAddImageFilterISS3ISS3ISS3ISS3_New():
    return itkTernaryAddImageFilterISS3ISS3ISS3ISS3.New()

class itkTernaryAddImageFilterISS3ISS3ISS3ISS3(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterISS3ISS3ISS3ISS3):
    r"""Proxy of C++ itkTernaryAddImageFilterISS3ISS3ISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterISS3ISS3ISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterISS3ISS3ISS3ISS3_Clone)
    __swig_destroy__ = _itkTernaryAddImageFilterPython.delete_itkTernaryAddImageFilterISS3ISS3ISS3ISS3
    cast = _swig_new_static_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterISS3ISS3ISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryAddImageFilterISS3ISS3ISS3ISS3

        Create a new object of the class itkTernaryAddImageFilterISS3ISS3ISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryAddImageFilterISS3ISS3ISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryAddImageFilterISS3ISS3ISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryAddImageFilterISS3ISS3ISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryAddImageFilterISS3ISS3ISS3ISS3 in _itkTernaryAddImageFilterPython:
_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterISS3ISS3ISS3ISS3_swigregister(itkTernaryAddImageFilterISS3ISS3ISS3ISS3)
itkTernaryAddImageFilterISS3ISS3ISS3ISS3___New_orig__ = _itkTernaryAddImageFilterPython.itkTernaryAddImageFilterISS3ISS3ISS3ISS3___New_orig__
itkTernaryAddImageFilterISS3ISS3ISS3ISS3_cast = _itkTernaryAddImageFilterPython.itkTernaryAddImageFilterISS3ISS3ISS3ISS3_cast


def itkTernaryAddImageFilterISS4ISS4ISS4ISS4_New():
    return itkTernaryAddImageFilterISS4ISS4ISS4ISS4.New()

class itkTernaryAddImageFilterISS4ISS4ISS4ISS4(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterISS4ISS4ISS4ISS4):
    r"""Proxy of C++ itkTernaryAddImageFilterISS4ISS4ISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterISS4ISS4ISS4ISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterISS4ISS4ISS4ISS4_Clone)
    __swig_destroy__ = _itkTernaryAddImageFilterPython.delete_itkTernaryAddImageFilterISS4ISS4ISS4ISS4
    cast = _swig_new_static_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterISS4ISS4ISS4ISS4_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryAddImageFilterISS4ISS4ISS4ISS4

        Create a new object of the class itkTernaryAddImageFilterISS4ISS4ISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryAddImageFilterISS4ISS4ISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryAddImageFilterISS4ISS4ISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryAddImageFilterISS4ISS4ISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryAddImageFilterISS4ISS4ISS4ISS4 in _itkTernaryAddImageFilterPython:
_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterISS4ISS4ISS4ISS4_swigregister(itkTernaryAddImageFilterISS4ISS4ISS4ISS4)
itkTernaryAddImageFilterISS4ISS4ISS4ISS4___New_orig__ = _itkTernaryAddImageFilterPython.itkTernaryAddImageFilterISS4ISS4ISS4ISS4___New_orig__
itkTernaryAddImageFilterISS4ISS4ISS4ISS4_cast = _itkTernaryAddImageFilterPython.itkTernaryAddImageFilterISS4ISS4ISS4ISS4_cast


def itkTernaryAddImageFilterIUC2IUC2IUC2IUC2_New():
    return itkTernaryAddImageFilterIUC2IUC2IUC2IUC2.New()

class itkTernaryAddImageFilterIUC2IUC2IUC2IUC2(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterIUC2IUC2IUC2IUC2):
    r"""Proxy of C++ itkTernaryAddImageFilterIUC2IUC2IUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIUC2IUC2IUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIUC2IUC2IUC2IUC2_Clone)
    __swig_destroy__ = _itkTernaryAddImageFilterPython.delete_itkTernaryAddImageFilterIUC2IUC2IUC2IUC2
    cast = _swig_new_static_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIUC2IUC2IUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryAddImageFilterIUC2IUC2IUC2IUC2

        Create a new object of the class itkTernaryAddImageFilterIUC2IUC2IUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryAddImageFilterIUC2IUC2IUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryAddImageFilterIUC2IUC2IUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryAddImageFilterIUC2IUC2IUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryAddImageFilterIUC2IUC2IUC2IUC2 in _itkTernaryAddImageFilterPython:
_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIUC2IUC2IUC2IUC2_swigregister(itkTernaryAddImageFilterIUC2IUC2IUC2IUC2)
itkTernaryAddImageFilterIUC2IUC2IUC2IUC2___New_orig__ = _itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIUC2IUC2IUC2IUC2___New_orig__
itkTernaryAddImageFilterIUC2IUC2IUC2IUC2_cast = _itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIUC2IUC2IUC2IUC2_cast


def itkTernaryAddImageFilterIUC3IUC3IUC3IUC3_New():
    return itkTernaryAddImageFilterIUC3IUC3IUC3IUC3.New()

class itkTernaryAddImageFilterIUC3IUC3IUC3IUC3(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterIUC3IUC3IUC3IUC3):
    r"""Proxy of C++ itkTernaryAddImageFilterIUC3IUC3IUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIUC3IUC3IUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIUC3IUC3IUC3IUC3_Clone)
    __swig_destroy__ = _itkTernaryAddImageFilterPython.delete_itkTernaryAddImageFilterIUC3IUC3IUC3IUC3
    cast = _swig_new_static_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIUC3IUC3IUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryAddImageFilterIUC3IUC3IUC3IUC3

        Create a new object of the class itkTernaryAddImageFilterIUC3IUC3IUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryAddImageFilterIUC3IUC3IUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryAddImageFilterIUC3IUC3IUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryAddImageFilterIUC3IUC3IUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryAddImageFilterIUC3IUC3IUC3IUC3 in _itkTernaryAddImageFilterPython:
_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIUC3IUC3IUC3IUC3_swigregister(itkTernaryAddImageFilterIUC3IUC3IUC3IUC3)
itkTernaryAddImageFilterIUC3IUC3IUC3IUC3___New_orig__ = _itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIUC3IUC3IUC3IUC3___New_orig__
itkTernaryAddImageFilterIUC3IUC3IUC3IUC3_cast = _itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIUC3IUC3IUC3IUC3_cast


def itkTernaryAddImageFilterIUC4IUC4IUC4IUC4_New():
    return itkTernaryAddImageFilterIUC4IUC4IUC4IUC4.New()

class itkTernaryAddImageFilterIUC4IUC4IUC4IUC4(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterIUC4IUC4IUC4IUC4):
    r"""Proxy of C++ itkTernaryAddImageFilterIUC4IUC4IUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIUC4IUC4IUC4IUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIUC4IUC4IUC4IUC4_Clone)
    __swig_destroy__ = _itkTernaryAddImageFilterPython.delete_itkTernaryAddImageFilterIUC4IUC4IUC4IUC4
    cast = _swig_new_static_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIUC4IUC4IUC4IUC4_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryAddImageFilterIUC4IUC4IUC4IUC4

        Create a new object of the class itkTernaryAddImageFilterIUC4IUC4IUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryAddImageFilterIUC4IUC4IUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryAddImageFilterIUC4IUC4IUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryAddImageFilterIUC4IUC4IUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryAddImageFilterIUC4IUC4IUC4IUC4 in _itkTernaryAddImageFilterPython:
_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIUC4IUC4IUC4IUC4_swigregister(itkTernaryAddImageFilterIUC4IUC4IUC4IUC4)
itkTernaryAddImageFilterIUC4IUC4IUC4IUC4___New_orig__ = _itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIUC4IUC4IUC4IUC4___New_orig__
itkTernaryAddImageFilterIUC4IUC4IUC4IUC4_cast = _itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIUC4IUC4IUC4IUC4_cast


def itkTernaryAddImageFilterIUS2IUS2IUS2IUS2_New():
    return itkTernaryAddImageFilterIUS2IUS2IUS2IUS2.New()

class itkTernaryAddImageFilterIUS2IUS2IUS2IUS2(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterIUS2IUS2IUS2IUS2):
    r"""Proxy of C++ itkTernaryAddImageFilterIUS2IUS2IUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIUS2IUS2IUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIUS2IUS2IUS2IUS2_Clone)
    __swig_destroy__ = _itkTernaryAddImageFilterPython.delete_itkTernaryAddImageFilterIUS2IUS2IUS2IUS2
    cast = _swig_new_static_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIUS2IUS2IUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryAddImageFilterIUS2IUS2IUS2IUS2

        Create a new object of the class itkTernaryAddImageFilterIUS2IUS2IUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryAddImageFilterIUS2IUS2IUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryAddImageFilterIUS2IUS2IUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryAddImageFilterIUS2IUS2IUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryAddImageFilterIUS2IUS2IUS2IUS2 in _itkTernaryAddImageFilterPython:
_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIUS2IUS2IUS2IUS2_swigregister(itkTernaryAddImageFilterIUS2IUS2IUS2IUS2)
itkTernaryAddImageFilterIUS2IUS2IUS2IUS2___New_orig__ = _itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIUS2IUS2IUS2IUS2___New_orig__
itkTernaryAddImageFilterIUS2IUS2IUS2IUS2_cast = _itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIUS2IUS2IUS2IUS2_cast


def itkTernaryAddImageFilterIUS3IUS3IUS3IUS3_New():
    return itkTernaryAddImageFilterIUS3IUS3IUS3IUS3.New()

class itkTernaryAddImageFilterIUS3IUS3IUS3IUS3(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterIUS3IUS3IUS3IUS3):
    r"""Proxy of C++ itkTernaryAddImageFilterIUS3IUS3IUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIUS3IUS3IUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIUS3IUS3IUS3IUS3_Clone)
    __swig_destroy__ = _itkTernaryAddImageFilterPython.delete_itkTernaryAddImageFilterIUS3IUS3IUS3IUS3
    cast = _swig_new_static_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIUS3IUS3IUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryAddImageFilterIUS3IUS3IUS3IUS3

        Create a new object of the class itkTernaryAddImageFilterIUS3IUS3IUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryAddImageFilterIUS3IUS3IUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryAddImageFilterIUS3IUS3IUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryAddImageFilterIUS3IUS3IUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryAddImageFilterIUS3IUS3IUS3IUS3 in _itkTernaryAddImageFilterPython:
_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIUS3IUS3IUS3IUS3_swigregister(itkTernaryAddImageFilterIUS3IUS3IUS3IUS3)
itkTernaryAddImageFilterIUS3IUS3IUS3IUS3___New_orig__ = _itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIUS3IUS3IUS3IUS3___New_orig__
itkTernaryAddImageFilterIUS3IUS3IUS3IUS3_cast = _itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIUS3IUS3IUS3IUS3_cast


def itkTernaryAddImageFilterIUS4IUS4IUS4IUS4_New():
    return itkTernaryAddImageFilterIUS4IUS4IUS4IUS4.New()

class itkTernaryAddImageFilterIUS4IUS4IUS4IUS4(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterIUS4IUS4IUS4IUS4):
    r"""Proxy of C++ itkTernaryAddImageFilterIUS4IUS4IUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIUS4IUS4IUS4IUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIUS4IUS4IUS4IUS4_Clone)
    __swig_destroy__ = _itkTernaryAddImageFilterPython.delete_itkTernaryAddImageFilterIUS4IUS4IUS4IUS4
    cast = _swig_new_static_method(_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIUS4IUS4IUS4IUS4_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryAddImageFilterIUS4IUS4IUS4IUS4

        Create a new object of the class itkTernaryAddImageFilterIUS4IUS4IUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryAddImageFilterIUS4IUS4IUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryAddImageFilterIUS4IUS4IUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryAddImageFilterIUS4IUS4IUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryAddImageFilterIUS4IUS4IUS4IUS4 in _itkTernaryAddImageFilterPython:
_itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIUS4IUS4IUS4IUS4_swigregister(itkTernaryAddImageFilterIUS4IUS4IUS4IUS4)
itkTernaryAddImageFilterIUS4IUS4IUS4IUS4___New_orig__ = _itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIUS4IUS4IUS4IUS4___New_orig__
itkTernaryAddImageFilterIUS4IUS4IUS4IUS4_cast = _itkTernaryAddImageFilterPython.itkTernaryAddImageFilterIUS4IUS4IUS4IUS4_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def ternary_add_image_filter(*args: itkt.ImageLike,  constant1: int=..., constant2: int=..., constant3: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for TernaryAddImageFilter"""
    import itk

    kwarg_typehints = { 'constant1':constant1,'constant2':constant2,'constant3':constant3 }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.TernaryAddImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def ternary_add_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageIntensity.TernaryAddImageFilter
    ternary_add_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    ternary_add_image_filter.__doc__ = filter_object.__doc__




