# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageIntensityPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkTernaryMagnitudeSquaredImageFilterPython
else:
    import _itkTernaryMagnitudeSquaredImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkTernaryMagnitudeSquaredImageFilterPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkTernaryMagnitudeSquaredImageFilterPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkTernaryGeneratorImageFilterPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImageRegionPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkArrayPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterAPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageToImageFilterBPython

def itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_New():
    return itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2.New()

class itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterID2ID2ID2ID2):
    r"""Proxy of C++ itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_Clone)
    __swig_destroy__ = _itkTernaryMagnitudeSquaredImageFilterPython.delete_itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2
    cast = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2

        Create a new object of the class itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2 in _itkTernaryMagnitudeSquaredImageFilterPython:
_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_swigregister(itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2)
itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2___New_orig__ = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2___New_orig__
itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_cast = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID2ID2ID2ID2_cast


def itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_New():
    return itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3.New()

class itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterID3ID3ID3ID3):
    r"""Proxy of C++ itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_Clone)
    __swig_destroy__ = _itkTernaryMagnitudeSquaredImageFilterPython.delete_itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3
    cast = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3

        Create a new object of the class itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3 in _itkTernaryMagnitudeSquaredImageFilterPython:
_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_swigregister(itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3)
itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3___New_orig__ = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3___New_orig__
itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_cast = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID3ID3ID3ID3_cast


def itkTernaryMagnitudeSquaredImageFilterID4ID4ID4ID4_New():
    return itkTernaryMagnitudeSquaredImageFilterID4ID4ID4ID4.New()

class itkTernaryMagnitudeSquaredImageFilterID4ID4ID4ID4(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterID4ID4ID4ID4):
    r"""Proxy of C++ itkTernaryMagnitudeSquaredImageFilterID4ID4ID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID4ID4ID4ID4___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID4ID4ID4ID4_Clone)
    __swig_destroy__ = _itkTernaryMagnitudeSquaredImageFilterPython.delete_itkTernaryMagnitudeSquaredImageFilterID4ID4ID4ID4
    cast = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID4ID4ID4ID4_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeSquaredImageFilterID4ID4ID4ID4

        Create a new object of the class itkTernaryMagnitudeSquaredImageFilterID4ID4ID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeSquaredImageFilterID4ID4ID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeSquaredImageFilterID4ID4ID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeSquaredImageFilterID4ID4ID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeSquaredImageFilterID4ID4ID4ID4 in _itkTernaryMagnitudeSquaredImageFilterPython:
_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID4ID4ID4ID4_swigregister(itkTernaryMagnitudeSquaredImageFilterID4ID4ID4ID4)
itkTernaryMagnitudeSquaredImageFilterID4ID4ID4ID4___New_orig__ = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID4ID4ID4ID4___New_orig__
itkTernaryMagnitudeSquaredImageFilterID4ID4ID4ID4_cast = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterID4ID4ID4ID4_cast


def itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_New():
    return itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2.New()

class itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterIF2IF2IF2IF2):
    r"""Proxy of C++ itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_Clone)
    __swig_destroy__ = _itkTernaryMagnitudeSquaredImageFilterPython.delete_itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2
    cast = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2

        Create a new object of the class itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2 in _itkTernaryMagnitudeSquaredImageFilterPython:
_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_swigregister(itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2)
itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2___New_orig__ = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2___New_orig__
itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_cast = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF2IF2IF2IF2_cast


def itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_New():
    return itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3.New()

class itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterIF3IF3IF3IF3):
    r"""Proxy of C++ itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_Clone)
    __swig_destroy__ = _itkTernaryMagnitudeSquaredImageFilterPython.delete_itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3
    cast = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3

        Create a new object of the class itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3 in _itkTernaryMagnitudeSquaredImageFilterPython:
_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_swigregister(itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3)
itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3___New_orig__ = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3___New_orig__
itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_cast = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF3IF3IF3IF3_cast


def itkTernaryMagnitudeSquaredImageFilterIF4IF4IF4IF4_New():
    return itkTernaryMagnitudeSquaredImageFilterIF4IF4IF4IF4.New()

class itkTernaryMagnitudeSquaredImageFilterIF4IF4IF4IF4(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterIF4IF4IF4IF4):
    r"""Proxy of C++ itkTernaryMagnitudeSquaredImageFilterIF4IF4IF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF4IF4IF4IF4___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF4IF4IF4IF4_Clone)
    __swig_destroy__ = _itkTernaryMagnitudeSquaredImageFilterPython.delete_itkTernaryMagnitudeSquaredImageFilterIF4IF4IF4IF4
    cast = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF4IF4IF4IF4_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeSquaredImageFilterIF4IF4IF4IF4

        Create a new object of the class itkTernaryMagnitudeSquaredImageFilterIF4IF4IF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeSquaredImageFilterIF4IF4IF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeSquaredImageFilterIF4IF4IF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeSquaredImageFilterIF4IF4IF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeSquaredImageFilterIF4IF4IF4IF4 in _itkTernaryMagnitudeSquaredImageFilterPython:
_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF4IF4IF4IF4_swigregister(itkTernaryMagnitudeSquaredImageFilterIF4IF4IF4IF4)
itkTernaryMagnitudeSquaredImageFilterIF4IF4IF4IF4___New_orig__ = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF4IF4IF4IF4___New_orig__
itkTernaryMagnitudeSquaredImageFilterIF4IF4IF4IF4_cast = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIF4IF4IF4IF4_cast


def itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_New():
    return itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2.New()

class itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterISS2ISS2ISS2ISS2):
    r"""Proxy of C++ itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_Clone)
    __swig_destroy__ = _itkTernaryMagnitudeSquaredImageFilterPython.delete_itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2
    cast = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2

        Create a new object of the class itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2 in _itkTernaryMagnitudeSquaredImageFilterPython:
_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_swigregister(itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2)
itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2___New_orig__ = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2___New_orig__
itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_cast = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS2ISS2ISS2ISS2_cast


def itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_New():
    return itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3.New()

class itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterISS3ISS3ISS3ISS3):
    r"""Proxy of C++ itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_Clone)
    __swig_destroy__ = _itkTernaryMagnitudeSquaredImageFilterPython.delete_itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3
    cast = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3

        Create a new object of the class itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3 in _itkTernaryMagnitudeSquaredImageFilterPython:
_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_swigregister(itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3)
itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3___New_orig__ = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3___New_orig__
itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_cast = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS3ISS3ISS3ISS3_cast


def itkTernaryMagnitudeSquaredImageFilterISS4ISS4ISS4ISS4_New():
    return itkTernaryMagnitudeSquaredImageFilterISS4ISS4ISS4ISS4.New()

class itkTernaryMagnitudeSquaredImageFilterISS4ISS4ISS4ISS4(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterISS4ISS4ISS4ISS4):
    r"""Proxy of C++ itkTernaryMagnitudeSquaredImageFilterISS4ISS4ISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS4ISS4ISS4ISS4___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS4ISS4ISS4ISS4_Clone)
    __swig_destroy__ = _itkTernaryMagnitudeSquaredImageFilterPython.delete_itkTernaryMagnitudeSquaredImageFilterISS4ISS4ISS4ISS4
    cast = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS4ISS4ISS4ISS4_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeSquaredImageFilterISS4ISS4ISS4ISS4

        Create a new object of the class itkTernaryMagnitudeSquaredImageFilterISS4ISS4ISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeSquaredImageFilterISS4ISS4ISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeSquaredImageFilterISS4ISS4ISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeSquaredImageFilterISS4ISS4ISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeSquaredImageFilterISS4ISS4ISS4ISS4 in _itkTernaryMagnitudeSquaredImageFilterPython:
_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS4ISS4ISS4ISS4_swigregister(itkTernaryMagnitudeSquaredImageFilterISS4ISS4ISS4ISS4)
itkTernaryMagnitudeSquaredImageFilterISS4ISS4ISS4ISS4___New_orig__ = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS4ISS4ISS4ISS4___New_orig__
itkTernaryMagnitudeSquaredImageFilterISS4ISS4ISS4ISS4_cast = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterISS4ISS4ISS4ISS4_cast


def itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_New():
    return itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2.New()

class itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterIUC2IUC2IUC2IUC2):
    r"""Proxy of C++ itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_Clone)
    __swig_destroy__ = _itkTernaryMagnitudeSquaredImageFilterPython.delete_itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2
    cast = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2

        Create a new object of the class itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2 in _itkTernaryMagnitudeSquaredImageFilterPython:
_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_swigregister(itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2)
itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2___New_orig__ = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2___New_orig__
itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_cast = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC2IUC2IUC2IUC2_cast


def itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_New():
    return itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3.New()

class itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterIUC3IUC3IUC3IUC3):
    r"""Proxy of C++ itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_Clone)
    __swig_destroy__ = _itkTernaryMagnitudeSquaredImageFilterPython.delete_itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3
    cast = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3

        Create a new object of the class itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3 in _itkTernaryMagnitudeSquaredImageFilterPython:
_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_swigregister(itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3)
itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3___New_orig__ = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3___New_orig__
itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_cast = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC3IUC3IUC3IUC3_cast


def itkTernaryMagnitudeSquaredImageFilterIUC4IUC4IUC4IUC4_New():
    return itkTernaryMagnitudeSquaredImageFilterIUC4IUC4IUC4IUC4.New()

class itkTernaryMagnitudeSquaredImageFilterIUC4IUC4IUC4IUC4(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterIUC4IUC4IUC4IUC4):
    r"""Proxy of C++ itkTernaryMagnitudeSquaredImageFilterIUC4IUC4IUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC4IUC4IUC4IUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC4IUC4IUC4IUC4_Clone)
    __swig_destroy__ = _itkTernaryMagnitudeSquaredImageFilterPython.delete_itkTernaryMagnitudeSquaredImageFilterIUC4IUC4IUC4IUC4
    cast = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC4IUC4IUC4IUC4_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeSquaredImageFilterIUC4IUC4IUC4IUC4

        Create a new object of the class itkTernaryMagnitudeSquaredImageFilterIUC4IUC4IUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeSquaredImageFilterIUC4IUC4IUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeSquaredImageFilterIUC4IUC4IUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeSquaredImageFilterIUC4IUC4IUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeSquaredImageFilterIUC4IUC4IUC4IUC4 in _itkTernaryMagnitudeSquaredImageFilterPython:
_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC4IUC4IUC4IUC4_swigregister(itkTernaryMagnitudeSquaredImageFilterIUC4IUC4IUC4IUC4)
itkTernaryMagnitudeSquaredImageFilterIUC4IUC4IUC4IUC4___New_orig__ = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC4IUC4IUC4IUC4___New_orig__
itkTernaryMagnitudeSquaredImageFilterIUC4IUC4IUC4IUC4_cast = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUC4IUC4IUC4IUC4_cast


def itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_New():
    return itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2.New()

class itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterIUS2IUS2IUS2IUS2):
    r"""Proxy of C++ itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_Clone)
    __swig_destroy__ = _itkTernaryMagnitudeSquaredImageFilterPython.delete_itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2
    cast = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2

        Create a new object of the class itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2 in _itkTernaryMagnitudeSquaredImageFilterPython:
_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_swigregister(itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2)
itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2___New_orig__ = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2___New_orig__
itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_cast = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS2IUS2IUS2IUS2_cast


def itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_New():
    return itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3.New()

class itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterIUS3IUS3IUS3IUS3):
    r"""Proxy of C++ itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_Clone)
    __swig_destroy__ = _itkTernaryMagnitudeSquaredImageFilterPython.delete_itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3
    cast = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3

        Create a new object of the class itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3 in _itkTernaryMagnitudeSquaredImageFilterPython:
_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_swigregister(itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3)
itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3___New_orig__ = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3___New_orig__
itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_cast = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS3IUS3IUS3IUS3_cast


def itkTernaryMagnitudeSquaredImageFilterIUS4IUS4IUS4IUS4_New():
    return itkTernaryMagnitudeSquaredImageFilterIUS4IUS4IUS4IUS4.New()

class itkTernaryMagnitudeSquaredImageFilterIUS4IUS4IUS4IUS4(itk.itkTernaryGeneratorImageFilterPython.itkTernaryGeneratorImageFilterIUS4IUS4IUS4IUS4):
    r"""Proxy of C++ itkTernaryMagnitudeSquaredImageFilterIUS4IUS4IUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS4IUS4IUS4IUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS4IUS4IUS4IUS4_Clone)
    __swig_destroy__ = _itkTernaryMagnitudeSquaredImageFilterPython.delete_itkTernaryMagnitudeSquaredImageFilterIUS4IUS4IUS4IUS4
    cast = _swig_new_static_method(_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS4IUS4IUS4IUS4_cast)

    def New(*args, **kargs):
        """New() -> itkTernaryMagnitudeSquaredImageFilterIUS4IUS4IUS4IUS4

        Create a new object of the class itkTernaryMagnitudeSquaredImageFilterIUS4IUS4IUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTernaryMagnitudeSquaredImageFilterIUS4IUS4IUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTernaryMagnitudeSquaredImageFilterIUS4IUS4IUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTernaryMagnitudeSquaredImageFilterIUS4IUS4IUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTernaryMagnitudeSquaredImageFilterIUS4IUS4IUS4IUS4 in _itkTernaryMagnitudeSquaredImageFilterPython:
_itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS4IUS4IUS4IUS4_swigregister(itkTernaryMagnitudeSquaredImageFilterIUS4IUS4IUS4IUS4)
itkTernaryMagnitudeSquaredImageFilterIUS4IUS4IUS4IUS4___New_orig__ = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS4IUS4IUS4IUS4___New_orig__
itkTernaryMagnitudeSquaredImageFilterIUS4IUS4IUS4IUS4_cast = _itkTernaryMagnitudeSquaredImageFilterPython.itkTernaryMagnitudeSquaredImageFilterIUS4IUS4IUS4IUS4_cast


from itk.support import helpers
import itk.support.types as itkt
from typing import Sequence, Tuple, Union

@helpers.accept_array_like_xarray_torch
def ternary_magnitude_squared_image_filter(*args: itkt.ImageLike,  constant1: int=..., constant2: int=..., constant3: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for TernaryMagnitudeSquaredImageFilter"""
    import itk

    kwarg_typehints = { 'constant1':constant1,'constant2':constant2,'constant3':constant3 }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.TernaryMagnitudeSquaredImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def ternary_magnitude_squared_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageIntensity.TernaryMagnitudeSquaredImageFilter
    ternary_magnitude_squared_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    ternary_magnitude_squared_image_filter.__doc__ = filter_object.__doc__




