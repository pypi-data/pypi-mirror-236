# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKSpatialObjectsPython



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkLineSpatialObjectPython
else:
    import _itkLineSpatialObjectPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkLineSpatialObjectPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkLineSpatialObjectPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkSpatialObjectBasePython
import itk.itkAffineTransformPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkVariableLengthVectorPython
import itk.itkArray2DPython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.itkTransformBasePython
import itk.itkDiffusionTensor3DPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkSpatialObjectPropertyPython
import itk.itkRGBAPixelPython
import itk.itkLineSpatialObjectPointPython
import itk.itkSpatialObjectPointPython
class listitkPointBasedSpatialObjectLine2_Pointer(collections.abc.MutableSequence):
    r"""Proxy of C++ std::list< itkPointBasedSpatialObjectLine2_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer___nonzero__)
    __bool__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer___bool__)
    __len__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer___len__)
    __getslice__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer___getslice__)
    __setslice__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer___setslice__)
    __delslice__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer___delslice__)
    __delitem__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer___delitem__)
    __getitem__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer___getitem__)
    __setitem__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer___setitem__)
    pop = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_pop)
    append = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_append)
    empty = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_empty)
    size = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_size)
    swap = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_swap)
    begin = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_begin)
    end = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_end)
    rbegin = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_rbegin)
    rend = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_rend)
    clear = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_clear)
    get_allocator = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_get_allocator)
    pop_back = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_pop_back)
    erase = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_erase)

    def __init__(self, *args):
        r"""
        __init__(self) -> listitkPointBasedSpatialObjectLine2_Pointer
        __init__(self, other) -> listitkPointBasedSpatialObjectLine2_Pointer

        Parameters
        ----------
        other: std::list< itkPointBasedSpatialObjectLine2_Pointer > const &

        __init__(self, size) -> listitkPointBasedSpatialObjectLine2_Pointer

        Parameters
        ----------
        size: std::list< itkPointBasedSpatialObjectLine2_Pointer >::size_type

        __init__(self, size, value) -> listitkPointBasedSpatialObjectLine2_Pointer

        Parameters
        ----------
        size: std::list< itkPointBasedSpatialObjectLine2_Pointer >::size_type
        value: std::list< itkPointBasedSpatialObjectLine2_Pointer >::value_type const &

        """
        _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_swiginit(self, _itkLineSpatialObjectPython.new_listitkPointBasedSpatialObjectLine2_Pointer(*args))
    push_back = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_push_back)
    front = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_front)
    back = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_back)
    assign = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_assign)
    resize = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_resize)
    insert = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_insert)
    pop_front = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_pop_front)
    push_front = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_push_front)
    reverse = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_reverse)
    __swig_destroy__ = _itkLineSpatialObjectPython.delete_listitkPointBasedSpatialObjectLine2_Pointer

# Register listitkPointBasedSpatialObjectLine2_Pointer in _itkLineSpatialObjectPython:
_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine2_Pointer_swigregister(listitkPointBasedSpatialObjectLine2_Pointer)

class listitkPointBasedSpatialObjectLine3_Pointer(collections.abc.MutableSequence):
    r"""Proxy of C++ std::list< itkPointBasedSpatialObjectLine3_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer___nonzero__)
    __bool__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer___bool__)
    __len__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer___len__)
    __getslice__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer___getslice__)
    __setslice__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer___setslice__)
    __delslice__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer___delslice__)
    __delitem__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer___delitem__)
    __getitem__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer___getitem__)
    __setitem__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer___setitem__)
    pop = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_pop)
    append = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_append)
    empty = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_empty)
    size = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_size)
    swap = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_swap)
    begin = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_begin)
    end = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_end)
    rbegin = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_rbegin)
    rend = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_rend)
    clear = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_clear)
    get_allocator = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_get_allocator)
    pop_back = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_pop_back)
    erase = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_erase)

    def __init__(self, *args):
        r"""
        __init__(self) -> listitkPointBasedSpatialObjectLine3_Pointer
        __init__(self, other) -> listitkPointBasedSpatialObjectLine3_Pointer

        Parameters
        ----------
        other: std::list< itkPointBasedSpatialObjectLine3_Pointer > const &

        __init__(self, size) -> listitkPointBasedSpatialObjectLine3_Pointer

        Parameters
        ----------
        size: std::list< itkPointBasedSpatialObjectLine3_Pointer >::size_type

        __init__(self, size, value) -> listitkPointBasedSpatialObjectLine3_Pointer

        Parameters
        ----------
        size: std::list< itkPointBasedSpatialObjectLine3_Pointer >::size_type
        value: std::list< itkPointBasedSpatialObjectLine3_Pointer >::value_type const &

        """
        _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_swiginit(self, _itkLineSpatialObjectPython.new_listitkPointBasedSpatialObjectLine3_Pointer(*args))
    push_back = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_push_back)
    front = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_front)
    back = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_back)
    assign = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_assign)
    resize = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_resize)
    insert = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_insert)
    pop_front = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_pop_front)
    push_front = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_push_front)
    reverse = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_reverse)
    __swig_destroy__ = _itkLineSpatialObjectPython.delete_listitkPointBasedSpatialObjectLine3_Pointer

# Register listitkPointBasedSpatialObjectLine3_Pointer in _itkLineSpatialObjectPython:
_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine3_Pointer_swigregister(listitkPointBasedSpatialObjectLine3_Pointer)

class listitkPointBasedSpatialObjectLine4_Pointer(collections.abc.MutableSequence):
    r"""Proxy of C++ std::list< itkPointBasedSpatialObjectLine4_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer___nonzero__)
    __bool__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer___bool__)
    __len__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer___len__)
    __getslice__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer___getslice__)
    __setslice__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer___setslice__)
    __delslice__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer___delslice__)
    __delitem__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer___delitem__)
    __getitem__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer___getitem__)
    __setitem__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer___setitem__)
    pop = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_pop)
    append = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_append)
    empty = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_empty)
    size = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_size)
    swap = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_swap)
    begin = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_begin)
    end = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_end)
    rbegin = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_rbegin)
    rend = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_rend)
    clear = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_clear)
    get_allocator = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_get_allocator)
    pop_back = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_pop_back)
    erase = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_erase)

    def __init__(self, *args):
        r"""
        __init__(self) -> listitkPointBasedSpatialObjectLine4_Pointer
        __init__(self, other) -> listitkPointBasedSpatialObjectLine4_Pointer

        Parameters
        ----------
        other: std::list< itkPointBasedSpatialObjectLine4_Pointer > const &

        __init__(self, size) -> listitkPointBasedSpatialObjectLine4_Pointer

        Parameters
        ----------
        size: std::list< itkPointBasedSpatialObjectLine4_Pointer >::size_type

        __init__(self, size, value) -> listitkPointBasedSpatialObjectLine4_Pointer

        Parameters
        ----------
        size: std::list< itkPointBasedSpatialObjectLine4_Pointer >::size_type
        value: std::list< itkPointBasedSpatialObjectLine4_Pointer >::value_type const &

        """
        _itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_swiginit(self, _itkLineSpatialObjectPython.new_listitkPointBasedSpatialObjectLine4_Pointer(*args))
    push_back = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_push_back)
    front = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_front)
    back = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_back)
    assign = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_assign)
    resize = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_resize)
    insert = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_insert)
    pop_front = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_pop_front)
    push_front = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_push_front)
    reverse = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_reverse)
    __swig_destroy__ = _itkLineSpatialObjectPython.delete_listitkPointBasedSpatialObjectLine4_Pointer

# Register listitkPointBasedSpatialObjectLine4_Pointer in _itkLineSpatialObjectPython:
_itkLineSpatialObjectPython.listitkPointBasedSpatialObjectLine4_Pointer_swigregister(listitkPointBasedSpatialObjectLine4_Pointer)

class listitkLineSpatialObject2_Pointer(collections.abc.MutableSequence):
    r"""Proxy of C++ std::list< itkLineSpatialObject2_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer___nonzero__)
    __bool__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer___bool__)
    __len__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer___len__)
    __getslice__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer___getslice__)
    __setslice__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer___setslice__)
    __delslice__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer___delslice__)
    __delitem__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer___delitem__)
    __getitem__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer___getitem__)
    __setitem__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer___setitem__)
    pop = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_pop)
    append = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_append)
    empty = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_empty)
    size = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_size)
    swap = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_swap)
    begin = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_begin)
    end = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_end)
    rbegin = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_rbegin)
    rend = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_rend)
    clear = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_clear)
    get_allocator = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_get_allocator)
    pop_back = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_pop_back)
    erase = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_erase)

    def __init__(self, *args):
        r"""
        __init__(self) -> listitkLineSpatialObject2_Pointer
        __init__(self, other) -> listitkLineSpatialObject2_Pointer

        Parameters
        ----------
        other: std::list< itkLineSpatialObject2_Pointer > const &

        __init__(self, size) -> listitkLineSpatialObject2_Pointer

        Parameters
        ----------
        size: std::list< itkLineSpatialObject2_Pointer >::size_type

        __init__(self, size, value) -> listitkLineSpatialObject2_Pointer

        Parameters
        ----------
        size: std::list< itkLineSpatialObject2_Pointer >::size_type
        value: std::list< itkLineSpatialObject2_Pointer >::value_type const &

        """
        _itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_swiginit(self, _itkLineSpatialObjectPython.new_listitkLineSpatialObject2_Pointer(*args))
    push_back = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_push_back)
    front = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_front)
    back = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_back)
    assign = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_assign)
    resize = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_resize)
    insert = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_insert)
    pop_front = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_pop_front)
    push_front = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_push_front)
    reverse = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_reverse)
    __swig_destroy__ = _itkLineSpatialObjectPython.delete_listitkLineSpatialObject2_Pointer

# Register listitkLineSpatialObject2_Pointer in _itkLineSpatialObjectPython:
_itkLineSpatialObjectPython.listitkLineSpatialObject2_Pointer_swigregister(listitkLineSpatialObject2_Pointer)

class listitkLineSpatialObject3_Pointer(collections.abc.MutableSequence):
    r"""Proxy of C++ std::list< itkLineSpatialObject3_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer___nonzero__)
    __bool__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer___bool__)
    __len__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer___len__)
    __getslice__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer___getslice__)
    __setslice__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer___setslice__)
    __delslice__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer___delslice__)
    __delitem__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer___delitem__)
    __getitem__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer___getitem__)
    __setitem__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer___setitem__)
    pop = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_pop)
    append = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_append)
    empty = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_empty)
    size = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_size)
    swap = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_swap)
    begin = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_begin)
    end = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_end)
    rbegin = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_rbegin)
    rend = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_rend)
    clear = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_clear)
    get_allocator = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_get_allocator)
    pop_back = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_pop_back)
    erase = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_erase)

    def __init__(self, *args):
        r"""
        __init__(self) -> listitkLineSpatialObject3_Pointer
        __init__(self, other) -> listitkLineSpatialObject3_Pointer

        Parameters
        ----------
        other: std::list< itkLineSpatialObject3_Pointer > const &

        __init__(self, size) -> listitkLineSpatialObject3_Pointer

        Parameters
        ----------
        size: std::list< itkLineSpatialObject3_Pointer >::size_type

        __init__(self, size, value) -> listitkLineSpatialObject3_Pointer

        Parameters
        ----------
        size: std::list< itkLineSpatialObject3_Pointer >::size_type
        value: std::list< itkLineSpatialObject3_Pointer >::value_type const &

        """
        _itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_swiginit(self, _itkLineSpatialObjectPython.new_listitkLineSpatialObject3_Pointer(*args))
    push_back = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_push_back)
    front = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_front)
    back = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_back)
    assign = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_assign)
    resize = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_resize)
    insert = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_insert)
    pop_front = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_pop_front)
    push_front = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_push_front)
    reverse = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_reverse)
    __swig_destroy__ = _itkLineSpatialObjectPython.delete_listitkLineSpatialObject3_Pointer

# Register listitkLineSpatialObject3_Pointer in _itkLineSpatialObjectPython:
_itkLineSpatialObjectPython.listitkLineSpatialObject3_Pointer_swigregister(listitkLineSpatialObject3_Pointer)

class listitkLineSpatialObject4_Pointer(collections.abc.MutableSequence):
    r"""Proxy of C++ std::list< itkLineSpatialObject4_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    iterator = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_iterator)
    def __iter__(self):
        return self.iterator()
    __nonzero__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer___nonzero__)
    __bool__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer___bool__)
    __len__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer___len__)
    __getslice__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer___getslice__)
    __setslice__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer___setslice__)
    __delslice__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer___delslice__)
    __delitem__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer___delitem__)
    __getitem__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer___getitem__)
    __setitem__ = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer___setitem__)
    pop = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_pop)
    append = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_append)
    empty = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_empty)
    size = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_size)
    swap = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_swap)
    begin = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_begin)
    end = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_end)
    rbegin = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_rbegin)
    rend = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_rend)
    clear = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_clear)
    get_allocator = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_get_allocator)
    pop_back = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_pop_back)
    erase = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_erase)

    def __init__(self, *args):
        r"""
        __init__(self) -> listitkLineSpatialObject4_Pointer
        __init__(self, other) -> listitkLineSpatialObject4_Pointer

        Parameters
        ----------
        other: std::list< itkLineSpatialObject4_Pointer > const &

        __init__(self, size) -> listitkLineSpatialObject4_Pointer

        Parameters
        ----------
        size: std::list< itkLineSpatialObject4_Pointer >::size_type

        __init__(self, size, value) -> listitkLineSpatialObject4_Pointer

        Parameters
        ----------
        size: std::list< itkLineSpatialObject4_Pointer >::size_type
        value: std::list< itkLineSpatialObject4_Pointer >::value_type const &

        """
        _itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_swiginit(self, _itkLineSpatialObjectPython.new_listitkLineSpatialObject4_Pointer(*args))
    push_back = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_push_back)
    front = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_front)
    back = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_back)
    assign = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_assign)
    resize = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_resize)
    insert = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_insert)
    pop_front = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_pop_front)
    push_front = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_push_front)
    reverse = _swig_new_instance_method(_itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_reverse)
    __swig_destroy__ = _itkLineSpatialObjectPython.delete_listitkLineSpatialObject4_Pointer

# Register listitkLineSpatialObject4_Pointer in _itkLineSpatialObjectPython:
_itkLineSpatialObjectPython.listitkLineSpatialObject4_Pointer_swigregister(listitkLineSpatialObject4_Pointer)


def itkPointBasedSpatialObjectLine2_New():
    return itkPointBasedSpatialObjectLine2.New()

class itkPointBasedSpatialObjectLine2(itk.itkSpatialObjectBasePython.itkSpatialObject2):
    r"""Proxy of C++ itkPointBasedSpatialObjectLine2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine2___New_orig__)
    Clone = _swig_new_instance_method(_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine2_Clone)
    AddPoint = _swig_new_instance_method(_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine2_AddPoint)
    RemovePoint = _swig_new_instance_method(_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine2_RemovePoint)
    SetPoints = _swig_new_instance_method(_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine2_SetPoints)
    GetPoints = _swig_new_instance_method(_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine2_GetPoints)
    GetPoint = _swig_new_instance_method(_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine2_GetPoint)
    GetNumberOfPoints = _swig_new_instance_method(_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine2_GetNumberOfPoints)
    ClosestPointInWorldSpace = _swig_new_instance_method(_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine2_ClosestPointInWorldSpace)
    ClosestPointInObjectSpace = _swig_new_instance_method(_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine2_ClosestPointInObjectSpace)
    __swig_destroy__ = _itkLineSpatialObjectPython.delete_itkPointBasedSpatialObjectLine2
    cast = _swig_new_static_method(_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine2_cast)

    def New(*args, **kargs):
        """New() -> itkPointBasedSpatialObjectLine2

        Create a new object of the class itkPointBasedSpatialObjectLine2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPointBasedSpatialObjectLine2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPointBasedSpatialObjectLine2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPointBasedSpatialObjectLine2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPointBasedSpatialObjectLine2 in _itkLineSpatialObjectPython:
_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine2_swigregister(itkPointBasedSpatialObjectLine2)
itkPointBasedSpatialObjectLine2___New_orig__ = _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine2___New_orig__
itkPointBasedSpatialObjectLine2_cast = _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine2_cast


def itkPointBasedSpatialObjectLine3_New():
    return itkPointBasedSpatialObjectLine3.New()

class itkPointBasedSpatialObjectLine3(itk.itkSpatialObjectBasePython.itkSpatialObject3):
    r"""Proxy of C++ itkPointBasedSpatialObjectLine3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine3___New_orig__)
    Clone = _swig_new_instance_method(_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine3_Clone)
    AddPoint = _swig_new_instance_method(_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine3_AddPoint)
    RemovePoint = _swig_new_instance_method(_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine3_RemovePoint)
    SetPoints = _swig_new_instance_method(_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine3_SetPoints)
    GetPoints = _swig_new_instance_method(_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine3_GetPoints)
    GetPoint = _swig_new_instance_method(_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine3_GetPoint)
    GetNumberOfPoints = _swig_new_instance_method(_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine3_GetNumberOfPoints)
    ClosestPointInWorldSpace = _swig_new_instance_method(_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine3_ClosestPointInWorldSpace)
    ClosestPointInObjectSpace = _swig_new_instance_method(_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine3_ClosestPointInObjectSpace)
    __swig_destroy__ = _itkLineSpatialObjectPython.delete_itkPointBasedSpatialObjectLine3
    cast = _swig_new_static_method(_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine3_cast)

    def New(*args, **kargs):
        """New() -> itkPointBasedSpatialObjectLine3

        Create a new object of the class itkPointBasedSpatialObjectLine3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPointBasedSpatialObjectLine3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPointBasedSpatialObjectLine3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPointBasedSpatialObjectLine3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPointBasedSpatialObjectLine3 in _itkLineSpatialObjectPython:
_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine3_swigregister(itkPointBasedSpatialObjectLine3)
itkPointBasedSpatialObjectLine3___New_orig__ = _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine3___New_orig__
itkPointBasedSpatialObjectLine3_cast = _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine3_cast


def itkPointBasedSpatialObjectLine4_New():
    return itkPointBasedSpatialObjectLine4.New()

class itkPointBasedSpatialObjectLine4(itk.itkSpatialObjectBasePython.itkSpatialObject4):
    r"""Proxy of C++ itkPointBasedSpatialObjectLine4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine4___New_orig__)
    Clone = _swig_new_instance_method(_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine4_Clone)
    AddPoint = _swig_new_instance_method(_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine4_AddPoint)
    RemovePoint = _swig_new_instance_method(_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine4_RemovePoint)
    SetPoints = _swig_new_instance_method(_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine4_SetPoints)
    GetPoints = _swig_new_instance_method(_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine4_GetPoints)
    GetPoint = _swig_new_instance_method(_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine4_GetPoint)
    GetNumberOfPoints = _swig_new_instance_method(_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine4_GetNumberOfPoints)
    ClosestPointInWorldSpace = _swig_new_instance_method(_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine4_ClosestPointInWorldSpace)
    ClosestPointInObjectSpace = _swig_new_instance_method(_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine4_ClosestPointInObjectSpace)
    __swig_destroy__ = _itkLineSpatialObjectPython.delete_itkPointBasedSpatialObjectLine4
    cast = _swig_new_static_method(_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine4_cast)

    def New(*args, **kargs):
        """New() -> itkPointBasedSpatialObjectLine4

        Create a new object of the class itkPointBasedSpatialObjectLine4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPointBasedSpatialObjectLine4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPointBasedSpatialObjectLine4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPointBasedSpatialObjectLine4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPointBasedSpatialObjectLine4 in _itkLineSpatialObjectPython:
_itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine4_swigregister(itkPointBasedSpatialObjectLine4)
itkPointBasedSpatialObjectLine4___New_orig__ = _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine4___New_orig__
itkPointBasedSpatialObjectLine4_cast = _itkLineSpatialObjectPython.itkPointBasedSpatialObjectLine4_cast


def itkLineSpatialObject2_New():
    return itkLineSpatialObject2.New()

class itkLineSpatialObject2(itkPointBasedSpatialObjectLine2):
    r"""Proxy of C++ itkLineSpatialObject2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLineSpatialObjectPython.itkLineSpatialObject2___New_orig__)
    Clone = _swig_new_instance_method(_itkLineSpatialObjectPython.itkLineSpatialObject2_Clone)
    __swig_destroy__ = _itkLineSpatialObjectPython.delete_itkLineSpatialObject2
    cast = _swig_new_static_method(_itkLineSpatialObjectPython.itkLineSpatialObject2_cast)

    def New(*args, **kargs):
        """New() -> itkLineSpatialObject2

        Create a new object of the class itkLineSpatialObject2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLineSpatialObject2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLineSpatialObject2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLineSpatialObject2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLineSpatialObject2 in _itkLineSpatialObjectPython:
_itkLineSpatialObjectPython.itkLineSpatialObject2_swigregister(itkLineSpatialObject2)
itkLineSpatialObject2___New_orig__ = _itkLineSpatialObjectPython.itkLineSpatialObject2___New_orig__
itkLineSpatialObject2_cast = _itkLineSpatialObjectPython.itkLineSpatialObject2_cast


def itkLineSpatialObject3_New():
    return itkLineSpatialObject3.New()

class itkLineSpatialObject3(itkPointBasedSpatialObjectLine3):
    r"""Proxy of C++ itkLineSpatialObject3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLineSpatialObjectPython.itkLineSpatialObject3___New_orig__)
    Clone = _swig_new_instance_method(_itkLineSpatialObjectPython.itkLineSpatialObject3_Clone)
    __swig_destroy__ = _itkLineSpatialObjectPython.delete_itkLineSpatialObject3
    cast = _swig_new_static_method(_itkLineSpatialObjectPython.itkLineSpatialObject3_cast)

    def New(*args, **kargs):
        """New() -> itkLineSpatialObject3

        Create a new object of the class itkLineSpatialObject3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLineSpatialObject3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLineSpatialObject3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLineSpatialObject3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLineSpatialObject3 in _itkLineSpatialObjectPython:
_itkLineSpatialObjectPython.itkLineSpatialObject3_swigregister(itkLineSpatialObject3)
itkLineSpatialObject3___New_orig__ = _itkLineSpatialObjectPython.itkLineSpatialObject3___New_orig__
itkLineSpatialObject3_cast = _itkLineSpatialObjectPython.itkLineSpatialObject3_cast


def itkLineSpatialObject4_New():
    return itkLineSpatialObject4.New()

class itkLineSpatialObject4(itkPointBasedSpatialObjectLine4):
    r"""Proxy of C++ itkLineSpatialObject4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkLineSpatialObjectPython.itkLineSpatialObject4___New_orig__)
    Clone = _swig_new_instance_method(_itkLineSpatialObjectPython.itkLineSpatialObject4_Clone)
    __swig_destroy__ = _itkLineSpatialObjectPython.delete_itkLineSpatialObject4
    cast = _swig_new_static_method(_itkLineSpatialObjectPython.itkLineSpatialObject4_cast)

    def New(*args, **kargs):
        """New() -> itkLineSpatialObject4

        Create a new object of the class itkLineSpatialObject4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLineSpatialObject4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLineSpatialObject4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLineSpatialObject4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLineSpatialObject4 in _itkLineSpatialObjectPython:
_itkLineSpatialObjectPython.itkLineSpatialObject4_swigregister(itkLineSpatialObject4)
itkLineSpatialObject4___New_orig__ = _itkLineSpatialObjectPython.itkLineSpatialObject4___New_orig__
itkLineSpatialObject4_cast = _itkLineSpatialObjectPython.itkLineSpatialObject4_cast



