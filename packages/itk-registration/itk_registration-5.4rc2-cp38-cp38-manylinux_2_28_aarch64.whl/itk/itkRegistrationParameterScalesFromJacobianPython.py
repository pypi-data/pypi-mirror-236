# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.2
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKMetricsv4Python



from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkRegistrationParameterScalesFromJacobianPython
else:
    import _itkRegistrationParameterScalesFromJacobianPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

_swig_new_instance_method = _itkRegistrationParameterScalesFromJacobianPython.SWIG_PyInstanceMethod_New
_swig_new_static_method = _itkRegistrationParameterScalesFromJacobianPython.SWIG_PyStaticMethod_New

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import collections.abc
import itk.itkDemonsImageToImageMetricv4Python
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkImageToImageMetricv4Python
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkDisplacementFieldTransformPython
import itk.itkVariableLengthVectorPython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.itkDiffusionTensor3DPython
import itk.itkArray2DPython
import itk.itkVectorImagePython
import itk.itkTransformBasePython
import itk.itkObjectToObjectMetricBasePython
import itk.itkSingleValuedCostFunctionv4Python
import itk.itkCostFunctionPython
import itk.itkPointSetPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkSpatialObjectBasePython
import itk.itkSpatialObjectPropertyPython
import itk.itkAffineTransformPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkImageToImageFilterBPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython
import itk.itkInterpolateImageFunctionPython
import itk.itkImageFunctionBasePython
import itk.itkFunctionBasePython
import itk.itkExpectationBasedPointSetToPointSetMetricv4Python
import itk.itkObjectToObjectMetricPython
import itk.itkANTSNeighborhoodCorrelationImageToImageMetricv4Python
import itk.itkCorrelationImageToImageMetricv4Python
import itk.itkEuclideanDistancePointSetToPointSetMetricv4Python
import itk.itkOptimizerParameterScalesEstimatorPython
import itk.itkJointHistogramMutualInformationImageToImageMetricv4Python
import itk.itkMeanSquaresImageToImageMetricv4Python
import itk.itkLabeledPointSetToPointSetMetricv4Python
import itk.itkMattesMutualInformationImageToImageMetricv4Python
import itk.itkJensenHavrdaCharvatTsallisPointSetToPointSetMetricv4Python
class itkRegistrationParameterScalesFromJacobianANTSNCITIMD2_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianANTSNCITIMD2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD2_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD2_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD2_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD2_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD2_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD2_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD2_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD2_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD2_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD2_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD2_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD2_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianANTSNCITIMD2_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD2_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianANTSNCITIMD2_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD2_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianANTSNCITIMD2_Superclass)
itkRegistrationParameterScalesFromJacobianANTSNCITIMD2_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD2_Superclass_cast

class itkRegistrationParameterScalesFromJacobianANTSNCITIMD3_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianANTSNCITIMD3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD3_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD3_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD3_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD3_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD3_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD3_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD3_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD3_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD3_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD3_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD3_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD3_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianANTSNCITIMD3_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD3_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianANTSNCITIMD3_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD3_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianANTSNCITIMD3_Superclass)
itkRegistrationParameterScalesFromJacobianANTSNCITIMD3_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD3_Superclass_cast

class itkRegistrationParameterScalesFromJacobianANTSNCITIMD4_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianANTSNCITIMD4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD4_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD4_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD4_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD4_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD4_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD4_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD4_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD4_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD4_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD4_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD4_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD4_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianANTSNCITIMD4_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD4_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianANTSNCITIMD4_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD4_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianANTSNCITIMD4_Superclass)
itkRegistrationParameterScalesFromJacobianANTSNCITIMD4_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD4_Superclass_cast

class itkRegistrationParameterScalesFromJacobianANTSNCITIMF2_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianANTSNCITIMF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF2_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF2_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF2_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF2_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF2_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF2_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF2_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF2_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF2_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF2_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF2_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF2_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianANTSNCITIMF2_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF2_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianANTSNCITIMF2_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF2_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianANTSNCITIMF2_Superclass)
itkRegistrationParameterScalesFromJacobianANTSNCITIMF2_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF2_Superclass_cast

class itkRegistrationParameterScalesFromJacobianANTSNCITIMF3_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianANTSNCITIMF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF3_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF3_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF3_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF3_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF3_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF3_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF3_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF3_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF3_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF3_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF3_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF3_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianANTSNCITIMF3_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF3_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianANTSNCITIMF3_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF3_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianANTSNCITIMF3_Superclass)
itkRegistrationParameterScalesFromJacobianANTSNCITIMF3_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF3_Superclass_cast

class itkRegistrationParameterScalesFromJacobianANTSNCITIMF4_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianANTSNCITIMF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF4_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF4_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF4_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF4_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF4_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF4_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF4_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF4_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF4_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF4_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF4_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF4_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianANTSNCITIMF4_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF4_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianANTSNCITIMF4_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF4_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianANTSNCITIMF4_Superclass)
itkRegistrationParameterScalesFromJacobianANTSNCITIMF4_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF4_Superclass_cast

class itkRegistrationParameterScalesFromJacobianCITIMD2_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianCITIMD2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD2_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD2_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD2_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD2_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD2_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD2_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD2_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD2_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD2_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD2_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD2_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD2_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianCITIMD2_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD2_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianCITIMD2_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD2_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianCITIMD2_Superclass)
itkRegistrationParameterScalesFromJacobianCITIMD2_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD2_Superclass_cast

class itkRegistrationParameterScalesFromJacobianCITIMD3_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianCITIMD3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD3_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD3_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD3_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD3_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD3_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD3_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD3_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD3_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD3_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD3_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD3_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD3_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianCITIMD3_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD3_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianCITIMD3_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD3_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianCITIMD3_Superclass)
itkRegistrationParameterScalesFromJacobianCITIMD3_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD3_Superclass_cast

class itkRegistrationParameterScalesFromJacobianCITIMD4_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianCITIMD4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD4_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD4_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD4_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD4_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD4_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD4_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD4_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD4_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD4_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD4_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD4_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD4_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianCITIMD4_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD4_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianCITIMD4_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD4_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianCITIMD4_Superclass)
itkRegistrationParameterScalesFromJacobianCITIMD4_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD4_Superclass_cast

class itkRegistrationParameterScalesFromJacobianCITIMF2_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianCITIMF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF2_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF2_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF2_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF2_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF2_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF2_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF2_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF2_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF2_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF2_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF2_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF2_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianCITIMF2_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF2_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianCITIMF2_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF2_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianCITIMF2_Superclass)
itkRegistrationParameterScalesFromJacobianCITIMF2_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF2_Superclass_cast

class itkRegistrationParameterScalesFromJacobianCITIMF3_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianCITIMF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF3_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF3_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF3_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF3_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF3_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF3_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF3_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF3_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF3_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF3_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF3_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF3_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianCITIMF3_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF3_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianCITIMF3_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF3_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianCITIMF3_Superclass)
itkRegistrationParameterScalesFromJacobianCITIMF3_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF3_Superclass_cast

class itkRegistrationParameterScalesFromJacobianCITIMF4_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianCITIMF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF4_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF4_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF4_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF4_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF4_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF4_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF4_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF4_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF4_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF4_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF4_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF4_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianCITIMF4_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF4_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianCITIMF4_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF4_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianCITIMF4_Superclass)
itkRegistrationParameterScalesFromJacobianCITIMF4_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF4_Superclass_cast

class itkRegistrationParameterScalesFromJacobianDITIMD2_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianDITIMD2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD2_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD2_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD2_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD2_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD2_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD2_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD2_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD2_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD2_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD2_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD2_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD2_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianDITIMD2_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD2_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianDITIMD2_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD2_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianDITIMD2_Superclass)
itkRegistrationParameterScalesFromJacobianDITIMD2_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD2_Superclass_cast

class itkRegistrationParameterScalesFromJacobianDITIMD3_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianDITIMD3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD3_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD3_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD3_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD3_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD3_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD3_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD3_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD3_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD3_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD3_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD3_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD3_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianDITIMD3_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD3_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianDITIMD3_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD3_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianDITIMD3_Superclass)
itkRegistrationParameterScalesFromJacobianDITIMD3_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD3_Superclass_cast

class itkRegistrationParameterScalesFromJacobianDITIMD4_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianDITIMD4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD4_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD4_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD4_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD4_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD4_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD4_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD4_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD4_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD4_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD4_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD4_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD4_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianDITIMD4_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD4_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianDITIMD4_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD4_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianDITIMD4_Superclass)
itkRegistrationParameterScalesFromJacobianDITIMD4_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD4_Superclass_cast

class itkRegistrationParameterScalesFromJacobianDITIMF2_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianDITIMF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF2_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF2_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF2_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF2_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF2_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF2_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF2_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF2_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF2_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF2_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF2_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF2_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianDITIMF2_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF2_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianDITIMF2_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF2_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianDITIMF2_Superclass)
itkRegistrationParameterScalesFromJacobianDITIMF2_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF2_Superclass_cast

class itkRegistrationParameterScalesFromJacobianDITIMF3_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianDITIMF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF3_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF3_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF3_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF3_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF3_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF3_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF3_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF3_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF3_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF3_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF3_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF3_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianDITIMF3_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF3_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianDITIMF3_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF3_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianDITIMF3_Superclass)
itkRegistrationParameterScalesFromJacobianDITIMF3_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF3_Superclass_cast

class itkRegistrationParameterScalesFromJacobianDITIMF4_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianDITIMF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF4_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF4_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF4_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF4_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF4_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF4_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF4_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF4_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF4_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF4_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF4_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF4_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianDITIMF4_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF4_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianDITIMF4_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF4_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianDITIMF4_Superclass)
itkRegistrationParameterScalesFromJacobianDITIMF4_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF4_Superclass_cast

class itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2_Superclass)
itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2_Superclass_cast

class itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3_Superclass)
itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3_Superclass_cast

class itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4_Superclass)
itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4_Superclass_cast

class itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2_Superclass)
itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2_Superclass_cast

class itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3_Superclass)
itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3_Superclass_cast

class itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4_Superclass)
itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4_Superclass_cast

class itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2_Superclass)
itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2_Superclass_cast

class itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3_Superclass)
itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3_Superclass_cast

class itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4_Superclass)
itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4_Superclass_cast

class itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2_Superclass)
itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2_Superclass_cast

class itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3_Superclass)
itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3_Superclass_cast

class itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4_Superclass)
itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4_Superclass_cast

class itkRegistrationParameterScalesFromJacobianITIMD2_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianITIMD2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD2_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD2_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD2_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD2_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD2_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD2_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD2_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD2_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD2_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD2_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD2_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD2_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianITIMD2_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD2_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianITIMD2_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD2_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianITIMD2_Superclass)
itkRegistrationParameterScalesFromJacobianITIMD2_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD2_Superclass_cast

class itkRegistrationParameterScalesFromJacobianITIMD3_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianITIMD3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD3_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD3_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD3_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD3_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD3_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD3_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD3_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD3_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD3_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD3_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD3_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD3_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianITIMD3_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD3_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianITIMD3_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD3_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianITIMD3_Superclass)
itkRegistrationParameterScalesFromJacobianITIMD3_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD3_Superclass_cast

class itkRegistrationParameterScalesFromJacobianITIMD4_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianITIMD4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD4_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD4_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD4_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD4_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD4_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD4_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD4_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD4_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD4_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD4_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD4_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD4_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianITIMD4_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD4_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianITIMD4_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD4_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianITIMD4_Superclass)
itkRegistrationParameterScalesFromJacobianITIMD4_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD4_Superclass_cast

class itkRegistrationParameterScalesFromJacobianITIMF2_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianITIMF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF2_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF2_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF2_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF2_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF2_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF2_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF2_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF2_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF2_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF2_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF2_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF2_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianITIMF2_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF2_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianITIMF2_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF2_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianITIMF2_Superclass)
itkRegistrationParameterScalesFromJacobianITIMF2_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF2_Superclass_cast

class itkRegistrationParameterScalesFromJacobianITIMF3_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianITIMF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF3_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF3_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF3_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF3_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF3_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF3_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF3_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF3_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF3_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF3_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF3_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF3_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianITIMF3_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF3_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianITIMF3_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF3_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianITIMF3_Superclass)
itkRegistrationParameterScalesFromJacobianITIMF3_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF3_Superclass_cast

class itkRegistrationParameterScalesFromJacobianITIMF4_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianITIMF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF4_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF4_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF4_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF4_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF4_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF4_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF4_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF4_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF4_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF4_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF4_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF4_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianITIMF4_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF4_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianITIMF4_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF4_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianITIMF4_Superclass)
itkRegistrationParameterScalesFromJacobianITIMF4_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF4_Superclass_cast

class itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2_Superclass)
itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2_Superclass_cast

class itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3_Superclass)
itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3_Superclass_cast

class itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4_Superclass)
itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4_Superclass_cast

class itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2_Superclass)
itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2_Superclass_cast

class itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3_Superclass)
itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3_Superclass_cast

class itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4_Superclass)
itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4_Superclass_cast

class itkRegistrationParameterScalesFromJacobianJHMIITIMD2_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianJHMIITIMD2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD2_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD2_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD2_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD2_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD2_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD2_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD2_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD2_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD2_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD2_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD2_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD2_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianJHMIITIMD2_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD2_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianJHMIITIMD2_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD2_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianJHMIITIMD2_Superclass)
itkRegistrationParameterScalesFromJacobianJHMIITIMD2_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD2_Superclass_cast

class itkRegistrationParameterScalesFromJacobianJHMIITIMD3_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianJHMIITIMD3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD3_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD3_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD3_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD3_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD3_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD3_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD3_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD3_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD3_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD3_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD3_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD3_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianJHMIITIMD3_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD3_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianJHMIITIMD3_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD3_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianJHMIITIMD3_Superclass)
itkRegistrationParameterScalesFromJacobianJHMIITIMD3_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD3_Superclass_cast

class itkRegistrationParameterScalesFromJacobianJHMIITIMD4_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianJHMIITIMD4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD4_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD4_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD4_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD4_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD4_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD4_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD4_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD4_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD4_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD4_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD4_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD4_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianJHMIITIMD4_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD4_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianJHMIITIMD4_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD4_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianJHMIITIMD4_Superclass)
itkRegistrationParameterScalesFromJacobianJHMIITIMD4_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD4_Superclass_cast

class itkRegistrationParameterScalesFromJacobianJHMIITIMF2_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianJHMIITIMF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF2_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF2_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF2_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF2_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF2_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF2_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF2_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF2_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF2_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF2_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF2_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF2_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianJHMIITIMF2_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF2_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianJHMIITIMF2_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF2_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianJHMIITIMF2_Superclass)
itkRegistrationParameterScalesFromJacobianJHMIITIMF2_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF2_Superclass_cast

class itkRegistrationParameterScalesFromJacobianJHMIITIMF3_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianJHMIITIMF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF3_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF3_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF3_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF3_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF3_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF3_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF3_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF3_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF3_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF3_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF3_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF3_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianJHMIITIMF3_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF3_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianJHMIITIMF3_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF3_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianJHMIITIMF3_Superclass)
itkRegistrationParameterScalesFromJacobianJHMIITIMF3_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF3_Superclass_cast

class itkRegistrationParameterScalesFromJacobianJHMIITIMF4_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianJHMIITIMF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF4_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF4_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF4_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF4_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF4_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF4_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF4_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF4_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF4_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF4_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF4_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF4_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianJHMIITIMF4_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF4_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianJHMIITIMF4_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF4_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianJHMIITIMF4_Superclass)
itkRegistrationParameterScalesFromJacobianJHMIITIMF4_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF4_Superclass_cast

class itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2_Superclass)
itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2_Superclass_cast

class itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3_Superclass)
itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3_Superclass_cast

class itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4_Superclass)
itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4_Superclass_cast

class itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2_Superclass)
itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2_Superclass_cast

class itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3_Superclass)
itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3_Superclass_cast

class itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4_Superclass)
itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4_Superclass_cast

class itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2_Superclass)
itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2_Superclass_cast

class itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3_Superclass)
itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3_Superclass_cast

class itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4_Superclass)
itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4_Superclass_cast

class itkRegistrationParameterScalesFromJacobianMMIITIMD2_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianMMIITIMD2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD2_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD2_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD2_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD2_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD2_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD2_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD2_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD2_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD2_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD2_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD2_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD2_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianMMIITIMD2_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD2_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianMMIITIMD2_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD2_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianMMIITIMD2_Superclass)
itkRegistrationParameterScalesFromJacobianMMIITIMD2_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD2_Superclass_cast

class itkRegistrationParameterScalesFromJacobianMMIITIMD3_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianMMIITIMD3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD3_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD3_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD3_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD3_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD3_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD3_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD3_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD3_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD3_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD3_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD3_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD3_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianMMIITIMD3_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD3_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianMMIITIMD3_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD3_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianMMIITIMD3_Superclass)
itkRegistrationParameterScalesFromJacobianMMIITIMD3_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD3_Superclass_cast

class itkRegistrationParameterScalesFromJacobianMMIITIMD4_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianMMIITIMD4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD4_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD4_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD4_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD4_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD4_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD4_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD4_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD4_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD4_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD4_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD4_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD4_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianMMIITIMD4_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD4_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianMMIITIMD4_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD4_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianMMIITIMD4_Superclass)
itkRegistrationParameterScalesFromJacobianMMIITIMD4_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD4_Superclass_cast

class itkRegistrationParameterScalesFromJacobianMMIITIMF2_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianMMIITIMF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF2_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF2_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF2_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF2_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF2_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF2_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF2_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF2_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF2_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF2_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF2_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF2_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianMMIITIMF2_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF2_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianMMIITIMF2_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF2_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianMMIITIMF2_Superclass)
itkRegistrationParameterScalesFromJacobianMMIITIMF2_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF2_Superclass_cast

class itkRegistrationParameterScalesFromJacobianMMIITIMF3_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianMMIITIMF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF3_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF3_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF3_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF3_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF3_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF3_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF3_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF3_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF3_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF3_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF3_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF3_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianMMIITIMF3_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF3_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianMMIITIMF3_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF3_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianMMIITIMF3_Superclass)
itkRegistrationParameterScalesFromJacobianMMIITIMF3_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF3_Superclass_cast

class itkRegistrationParameterScalesFromJacobianMMIITIMF4_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianMMIITIMF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF4_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF4_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF4_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF4_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF4_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF4_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF4_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF4_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF4_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF4_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF4_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF4_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianMMIITIMF4_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF4_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianMMIITIMF4_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF4_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianMMIITIMF4_Superclass)
itkRegistrationParameterScalesFromJacobianMMIITIMF4_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF4_Superclass_cast

class itkRegistrationParameterScalesFromJacobianMSITIMD2_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianMSITIMD2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD2_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD2_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD2_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD2_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD2_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD2_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD2_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD2_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD2_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD2_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD2_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD2_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianMSITIMD2_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD2_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianMSITIMD2_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD2_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianMSITIMD2_Superclass)
itkRegistrationParameterScalesFromJacobianMSITIMD2_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD2_Superclass_cast

class itkRegistrationParameterScalesFromJacobianMSITIMD3_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianMSITIMD3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD3_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD3_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD3_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD3_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD3_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD3_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD3_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD3_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD3_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD3_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD3_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD3_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianMSITIMD3_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD3_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianMSITIMD3_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD3_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianMSITIMD3_Superclass)
itkRegistrationParameterScalesFromJacobianMSITIMD3_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD3_Superclass_cast

class itkRegistrationParameterScalesFromJacobianMSITIMD4_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianMSITIMD4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD4_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD4_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD4_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD4_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD4_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD4_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD4_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD4_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD4_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD4_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD4_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD4_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianMSITIMD4_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD4_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianMSITIMD4_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD4_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianMSITIMD4_Superclass)
itkRegistrationParameterScalesFromJacobianMSITIMD4_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD4_Superclass_cast

class itkRegistrationParameterScalesFromJacobianMSITIMF2_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianMSITIMF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF2_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF2_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF2_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF2_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF2_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF2_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF2_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF2_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF2_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF2_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF2_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF2_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianMSITIMF2_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF2_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianMSITIMF2_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF2_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianMSITIMF2_Superclass)
itkRegistrationParameterScalesFromJacobianMSITIMF2_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF2_Superclass_cast

class itkRegistrationParameterScalesFromJacobianMSITIMF3_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianMSITIMF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF3_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF3_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF3_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF3_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF3_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF3_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF3_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF3_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF3_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF3_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF3_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF3_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianMSITIMF3_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF3_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianMSITIMF3_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF3_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianMSITIMF3_Superclass)
itkRegistrationParameterScalesFromJacobianMSITIMF3_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF3_Superclass_cast

class itkRegistrationParameterScalesFromJacobianMSITIMF4_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianMSITIMF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF4_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF4_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF4_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF4_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF4_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF4_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF4_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF4_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF4_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF4_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF4_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF4_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianMSITIMF4_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF4_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianMSITIMF4_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF4_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianMSITIMF4_Superclass)
itkRegistrationParameterScalesFromJacobianMSITIMF4_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF4_Superclass_cast

class itkRegistrationParameterScalesFromJacobianPSTPSMPSD2_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianPSTPSMPSD2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD2_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD2_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD2_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD2_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD2_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD2_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD2_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD2_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD2_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD2_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD2_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD2_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianPSTPSMPSD2_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD2_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianPSTPSMPSD2_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD2_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianPSTPSMPSD2_Superclass)
itkRegistrationParameterScalesFromJacobianPSTPSMPSD2_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD2_Superclass_cast

class itkRegistrationParameterScalesFromJacobianPSTPSMPSD3_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianPSTPSMPSD3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD3_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD3_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD3_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD3_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD3_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD3_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD3_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD3_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD3_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD3_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD3_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD3_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianPSTPSMPSD3_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD3_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianPSTPSMPSD3_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD3_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianPSTPSMPSD3_Superclass)
itkRegistrationParameterScalesFromJacobianPSTPSMPSD3_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD3_Superclass_cast

class itkRegistrationParameterScalesFromJacobianPSTPSMPSD4_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianPSTPSMPSD4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD4_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD4_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD4_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD4_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD4_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD4_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD4_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD4_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD4_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD4_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD4_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD4_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianPSTPSMPSD4_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD4_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianPSTPSMPSD4_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD4_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianPSTPSMPSD4_Superclass)
itkRegistrationParameterScalesFromJacobianPSTPSMPSD4_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD4_Superclass_cast

class itkRegistrationParameterScalesFromJacobianPSTPSMPSF2_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianPSTPSMPSF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF2_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF2_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF2_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF2_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF2_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF2_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF2_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF2_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF2_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF2_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF2_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF2_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianPSTPSMPSF2_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF2_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianPSTPSMPSF2_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF2_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianPSTPSMPSF2_Superclass)
itkRegistrationParameterScalesFromJacobianPSTPSMPSF2_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF2_Superclass_cast

class itkRegistrationParameterScalesFromJacobianPSTPSMPSF3_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianPSTPSMPSF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF3_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF3_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF3_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF3_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF3_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF3_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF3_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF3_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF3_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF3_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF3_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF3_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianPSTPSMPSF3_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF3_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianPSTPSMPSF3_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF3_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianPSTPSMPSF3_Superclass)
itkRegistrationParameterScalesFromJacobianPSTPSMPSF3_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF3_Superclass_cast

class itkRegistrationParameterScalesFromJacobianPSTPSMPSF4_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianPSTPSMPSF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF4_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF4_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF4_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF4_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF4_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF4_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF4_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF4_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF4_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF4_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF4_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF4_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianPSTPSMPSF4_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF4_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianPSTPSMPSF4_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF4_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianPSTPSMPSF4_Superclass)
itkRegistrationParameterScalesFromJacobianPSTPSMPSF4_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF4_Superclass_cast

class itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2_Superclass)
itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2_Superclass_cast

class itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3_Superclass)
itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3_Superclass_cast

class itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4_Superclass)
itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4_Superclass_cast

class itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2_Superclass)
itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2_Superclass_cast

class itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3_Superclass)
itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3_Superclass_cast

class itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4_Superclass(itk.itkOptimizerParameterScalesEstimatorPython.itkOptimizerParameterScalesEstimatorTemplateD):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr
    SetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4_Superclass_SetMetric)
    GetMetric = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4_Superclass_GetMetric)
    SetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4_Superclass_SetTransformForward)
    GetTransformForward = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4_Superclass_GetTransformForward)
    TransformForwardOn = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4_Superclass_TransformForwardOn)
    TransformForwardOff = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4_Superclass_TransformForwardOff)
    SetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4_Superclass_SetVirtualDomainPointSet)
    GetVirtualDomainPointSet = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4_Superclass_GetVirtualDomainPointSet)
    SetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4_Superclass_SetCentralRegionRadius)
    GetCentralRegionRadius = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4_Superclass_GetCentralRegionRadius)
    SetScalesSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4_Superclass_SetScalesSamplingStrategy)
    SetStepScaleSamplingStrategy = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4_Superclass_SetStepScaleSamplingStrategy)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4_Superclass
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4_Superclass_cast)

# Register itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4_Superclass in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4_Superclass_swigregister(itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4_Superclass)
itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4_Superclass_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4_Superclass_cast


def itkRegistrationParameterScalesFromJacobianANTSNCITIMD2_New():
    return itkRegistrationParameterScalesFromJacobianANTSNCITIMD2.New()

class itkRegistrationParameterScalesFromJacobianANTSNCITIMD2(itkRegistrationParameterScalesFromJacobianANTSNCITIMD2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianANTSNCITIMD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD2_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianANTSNCITIMD2
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianANTSNCITIMD2

        Create a new object of the class itkRegistrationParameterScalesFromJacobianANTSNCITIMD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianANTSNCITIMD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianANTSNCITIMD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianANTSNCITIMD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianANTSNCITIMD2 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD2_swigregister(itkRegistrationParameterScalesFromJacobianANTSNCITIMD2)
itkRegistrationParameterScalesFromJacobianANTSNCITIMD2___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD2___New_orig__
itkRegistrationParameterScalesFromJacobianANTSNCITIMD2_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD2_cast


def itkRegistrationParameterScalesFromJacobianANTSNCITIMD3_New():
    return itkRegistrationParameterScalesFromJacobianANTSNCITIMD3.New()

class itkRegistrationParameterScalesFromJacobianANTSNCITIMD3(itkRegistrationParameterScalesFromJacobianANTSNCITIMD3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianANTSNCITIMD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD3_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianANTSNCITIMD3
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianANTSNCITIMD3

        Create a new object of the class itkRegistrationParameterScalesFromJacobianANTSNCITIMD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianANTSNCITIMD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianANTSNCITIMD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianANTSNCITIMD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianANTSNCITIMD3 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD3_swigregister(itkRegistrationParameterScalesFromJacobianANTSNCITIMD3)
itkRegistrationParameterScalesFromJacobianANTSNCITIMD3___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD3___New_orig__
itkRegistrationParameterScalesFromJacobianANTSNCITIMD3_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD3_cast


def itkRegistrationParameterScalesFromJacobianANTSNCITIMD4_New():
    return itkRegistrationParameterScalesFromJacobianANTSNCITIMD4.New()

class itkRegistrationParameterScalesFromJacobianANTSNCITIMD4(itkRegistrationParameterScalesFromJacobianANTSNCITIMD4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianANTSNCITIMD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD4_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianANTSNCITIMD4
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianANTSNCITIMD4

        Create a new object of the class itkRegistrationParameterScalesFromJacobianANTSNCITIMD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianANTSNCITIMD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianANTSNCITIMD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianANTSNCITIMD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianANTSNCITIMD4 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD4_swigregister(itkRegistrationParameterScalesFromJacobianANTSNCITIMD4)
itkRegistrationParameterScalesFromJacobianANTSNCITIMD4___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD4___New_orig__
itkRegistrationParameterScalesFromJacobianANTSNCITIMD4_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMD4_cast


def itkRegistrationParameterScalesFromJacobianANTSNCITIMF2_New():
    return itkRegistrationParameterScalesFromJacobianANTSNCITIMF2.New()

class itkRegistrationParameterScalesFromJacobianANTSNCITIMF2(itkRegistrationParameterScalesFromJacobianANTSNCITIMF2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianANTSNCITIMF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF2_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianANTSNCITIMF2
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianANTSNCITIMF2

        Create a new object of the class itkRegistrationParameterScalesFromJacobianANTSNCITIMF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianANTSNCITIMF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianANTSNCITIMF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianANTSNCITIMF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianANTSNCITIMF2 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF2_swigregister(itkRegistrationParameterScalesFromJacobianANTSNCITIMF2)
itkRegistrationParameterScalesFromJacobianANTSNCITIMF2___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF2___New_orig__
itkRegistrationParameterScalesFromJacobianANTSNCITIMF2_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF2_cast


def itkRegistrationParameterScalesFromJacobianANTSNCITIMF3_New():
    return itkRegistrationParameterScalesFromJacobianANTSNCITIMF3.New()

class itkRegistrationParameterScalesFromJacobianANTSNCITIMF3(itkRegistrationParameterScalesFromJacobianANTSNCITIMF3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianANTSNCITIMF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF3_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianANTSNCITIMF3
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianANTSNCITIMF3

        Create a new object of the class itkRegistrationParameterScalesFromJacobianANTSNCITIMF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianANTSNCITIMF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianANTSNCITIMF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianANTSNCITIMF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianANTSNCITIMF3 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF3_swigregister(itkRegistrationParameterScalesFromJacobianANTSNCITIMF3)
itkRegistrationParameterScalesFromJacobianANTSNCITIMF3___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF3___New_orig__
itkRegistrationParameterScalesFromJacobianANTSNCITIMF3_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF3_cast


def itkRegistrationParameterScalesFromJacobianANTSNCITIMF4_New():
    return itkRegistrationParameterScalesFromJacobianANTSNCITIMF4.New()

class itkRegistrationParameterScalesFromJacobianANTSNCITIMF4(itkRegistrationParameterScalesFromJacobianANTSNCITIMF4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianANTSNCITIMF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF4_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianANTSNCITIMF4
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianANTSNCITIMF4

        Create a new object of the class itkRegistrationParameterScalesFromJacobianANTSNCITIMF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianANTSNCITIMF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianANTSNCITIMF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianANTSNCITIMF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianANTSNCITIMF4 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF4_swigregister(itkRegistrationParameterScalesFromJacobianANTSNCITIMF4)
itkRegistrationParameterScalesFromJacobianANTSNCITIMF4___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF4___New_orig__
itkRegistrationParameterScalesFromJacobianANTSNCITIMF4_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianANTSNCITIMF4_cast


def itkRegistrationParameterScalesFromJacobianCITIMD2_New():
    return itkRegistrationParameterScalesFromJacobianCITIMD2.New()

class itkRegistrationParameterScalesFromJacobianCITIMD2(itkRegistrationParameterScalesFromJacobianCITIMD2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianCITIMD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD2_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianCITIMD2
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianCITIMD2

        Create a new object of the class itkRegistrationParameterScalesFromJacobianCITIMD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianCITIMD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianCITIMD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianCITIMD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianCITIMD2 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD2_swigregister(itkRegistrationParameterScalesFromJacobianCITIMD2)
itkRegistrationParameterScalesFromJacobianCITIMD2___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD2___New_orig__
itkRegistrationParameterScalesFromJacobianCITIMD2_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD2_cast


def itkRegistrationParameterScalesFromJacobianCITIMD3_New():
    return itkRegistrationParameterScalesFromJacobianCITIMD3.New()

class itkRegistrationParameterScalesFromJacobianCITIMD3(itkRegistrationParameterScalesFromJacobianCITIMD3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianCITIMD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD3_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianCITIMD3
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianCITIMD3

        Create a new object of the class itkRegistrationParameterScalesFromJacobianCITIMD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianCITIMD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianCITIMD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianCITIMD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianCITIMD3 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD3_swigregister(itkRegistrationParameterScalesFromJacobianCITIMD3)
itkRegistrationParameterScalesFromJacobianCITIMD3___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD3___New_orig__
itkRegistrationParameterScalesFromJacobianCITIMD3_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD3_cast


def itkRegistrationParameterScalesFromJacobianCITIMD4_New():
    return itkRegistrationParameterScalesFromJacobianCITIMD4.New()

class itkRegistrationParameterScalesFromJacobianCITIMD4(itkRegistrationParameterScalesFromJacobianCITIMD4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianCITIMD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD4_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianCITIMD4
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianCITIMD4

        Create a new object of the class itkRegistrationParameterScalesFromJacobianCITIMD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianCITIMD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianCITIMD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianCITIMD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianCITIMD4 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD4_swigregister(itkRegistrationParameterScalesFromJacobianCITIMD4)
itkRegistrationParameterScalesFromJacobianCITIMD4___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD4___New_orig__
itkRegistrationParameterScalesFromJacobianCITIMD4_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMD4_cast


def itkRegistrationParameterScalesFromJacobianCITIMF2_New():
    return itkRegistrationParameterScalesFromJacobianCITIMF2.New()

class itkRegistrationParameterScalesFromJacobianCITIMF2(itkRegistrationParameterScalesFromJacobianCITIMF2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianCITIMF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF2_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianCITIMF2
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianCITIMF2

        Create a new object of the class itkRegistrationParameterScalesFromJacobianCITIMF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianCITIMF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianCITIMF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianCITIMF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianCITIMF2 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF2_swigregister(itkRegistrationParameterScalesFromJacobianCITIMF2)
itkRegistrationParameterScalesFromJacobianCITIMF2___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF2___New_orig__
itkRegistrationParameterScalesFromJacobianCITIMF2_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF2_cast


def itkRegistrationParameterScalesFromJacobianCITIMF3_New():
    return itkRegistrationParameterScalesFromJacobianCITIMF3.New()

class itkRegistrationParameterScalesFromJacobianCITIMF3(itkRegistrationParameterScalesFromJacobianCITIMF3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianCITIMF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF3_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianCITIMF3
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianCITIMF3

        Create a new object of the class itkRegistrationParameterScalesFromJacobianCITIMF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianCITIMF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianCITIMF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianCITIMF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianCITIMF3 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF3_swigregister(itkRegistrationParameterScalesFromJacobianCITIMF3)
itkRegistrationParameterScalesFromJacobianCITIMF3___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF3___New_orig__
itkRegistrationParameterScalesFromJacobianCITIMF3_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF3_cast


def itkRegistrationParameterScalesFromJacobianCITIMF4_New():
    return itkRegistrationParameterScalesFromJacobianCITIMF4.New()

class itkRegistrationParameterScalesFromJacobianCITIMF4(itkRegistrationParameterScalesFromJacobianCITIMF4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianCITIMF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF4_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianCITIMF4
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianCITIMF4

        Create a new object of the class itkRegistrationParameterScalesFromJacobianCITIMF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianCITIMF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianCITIMF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianCITIMF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianCITIMF4 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF4_swigregister(itkRegistrationParameterScalesFromJacobianCITIMF4)
itkRegistrationParameterScalesFromJacobianCITIMF4___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF4___New_orig__
itkRegistrationParameterScalesFromJacobianCITIMF4_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianCITIMF4_cast


def itkRegistrationParameterScalesFromJacobianDITIMD2_New():
    return itkRegistrationParameterScalesFromJacobianDITIMD2.New()

class itkRegistrationParameterScalesFromJacobianDITIMD2(itkRegistrationParameterScalesFromJacobianDITIMD2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianDITIMD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD2_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianDITIMD2
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianDITIMD2

        Create a new object of the class itkRegistrationParameterScalesFromJacobianDITIMD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianDITIMD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianDITIMD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianDITIMD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianDITIMD2 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD2_swigregister(itkRegistrationParameterScalesFromJacobianDITIMD2)
itkRegistrationParameterScalesFromJacobianDITIMD2___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD2___New_orig__
itkRegistrationParameterScalesFromJacobianDITIMD2_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD2_cast


def itkRegistrationParameterScalesFromJacobianDITIMD3_New():
    return itkRegistrationParameterScalesFromJacobianDITIMD3.New()

class itkRegistrationParameterScalesFromJacobianDITIMD3(itkRegistrationParameterScalesFromJacobianDITIMD3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianDITIMD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD3_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianDITIMD3
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianDITIMD3

        Create a new object of the class itkRegistrationParameterScalesFromJacobianDITIMD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianDITIMD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianDITIMD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianDITIMD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianDITIMD3 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD3_swigregister(itkRegistrationParameterScalesFromJacobianDITIMD3)
itkRegistrationParameterScalesFromJacobianDITIMD3___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD3___New_orig__
itkRegistrationParameterScalesFromJacobianDITIMD3_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD3_cast


def itkRegistrationParameterScalesFromJacobianDITIMD4_New():
    return itkRegistrationParameterScalesFromJacobianDITIMD4.New()

class itkRegistrationParameterScalesFromJacobianDITIMD4(itkRegistrationParameterScalesFromJacobianDITIMD4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianDITIMD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD4_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianDITIMD4
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianDITIMD4

        Create a new object of the class itkRegistrationParameterScalesFromJacobianDITIMD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianDITIMD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianDITIMD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianDITIMD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianDITIMD4 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD4_swigregister(itkRegistrationParameterScalesFromJacobianDITIMD4)
itkRegistrationParameterScalesFromJacobianDITIMD4___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD4___New_orig__
itkRegistrationParameterScalesFromJacobianDITIMD4_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMD4_cast


def itkRegistrationParameterScalesFromJacobianDITIMF2_New():
    return itkRegistrationParameterScalesFromJacobianDITIMF2.New()

class itkRegistrationParameterScalesFromJacobianDITIMF2(itkRegistrationParameterScalesFromJacobianDITIMF2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianDITIMF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF2_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianDITIMF2
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianDITIMF2

        Create a new object of the class itkRegistrationParameterScalesFromJacobianDITIMF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianDITIMF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianDITIMF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianDITIMF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianDITIMF2 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF2_swigregister(itkRegistrationParameterScalesFromJacobianDITIMF2)
itkRegistrationParameterScalesFromJacobianDITIMF2___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF2___New_orig__
itkRegistrationParameterScalesFromJacobianDITIMF2_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF2_cast


def itkRegistrationParameterScalesFromJacobianDITIMF3_New():
    return itkRegistrationParameterScalesFromJacobianDITIMF3.New()

class itkRegistrationParameterScalesFromJacobianDITIMF3(itkRegistrationParameterScalesFromJacobianDITIMF3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianDITIMF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF3_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianDITIMF3
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianDITIMF3

        Create a new object of the class itkRegistrationParameterScalesFromJacobianDITIMF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianDITIMF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianDITIMF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianDITIMF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianDITIMF3 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF3_swigregister(itkRegistrationParameterScalesFromJacobianDITIMF3)
itkRegistrationParameterScalesFromJacobianDITIMF3___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF3___New_orig__
itkRegistrationParameterScalesFromJacobianDITIMF3_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF3_cast


def itkRegistrationParameterScalesFromJacobianDITIMF4_New():
    return itkRegistrationParameterScalesFromJacobianDITIMF4.New()

class itkRegistrationParameterScalesFromJacobianDITIMF4(itkRegistrationParameterScalesFromJacobianDITIMF4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianDITIMF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF4_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianDITIMF4
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianDITIMF4

        Create a new object of the class itkRegistrationParameterScalesFromJacobianDITIMF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianDITIMF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianDITIMF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianDITIMF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianDITIMF4 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF4_swigregister(itkRegistrationParameterScalesFromJacobianDITIMF4)
itkRegistrationParameterScalesFromJacobianDITIMF4___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF4___New_orig__
itkRegistrationParameterScalesFromJacobianDITIMF4_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianDITIMF4_cast


def itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2_New():
    return itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2.New()

class itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2(itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2

        Create a new object of the class itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2_swigregister(itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2)
itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2___New_orig__
itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD2_cast


def itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3_New():
    return itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3.New()

class itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3(itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3

        Create a new object of the class itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3_swigregister(itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3)
itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3___New_orig__
itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD3_cast


def itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4_New():
    return itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4.New()

class itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4(itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4

        Create a new object of the class itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4_swigregister(itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4)
itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4___New_orig__
itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSD4_cast


def itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2_New():
    return itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2.New()

class itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2(itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2

        Create a new object of the class itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2_swigregister(itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2)
itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2___New_orig__
itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF2_cast


def itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3_New():
    return itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3.New()

class itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3(itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3

        Create a new object of the class itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3_swigregister(itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3)
itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3___New_orig__
itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF3_cast


def itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4_New():
    return itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4.New()

class itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4(itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4

        Create a new object of the class itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4_swigregister(itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4)
itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4___New_orig__
itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEBPSTPSMPSF4_cast


def itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2_New():
    return itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2.New()

class itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2(itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2

        Create a new object of the class itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2_swigregister(itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2)
itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2___New_orig__
itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD2_cast


def itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3_New():
    return itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3.New()

class itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3(itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3

        Create a new object of the class itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3_swigregister(itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3)
itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3___New_orig__
itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD3_cast


def itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4_New():
    return itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4.New()

class itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4(itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4

        Create a new object of the class itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4_swigregister(itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4)
itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4___New_orig__
itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSD4_cast


def itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2_New():
    return itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2.New()

class itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2(itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2

        Create a new object of the class itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2_swigregister(itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2)
itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2___New_orig__
itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF2_cast


def itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3_New():
    return itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3.New()

class itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3(itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3

        Create a new object of the class itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3_swigregister(itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3)
itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3___New_orig__
itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF3_cast


def itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4_New():
    return itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4.New()

class itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4(itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4

        Create a new object of the class itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4_swigregister(itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4)
itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4___New_orig__
itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianEDPSTPSMPSF4_cast


def itkRegistrationParameterScalesFromJacobianITIMD2_New():
    return itkRegistrationParameterScalesFromJacobianITIMD2.New()

class itkRegistrationParameterScalesFromJacobianITIMD2(itkRegistrationParameterScalesFromJacobianITIMD2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianITIMD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD2_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianITIMD2
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianITIMD2

        Create a new object of the class itkRegistrationParameterScalesFromJacobianITIMD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianITIMD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianITIMD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianITIMD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianITIMD2 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD2_swigregister(itkRegistrationParameterScalesFromJacobianITIMD2)
itkRegistrationParameterScalesFromJacobianITIMD2___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD2___New_orig__
itkRegistrationParameterScalesFromJacobianITIMD2_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD2_cast


def itkRegistrationParameterScalesFromJacobianITIMD3_New():
    return itkRegistrationParameterScalesFromJacobianITIMD3.New()

class itkRegistrationParameterScalesFromJacobianITIMD3(itkRegistrationParameterScalesFromJacobianITIMD3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianITIMD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD3_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianITIMD3
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianITIMD3

        Create a new object of the class itkRegistrationParameterScalesFromJacobianITIMD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianITIMD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianITIMD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianITIMD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianITIMD3 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD3_swigregister(itkRegistrationParameterScalesFromJacobianITIMD3)
itkRegistrationParameterScalesFromJacobianITIMD3___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD3___New_orig__
itkRegistrationParameterScalesFromJacobianITIMD3_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD3_cast


def itkRegistrationParameterScalesFromJacobianITIMD4_New():
    return itkRegistrationParameterScalesFromJacobianITIMD4.New()

class itkRegistrationParameterScalesFromJacobianITIMD4(itkRegistrationParameterScalesFromJacobianITIMD4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianITIMD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD4_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianITIMD4
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianITIMD4

        Create a new object of the class itkRegistrationParameterScalesFromJacobianITIMD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianITIMD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianITIMD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianITIMD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianITIMD4 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD4_swigregister(itkRegistrationParameterScalesFromJacobianITIMD4)
itkRegistrationParameterScalesFromJacobianITIMD4___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD4___New_orig__
itkRegistrationParameterScalesFromJacobianITIMD4_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMD4_cast


def itkRegistrationParameterScalesFromJacobianITIMF2_New():
    return itkRegistrationParameterScalesFromJacobianITIMF2.New()

class itkRegistrationParameterScalesFromJacobianITIMF2(itkRegistrationParameterScalesFromJacobianITIMF2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianITIMF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF2_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianITIMF2
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianITIMF2

        Create a new object of the class itkRegistrationParameterScalesFromJacobianITIMF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianITIMF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianITIMF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianITIMF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianITIMF2 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF2_swigregister(itkRegistrationParameterScalesFromJacobianITIMF2)
itkRegistrationParameterScalesFromJacobianITIMF2___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF2___New_orig__
itkRegistrationParameterScalesFromJacobianITIMF2_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF2_cast


def itkRegistrationParameterScalesFromJacobianITIMF3_New():
    return itkRegistrationParameterScalesFromJacobianITIMF3.New()

class itkRegistrationParameterScalesFromJacobianITIMF3(itkRegistrationParameterScalesFromJacobianITIMF3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianITIMF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF3_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianITIMF3
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianITIMF3

        Create a new object of the class itkRegistrationParameterScalesFromJacobianITIMF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianITIMF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianITIMF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianITIMF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianITIMF3 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF3_swigregister(itkRegistrationParameterScalesFromJacobianITIMF3)
itkRegistrationParameterScalesFromJacobianITIMF3___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF3___New_orig__
itkRegistrationParameterScalesFromJacobianITIMF3_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF3_cast


def itkRegistrationParameterScalesFromJacobianITIMF4_New():
    return itkRegistrationParameterScalesFromJacobianITIMF4.New()

class itkRegistrationParameterScalesFromJacobianITIMF4(itkRegistrationParameterScalesFromJacobianITIMF4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianITIMF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF4_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianITIMF4
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianITIMF4

        Create a new object of the class itkRegistrationParameterScalesFromJacobianITIMF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianITIMF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianITIMF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianITIMF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianITIMF4 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF4_swigregister(itkRegistrationParameterScalesFromJacobianITIMF4)
itkRegistrationParameterScalesFromJacobianITIMF4___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF4___New_orig__
itkRegistrationParameterScalesFromJacobianITIMF4_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianITIMF4_cast


def itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2_New():
    return itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2.New()

class itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2(itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2

        Create a new object of the class itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2_swigregister(itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2)
itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2___New_orig__
itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD2_cast


def itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3_New():
    return itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3.New()

class itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3(itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3

        Create a new object of the class itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3_swigregister(itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3)
itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3___New_orig__
itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD3_cast


def itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4_New():
    return itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4.New()

class itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4(itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4

        Create a new object of the class itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4_swigregister(itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4)
itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4___New_orig__
itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSD4_cast


def itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2_New():
    return itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2.New()

class itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2(itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2

        Create a new object of the class itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2_swigregister(itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2)
itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2___New_orig__
itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF2_cast


def itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3_New():
    return itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3.New()

class itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3(itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3

        Create a new object of the class itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3_swigregister(itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3)
itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3___New_orig__
itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF3_cast


def itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4_New():
    return itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4.New()

class itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4(itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4

        Create a new object of the class itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4_swigregister(itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4)
itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4___New_orig__
itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHCTPSTPSMPSF4_cast


def itkRegistrationParameterScalesFromJacobianJHMIITIMD2_New():
    return itkRegistrationParameterScalesFromJacobianJHMIITIMD2.New()

class itkRegistrationParameterScalesFromJacobianJHMIITIMD2(itkRegistrationParameterScalesFromJacobianJHMIITIMD2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianJHMIITIMD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD2_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianJHMIITIMD2
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianJHMIITIMD2

        Create a new object of the class itkRegistrationParameterScalesFromJacobianJHMIITIMD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianJHMIITIMD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianJHMIITIMD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianJHMIITIMD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianJHMIITIMD2 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD2_swigregister(itkRegistrationParameterScalesFromJacobianJHMIITIMD2)
itkRegistrationParameterScalesFromJacobianJHMIITIMD2___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD2___New_orig__
itkRegistrationParameterScalesFromJacobianJHMIITIMD2_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD2_cast


def itkRegistrationParameterScalesFromJacobianJHMIITIMD3_New():
    return itkRegistrationParameterScalesFromJacobianJHMIITIMD3.New()

class itkRegistrationParameterScalesFromJacobianJHMIITIMD3(itkRegistrationParameterScalesFromJacobianJHMIITIMD3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianJHMIITIMD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD3_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianJHMIITIMD3
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianJHMIITIMD3

        Create a new object of the class itkRegistrationParameterScalesFromJacobianJHMIITIMD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianJHMIITIMD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianJHMIITIMD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianJHMIITIMD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianJHMIITIMD3 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD3_swigregister(itkRegistrationParameterScalesFromJacobianJHMIITIMD3)
itkRegistrationParameterScalesFromJacobianJHMIITIMD3___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD3___New_orig__
itkRegistrationParameterScalesFromJacobianJHMIITIMD3_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD3_cast


def itkRegistrationParameterScalesFromJacobianJHMIITIMD4_New():
    return itkRegistrationParameterScalesFromJacobianJHMIITIMD4.New()

class itkRegistrationParameterScalesFromJacobianJHMIITIMD4(itkRegistrationParameterScalesFromJacobianJHMIITIMD4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianJHMIITIMD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD4_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianJHMIITIMD4
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianJHMIITIMD4

        Create a new object of the class itkRegistrationParameterScalesFromJacobianJHMIITIMD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianJHMIITIMD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianJHMIITIMD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianJHMIITIMD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianJHMIITIMD4 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD4_swigregister(itkRegistrationParameterScalesFromJacobianJHMIITIMD4)
itkRegistrationParameterScalesFromJacobianJHMIITIMD4___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD4___New_orig__
itkRegistrationParameterScalesFromJacobianJHMIITIMD4_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMD4_cast


def itkRegistrationParameterScalesFromJacobianJHMIITIMF2_New():
    return itkRegistrationParameterScalesFromJacobianJHMIITIMF2.New()

class itkRegistrationParameterScalesFromJacobianJHMIITIMF2(itkRegistrationParameterScalesFromJacobianJHMIITIMF2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianJHMIITIMF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF2_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianJHMIITIMF2
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianJHMIITIMF2

        Create a new object of the class itkRegistrationParameterScalesFromJacobianJHMIITIMF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianJHMIITIMF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianJHMIITIMF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianJHMIITIMF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianJHMIITIMF2 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF2_swigregister(itkRegistrationParameterScalesFromJacobianJHMIITIMF2)
itkRegistrationParameterScalesFromJacobianJHMIITIMF2___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF2___New_orig__
itkRegistrationParameterScalesFromJacobianJHMIITIMF2_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF2_cast


def itkRegistrationParameterScalesFromJacobianJHMIITIMF3_New():
    return itkRegistrationParameterScalesFromJacobianJHMIITIMF3.New()

class itkRegistrationParameterScalesFromJacobianJHMIITIMF3(itkRegistrationParameterScalesFromJacobianJHMIITIMF3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianJHMIITIMF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF3_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianJHMIITIMF3
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianJHMIITIMF3

        Create a new object of the class itkRegistrationParameterScalesFromJacobianJHMIITIMF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianJHMIITIMF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianJHMIITIMF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianJHMIITIMF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianJHMIITIMF3 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF3_swigregister(itkRegistrationParameterScalesFromJacobianJHMIITIMF3)
itkRegistrationParameterScalesFromJacobianJHMIITIMF3___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF3___New_orig__
itkRegistrationParameterScalesFromJacobianJHMIITIMF3_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF3_cast


def itkRegistrationParameterScalesFromJacobianJHMIITIMF4_New():
    return itkRegistrationParameterScalesFromJacobianJHMIITIMF4.New()

class itkRegistrationParameterScalesFromJacobianJHMIITIMF4(itkRegistrationParameterScalesFromJacobianJHMIITIMF4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianJHMIITIMF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF4_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianJHMIITIMF4
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianJHMIITIMF4

        Create a new object of the class itkRegistrationParameterScalesFromJacobianJHMIITIMF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianJHMIITIMF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianJHMIITIMF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianJHMIITIMF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianJHMIITIMF4 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF4_swigregister(itkRegistrationParameterScalesFromJacobianJHMIITIMF4)
itkRegistrationParameterScalesFromJacobianJHMIITIMF4___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF4___New_orig__
itkRegistrationParameterScalesFromJacobianJHMIITIMF4_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianJHMIITIMF4_cast


def itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2_New():
    return itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2.New()

class itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2(itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2

        Create a new object of the class itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2_swigregister(itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2)
itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2___New_orig__
itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS2_cast


def itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3_New():
    return itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3.New()

class itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3(itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3

        Create a new object of the class itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3_swigregister(itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3)
itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3___New_orig__
itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS3_cast


def itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4_New():
    return itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4.New()

class itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4(itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4

        Create a new object of the class itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4_swigregister(itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4)
itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4___New_orig__
itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSSS4_cast


def itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2_New():
    return itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2.New()

class itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2(itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2

        Create a new object of the class itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2_swigregister(itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2)
itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2___New_orig__
itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC2_cast


def itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3_New():
    return itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3.New()

class itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3(itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3

        Create a new object of the class itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3_swigregister(itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3)
itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3___New_orig__
itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC3_cast


def itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4_New():
    return itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4.New()

class itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4(itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4

        Create a new object of the class itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4_swigregister(itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4)
itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4___New_orig__
itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUC4_cast


def itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2_New():
    return itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2.New()

class itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2(itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2

        Create a new object of the class itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2_swigregister(itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2)
itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2___New_orig__
itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS2_cast


def itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3_New():
    return itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3.New()

class itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3(itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3

        Create a new object of the class itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3_swigregister(itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3)
itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3___New_orig__
itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS3_cast


def itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4_New():
    return itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4.New()

class itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4(itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4

        Create a new object of the class itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4_swigregister(itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4)
itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4___New_orig__
itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianLPSTPSMPSUS4_cast


def itkRegistrationParameterScalesFromJacobianMMIITIMD2_New():
    return itkRegistrationParameterScalesFromJacobianMMIITIMD2.New()

class itkRegistrationParameterScalesFromJacobianMMIITIMD2(itkRegistrationParameterScalesFromJacobianMMIITIMD2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianMMIITIMD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD2_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianMMIITIMD2
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianMMIITIMD2

        Create a new object of the class itkRegistrationParameterScalesFromJacobianMMIITIMD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianMMIITIMD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianMMIITIMD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianMMIITIMD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianMMIITIMD2 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD2_swigregister(itkRegistrationParameterScalesFromJacobianMMIITIMD2)
itkRegistrationParameterScalesFromJacobianMMIITIMD2___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD2___New_orig__
itkRegistrationParameterScalesFromJacobianMMIITIMD2_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD2_cast


def itkRegistrationParameterScalesFromJacobianMMIITIMD3_New():
    return itkRegistrationParameterScalesFromJacobianMMIITIMD3.New()

class itkRegistrationParameterScalesFromJacobianMMIITIMD3(itkRegistrationParameterScalesFromJacobianMMIITIMD3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianMMIITIMD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD3_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianMMIITIMD3
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianMMIITIMD3

        Create a new object of the class itkRegistrationParameterScalesFromJacobianMMIITIMD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianMMIITIMD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianMMIITIMD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianMMIITIMD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianMMIITIMD3 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD3_swigregister(itkRegistrationParameterScalesFromJacobianMMIITIMD3)
itkRegistrationParameterScalesFromJacobianMMIITIMD3___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD3___New_orig__
itkRegistrationParameterScalesFromJacobianMMIITIMD3_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD3_cast


def itkRegistrationParameterScalesFromJacobianMMIITIMD4_New():
    return itkRegistrationParameterScalesFromJacobianMMIITIMD4.New()

class itkRegistrationParameterScalesFromJacobianMMIITIMD4(itkRegistrationParameterScalesFromJacobianMMIITIMD4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianMMIITIMD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD4_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianMMIITIMD4
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianMMIITIMD4

        Create a new object of the class itkRegistrationParameterScalesFromJacobianMMIITIMD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianMMIITIMD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianMMIITIMD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianMMIITIMD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianMMIITIMD4 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD4_swigregister(itkRegistrationParameterScalesFromJacobianMMIITIMD4)
itkRegistrationParameterScalesFromJacobianMMIITIMD4___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD4___New_orig__
itkRegistrationParameterScalesFromJacobianMMIITIMD4_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMD4_cast


def itkRegistrationParameterScalesFromJacobianMMIITIMF2_New():
    return itkRegistrationParameterScalesFromJacobianMMIITIMF2.New()

class itkRegistrationParameterScalesFromJacobianMMIITIMF2(itkRegistrationParameterScalesFromJacobianMMIITIMF2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianMMIITIMF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF2_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianMMIITIMF2
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianMMIITIMF2

        Create a new object of the class itkRegistrationParameterScalesFromJacobianMMIITIMF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianMMIITIMF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianMMIITIMF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianMMIITIMF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianMMIITIMF2 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF2_swigregister(itkRegistrationParameterScalesFromJacobianMMIITIMF2)
itkRegistrationParameterScalesFromJacobianMMIITIMF2___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF2___New_orig__
itkRegistrationParameterScalesFromJacobianMMIITIMF2_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF2_cast


def itkRegistrationParameterScalesFromJacobianMMIITIMF3_New():
    return itkRegistrationParameterScalesFromJacobianMMIITIMF3.New()

class itkRegistrationParameterScalesFromJacobianMMIITIMF3(itkRegistrationParameterScalesFromJacobianMMIITIMF3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianMMIITIMF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF3_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianMMIITIMF3
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianMMIITIMF3

        Create a new object of the class itkRegistrationParameterScalesFromJacobianMMIITIMF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianMMIITIMF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianMMIITIMF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianMMIITIMF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianMMIITIMF3 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF3_swigregister(itkRegistrationParameterScalesFromJacobianMMIITIMF3)
itkRegistrationParameterScalesFromJacobianMMIITIMF3___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF3___New_orig__
itkRegistrationParameterScalesFromJacobianMMIITIMF3_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF3_cast


def itkRegistrationParameterScalesFromJacobianMMIITIMF4_New():
    return itkRegistrationParameterScalesFromJacobianMMIITIMF4.New()

class itkRegistrationParameterScalesFromJacobianMMIITIMF4(itkRegistrationParameterScalesFromJacobianMMIITIMF4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianMMIITIMF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF4_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianMMIITIMF4
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianMMIITIMF4

        Create a new object of the class itkRegistrationParameterScalesFromJacobianMMIITIMF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianMMIITIMF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianMMIITIMF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianMMIITIMF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianMMIITIMF4 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF4_swigregister(itkRegistrationParameterScalesFromJacobianMMIITIMF4)
itkRegistrationParameterScalesFromJacobianMMIITIMF4___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF4___New_orig__
itkRegistrationParameterScalesFromJacobianMMIITIMF4_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMMIITIMF4_cast


def itkRegistrationParameterScalesFromJacobianMSITIMD2_New():
    return itkRegistrationParameterScalesFromJacobianMSITIMD2.New()

class itkRegistrationParameterScalesFromJacobianMSITIMD2(itkRegistrationParameterScalesFromJacobianMSITIMD2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianMSITIMD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD2_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianMSITIMD2
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianMSITIMD2

        Create a new object of the class itkRegistrationParameterScalesFromJacobianMSITIMD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianMSITIMD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianMSITIMD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianMSITIMD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianMSITIMD2 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD2_swigregister(itkRegistrationParameterScalesFromJacobianMSITIMD2)
itkRegistrationParameterScalesFromJacobianMSITIMD2___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD2___New_orig__
itkRegistrationParameterScalesFromJacobianMSITIMD2_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD2_cast


def itkRegistrationParameterScalesFromJacobianMSITIMD3_New():
    return itkRegistrationParameterScalesFromJacobianMSITIMD3.New()

class itkRegistrationParameterScalesFromJacobianMSITIMD3(itkRegistrationParameterScalesFromJacobianMSITIMD3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianMSITIMD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD3_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianMSITIMD3
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianMSITIMD3

        Create a new object of the class itkRegistrationParameterScalesFromJacobianMSITIMD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianMSITIMD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianMSITIMD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianMSITIMD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianMSITIMD3 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD3_swigregister(itkRegistrationParameterScalesFromJacobianMSITIMD3)
itkRegistrationParameterScalesFromJacobianMSITIMD3___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD3___New_orig__
itkRegistrationParameterScalesFromJacobianMSITIMD3_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD3_cast


def itkRegistrationParameterScalesFromJacobianMSITIMD4_New():
    return itkRegistrationParameterScalesFromJacobianMSITIMD4.New()

class itkRegistrationParameterScalesFromJacobianMSITIMD4(itkRegistrationParameterScalesFromJacobianMSITIMD4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianMSITIMD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD4_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianMSITIMD4
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianMSITIMD4

        Create a new object of the class itkRegistrationParameterScalesFromJacobianMSITIMD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianMSITIMD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianMSITIMD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianMSITIMD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianMSITIMD4 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD4_swigregister(itkRegistrationParameterScalesFromJacobianMSITIMD4)
itkRegistrationParameterScalesFromJacobianMSITIMD4___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD4___New_orig__
itkRegistrationParameterScalesFromJacobianMSITIMD4_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMD4_cast


def itkRegistrationParameterScalesFromJacobianMSITIMF2_New():
    return itkRegistrationParameterScalesFromJacobianMSITIMF2.New()

class itkRegistrationParameterScalesFromJacobianMSITIMF2(itkRegistrationParameterScalesFromJacobianMSITIMF2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianMSITIMF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF2_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianMSITIMF2
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianMSITIMF2

        Create a new object of the class itkRegistrationParameterScalesFromJacobianMSITIMF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianMSITIMF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianMSITIMF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianMSITIMF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianMSITIMF2 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF2_swigregister(itkRegistrationParameterScalesFromJacobianMSITIMF2)
itkRegistrationParameterScalesFromJacobianMSITIMF2___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF2___New_orig__
itkRegistrationParameterScalesFromJacobianMSITIMF2_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF2_cast


def itkRegistrationParameterScalesFromJacobianMSITIMF3_New():
    return itkRegistrationParameterScalesFromJacobianMSITIMF3.New()

class itkRegistrationParameterScalesFromJacobianMSITIMF3(itkRegistrationParameterScalesFromJacobianMSITIMF3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianMSITIMF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF3_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianMSITIMF3
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianMSITIMF3

        Create a new object of the class itkRegistrationParameterScalesFromJacobianMSITIMF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianMSITIMF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianMSITIMF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianMSITIMF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianMSITIMF3 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF3_swigregister(itkRegistrationParameterScalesFromJacobianMSITIMF3)
itkRegistrationParameterScalesFromJacobianMSITIMF3___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF3___New_orig__
itkRegistrationParameterScalesFromJacobianMSITIMF3_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF3_cast


def itkRegistrationParameterScalesFromJacobianMSITIMF4_New():
    return itkRegistrationParameterScalesFromJacobianMSITIMF4.New()

class itkRegistrationParameterScalesFromJacobianMSITIMF4(itkRegistrationParameterScalesFromJacobianMSITIMF4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianMSITIMF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF4_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianMSITIMF4
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianMSITIMF4

        Create a new object of the class itkRegistrationParameterScalesFromJacobianMSITIMF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianMSITIMF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianMSITIMF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianMSITIMF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianMSITIMF4 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF4_swigregister(itkRegistrationParameterScalesFromJacobianMSITIMF4)
itkRegistrationParameterScalesFromJacobianMSITIMF4___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF4___New_orig__
itkRegistrationParameterScalesFromJacobianMSITIMF4_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianMSITIMF4_cast


def itkRegistrationParameterScalesFromJacobianPSTPSMPSD2_New():
    return itkRegistrationParameterScalesFromJacobianPSTPSMPSD2.New()

class itkRegistrationParameterScalesFromJacobianPSTPSMPSD2(itkRegistrationParameterScalesFromJacobianPSTPSMPSD2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianPSTPSMPSD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD2_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianPSTPSMPSD2
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianPSTPSMPSD2

        Create a new object of the class itkRegistrationParameterScalesFromJacobianPSTPSMPSD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianPSTPSMPSD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianPSTPSMPSD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianPSTPSMPSD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianPSTPSMPSD2 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD2_swigregister(itkRegistrationParameterScalesFromJacobianPSTPSMPSD2)
itkRegistrationParameterScalesFromJacobianPSTPSMPSD2___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD2___New_orig__
itkRegistrationParameterScalesFromJacobianPSTPSMPSD2_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD2_cast


def itkRegistrationParameterScalesFromJacobianPSTPSMPSD3_New():
    return itkRegistrationParameterScalesFromJacobianPSTPSMPSD3.New()

class itkRegistrationParameterScalesFromJacobianPSTPSMPSD3(itkRegistrationParameterScalesFromJacobianPSTPSMPSD3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianPSTPSMPSD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD3_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianPSTPSMPSD3
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianPSTPSMPSD3

        Create a new object of the class itkRegistrationParameterScalesFromJacobianPSTPSMPSD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianPSTPSMPSD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianPSTPSMPSD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianPSTPSMPSD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianPSTPSMPSD3 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD3_swigregister(itkRegistrationParameterScalesFromJacobianPSTPSMPSD3)
itkRegistrationParameterScalesFromJacobianPSTPSMPSD3___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD3___New_orig__
itkRegistrationParameterScalesFromJacobianPSTPSMPSD3_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD3_cast


def itkRegistrationParameterScalesFromJacobianPSTPSMPSD4_New():
    return itkRegistrationParameterScalesFromJacobianPSTPSMPSD4.New()

class itkRegistrationParameterScalesFromJacobianPSTPSMPSD4(itkRegistrationParameterScalesFromJacobianPSTPSMPSD4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianPSTPSMPSD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD4_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianPSTPSMPSD4
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianPSTPSMPSD4

        Create a new object of the class itkRegistrationParameterScalesFromJacobianPSTPSMPSD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianPSTPSMPSD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianPSTPSMPSD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianPSTPSMPSD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianPSTPSMPSD4 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD4_swigregister(itkRegistrationParameterScalesFromJacobianPSTPSMPSD4)
itkRegistrationParameterScalesFromJacobianPSTPSMPSD4___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD4___New_orig__
itkRegistrationParameterScalesFromJacobianPSTPSMPSD4_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSD4_cast


def itkRegistrationParameterScalesFromJacobianPSTPSMPSF2_New():
    return itkRegistrationParameterScalesFromJacobianPSTPSMPSF2.New()

class itkRegistrationParameterScalesFromJacobianPSTPSMPSF2(itkRegistrationParameterScalesFromJacobianPSTPSMPSF2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianPSTPSMPSF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF2_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianPSTPSMPSF2
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianPSTPSMPSF2

        Create a new object of the class itkRegistrationParameterScalesFromJacobianPSTPSMPSF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianPSTPSMPSF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianPSTPSMPSF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianPSTPSMPSF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianPSTPSMPSF2 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF2_swigregister(itkRegistrationParameterScalesFromJacobianPSTPSMPSF2)
itkRegistrationParameterScalesFromJacobianPSTPSMPSF2___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF2___New_orig__
itkRegistrationParameterScalesFromJacobianPSTPSMPSF2_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF2_cast


def itkRegistrationParameterScalesFromJacobianPSTPSMPSF3_New():
    return itkRegistrationParameterScalesFromJacobianPSTPSMPSF3.New()

class itkRegistrationParameterScalesFromJacobianPSTPSMPSF3(itkRegistrationParameterScalesFromJacobianPSTPSMPSF3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianPSTPSMPSF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF3_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianPSTPSMPSF3
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianPSTPSMPSF3

        Create a new object of the class itkRegistrationParameterScalesFromJacobianPSTPSMPSF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianPSTPSMPSF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianPSTPSMPSF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianPSTPSMPSF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianPSTPSMPSF3 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF3_swigregister(itkRegistrationParameterScalesFromJacobianPSTPSMPSF3)
itkRegistrationParameterScalesFromJacobianPSTPSMPSF3___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF3___New_orig__
itkRegistrationParameterScalesFromJacobianPSTPSMPSF3_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF3_cast


def itkRegistrationParameterScalesFromJacobianPSTPSMPSF4_New():
    return itkRegistrationParameterScalesFromJacobianPSTPSMPSF4.New()

class itkRegistrationParameterScalesFromJacobianPSTPSMPSF4(itkRegistrationParameterScalesFromJacobianPSTPSMPSF4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianPSTPSMPSF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF4_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianPSTPSMPSF4
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianPSTPSMPSF4

        Create a new object of the class itkRegistrationParameterScalesFromJacobianPSTPSMPSF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianPSTPSMPSF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianPSTPSMPSF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianPSTPSMPSF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianPSTPSMPSF4 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF4_swigregister(itkRegistrationParameterScalesFromJacobianPSTPSMPSF4)
itkRegistrationParameterScalesFromJacobianPSTPSMPSF4___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF4___New_orig__
itkRegistrationParameterScalesFromJacobianPSTPSMPSF4_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMPSF4_cast


def itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2_New():
    return itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2.New()

class itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2(itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2

        Create a new object of the class itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2_swigregister(itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2)
itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2___New_orig__
itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD2_cast


def itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3_New():
    return itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3.New()

class itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3(itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3

        Create a new object of the class itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3_swigregister(itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3)
itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3___New_orig__
itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD3_cast


def itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4_New():
    return itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4.New()

class itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4(itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4

        Create a new object of the class itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4_swigregister(itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4)
itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4___New_orig__
itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSD4_cast


def itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2_New():
    return itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2.New()

class itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2(itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2

        Create a new object of the class itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2_swigregister(itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2)
itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2___New_orig__
itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF2_cast


def itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3_New():
    return itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3.New()

class itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3(itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3

        Create a new object of the class itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3_swigregister(itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3)
itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3___New_orig__
itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF3_cast


def itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4_New():
    return itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4.New()

class itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4(itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4_Superclass):
    r"""Proxy of C++ itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    __New_orig__ = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4___New_orig__)
    Clone = _swig_new_instance_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4_Clone)
    __swig_destroy__ = _itkRegistrationParameterScalesFromJacobianPython.delete_itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4
    cast = _swig_new_static_method(_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4_cast)

    def New(*args, **kargs):
        """New() -> itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4

        Create a new object of the class itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4 in _itkRegistrationParameterScalesFromJacobianPython:
_itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4_swigregister(itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4)
itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4___New_orig__ = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4___New_orig__
itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4_cast = _itkRegistrationParameterScalesFromJacobianPython.itkRegistrationParameterScalesFromJacobianPSTPSMWIPSF4_cast



