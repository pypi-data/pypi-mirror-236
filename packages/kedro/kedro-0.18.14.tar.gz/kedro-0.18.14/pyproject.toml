# PEP-518 https://peps.python.org/pep-0518/
[build-system]
# Minimum requirements for the build system to execute.
requires = ["setuptools>=65.5.1"]  # PEP 518 specifications
build-backend = "setuptools.build_meta"

[project]
name = "kedro"
authors = [
    {name = "Kedro"}
]
description = "Kedro helps you build production-ready data and analytics pipelines"
requires-python = ">=3.7"
dependencies = [
    "anyconfig>=0.10.0",
    "attrs>=21.3",
    "build>=0.7.0",
    "cachetools>=4.1",
    "click>=4.0",
    "cookiecutter>=2.1.1,<3.0",
    "dynaconf>=3.1.2,<4.0",
    "fsspec>=2021.4",
    "gitpython>=3.0",
    "importlib_metadata>=3.6,<5.0; python_version < '3.8'",  # The "selectable" entry points were introduced in `importlib_metadata` 3.6 and Python 3.10. Bandit on Python 3.7 relies on a library with `importlib_metadata` < 5.0
    "importlib-metadata>=3.6,<7.0; python_version >= '3.8'",
    "importlib_resources>=1.3,<7.0",  # The `files()` API was introduced in `importlib_resources` 1.3 and Python 3.9.
    "jmespath>=0.9.5",
    "more_itertools>=8.14.0",
    "omegaconf>=2.1.1",
    "parse>=1.19.0",
    "pip-tools>=6.5",
    "pluggy>=1.0,<1.3",  # TODO: Uncap when dropping Python 3.7 support, see https://github.com/kedro-org/kedro/issues/2979
    "PyYAML>=4.2,<7.0",
    "rich>=12.0,<14.0",
    "rope>=0.21,<2.0",  # subject to LGPLv3 license
    "setuptools>=65.5.1",
    "toml>=0.10.0",
    "toposort>=1.5",  # Needs to be at least 1.5 to be able to raise CircularDependencyError
]
keywords = [
    "pipelines",
    "machine learning",
    "data pipelines",
    "data science",
    "data engineering",
]
license = {text = "Apache Software License (Apache 2.0)"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
dynamic = ["readme", "version", "optional-dependencies"]

[project.urls]
Homepage = "https://kedro.org"
Source = "https://github.com/kedro-org/kedro"
Documentation = "https://docs.kedro.org"
Tracker = "https://github.com/kedro-org/kedro/issues"

[project.scripts]
kedro = "kedro.framework.cli:main"

[tool.setuptools]
zip-safe = false

[tool.setuptools.packages.find]
include = ["kedro*"]

[tool.setuptools.dynamic]
readme = {file = "README.md", content-type = "text/markdown"}
version = {attr = "kedro.__version__"}

[tool.black]
exclude = "/templates/|^features/steps/test_starter"

[tool.isort]
profile = "black"


[tool.pylint]
[tool.pylint.master]
ignore = "CVS"
ignore-patterns = "kedro/templates/*"
load-plugins = [
    "pylint.extensions.docparams",
    "pylint.extensions.no_self_use"
]
extension-pkg-whitelist = "cv2"
unsafe-load-any-extension = false
[tool.pylint.messages_control]
disable = [
    "ungrouped-imports",
    "duplicate-code",
    "wrong-import-order",  # taken care of by isort
]
enable = ["useless-suppression"]
[tool.pylint.refactoring]
max-nested-blocks = 5
[tool.pylint.format]
indent-after-paren=4
indent-string="    "
[tool.pylint.miscellaneous]
notes = [
    "FIXME",
    "XXX"
]
[tool.pylint.design]
min-public-methods = 1

[tool.coverage.report]
fail_under = 100
show_missing = true
omit = [
    "kedro/templates/*",
    "kedro/extras/logging/color_logger.py",
    "kedro/extras/extensions/ipython.py",
    "kedro/framework/cli/hooks/specs.py",
    "kedro/framework/hooks/specs.py",
    "kedro/extras/datasets/tensorflow/*",
    "kedro/extras/datasets/holoviews/*",
    "tests/*"
]
exclude_lines = ["pragma: no cover", "raise NotImplementedError"]

[tool.pytest.ini_options]
addopts="""
--cov-config pyproject.toml \
--cov-report xml:coverage.xml \
--cov-report term-missing \
--cov kedro \
--cov tests \
--ignore tests/template/fake_repo \
--ignore features \
--ignore kedro/templates \
--no-cov-on-fail \
-ra \
-W ignore"""
testpaths = [
  "tests"
]

[tool.importlinter]
root_package = "kedro"

[[tool.importlinter.contracts]]
name = "CLI > Context > Library, Runner > Extras > IO & Pipeline"
type = "layers"
containers = "kedro"
layers = [
    "framework.cli",
    "framework.session",
    "framework.context",
    "framework.project",
    "runner",
    "extras.datasets",
    "io",
    "pipeline",
    "config"
]
ignore_imports = [
    "kedro.runner.parallel_runner -> kedro.framework.project",
    "kedro.framework.hooks.specs -> kedro.framework.context"
]

[[tool.importlinter.contracts]]
name = "Pipeline and IO are independent"
type = "independence"
modules = [
    "kedro.pipeline",
    "kedro.io"
]

[[tool.importlinter.contracts]]
name = "Config cannot import Runner et al"
type = "forbidden"
source_modules = [
    "kedro.config"
]
forbidden_modules = [
    "kedro.runner",
    "kedro.io",
    "kedro.pipeline",
    "kedro.extras.datasets"
]

[[tool.importlinter.contracts]]
name = "Runner et al cannot import Config"
type = "forbidden"
source_modules = [
    "kedro.runner",
    "kedro.io",
    "kedro.pipeline",
    "kedro.extras.datasets"
]
forbidden_modules = [
    "kedro.config"
]
ignore_imports = [
    "kedro.framework.context.context -> kedro.config",
    "kedro.framework.session.session -> kedro.config"
]

[tool.ruff]
line-length = 88
show-fixes = true
select = [
    "F",   # Pyflakes
    "W",   # pycodestyle
    "E",   # pycodestyle
    "I",   # isort
    "UP",  # pyupgrade
    "PL",  # Pylint
    "T201", # Print Statement
]
ignore = ["E501"]  # Black takes care of line-too-long

[tool.ruff.isort]
known-first-party = ["kedro"]

[tool.ruff.per-file-ignores]
"{tests,docs}/*" = ["PLR2004","PLR0913"]
"{tests,docs,tools,static,features,docs}/*" = ["T201"]  # Check print statement for kedro/ only
