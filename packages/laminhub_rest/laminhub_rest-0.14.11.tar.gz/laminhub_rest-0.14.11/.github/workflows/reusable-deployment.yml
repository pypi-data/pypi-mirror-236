name: Reusable deployment

env:
  PROJECT_ID: data-totality-352303
  GAR_LOCATION: us-central1 # TODO: update Artifact Registry location
  REGION: us-central1 # TODO: update Cloud Run service region
  REPO_NAME: ${{ github.event.repository.name }}
  SERVICE: ${{ vars.CLOUD_RUN_SERVICE_NAME }}
  SUPABASE_API_URL: ${{ vars.SUPABASE_API_URL }}
  SUPABASE_ANON_KEY: ${{ vars.SUPABASE_ANON_KEY }}
  LAMIN_ENV: ${{ vars.LAMIN_ENV }}
  VAULT_SERVER_URL: ${{ vars.VAULT_SERVER_URL }}
  VAULT_ROLE_ID: ${{ vars.VAULT_ROLE_ID }}

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string

jobs:
  deploy:
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
          token: ${{ secrets.GH_TOKEN_DEPLOY_LAMINAPP }}
          fetch-depth: 0

      - name: Google Auth
        id: auth
        uses: "google-github-actions/auth@v1"
        with:
          token_format: "access_token"
          workload_identity_provider: "${{ secrets.GCP_WIF_PROVIDER }}" # e.g. - projects/123456789/locations/global/workloadIdentityPools/my-pool/providers/my-provider
          service_account: "${{ secrets.GCP_WIF_SERVICE_ACCOUNT }}" # e.g. - my-service-account@my-project.iam.gserviceaccount.com
      - name: Docker Auth
        id: docker-auth
        uses: "docker/login-action@v1"
        with:
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"
          registry: "${{ env.GAR_LOCATION }}-docker.pkg.dev"

      - name: Build and Push Container
        run: |-
          docker build -t "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.SERVICE }}:${{ github.sha }}" ./
          docker push "${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.SERVICE }}:${{ github.sha }}"

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPO_NAME }}/${{ env.SERVICE }}:${{ github.sha }}
          env_vars: |
            SUPABASE_API_URL=${{ env.SUPABASE_API_URL }}
            SUPABASE_ANON_KEY=${{ env.SUPABASE_ANON_KEY }}
            VAULT_SERVER_URL=${{ env.VAULT_SERVER_URL }}
            VAULT_ROLE_ID=${{ env.VAULT_ROLE_ID }}
            VAULT_SECRET_ID=${{ secrets.VAULT_SECRET_ID }}
            LAMIN_ENV=${{ env.LAMIN_ENV }}

            SUPABASE_SERVICE_ROLE_KEY=${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
            LNHUB_PG_PASSWORD=${{ secrets.LNHUB_PG_PASSWORD }}
            GH_ACCESS_TOKEN=${{ secrets.GH_ACCESS_TOKEN }}
