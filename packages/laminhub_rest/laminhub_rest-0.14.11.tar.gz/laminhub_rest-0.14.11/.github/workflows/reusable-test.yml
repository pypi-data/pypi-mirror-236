name: Reusable tests

env:
  group: ${{ inputs.group }}
  LAMIN_ENV: ${{ vars.LAMIN_ENV }}

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      group:
        required: true
        type: string

jobs:
  test:
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    timeout-minutes: 25
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
          token: ${{ secrets.GH_TOKEN_DEPLOY_LAMINAPP }}
          fetch-depth: 0

      - uses: supabase/setup-cli@v1
        if: ${{ env.LAMIN_ENV == 'local' }}

      - name: Setup environment variables
        run: |
          echo "SUPABASE_API_URL=${{vars.SUPABASE_API_URL}}" >> $GITHUB_ENV
          echo "SUPABASE_ANON_KEY=${{vars.SUPABASE_ANON_KEY}}" >> $GITHUB_ENV
          echo "SUPABASE_SERVICE_ROLE_KEY=${{secrets.SUPABASE_SERVICE_ROLE_KEY}}" >> $GITHUB_ENV
          echo "LAMIN_HUB_REST_SERVER_URL=${{vars.LAMIN_HUB_REST_SERVER_URL}}" >> $GITHUB_ENV
          echo "VAULT_SERVER_URL=${{vars.VAULT_SERVER_URL}}" >> $GITHUB_ENV
          echo "VAULT_ROLE_ID=${{vars.VAULT_ROLE_ID}}" >> $GITHUB_ENV
          echo "VAULT_SECRET_ID=${{secrets.VAULT_SECRET_ID}}" >> $GITHUB_ENV
          echo "LNHUB_PG_PASSWORD=${{secrets.LNHUB_PG_PASSWORD}}" >> $GITHUB_ENV
          echo "POSTGRES_DSN=${{secrets.POSTGRES_DSN}}" >> $GITHUB_ENV
        if: ${{ env.LAMIN_ENV != 'local' }}

      - name: Setup environment variables
        run: |
          echo "VAULT_SERVER_URL=${{vars.VAULT_SERVER_URL}}" >> $GITHUB_ENV
          echo "VAULT_ROLE_ID=${{vars.VAULT_ROLE_ID}}" >> $GITHUB_ENV
          echo "VAULT_SECRET_ID=${{secrets.VAULT_SECRET_ID}}" >> $GITHUB_ENV
        if: ${{ env.LAMIN_ENV == 'local' }}

      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          cache: "pip"
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: pre-commit-${{ runner.os }}-${{ hashFiles('.pre-commit-config.yaml') }}
      - name: install CI deps
        run: |
          python -m pip install -U pip
          pip install -U laminci

      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - run: nox -s test
        if: ${{ env.group == 'laminhub-rest' }}

      - uses: actions/upload-artifact@v2
        with:
          name: coverage--${{ env.group }}--${{ env.LAMIN_ENV }}
          path: .coverage
