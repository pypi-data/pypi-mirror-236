# Code generated by Lark OpenAPI.

from typing import Optional

from lark_oapi.core.construct import init


class MyAiVcRoomRequestCommonParam(object):
    _types = {
        "language": str,
        "utc_offset": str,
    }

    def __init__(self, d=None):
        self.language: Optional[str] = None
        self.utc_offset: Optional[str] = None
        init(self, d, self._types)

    @staticmethod
    def builder() -> "MyAiVcRoomRequestCommonParamBuilder":
        return MyAiVcRoomRequestCommonParamBuilder()


class MyAiVcRoomRequestCommonParamBuilder(object):
    def __init__(self) -> None:
        self._my_ai_vc_room_request_common_param = MyAiVcRoomRequestCommonParam()

    def language(self, language: str) -> "MyAiVcRoomRequestCommonParamBuilder":
        self._my_ai_vc_room_request_common_param.language = language
        return self

    def utc_offset(self, utc_offset: str) -> "MyAiVcRoomRequestCommonParamBuilder":
        self._my_ai_vc_room_request_common_param.utc_offset = utc_offset
        return self

    def build(self) -> "MyAiVcRoomRequestCommonParam":
        return self._my_ai_vc_room_request_common_param
