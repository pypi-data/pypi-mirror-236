Metadata-Version: 2.1
Name: linearinit
Version: 0.2.0
Summary: nn.linear with initialization created by nxdens
Home-page: https://github.com/nxdens/linearInit/
Author: nxdens
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: torch >=2.0.1
Requires-Dist: pytest >=7.1.0
Requires-Dist: numpy >=1.24.1
Requires-Dist: coverage
Requires-Dist: flake8
Requires-Dist: black
Requires-Dist: isort
Requires-Dist: pytest-cov
Requires-Dist: mypy
Requires-Dist: gitchangelog
Requires-Dist: mkdocs
Provides-Extra: test
Requires-Dist: pytest ; extra == 'test'
Requires-Dist: coverage ; extra == 'test'
Requires-Dist: flake8 ; extra == 'test'
Requires-Dist: black ; extra == 'test'
Requires-Dist: isort ; extra == 'test'
Requires-Dist: pytest-cov ; extra == 'test'
Requires-Dist: mypy ; extra == 'test'
Requires-Dist: gitchangelog ; extra == 'test'
Requires-Dist: mkdocs ; extra == 'test'

# linearinit

[![codecov](https://codecov.io/gh/nxdens/linearInit/branch/main/graph/badge.svg?token=linearInit_token_here)](https://codecov.io/gh/nxdens/linearInit)
[![CI](https://github.com/nxdens/linearInit/actions/workflows/main.yml/badge.svg)](https://github.com/nxdens/linearInit/actions/workflows/main.yml)

Creates an Fully connect network from nn.linear layers with a given activation. The layer is initialized based on the activation function chosen. 

## Install it from PyPI

```bash
pip install linearinit
```

## Usage

```py
from linearinit.base import FullyConnectedLayers
from linearinit.base import LinearWithInit

fcn = FullyConnectedLayers(layer_sizes=[1, 2, 3], activation=nn.LeakyReLU(), bias=True)
```
