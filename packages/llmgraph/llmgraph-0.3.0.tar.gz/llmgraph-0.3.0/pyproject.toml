[tool.poetry]
name = "llmgraph"
version = "0.3.0"
description = "LLM created knowledge graphs"
authors = ["Dylan Hogg <dylanhogg@gmail.com>"]
license = "MIT"
readme = "README.md"
include = ["prompts.yaml"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "^3.9"
openai = "^0.28.1"
httpx = "^0.25.0"
networkx = "^3.1"
beautifulsoup4 = "^4.12.2"
pyvis = "^0.3.2"
joblib = "^1.3.2"
tenacity = "^8.2.3"
omegaconf = "^2.3.0"
matplotlib = "^3.8.0"
python-dotenv = "^1.0.0"
click = "^8.1.7"
typer = "^0.9.0"
rich = "^13.6.0"
tqdm = "^4.66.1"
loguru = "^0.7.2"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.2"
black = "^23.9.1"
ruff = "^0.0.292"
coverage = "^7.3.2"
pre-commit = "^3.4.0"

[tool.poetry.scripts]
llmgraph = 'llmgraph.console:typer_app'

[tool.black]
line-length = 120
target-version = ['py38']

[tool.ruff]
# https://docs.astral.sh/ruff/rules/
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "C90", # mccabe complexity
]
ignore = [
    "E501", # line too long, handled by black
    "D203", # 1 blank line required before class docstring
]
line-length = 120
extend-exclude = [".joblib_cache"]
fixable = ["ALL"]
unfixable = []
target-version = "py38"
