# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class RelatedObjectTypeEnum(str, enum.Enum):
    """
    * `INVOICE` - INVOICE
    * `CREDIT_NOTE` - CREDIT_NOTE
    * `JOURNAL_ENTRY` - JOURNAL_ENTRY
    * `NONE` - NONE
    """

    INVOICE = "INVOICE"
    CREDIT_NOTE = "CREDIT_NOTE"
    JOURNAL_ENTRY = "JOURNAL_ENTRY"
    NONE = "NONE"

    def visit(
        self,
        invoice: typing.Callable[[], T_Result],
        credit_note: typing.Callable[[], T_Result],
        journal_entry: typing.Callable[[], T_Result],
        none: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is RelatedObjectTypeEnum.INVOICE:
            return invoice()
        if self is RelatedObjectTypeEnum.CREDIT_NOTE:
            return credit_note()
        if self is RelatedObjectTypeEnum.JOURNAL_ENTRY:
            return journal_entry()
        if self is RelatedObjectTypeEnum.NONE:
            return none()
