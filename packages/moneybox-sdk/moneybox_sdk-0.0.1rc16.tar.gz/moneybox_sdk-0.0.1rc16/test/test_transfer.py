# coding: utf-8

"""
    MoneyBox

    MoneyBox will help you better understand your finances, improve financial literacy, and achieve financial goals.

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.transfer import Transfer  # noqa: E501

class TestTransfer(unittest.TestCase):
    """Transfer unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Transfer:
        """Test Transfer
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Transfer`
        """
        model = Transfer()  # noqa: E501
        if include_optional:
            return Transfer(
                id = 56,
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                is_deleted = True,
                amount = '-80728880',
                comment = '',
                from_wallet = 56,
                to_wallet = 56,
                created_by = 56,
                group = 56
            )
        else:
            return Transfer(
                id = 56,
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                amount = '-80728880',
                from_wallet = 56,
                to_wallet = 56,
                created_by = 56,
                group = 56,
        )
        """

    def testTransfer(self):
        """Test Transfer"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
