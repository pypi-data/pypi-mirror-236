[
    {
        "role": "user",
        "content": "# file name: save.py\nimport creator\nfrom creator.schema.skill import CodeSkill\n\n\ndef save(skill: CodeSkill, huggingface_repo_id: str = None, skill_path: str = None):\n    \"\"\"\n    Save a skill to a local path or a huggingface repo.\n    \n    Parameters:\n    skill: CodeSkill object, the skill to be saved.\n    huggingface_repo_id: str, optional, the ID of the huggingface repo. If provided, the skill will be saved to this repo.\n    skill_path: str, optional, the local path. If provided, the skill will be saved to this path.\n    \n    Returns:\n    None\n    \n    Usage examples:\n    ```python\n    >>> import creator\n    >>> import os\n    >>> skill_json_path = os.path.expanduser(\"~\") + \"/.cache/open_creator/skill_library/ask_run_code_confirm/skill.json\"\n    >>> skill = creator.create(skill_json_path=skill_json_path)\n    >>> creator.save(skill=skill, huggingface_repo_id=\"ChuxiJ/skill_library\")\n    ```\n    or\n    ```python\n    >>> import creator\n    >>> import os\n    >>> skill_json_path = os.path.expanduser(\"~\") + \"/.cache/open_creator/skill_library/ask_run_code_confirm/skill.json\"\n    >>> skill = creator.create(skill_json_path=skill_json_path)\n    >>> creator.save(skill=skill, skill_path=\"/path/to/save\")\n    ```\n    \"\"\"\n    if huggingface_repo_id is not None:\n        creator.save_to_hub(skill=skill, huggingface_repo_id=huggingface_repo_id)\n    elif skill_path is not None:\n        creator.save_to_skill_path(skill=skill, skill_path=skill_path)\n    else:\n        raise ValueError(\"Either huggingface_repo_id or skill_path must be provided.\")\n    \n"
    }
]