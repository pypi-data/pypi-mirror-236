"""
███╗   ███╗ █████╗ ████████╗ ██████╗██╗  ██╗██████╗ ███████╗███████╗██╗   ██╗██╗  ████████╗██████╗ ██╗   ██╗
████╗ ████║██╔══██╗╚══██╔══╝██╔════╝██║  ██║██╔══██╗██╔════╝██╔════╝██║   ██║██║  ╚══██╔══╝██╔══██╗╚██╗ ██╔╝
██╔████╔██║███████║   ██║   ██║     ███████║██████╔╝█████╗  ███████╗██║   ██║██║     ██║   ██████╔╝ ╚████╔╝ 
██║╚██╔╝██║██╔══██║   ██║   ██║     ██╔══██║██╔══██╗██╔══╝  ╚════██║██║   ██║██║     ██║   ██╔═══╝   ╚██╔╝  
██║ ╚═╝ ██║██║  ██║   ██║   ╚██████╗██║  ██║██║  ██║███████╗███████║╚██████╔╝███████╗██║██╗██║        ██║   
╚═╝     ╚═╝╚═╝  ╚═╝   ╚═╝    ╚═════╝╚═╝  ╚═╝╚═╝  ╚═╝╚══════╝╚══════╝ ╚═════╝ ╚══════╝╚═╝╚═╝╚═╝        ╚═╝   

This is a wrapper for entries generated by the table "match" method. It provides some basic functionality
like the ability to lazy-load the actual data item (via Doc) and retains a link back to the actual 
search result.
"""
from typing import TypeVar
from orbit_database.index import Index
from orbit_database.doc import Doc
from lmdb import Transaction

Table = TypeVar('Table')


class MatchResult:
    """
    Match result instance
    
    o doc - return a usable state record relating to the actual search result
    """
    @property
    def doc(self) -> Doc:
        """
        Returns a Doc object representing the data pointed to by this search result
        """
        if not self._dat:
            self._oid = self._index.get_oid(self._result, self._txn)
            self._dat = self._txn.get(self._oid, db=self._table._db)
        return Doc(None, self._oid, self._table._decompressor(self._dat), integerkey=self._table.integerkey)

    def __init__(self, table: Table, index: Index, result: int, txn: Transaction) -> None:
        """
        Instantiate a new search result
        
        table - the table this result came from
        index - the index within the (table) this result came from
        result - the number of matches there were for this result
        txn - and optional transaction wrapper
        """
        self._table = table
        self._index = index
        self._result = result
        self._txn = txn
        self._dat = None
