Metadata-Version: 2.1
Name: orquestra-qulacs
Version: 0.8.0
Summary: "Orquestra Qulacs package"
Home-page: https://github.com/zapatacomputing/orquestra-qulacs
Author: Zapata Computing Inc.
Author-email: info@zapatacomputing.com,
License: Apache Software License 2.0
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Topic :: Scientific/Engineering
Requires-Python: !=3.9.7,>=3.9
Description-Content-Type: text/markdown; charset=UTF-8
License-File: LICENSE
Requires-Dist: numpy>=1.20
Requires-Dist: scipy>=1.4.1
Requires-Dist: sympy<=1.9,>=1.5
Requires-Dist: cmake>=3.18
Requires-Dist: qulacs~=0.5.0
Requires-Dist: orquestra-quantum
Provides-Extra: dev
Requires-Dist: orquestra-python-dev; extra == "dev"

# orquestra-qulacs

## What is it?

`orquestra-qulacs` is a [Zapata](https://www.zapatacomputing.com) library holding modules for integrating qulacs with [Orquestra](https://www.zapatacomputing.com/orquestra/).

## Installation

Even though it's intended to be used with Orquestra, `orquestra-qulacs` can be also used as a Python module.
Just run `pip install .` from the main directory.

## Usage

`orquestra-qulacs` is a Python module that exposes Qulacs's simulators as an [`QuantumSimulator`](https://github.com/zapatacomputing/orquestra-quantum/blob/main/src/orquestra/quantum/api/backend.py) compatible with [Orquestra Core framework](https://github.com/zapatacomputing/orquestra-core). It can be imported with:

```
from orquestra.integrations.qulacs.simulator import QulacsSimulator
```

In addition, it also provides converters that allow switching between `qulacs` circuits and those of `orquestra`.

The module can be used directly in Python or in an [Orquestra](https://www.orquestra.io) workflow.
For more details, see the [Orquestra Qulacs integration docs](http://docs.orquestra.io/other-resources/framework-integrations/qulacs/).

For more information regarding Orquestra and resources, please refer to the [Orquestra documentation](https://www.orquestra.io/docs).

## Development and contribution

You can find the development guidelines in the [`orquestra-quantum` repository](https://github.com/zapatacomputing/orquestra-quantum).
