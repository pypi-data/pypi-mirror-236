"use strict";(globalThis["webpackChunkphotobooth_app_frontend"]=globalThis["webpackChunkphotobooth_app_frontend"]||[]).push([[53],{84053:(e,o,l)=>{l.r(o),l.d(o,{default:()=>z});var t=l(59835),r=l(86970);const n={class:"q-mt-md row justify-center"},s={class:"col-12 col-md-8 q-mb-xl"},a={class:"text-h5"},i={class:"col-12 col-md-8 q-mb-xl"},c={class:"q-gutter-sm"};function m(e,o,l,m,u,p){const g=(0,t.up)("q-tab"),d=(0,t.up)("q-tabs"),f=(0,t.up)("q-separator"),b=(0,t.up)("BlitzForm"),v=(0,t.up)("q-btn"),h=(0,t.up)("q-page-sticky"),y=(0,t.up)("q-page");return(0,t.wg)(),(0,t.j4)(y,{padding:""},{default:(0,t.w5)((()=>[(0,t.Wm)(d,{modelValue:m.selected_group,"onUpdate:modelValue":o[0]||(o[0]=e=>m.selected_group=e),class:"text-grey","active-color":"secondary","indicator-color":"secondary","mobile-arrows":"",align:"justify"},{default:(0,t.w5)((()=>[((0,t.wg)(!0),(0,t.iD)(t.HY,null,(0,t.Ko)(m.main_groups,(e=>((0,t.wg)(),(0,t.j4)(g,{key:e,label:e,name:e},null,8,["label","name"])))),128))])),_:1},8,["modelValue"]),(0,t.Wm)(f),(0,t._)("div",n,[(0,t._)("div",s,[(0,t._)("div",a,(0,r.zw)(m.group_title),1),(0,t._)("p",null,(0,r.zw)(m.group_description),1)]),(0,t._)("div",i,[m.renderBlitzForm?((0,t.wg)(),(0,t.j4)(b,{modelValue:m.serverConfig[m.selected_group],"onUpdate:modelValue":o[1]||(o[1]=e=>m.serverConfig[m.selected_group]=e),key:m.selected_group,schema:m.schema_blitzar,internalLabels:!1,"label-position":"left",class:"blitzar-form"},null,8,["modelValue","schema"])):(0,t.kq)("",!0)])]),(0,t.Wm)(h,{position:"bottom-right",offset:[25,25]},{default:(0,t.w5)((()=>[(0,t._)("div",c,[(0,t.Wm)(v,{label:"reset",onClick:o[2]||(o[2]=e=>m.remoteProcedureCall("/config/reset"))}),(0,t.Wm)(v,{label:"restore",onClick:o[3]||(o[3]=e=>m.getConfig("current"))}),(0,t.Wm)(v,{color:"primary",label:"persist",onClick:o[4]||(o[4]=e=>m.uploadConfigAndPersist())})])])),_:1})])),_:1})}l(69665);var u=l(60499),p=l(91569),g=l(19302),d=l(96694),f=l(32395);const b={components:{BlitzForm:f.lU,BlitzListForm:f.$C},setup(){const e=(0,g.Z)(),o=(0,u.iH)({});let l={};const r=(0,u.iH)([]),n=(0,u.iH)(!1),s=(0,u.iH)(""),a=(0,d.R)(),i=(0,t.Fl)((()=>""!=s.value?l[s.value]["allOf"][0]["title"]:"-")),c=(0,t.Fl)((()=>""!=s.value?l[s.value]["allOf"][0]["description"]:"-")),m=(0,t.Fl)((()=>""!=s.value?f(l[s.value]):[])),f=e=>{const o=e=>e.replace(/[&<>'"]/g,(e=>({"&":"&amp;","<":"&lt;",">":"&gt;","'":"&#39;",'"':"&quot;"}[e]))),l=(e,l)=>{let t={id:e,label:l["title"],component:"QInput",filled:!0};return"boolean"==l["type"]&&(t["component"]="QToggle"),"integer"!=l["type"]&&"float"!=l["type"]||(t["component"]="QInput",l["ui_component"]&&(t["component"]=l["ui_component"]),t["type"]="number",t["labelAlways"]=!0,l["exclusiveMinimum"]&&(t["min"]=l["exclusiveMinimum"]),l["exclusiveMaximum"]&&(t["max"]=l["exclusiveMaximum"]),l["minimum"]&&(t["min"]=l["minimum"]),l["maximum"]&&(t["max"]=l["maximum"])),l["allOf"]&&Object.keys(l["allOf"][0]).includes("enum")&&(t["component"]="QSelect",t["options"]=l["allOf"][0]["enum"]),t["subLabel"]=`${l["description"]||""} (default=${o(("default"in l?l["default"]:"undefined").toString())})`,t};console.log("creating blitzar schema"),console.log(e);let t=[];return"allOf"in e?Object.entries(e["allOf"][0]["properties"]).forEach((e=>{const[o,r]=e;let n=l(o,r);"array"==r["type"]&&r["items"]&&"object"==r["items"]["type"]?(n["component"]="BlitzListForm",n["schema"]=[],Object.entries(r["items"]["properties"]).forEach((e=>{const[o,t]=e;n["schema"].push(l(o,t))}))):"array"==r["type"]&&r["items"]&&r["items"]["enum"]&&"string"==r["items"]["type"]&&(n["component"]="QSelect",n["multiple"]=!0,n["use-chips"]=!0,n["stack-label"]=!0,n["options"]=r["items"]["enum"]),t.push(n)})):console.log("error, wrong format!, no direct props on main level"),console.log(t),t},b=()=>{p.api.get("/config/schema?schema_type=dereferenced").then((async e=>{console.log(e.data),l=e.data.properties,r.value=Object.keys(l),s.value=r.value[0]})).catch((o=>{console.log(o),console.log("error"),e.notify({message:"error getting scheme! check logs",color:"red"})}))},v=(l="current")=>{n.value=!1,p.api.get(`/config/${l}`).then((async t=>{console.log(t.data),console.log(o.value),o.value=t.data,n.value=!0,e.notify({message:`${l} config loaded from server`,color:"green"})})).catch((o=>{console.log(o),console.log("error"),e.notify({message:"error getting config!",color:"red"})}))};b(),v("currentActive");const h=()=>{console.log("sync config to server"),console.log(o.value),p.api.post("/config/current",o.value).then((o=>{a.initStore(!0),e.notify({message:"Config persisted and reloaded from server. If changed hardware settings, pls reload/restart services!",color:"green"})})).catch((o=>{if(o.response){let l="check following fields:<br/>";return Object.values(o.response.data.detail).forEach((e=>{l+=e["loc"].join(" -> "),l+=`: ${e["msg"]}`,l+="<br/>"})),void e.notify({caption:"validation error",icon:"error",html:!0,message:`${l}`,color:"red"})}o.request?console.error(o.request):console.error("Error",o.message),e.notify({message:"error saving config, check browser console and logs",color:"red"})}))};return(0,t.wF)((()=>console.log("Composition API beforemounted"))),(0,t.bv)((()=>console.log("Composition API mounted"))),{schema_blitzar:m,renderBlitzForm:n,main_groups:r,group_title:i,group_description:c,selected_group:s,serverConfig:o,remoteProcedureCall:p.remoteProcedureCall,getConfig:v,uploadConfigAndPersist:h}}};var v=l(11639),h=l(69885),y=l(47817),_=l(57661),w=l(50926),C=l(30627),k=l(68879),q=l(69984),x=l.n(q);const j=(0,v.Z)(b,[["render",m]]),z=j;x()(b,"components",{QPage:h.Z,QTabs:y.Z,QTab:_.Z,QSeparator:w.Z,QPageSticky:C.Z,QBtn:k.Z})}}]);