# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs

__all__ = [
    'GetSnapshotsResult',
    'AwaitableGetSnapshotsResult',
    'get_snapshots',
    'get_snapshots_output',
]

@pulumi.output_type
class GetSnapshotsResult:
    """
    A collection of values returned by getSnapshots.
    """
    def __init__(__self__, block_device_id=None, id=None, snapshots=None):
        if block_device_id and not isinstance(block_device_id, str):
            raise TypeError("Expected argument 'block_device_id' to be a str")
        pulumi.set(__self__, "block_device_id", block_device_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if snapshots and not isinstance(snapshots, list):
            raise TypeError("Expected argument 'snapshots' to be a list")
        pulumi.set(__self__, "snapshots", snapshots)

    @property
    @pulumi.getter(name="blockDeviceId")
    def block_device_id(self) -> str:
        return pulumi.get(self, "block_device_id")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def snapshots(self) -> Sequence['outputs.GetSnapshotsSnapshotResult']:
        return pulumi.get(self, "snapshots")


class AwaitableGetSnapshotsResult(GetSnapshotsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSnapshotsResult(
            block_device_id=self.block_device_id,
            id=self.id,
            snapshots=self.snapshots)


def get_snapshots(block_device_id: Optional[str] = None,
                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSnapshotsResult:
    """
    ## ---layout: "vra"

    page_title: "VMware vRealize Automation: blockdevice.get_snapshots"
    description: |-
      Provides a data lookup for vra_block_device_snapshots.
    ---

    # Data Source: blockdevice.get_snapshots
    ## Example Usage
    """
    __args__ = dict()
    __args__['blockDeviceId'] = block_device_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('vra:blockdevice/getSnapshots:getSnapshots', __args__, opts=opts, typ=GetSnapshotsResult).value

    return AwaitableGetSnapshotsResult(
        block_device_id=__ret__.block_device_id,
        id=__ret__.id,
        snapshots=__ret__.snapshots)


@_utilities.lift_output_func(get_snapshots)
def get_snapshots_output(block_device_id: Optional[pulumi.Input[str]] = None,
                         opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetSnapshotsResult]:
    """
    ## ---layout: "vra"

    page_title: "VMware vRealize Automation: blockdevice.get_snapshots"
    description: |-
      Provides a data lookup for vra_block_device_snapshots.
    ---

    # Data Source: blockdevice.get_snapshots
    ## Example Usage
    """
    ...
