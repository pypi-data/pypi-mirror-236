# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetDataCollectorResult',
    'AwaitableGetDataCollectorResult',
    'get_data_collector',
    'get_data_collector_output',
]

@pulumi.output_type
class GetDataCollectorResult:
    """
    A collection of values returned by getDataCollector.
    """
    def __init__(__self__, hostname=None, id=None, ip_address=None, name=None, status=None):
        if hostname and not isinstance(hostname, str):
            raise TypeError("Expected argument 'hostname' to be a str")
        pulumi.set(__self__, "hostname", hostname)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if ip_address and not isinstance(ip_address, str):
            raise TypeError("Expected argument 'ip_address' to be a str")
        pulumi.set(__self__, "ip_address", ip_address)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if status and not isinstance(status, str):
            raise TypeError("Expected argument 'status' to be a str")
        pulumi.set(__self__, "status", status)

    @property
    @pulumi.getter
    def hostname(self) -> str:
        """
        Data collector host name. Example: dc1-lnd.mycompany.com
        """
        return pulumi.get(self, "hostname")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter(name="ipAddress")
    def ip_address(self) -> str:
        """
        IPv4 Address of the data collector VM. Example: 10.0.0.1
        """
        return pulumi.get(self, "ip_address")

    @property
    @pulumi.getter
    def name(self) -> str:
        return pulumi.get(self, "name")

    @property
    @pulumi.getter
    def status(self) -> str:
        """
        Current status of the data collector. Example: ACTIVE, INACTIVE
        """
        return pulumi.get(self, "status")


class AwaitableGetDataCollectorResult(GetDataCollectorResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetDataCollectorResult(
            hostname=self.hostname,
            id=self.id,
            ip_address=self.ip_address,
            name=self.name,
            status=self.status)


def get_data_collector(name: Optional[str] = None,
                       opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetDataCollectorResult:
    """
    ## Example Usage
    ### S

    This is an example of how to lookup a data collector.

    **Data collector data source by its name:**
    ```python
    import pulumi
    import pulumi_vra as vra

    this = vra.datacollector.get_data_collector(name=var["data_collector_name"])
    ```
    The data collector data source supports the following arguments:


    :param str name: Data collector name. Example: Datacollector1
    """
    __args__ = dict()
    __args__['name'] = name
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('vra:datacollector/getDataCollector:getDataCollector', __args__, opts=opts, typ=GetDataCollectorResult).value

    return AwaitableGetDataCollectorResult(
        hostname=__ret__.hostname,
        id=__ret__.id,
        ip_address=__ret__.ip_address,
        name=__ret__.name,
        status=__ret__.status)


@_utilities.lift_output_func(get_data_collector)
def get_data_collector_output(name: Optional[pulumi.Input[str]] = None,
                              opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetDataCollectorResult]:
    """
    ## Example Usage
    ### S

    This is an example of how to lookup a data collector.

    **Data collector data source by its name:**
    ```python
    import pulumi
    import pulumi_vra as vra

    this = vra.datacollector.get_data_collector(name=var["data_collector_name"])
    ```
    The data collector data source supports the following arguments:


    :param str name: Data collector name. Example: Datacollector1
    """
    ...
