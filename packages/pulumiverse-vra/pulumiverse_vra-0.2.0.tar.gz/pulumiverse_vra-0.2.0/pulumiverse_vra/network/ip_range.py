# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities
from . import outputs
from ._inputs import *

__all__ = ['IpRangeArgs', 'IpRange']

@pulumi.input_type
class IpRangeArgs:
    def __init__(__self__, *,
                 end_ip_address: pulumi.Input[str],
                 ip_version: pulumi.Input[str],
                 start_ip_address: pulumi.Input[str],
                 description: Optional[pulumi.Input[str]] = None,
                 fabric_network_id: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input['IpRangeTagArgs']]]] = None):
        """
        The set of arguments for constructing a IpRange resource.
        :param pulumi.Input[str] end_ip_address: End IP address of the range.
        :param pulumi.Input[str] ip_version: IP address version: IPv4 or IPv6. Default: IPv4.
        :param pulumi.Input[str] start_ip_address: Start IP address of the range.
        :param pulumi.Input[str] description: State object representing a network on a external cloud provider.
        :param pulumi.Input[str] fabric_network_id: Fabric network Id.
        :param pulumi.Input[str] name: A human-friendly name used as an identifier in APIs that support this option.
        :param pulumi.Input[Sequence[pulumi.Input['IpRangeTagArgs']]] tags: Set of tag keys and values to apply to the resource.
               Example:[ { "key" : "vmware", "value": "provider" } ]
        """
        pulumi.set(__self__, "end_ip_address", end_ip_address)
        pulumi.set(__self__, "ip_version", ip_version)
        pulumi.set(__self__, "start_ip_address", start_ip_address)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if fabric_network_id is not None:
            pulumi.set(__self__, "fabric_network_id", fabric_network_id)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)

    @property
    @pulumi.getter(name="endIpAddress")
    def end_ip_address(self) -> pulumi.Input[str]:
        """
        End IP address of the range.
        """
        return pulumi.get(self, "end_ip_address")

    @end_ip_address.setter
    def end_ip_address(self, value: pulumi.Input[str]):
        pulumi.set(self, "end_ip_address", value)

    @property
    @pulumi.getter(name="ipVersion")
    def ip_version(self) -> pulumi.Input[str]:
        """
        IP address version: IPv4 or IPv6. Default: IPv4.
        """
        return pulumi.get(self, "ip_version")

    @ip_version.setter
    def ip_version(self, value: pulumi.Input[str]):
        pulumi.set(self, "ip_version", value)

    @property
    @pulumi.getter(name="startIpAddress")
    def start_ip_address(self) -> pulumi.Input[str]:
        """
        Start IP address of the range.
        """
        return pulumi.get(self, "start_ip_address")

    @start_ip_address.setter
    def start_ip_address(self, value: pulumi.Input[str]):
        pulumi.set(self, "start_ip_address", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        State object representing a network on a external cloud provider.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="fabricNetworkId")
    def fabric_network_id(self) -> Optional[pulumi.Input[str]]:
        """
        Fabric network Id.
        """
        return pulumi.get(self, "fabric_network_id")

    @fabric_network_id.setter
    def fabric_network_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "fabric_network_id", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        A human-friendly name used as an identifier in APIs that support this option.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['IpRangeTagArgs']]]]:
        """
        Set of tag keys and values to apply to the resource.
        Example:[ { "key" : "vmware", "value": "provider" } ]
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['IpRangeTagArgs']]]]):
        pulumi.set(self, "tags", value)


@pulumi.input_type
class _IpRangeState:
    def __init__(__self__, *,
                 created_at: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 end_ip_address: Optional[pulumi.Input[str]] = None,
                 external_id: Optional[pulumi.Input[str]] = None,
                 fabric_network_id: Optional[pulumi.Input[str]] = None,
                 ip_version: Optional[pulumi.Input[str]] = None,
                 links: Optional[pulumi.Input[Sequence[pulumi.Input['IpRangeLinkArgs']]]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 org_id: Optional[pulumi.Input[str]] = None,
                 start_ip_address: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input['IpRangeTagArgs']]]] = None,
                 updated_at: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering IpRange resources.
        :param pulumi.Input[str] created_at: Date when the entity was created. The date is in ISO 6801 and UTC.
        :param pulumi.Input[str] description: State object representing a network on a external cloud provider.
        :param pulumi.Input[str] end_ip_address: End IP address of the range.
        :param pulumi.Input[str] external_id: External entity Id on the provider side.
        :param pulumi.Input[str] fabric_network_id: Fabric network Id.
        :param pulumi.Input[str] ip_version: IP address version: IPv4 or IPv6. Default: IPv4.
        :param pulumi.Input[Sequence[pulumi.Input['IpRangeLinkArgs']]] links: HATEOAS of the entity
        :param pulumi.Input[str] name: A human-friendly name used as an identifier in APIs that support this option.
        :param pulumi.Input[str] org_id: ID of organization that entity belongs to.
        :param pulumi.Input[str] start_ip_address: Start IP address of the range.
        :param pulumi.Input[Sequence[pulumi.Input['IpRangeTagArgs']]] tags: Set of tag keys and values to apply to the resource.
               Example:[ { "key" : "vmware", "value": "provider" } ]
        :param pulumi.Input[str] updated_at: Date when the entity was last updated. The date is ISO 8601 and UTC.
        """
        if created_at is not None:
            pulumi.set(__self__, "created_at", created_at)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if end_ip_address is not None:
            pulumi.set(__self__, "end_ip_address", end_ip_address)
        if external_id is not None:
            pulumi.set(__self__, "external_id", external_id)
        if fabric_network_id is not None:
            pulumi.set(__self__, "fabric_network_id", fabric_network_id)
        if ip_version is not None:
            pulumi.set(__self__, "ip_version", ip_version)
        if links is not None:
            pulumi.set(__self__, "links", links)
        if name is not None:
            pulumi.set(__self__, "name", name)
        if org_id is not None:
            pulumi.set(__self__, "org_id", org_id)
        if start_ip_address is not None:
            pulumi.set(__self__, "start_ip_address", start_ip_address)
        if tags is not None:
            pulumi.set(__self__, "tags", tags)
        if updated_at is not None:
            pulumi.set(__self__, "updated_at", updated_at)

    @property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> Optional[pulumi.Input[str]]:
        """
        Date when the entity was created. The date is in ISO 6801 and UTC.
        """
        return pulumi.get(self, "created_at")

    @created_at.setter
    def created_at(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "created_at", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        State object representing a network on a external cloud provider.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter(name="endIpAddress")
    def end_ip_address(self) -> Optional[pulumi.Input[str]]:
        """
        End IP address of the range.
        """
        return pulumi.get(self, "end_ip_address")

    @end_ip_address.setter
    def end_ip_address(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "end_ip_address", value)

    @property
    @pulumi.getter(name="externalId")
    def external_id(self) -> Optional[pulumi.Input[str]]:
        """
        External entity Id on the provider side.
        """
        return pulumi.get(self, "external_id")

    @external_id.setter
    def external_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "external_id", value)

    @property
    @pulumi.getter(name="fabricNetworkId")
    def fabric_network_id(self) -> Optional[pulumi.Input[str]]:
        """
        Fabric network Id.
        """
        return pulumi.get(self, "fabric_network_id")

    @fabric_network_id.setter
    def fabric_network_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "fabric_network_id", value)

    @property
    @pulumi.getter(name="ipVersion")
    def ip_version(self) -> Optional[pulumi.Input[str]]:
        """
        IP address version: IPv4 or IPv6. Default: IPv4.
        """
        return pulumi.get(self, "ip_version")

    @ip_version.setter
    def ip_version(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "ip_version", value)

    @property
    @pulumi.getter
    def links(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['IpRangeLinkArgs']]]]:
        """
        HATEOAS of the entity
        """
        return pulumi.get(self, "links")

    @links.setter
    def links(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['IpRangeLinkArgs']]]]):
        pulumi.set(self, "links", value)

    @property
    @pulumi.getter
    def name(self) -> Optional[pulumi.Input[str]]:
        """
        A human-friendly name used as an identifier in APIs that support this option.
        """
        return pulumi.get(self, "name")

    @name.setter
    def name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "name", value)

    @property
    @pulumi.getter(name="orgId")
    def org_id(self) -> Optional[pulumi.Input[str]]:
        """
        ID of organization that entity belongs to.
        """
        return pulumi.get(self, "org_id")

    @org_id.setter
    def org_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "org_id", value)

    @property
    @pulumi.getter(name="startIpAddress")
    def start_ip_address(self) -> Optional[pulumi.Input[str]]:
        """
        Start IP address of the range.
        """
        return pulumi.get(self, "start_ip_address")

    @start_ip_address.setter
    def start_ip_address(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "start_ip_address", value)

    @property
    @pulumi.getter
    def tags(self) -> Optional[pulumi.Input[Sequence[pulumi.Input['IpRangeTagArgs']]]]:
        """
        Set of tag keys and values to apply to the resource.
        Example:[ { "key" : "vmware", "value": "provider" } ]
        """
        return pulumi.get(self, "tags")

    @tags.setter
    def tags(self, value: Optional[pulumi.Input[Sequence[pulumi.Input['IpRangeTagArgs']]]]):
        pulumi.set(self, "tags", value)

    @property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> Optional[pulumi.Input[str]]:
        """
        Date when the entity was last updated. The date is ISO 8601 and UTC.
        """
        return pulumi.get(self, "updated_at")

    @updated_at.setter
    def updated_at(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "updated_at", value)


class IpRange(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 end_ip_address: Optional[pulumi.Input[str]] = None,
                 fabric_network_id: Optional[pulumi.Input[str]] = None,
                 ip_version: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 start_ip_address: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['IpRangeTagArgs']]]]] = None,
                 __props__=None):
        """
        Creates a VMware vRealize Automation network_ip_range resource.

        ## Example Usage

        ## Import

        To import the vRA Network IP range, use the ID as in the following example

        ```sh
         $ pulumi import vra:network/ipRange:IpRange new_ip_range 05956583-6488-4e7d-84c9-92a7b7219a15`
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] description: State object representing a network on a external cloud provider.
        :param pulumi.Input[str] end_ip_address: End IP address of the range.
        :param pulumi.Input[str] fabric_network_id: Fabric network Id.
        :param pulumi.Input[str] ip_version: IP address version: IPv4 or IPv6. Default: IPv4.
        :param pulumi.Input[str] name: A human-friendly name used as an identifier in APIs that support this option.
        :param pulumi.Input[str] start_ip_address: Start IP address of the range.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['IpRangeTagArgs']]]] tags: Set of tag keys and values to apply to the resource.
               Example:[ { "key" : "vmware", "value": "provider" } ]
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: IpRangeArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Creates a VMware vRealize Automation network_ip_range resource.

        ## Example Usage

        ## Import

        To import the vRA Network IP range, use the ID as in the following example

        ```sh
         $ pulumi import vra:network/ipRange:IpRange new_ip_range 05956583-6488-4e7d-84c9-92a7b7219a15`
        ```

        :param str resource_name: The name of the resource.
        :param IpRangeArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(IpRangeArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 end_ip_address: Optional[pulumi.Input[str]] = None,
                 fabric_network_id: Optional[pulumi.Input[str]] = None,
                 ip_version: Optional[pulumi.Input[str]] = None,
                 name: Optional[pulumi.Input[str]] = None,
                 start_ip_address: Optional[pulumi.Input[str]] = None,
                 tags: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['IpRangeTagArgs']]]]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = IpRangeArgs.__new__(IpRangeArgs)

            __props__.__dict__["description"] = description
            if end_ip_address is None and not opts.urn:
                raise TypeError("Missing required property 'end_ip_address'")
            __props__.__dict__["end_ip_address"] = end_ip_address
            __props__.__dict__["fabric_network_id"] = fabric_network_id
            if ip_version is None and not opts.urn:
                raise TypeError("Missing required property 'ip_version'")
            __props__.__dict__["ip_version"] = ip_version
            __props__.__dict__["name"] = name
            if start_ip_address is None and not opts.urn:
                raise TypeError("Missing required property 'start_ip_address'")
            __props__.__dict__["start_ip_address"] = start_ip_address
            __props__.__dict__["tags"] = tags
            __props__.__dict__["created_at"] = None
            __props__.__dict__["external_id"] = None
            __props__.__dict__["links"] = None
            __props__.__dict__["org_id"] = None
            __props__.__dict__["updated_at"] = None
        super(IpRange, __self__).__init__(
            'vra:network/ipRange:IpRange',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            created_at: Optional[pulumi.Input[str]] = None,
            description: Optional[pulumi.Input[str]] = None,
            end_ip_address: Optional[pulumi.Input[str]] = None,
            external_id: Optional[pulumi.Input[str]] = None,
            fabric_network_id: Optional[pulumi.Input[str]] = None,
            ip_version: Optional[pulumi.Input[str]] = None,
            links: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['IpRangeLinkArgs']]]]] = None,
            name: Optional[pulumi.Input[str]] = None,
            org_id: Optional[pulumi.Input[str]] = None,
            start_ip_address: Optional[pulumi.Input[str]] = None,
            tags: Optional[pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['IpRangeTagArgs']]]]] = None,
            updated_at: Optional[pulumi.Input[str]] = None) -> 'IpRange':
        """
        Get an existing IpRange resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] created_at: Date when the entity was created. The date is in ISO 6801 and UTC.
        :param pulumi.Input[str] description: State object representing a network on a external cloud provider.
        :param pulumi.Input[str] end_ip_address: End IP address of the range.
        :param pulumi.Input[str] external_id: External entity Id on the provider side.
        :param pulumi.Input[str] fabric_network_id: Fabric network Id.
        :param pulumi.Input[str] ip_version: IP address version: IPv4 or IPv6. Default: IPv4.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['IpRangeLinkArgs']]]] links: HATEOAS of the entity
        :param pulumi.Input[str] name: A human-friendly name used as an identifier in APIs that support this option.
        :param pulumi.Input[str] org_id: ID of organization that entity belongs to.
        :param pulumi.Input[str] start_ip_address: Start IP address of the range.
        :param pulumi.Input[Sequence[pulumi.Input[pulumi.InputType['IpRangeTagArgs']]]] tags: Set of tag keys and values to apply to the resource.
               Example:[ { "key" : "vmware", "value": "provider" } ]
        :param pulumi.Input[str] updated_at: Date when the entity was last updated. The date is ISO 8601 and UTC.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _IpRangeState.__new__(_IpRangeState)

        __props__.__dict__["created_at"] = created_at
        __props__.__dict__["description"] = description
        __props__.__dict__["end_ip_address"] = end_ip_address
        __props__.__dict__["external_id"] = external_id
        __props__.__dict__["fabric_network_id"] = fabric_network_id
        __props__.__dict__["ip_version"] = ip_version
        __props__.__dict__["links"] = links
        __props__.__dict__["name"] = name
        __props__.__dict__["org_id"] = org_id
        __props__.__dict__["start_ip_address"] = start_ip_address
        __props__.__dict__["tags"] = tags
        __props__.__dict__["updated_at"] = updated_at
        return IpRange(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> pulumi.Output[str]:
        """
        Date when the entity was created. The date is in ISO 6801 and UTC.
        """
        return pulumi.get(self, "created_at")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[str]]:
        """
        State object representing a network on a external cloud provider.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="endIpAddress")
    def end_ip_address(self) -> pulumi.Output[str]:
        """
        End IP address of the range.
        """
        return pulumi.get(self, "end_ip_address")

    @property
    @pulumi.getter(name="externalId")
    def external_id(self) -> pulumi.Output[str]:
        """
        External entity Id on the provider side.
        """
        return pulumi.get(self, "external_id")

    @property
    @pulumi.getter(name="fabricNetworkId")
    def fabric_network_id(self) -> pulumi.Output[Optional[str]]:
        """
        Fabric network Id.
        """
        return pulumi.get(self, "fabric_network_id")

    @property
    @pulumi.getter(name="ipVersion")
    def ip_version(self) -> pulumi.Output[str]:
        """
        IP address version: IPv4 or IPv6. Default: IPv4.
        """
        return pulumi.get(self, "ip_version")

    @property
    @pulumi.getter
    def links(self) -> pulumi.Output[Sequence['outputs.IpRangeLink']]:
        """
        HATEOAS of the entity
        """
        return pulumi.get(self, "links")

    @property
    @pulumi.getter
    def name(self) -> pulumi.Output[str]:
        """
        A human-friendly name used as an identifier in APIs that support this option.
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="orgId")
    def org_id(self) -> pulumi.Output[str]:
        """
        ID of organization that entity belongs to.
        """
        return pulumi.get(self, "org_id")

    @property
    @pulumi.getter(name="startIpAddress")
    def start_ip_address(self) -> pulumi.Output[str]:
        """
        Start IP address of the range.
        """
        return pulumi.get(self, "start_ip_address")

    @property
    @pulumi.getter
    def tags(self) -> pulumi.Output[Sequence['outputs.IpRangeTag']]:
        """
        Set of tag keys and values to apply to the resource.
        Example:[ { "key" : "vmware", "value": "provider" } ]
        """
        return pulumi.get(self, "tags")

    @property
    @pulumi.getter(name="updatedAt")
    def updated_at(self) -> pulumi.Output[str]:
        """
        Date when the entity was last updated. The date is ISO 8601 and UTC.
        """
        return pulumi.get(self, "updated_at")

