# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetEnumerationAzureResult',
    'AwaitableGetEnumerationAzureResult',
    'get_enumeration_azure',
    'get_enumeration_azure_output',
]

@pulumi.output_type
class GetEnumerationAzureResult:
    """
    A collection of values returned by getEnumerationAzure.
    """
    def __init__(__self__, application_id=None, application_key=None, id=None, regions=None, subscription_id=None, tenant_id=None):
        if application_id and not isinstance(application_id, str):
            raise TypeError("Expected argument 'application_id' to be a str")
        pulumi.set(__self__, "application_id", application_id)
        if application_key and not isinstance(application_key, str):
            raise TypeError("Expected argument 'application_key' to be a str")
        pulumi.set(__self__, "application_key", application_key)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if regions and not isinstance(regions, list):
            raise TypeError("Expected argument 'regions' to be a list")
        pulumi.set(__self__, "regions", regions)
        if subscription_id and not isinstance(subscription_id, str):
            raise TypeError("Expected argument 'subscription_id' to be a str")
        pulumi.set(__self__, "subscription_id", subscription_id)
        if tenant_id and not isinstance(tenant_id, str):
            raise TypeError("Expected argument 'tenant_id' to be a str")
        pulumi.set(__self__, "tenant_id", tenant_id)

    @property
    @pulumi.getter(name="applicationId")
    def application_id(self) -> str:
        return pulumi.get(self, "application_id")

    @property
    @pulumi.getter(name="applicationKey")
    def application_key(self) -> str:
        return pulumi.get(self, "application_key")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def regions(self) -> Sequence[str]:
        """
        A set of Region names to enable provisioning on. Example: northamerica-northeast1
        """
        return pulumi.get(self, "regions")

    @property
    @pulumi.getter(name="subscriptionId")
    def subscription_id(self) -> str:
        return pulumi.get(self, "subscription_id")

    @property
    @pulumi.getter(name="tenantId")
    def tenant_id(self) -> str:
        return pulumi.get(self, "tenant_id")


class AwaitableGetEnumerationAzureResult(GetEnumerationAzureResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetEnumerationAzureResult(
            application_id=self.application_id,
            application_key=self.application_key,
            id=self.id,
            regions=self.regions,
            subscription_id=self.subscription_id,
            tenant_id=self.tenant_id)


def get_enumeration_azure(application_id: Optional[str] = None,
                          application_key: Optional[str] = None,
                          subscription_id: Optional[str] = None,
                          tenant_id: Optional[str] = None,
                          opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetEnumerationAzureResult:
    """
    ## Example Usage
    ### S

    This is an example of how to lookup a region enumeration data source for Azure cloud account.

    **Region enumeration data source for Azure**
    ```python
    import pulumi
    import pulumi_vra as vra

    this = vra.region.get_enumeration_azure(application_id=var["application_id"],
        application_key=var["application_key"],
        subscription_id=var["subscription_id"],
        tenant_id=var["tenant_id"])
    ```

    The region enumeration data source for Azure cloud account supports the following arguments:


    :param str application_id: Azure Client Application ID
    :param str application_key: Azure Client Application Secret Key
    :param str subscription_id: Azure Subscription ID
    :param str tenant_id: Azure Tenant ID
    """
    __args__ = dict()
    __args__['applicationId'] = application_id
    __args__['applicationKey'] = application_key
    __args__['subscriptionId'] = subscription_id
    __args__['tenantId'] = tenant_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('vra:region/getEnumerationAzure:getEnumerationAzure', __args__, opts=opts, typ=GetEnumerationAzureResult).value

    return AwaitableGetEnumerationAzureResult(
        application_id=__ret__.application_id,
        application_key=__ret__.application_key,
        id=__ret__.id,
        regions=__ret__.regions,
        subscription_id=__ret__.subscription_id,
        tenant_id=__ret__.tenant_id)


@_utilities.lift_output_func(get_enumeration_azure)
def get_enumeration_azure_output(application_id: Optional[pulumi.Input[str]] = None,
                                 application_key: Optional[pulumi.Input[str]] = None,
                                 subscription_id: Optional[pulumi.Input[str]] = None,
                                 tenant_id: Optional[pulumi.Input[str]] = None,
                                 opts: Optional[pulumi.InvokeOptions] = None) -> pulumi.Output[GetEnumerationAzureResult]:
    """
    ## Example Usage
    ### S

    This is an example of how to lookup a region enumeration data source for Azure cloud account.

    **Region enumeration data source for Azure**
    ```python
    import pulumi
    import pulumi_vra as vra

    this = vra.region.get_enumeration_azure(application_id=var["application_id"],
        application_key=var["application_key"],
        subscription_id=var["subscription_id"],
        tenant_id=var["tenant_id"])
    ```

    The region enumeration data source for Azure cloud account supports the following arguments:


    :param str application_id: Azure Client Application ID
    :param str application_key: Azure Client Application Secret Key
    :param str subscription_id: Azure Subscription ID
    :param str tenant_id: Azure Tenant ID
    """
    ...
