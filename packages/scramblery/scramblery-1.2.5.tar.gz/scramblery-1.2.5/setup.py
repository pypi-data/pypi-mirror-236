# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['scramblery']

package_data = \
{'': ['*']}

setup_kwargs = {
    'name': 'scramblery',
    'version': '1.2.5',
    'description': '',
    'long_description': ' # Scramblery\n[![Downloads](https://pepy.tech/badge/scramblery)](https://pepy.tech/project/scramblery)\n[![PyPI version](https://badge.fury.io/py/scramblery.svg)](https://badge.fury.io/py/scramblery)\n[![Jekyll site CI](https://github.com/altunenes/scramblery/actions/workflows/jekyll.yml/badge.svg)](https://github.com/altunenes/scramblery/actions/workflows/jekyll.yml)\n[![Build status](https://ci.appveyor.com/api/projects/status/amuravq7o2afvv65?svg=true)](https://ci.appveyor.com/project/altunenes/scramblery)\n[![DOI](https://zenodo.org/badge/449034134.svg)](https://zenodo.org/badge/latestdoi/449034134)\n\n![sacasc](https://user-images.githubusercontent.com/54986652/227797464-3fc1fc88-a31b-4244-b99f-df0f77a6e282.png)\n\n\nA simple tool to scramble your images or only faces from images or videos. You can find the online demo in javascript [here](https://altunenes.github.io/scramblery/scramblerydemo.html). For more information, please visit the [documentation](https://altunenes.github.io/scramblery/).\n\nNote: The Javascript demo doesn\'t have a face detection algorithm and it\'s designed to be applied to a single image. If you want to do this for multiple imagees you should use Python.\n\n\n### Purpose of Package\nThe Scramblery package offers tools for creating scrambled images from existing images or videos. Users have the flexibility to scramble entire images or target only specific areas, such as faces. This functionality is particularly beneficial in psychological experiments involving facial recognition tasks. With Scramblery, users can automate the scrambling of multiple images, eliminating the tedious manual process traditionally associated with this task. We hope this package significantly contributes to your research endeavors.\n\n### Motivation\n\n- Image scrambling plays a crucial role in psychology experiments, enabling researchers to manipulate visual stimuli while maintaining control over certain visual aspects. This manipulation helps eliminate or alter specific features or patterns that may influence participants\' perceptions or responses.\n\n- Scramblery allows for the creation of stimuli that retain general attributes such as luminance, contrast, and spatial layout, but lack identifiable features or objects. This is useful in experiments where researchers wish to control for these specific attributes.\n\n- The package helps in mitigating biases and confounding variables in stimuli, thereby providing more reliable and valid experimental conditions. The ability to automate this process ensures consistency across stimuli and saves valuable time for researchers.\n\n### Features\n\n- Scramble an entire image with a specified degree of scrambling (either by altering pixel values or pixel coordinates).\n- Target scrambling to only the facial area within an image, with customizable levels of scrambling.\n- Extend the scrambling feature to videos, particularly useful for dynamic stimuli in motion-based experiments.\n- Leverage Fourier-based scrambling to disrupt the phase information while maintaining the power spectrum, particularly useful for psychophysical studies.\n\n### Installation\n\nScramblery is available on PyPI and can be installed using pip. Use the following command in your terminal:\n\n#### Installation\n- The package can be found in pypi. To install the package, run the following command in the terminal:\n- `pip install scramblery`\n\n\n\n- `from scramblery import scramblery`\nThen use the functions as follows to scramble images. I added some examples below.\n\n  ![8x8](./docs/assets/usage.PNG)\n\n  ![12x12](./docs/assets/types.png)\n  ![8x8](./docs/assets/fr.png)\n\n\n\n\n### Usage\n\nAfter installation, you can import and use Scramblery as follows:\n\n```python\nfrom scramblery import scramblery\n\n# To scramble an entire image\nscramblery.scrambleimage("Lena.png", x_block=10, y_block=10, scramble_type=\'classic\', seed=None, write=True)\n\n# To scramble only the facial area within an image\nscramblery.scrambleface("Lena.png", splits=10, type=\'pixel\', seamless=False, bg=True, seed=None, write=True)\n\n# To apply Fourier-based scrambling on an image\nscramblery.scrambleimage("Lena.png", scramble_type=\'fourier\', scramble_ratio=0.5, seed=None, write=True)\n# To apply Fourier-based scrambling o only the facial area within an image\nscramblery.scrambleface("lena.png",splits=10,type=\'fourier\', scramble_ratio=0.5,write=True)\n\n# To scramble faces within a video first we need to create a dict.\nscramble_settings = {\n    \'splits\': 25,\n    \'type\': \'pixel\',\n    \'bg\': True,\n    \'seed\': None,\n    \'write\': False  # Should always be False for video processing\n}\nscramblery.scramblevideo("input_video.mp4", "output_video.mp4", scramble_settings)\n```\n\n### Contribution\nWe welcome contributions of any kind to Scramblery. If you have ideas for improvement or have found a bug, please don\'t hesitate to contribute.\n\n',
    'author': 'altunenes',
    'author_email': 'enesaltun2@gmail.com',
    'maintainer': 'None',
    'maintainer_email': 'None',
    'url': 'https://github.com/altunenes/scramblery',
    'packages': packages,
    'package_data': package_data,
    'python_requires': '>=3.8,<4.0',
}


setup(**setup_kwargs)
