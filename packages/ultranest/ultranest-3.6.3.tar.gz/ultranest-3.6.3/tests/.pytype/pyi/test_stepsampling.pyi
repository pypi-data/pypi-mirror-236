# (generated with --quick)

import numpy as np
from typing import Any, List, TypeVar
from ultranest.mlfriends import MLFriends

AffineLayer: Any
CubeMHSampler: Any
CubeSliceSampler: Any
IslandPopulationRandomLivepointSelector: Any
ReactiveNestedSampler: Any
RegionBallSliceSampler: Any
RegionMHSampler: Any
RegionSliceSampler: Any
SamplingPathStepSampler: Any
ScalingLayer: Any
SpeedVariableRegionSliceSampler: Any
assert_allclose: Any
crop_bracket_at_unit_cube: Any
ellipsoid_bracket: Any
generate_region_random_direction: Any
paramnames: List[str]
select_random_livepoint: Any

_T0 = TypeVar('_T0')

def assert_point_touches_ellipsoid(ucurrent, v, t, ellipsoid_center, ellipsoid_invcov, enlarge) -> None: ...
def loglike(x) -> Any: ...
def loglike_vectorized(z) -> Any: ...
def make_region(ndim, us = ...) -> Any: ...
def test_crop_bracket(plot = ...) -> None: ...
def test_ellipsoid_bracket(plot = ...) -> None: ...
def test_island_point_selector() -> None: ...
def test_random_point_selector() -> None: ...
def test_stepsampler(plot = ...) -> None: ...
def test_stepsampler_adapt_when_stuck(plot = ...) -> None: ...
def test_stepsampler_cubemh(plot = ...) -> None: ...
def test_stepsampler_cubeslice(plot = ...) -> None: ...
def test_stepsampler_regionmh(plot = ...) -> None: ...
def test_stepsampler_regionmh_adapt(plot = ...) -> None: ...
def test_stepsampler_regionslice(plot = ...) -> None: ...
def test_stepsampler_variable_speed_SLOW(plot = ...) -> None: ...
def transform(x: _T0) -> _T0: ...
def transform1(x) -> Any: ...
