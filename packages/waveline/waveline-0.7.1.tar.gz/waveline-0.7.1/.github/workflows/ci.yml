name: CI

on: [push]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12"]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Install Tox
        run: pip install tox
      # - name: Run black
      #   run: tox -e black
      # - name: Run isort
      #   run: tox -e isort
      - name: Run pylint
        run: tox -e pylint
      - name: Run mypy
        run: tox -e mypy
      - name: Run pytest
        run: tox -e py
      - name: Coverage report
        run: tox -e coverage-report
      - name: Upload coverage results to Coveralls
        if: matrix.os == 'ubuntu-latest' && matrix.python == '3.12'
        uses: coverallsapp/github-action@v2
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          file: coverage.xml

  docs:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Install Tox
        run: pip install tox
      - name: Check docs
        run: tox -e docs

  publish:
    needs: [test, docs] # only run if previous jobs are successful
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: "3.12"
      - name: Install pypa/build
        run: python -m pip install build --user
      - name: Build source distribution and wheel
        run: python -m build --outdir dist/ .
      - name: Publish package to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/
          skip_existing: true
      - name: Publish package to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
